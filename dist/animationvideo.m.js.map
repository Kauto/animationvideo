{"version":3,"file":"animationvideo.m.js","sources":["../src/lib/Engine.js","../src/lib/ImageManager.js","../src/lib/Scenes/Default.js","../src/lib/Scenes/Audio.js","../src/func/transform.js","../src/lib/Scenes/Norm.js","../src/lib/Scenes/NormAudio.js","../src/lib/Scenes.js","../src/func/ifnull.js","../src/func/calc.js","../src/lib/Sprites/Circle.js","../src/lib/Sprites/Callback.js","../src/lib/Sprites/Group.js","../src/lib/Sprites/Canvas.js","../src/lib/Sprites/Emitter.js","../src/lib/Sprites/FastBlur.js","../src/lib/Sprites/Image.js","../src/lib/Sprites/Text.js","../src/lib/Sprites/Particle.js","../src/lib/Sprites/Path.js","../src/lib/Sprites/Rect.js","../src/lib/Sprites/Scroller.js","../src/lib/Sprites/StarField.js","../src/lib/Sprites.js","../src/lib/Sequence.js","../src/lib/Animations/Callback.js","../src/lib/Animations/ChangeTo.js","../src/lib/Animations/End.js","../src/lib/Animations/EndDisabled.js","../src/lib/Animations/Image.js","../src/lib/Animations/ImageFrame.js","../src/lib/Animations/Move.js","../src/lib/Animations/Once.js","../src/lib/Animations/Play.js","../src/lib/Animations/Shake.js","../src/lib/Animations/ShowOnce.js","../src/lib/Animations/Stop.js","../src/lib/Animations/Wait.js","../src/lib/Animations/WaitDisabled.js","../src/lib/Animations.js","../src/animationvideo.js"],"sourcesContent":["'use strict';\n\nclass Engine {\n  constructor(canvas, scene, autoresize) {\n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n\n    // data about the _output canvas\n    this._output.canvas = canvas;\n    if (!(typeof(canvas) === \"object\" && canvas !== null && canvas.getContext)) {\n      throw 'No context';\n    }\n    this._output.context = canvas.getContext(\"2d\");\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    if (autoresize) {\n      window.addEventListener('resize', this.maximizeCanvas, false);\n      window.addEventListener('orientationchange', this.maximizeCanvas, false);\n      this.resize();\n\n      canvas.addEventListener('click', () => {\n        if (this._isSceneInitialized && this._scene.audioElement) {\n          this._scene.audioElement.play();\n        }\n      }, false);\n    }\n    this.changeScene(scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = 'source-over';\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  maximizeCanvas() {\n    let gameArea = self.output.canvas;\n    let newWidth = window.innerWidth;\n    let newHeight = window.innerHeight;\n    let newWidthToHeight = newWidth / newHeight;\n\n    if (newWidthToHeight > self.output.ratio) {\n      newWidth = newHeight * self.output.ratio;\n      gameArea.style.height = newHeight + 'px';\n      gameArea.style.width = newWidth + 'px';\n    } else {\n      newHeight = newWidth / self.output.ratio;\n      gameArea.style.width = newWidth + 'px';\n      gameArea.style.height = newHeight + 'px';\n    }\n\n    gameArea.style.marginTop = (-newHeight / 2) + 'px';\n    gameArea.style.marginLeft = (-newWidth / 2) + 'px';\n\n    $(self.output.canvas).css({\n      width: newWidth,\n      height: newHeight\n    });\n    $(self.output.canvas).siblings().css({\n      width: newWidth\n    });\n  };\n\n  changeScene(scene) {\n    this._newScene = scene;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = (this._isSceneInitialized ? this._scene.getPercentLoaded() : 0);\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'bottom';\n    ctx.fillText(\"Loading \" + percent + \"%\", 10 + Math.random() * 3, this._output.h - 10 + Math.random() * 3);\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n\n    initParameter = initParameter || {};\n\n    function mainLoop() {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(mainLoop.bind(this));\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = (this._scene ? this._scene.destroy(this._output) : initParameter);\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      let now = this._scene.currentTime();\n      this._timePassed = now - this._lastTimestamp;\n      this._lastTimestamp = now;\n\n      if (this._isSceneInitialized) {\n        if (this._timePassed !== 0) {\n          this._scene.move(this._output, this._timePassed);\n\n          // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n          if (this._timePassed < 0) {\n            this._timePassed = this._scene.totalTimePassed;\n          }\n\n          this._scene.draw(this._output);\n        }\n      } else {\n        this._isSceneInitialized = this._scene.callLoading(this._output);\n      }\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(mainLoop.bind(this));\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame && window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n        };\n        self.Images[i].src = Images[i];\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","'use strict';\nimport ImageManager from '../ImageManager';\n\nclass Scene {\n  constructor(endTime) {\n    // Layer consists of Sprites\n    this.layer = [];\n\n    // For precalculation if a layer is a function\n    this._cacheLayerIsFunction = [];\n\n    this.totalTimePassed = 0;\n\n    this.initCallback = null;\n    this.loadingCallback = null;\n    this.destroyCallback = null;\n    this.sceneCallback = null;\n    this.engine = null;\n    this.loadingShow = true;\n    this.endTime = endTime;\n    this.additionalModifier = undefined;\n  }\n\n  currentTime() {\n    return Date.now();\n  }\n\n  init(callbackOrImages) {\n    if (typeof callbackOrImages === 'function') {\n      this.initCallback = callbackOrImages;\n    } else {\n      ImageManager.add(callbackOrImages);\n    }\n    return this;\n  }\n\n  callInit(output, parameter, engine) {\n    this.initCallback && this.initCallback(output, parameter);\n\n    this.engine = engine;\n  }\n\n  destroy(callback) {\n    this.destroyCallback = callback;\n    return this;\n  }\n\n  scene(callback) {\n    this.sceneCallback = callback;\n    return this;\n  }\n\n  callDestroy(output) {\n    if (this.destroyCallback) {\n      return this.destroyCallback(output);\n    } else {\n      return true;\n    }\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - (loadedHeight / 2), output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'bottom';\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(text, 10 + Math.random() * 3, output.h - 10 + Math.random() * 3);\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  loading(callbackOrBool) {\n    if (typeof callback === 'function') {\n      this.loadingCallback = callback;\n      this.loadingShow = true;\n    } else {\n      this.loadingCallback = null;\n      this.loadingShow = !!callbackOrBool;\n    }\n    return this;\n  }\n\n  callLoading(output) {\n    const imagePercentage = ImageManager.getCount() && ImageManager.getLoaded() < ImageManager.getCount() && ImageManager.getLoaded() / ImageManager.getCount();\n\n    if (this.loadingShow) {\n      if (this.loadingCallback) {\n        let result = this.loadingCallback(output, imagePercentage);\n        if (result === null) {\n          return false;\n        } else if (result !== true) {\n          this.loadingscreen(output, result ? result : (imagePercentage || 'Loading...'));\n          return false;\n        }\n      } else {\n        if (imagePercentage) {\n          this.loadingscreen(output, imagePercentage);\n        }\n      }\n    }\n\n    if (imagePercentage) {\n      return false;\n    }\n\n    this.reset(output);\n    return true;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (this.endTime && this.endTime <= this.totalTimePassed) {\n      // End Engine\n      this.engine.destroy();\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n    }\n\n    let l, i, lay, layif;\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (!layif[i] && lay[i] !== null) {\n          if (lay[i].animate(timepassed)) {\n            this.layer[l][i] = null;\n          }\n        }\n      }\n    }\n  }\n\n  draw(output) {\n    let l, i, lay, layif;\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (lay[i] !== null) {\n          if (layif[i]) {\n            if (lay[i](output.context, this.totalTimePassed)) {\n              this.layer[l][i] = null;\n            }\n          }\n          else {\n            this.layer[l][i].draw(output.context, this.additionalModifier);\n          }\n        }\n      }\n    }\n  }\n\n  calcLayerIsFunction() {\n    this._cacheLayerIsFunction = new Array(this.layer.length);\n    for (let l in this.layer) {\n      this._cacheLayerIsFunction[l] = new Array(this.layer[l].length);\n      for (let i in this.layer[l]) {\n        this._cacheLayerIsFunction[l][i] = (typeof this.layer[l][i] === \"function\");\n      }\n    }\n  }\n\n  reset(output) {\n    this.layer = this.sceneCallback(output, []);\n    this.calcLayerIsFunction();\n  }\n}\n\nexport default Scene;\n","'use strict';\nimport Scene from './Default';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","'use strict';\nimport Scene from './Default';\nimport Transform from '../../func/transform';\n\nexport default class SceneNorm extends Scene {\n  constructor(endTime) {\n    super(endTime);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        this.additionalModifier = {\n          a: 1,\n          w: this.engine._output.w / 2,\n          h: this.engine._output.h / 2\n        };\n        const scale = this.engine._output.ratio > 1 ? this.additionalModifier.w : this.additionalModifier.h;\n\n      this.transform = (new Transform())\n        .translate(this.additionalModifier.w, this.additionalModifier.h)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  transformPoint(x, y) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x, y);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","'use strict';\nimport SceneAudio from './Audio';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default';\nimport _Audio from './Scenes/Audio';\nimport _Norm from './Scenes/Norm';\nimport _NormAudio from './Scenes/NormAudio';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  changeAnimationStatus(ani) {\n    if (typeof this.animation === \"object\") {\n      this.animation.changeAnimationStatus(ani);\n    }\n  };\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) >= 0) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from './Circle';\n\nexport default class Callback extends Circle{\n    constructor(params) {\n        super(params);\n        // Callback\n\t\tthis.callback = params.callback;\n    }\n\n    draw(context, additionalParameter) {\n\t\tif (this.enabled) {\n\t\t\tthis.callback(context, additionalParameter, this);\n\t\t}\n    }\n}","import ifNull from '../../func/ifnull';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite changeAnimationStatus\n  changeAnimationStatus(ani) {\n    // call super\n    super.changeAnimationStatus(ani);\n    // changeAnimationStatus for all sprites\n    for (let i in this.sprite) {\n      this.sprite[i].changeAnimationStatus(ani);\n    }\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = true;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = this.sprite[i].animate(timepassed) && spriteFinished;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!additionalModifier) {\n        if (this.a < 1) {\n          additionalModifier = {\n            a:this.a\n          };\n        }\n      } else {\n        additionalModifier = Object.assign({}. additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../../func/calc';\nimport Group from './Group';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n  }\n\n  generateTempCanvas(context) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.round(w / this.scaleX);\n    this.temp_canvas.height = Math.round(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.width) {\n      this.width = w;\n    }\n    if (!this.height) {\n      this.height = h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context);\n      }\n\n      let a = this.a,\n        w = this.width,\n        h = this.height,\n        wh = w >> 1,\n        hh = h >> 1;\n\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, false);\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, w, h, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Group from './Group';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nexport default class FastBlur extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    // Darker\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  generateTempCanvas(context) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.ceil(w / this.scaleX);\n    this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.width) {\n      this.width = w;\n    }\n    if (!this.height) {\n      this.height = h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context);\n      }\n\n      let a = this.a,\n        w = this.width,\n        h = this.height,\n        targetW = Math.round(w / this.scaleX),\n        targetH = Math.round(h / this.scaleY);\n\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n        if (additionalModifier.w) {\n          targetW = Math.round(w * additionalModifier.w / this.scaleX);\n          targetH = Math.round(h * additionalModifier.h / this.scaleY);\n        }\n      }\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(context.canvas, 0, 0, context.canvas.width, context.canvas.height, 0, 0, targetW, targetH);\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear ? \"source-atop\" : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(this.temp_canvas, 0, 0, targetW, targetH, this.x, this.y, w, h);\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.width) {\n          this.width = context.canvas.width;\n        }\n        if (!this.height) {\n          this.height = context.canvas.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport ImageManager from '../ImageManager';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a,\n        frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height,\n        sX = frameWidth * this.scaleX,\n        sY = frameHeight * this.scaleY;\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        }\n        else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      }\n      else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -(sX >> 1),\n          -(sY >> 1),\n          sX,\n          sY\n        );\n        context.restore();\n\n      }\n    }\n  };\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      let a = this.a,\n        color = this.color.color;\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.imageSmoothingEnabled = this.scaleX > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX >> 1), this.y - (this.scaleY >> 1), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Group from './Group';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach((curve) => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach((points) => {\n              this.path2D.bezierCurveTo(points[2], points[3], points[4], points[5], points[6], points[7]);\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1/scaleX, 1/scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n    }\n  };\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = context.canvas.width;\n      }\n      if (!this.height) {\n        this.height = context.canvas.height;\n      }\n      let a = this.a;\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      if (this.arc === 0) {\n        context.fillStyle = this.color;\n        context.fillRect(this.x, this.y, this.width, this.height);\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        context.save();\n        context.translate(this.x + this.width/2, this.y + this.height / 2);\n        context.rotate(this.arc * degToRad);\n        context.fillStyle = this.color;\n        context.fillRect(-this.width / 2, -this.height / 2, this.width, this.height);\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-this.width / 2, -this.height / 2, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../../func/calc';\nimport Emitter from './Emitter';\nimport Text from './Text';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Rect from './Rect';\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n\tconstructor( params ) {\n\t\tsuper( params );\n\t\tthis.count = ifNull( calc( params.count ), 40 );\n\t\tthis.moveX = ifNull( calc( params.moveX ), 0 );\n\t\tthis.moveY = ifNull( calc( params.moveY ), 0 );\n\t\tthis.moveZ = ifNull( calc( params.moveZ ), 0 );\n\t\tif ( this.width && this.height ) {\n\t\t\tthis.init();\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.centerX = Math.floor( (this.width - this.x) / 2 ) + this.x;\n\t\tthis.centerY = Math.floor( (this.height - this.y) / 2 ) + this.y;\n\t\tthis.scaleZ = Math.max( this.width, this.height );\n\t\tthis.starsX = new Array( this.count );\n\t\tthis.starsY = new Array( this.count );\n\t\tthis.starsZ = new Array( this.count );\n\t\tthis.starsOldX = new Array( this.count );\n\t\tthis.starsOldY = new Array( this.count );\n\t\tthis.starsNewX = new Array( this.count );\n\t\tthis.starsNewY = new Array( this.count );\n\t\tthis.starsEnabled = new Array( this.count );\n\t\tthis.starsLineWidth = new Array( this.count );\n\t\tfor ( let i = 0; i < this.count; i++ ) {\n\t\t\tthis.starsX[ i ] = Math.random() * this.width - this.centerX;\n\t\t\tthis.starsY[ i ] = Math.random() * this.height - this.centerY;\n\t\t\tthis.starsZ[ i ] = Math.random() * this.scaleZ;\n\t\t}\n\t}\n\n\tmoveStar( i, scaled_timepassed, firstPass ) {\n\t\tif ( firstPass ) {\n\t\t\tthis.starsEnabled[ i ] = true;\n\t\t}\n\t\tlet\n\t\t\tx = this.starsX[ i ] + this.moveX * scaled_timepassed,\n\t\t\ty = this.starsY[ i ] + this.moveY * scaled_timepassed,\n\t\t\tz = this.starsZ[ i ] + this.moveZ * scaled_timepassed;\n\t\tif ( x < -this.centerX ) {\n\t\t\tx += this.width;\n\t\t\ty = Math.random() * this.height - this.centerY;\n\t\t\tthis.starsEnabled[ i ] = false;\n\t\t} else {\n\t\t\twhile ( x > this.width - this.centerX ) {\n\t\t\t\tx -= this.width;\n\t\t\t\ty = Math.random() * this.height - this.centerY;\n\t\t\t\tthis.starsEnabled[ i ] = false;\n\t\t\t}\n\t\t}\n\t\tif ( y < -this.centerY ) {\n\t\t\ty += this.height;\n\t\t\tx = Math.random() * this.width - this.centerX;\n\t\t\tthis.starsEnabled[ i ] = false;\n\t\t} else {\n\t\t\twhile ( y > this.height - this.centerY ) {\n\t\t\t\ty -= this.height;\n\t\t\t\tx = Math.random() * this.width - this.centerX;\n\t\t\t\tthis.starsEnabled[ i ] = false;\n\t\t\t}\n\t\t}\n\t\tif ( z <= 0 ) {\n\t\t\tz += this.scaleZ;\n\t\t\tx = Math.random() * this.width - this.centerX;\n\t\t\ty = Math.random() * this.height - this.centerY;\n\t\t\tthis.starsEnabled[ i ] = false;\n\t\t} else {\n\t\t\twhile ( z > this.scaleZ ) {\n\t\t\t\tz -= this.scaleZ;\n\t\t\t\tx = Math.random() * this.width - this.centerX;\n\t\t\t\ty = Math.random() * this.height - this.centerY;\n\t\t\t\tthis.starsEnabled[ i ] = false;\n\t\t\t}\n\t\t}\n\t\tvar projectX = ~~(this.centerX + (x / z) * this.scaleZ),\n\t\t\tprojectY = ~~(this.centerY + (y / z) * this.scaleZ / 2);\n\t\tthis.starsEnabled[ i ] = this.starsEnabled[ i ] && projectX >= this.x && projectY >= this.y && projectX < this.width && projectY < this.height;\n\t\tif ( firstPass ) {\n\t\t\tthis.starsX[ i ] = x;\n\t\t\tthis.starsY[ i ] = y;\n\t\t\tthis.starsZ[ i ] = z;\n\t\t\tthis.starsNewX[ i ] = projectX;\n\t\t\tthis.starsNewY[ i ] = projectY;\n\t\t} else {\n\t\t\tthis.starsOldX[ i ] = projectX;\n\t\t\tthis.starsOldY[ i ] = projectY;\n\t\t\tthis.starsLineWidth[ i ] = Math.round( (1 - this.starsZ[ i ] / this.scaleZ) * 2 + 1 );\n\t\t}\n\t}\n\n\tanimate( timepassed ) {\n\t\tlet ret = super.animate( timepassed );\n\t\tif ( this.enabled && this.width && this.height ) {\n\t\t\tlet i = this.count;\n\t\t\twhile ( i-- ) {\n\t\t\t\tthis.moveStar( i, timepassed / 16, true );\n\t\t\t\tif ( this.starsEnabled[ i ] ) {\n\t\t\t\t\tthis.moveStar( i, -3, false );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// Draw-Funktion\n\tdraw( context, additionalModifier ) {\n\t\tif ( this.enabled ) {\n\t\t\tif ( !this.width || !this.height ) {\n\t\t\t\tthis.width = this.width || context.canvas.width;\n\t\t\t\tthis.height = this.height || context.canvas.height;\n\t\t\t\tthis.init();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet a = this.a;\n\t\t\tif ( additionalModifier ) {\n\t\t\t\ta *= additionalModifier.a;\n\t\t\t}\n\t\t\tcontext.globalCompositeOperation = this.alphaMode;\n\t\t\tcontext.globalAlpha = a;\n\t\t\tif ( this.moveY == 0 && this.moveZ == 0 && this.moveX < 0 ) {\n\t\t\t\tcontext.fillStyle = this.color;\n\t\t\t\tlet i = this.count;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( this.starsEnabled[ i ] ) {\n\t\t\t\t\t\tcontext.fillRect( this.starsNewX[ i ], this.starsNewY[ i ] - (this.starsLineWidth[ i ] / 2), this.starsOldX[ i ] - this.starsNewX[ i ], this.starsLineWidth[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontext.strokeStyle = this.color;\n\t\t\t\tlet lw = 4, i;\n\t\t\t\twhile ( --lw ) {\n\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\tcontext.lineWidth = lw;\n\t\t\t\t\ti = this.count;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( this.starsEnabled[ i ] && this.starsLineWidth[ i ] === lw ) {\n\t\t\t\t\t\t\tcontext.moveTo( this.starsOldX[ i ], this.starsOldY[ i ] );\n\t\t\t\t\t\t\tcontext.lineTo( this.starsNewX[ i ], this.starsNewY[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.closePath();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n","import _Callback from './Sprites/Callback';\nimport _Canvas from './Sprites/Canvas';\nimport _Circle from './Sprites/Circle';\nimport _Emitter from './Sprites/Emitter';\nimport _FastBlur from './Sprites/FastBlur';\nimport _Group from './Sprites/Group';\nimport _Image from './Sprites/Image';\nimport _Text from './Sprites/Text';\nimport _Particle from './Sprites/Particle';\nimport _Path from './Sprites/Path';\nimport _Rect from './Sprites/Rect';\nimport _Scroller from './Sprites/Scroller';\nimport _StarField from './Sprites/StarField';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = obj || {};\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      this.animationPosition[i] = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          else {\n            hide_vote++;\n          }\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\nimport Color from 'color';\nimport pasition from 'pasition';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorTo.mix(data.colorFrom, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return pasition._lerp(data.pathFrom, data.pathTo, progress);\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(data.from), pasition.path2shapes(data.to));\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(sprite[data.name]), pasition.path2shapes(data.to));\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequenz from '../Sequence';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\nimport ImageManager from '../ImageManager';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (Array.isArray(this.frameNumber)) {\n            this.count = this.frameNumber.length;\n        } else {\n            this.frameNumber = [this.frameNumber];\n            this.count = 1;\n        }\n        this.duration = this.count * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = Math.floor(time / this.durationBetweenFrames);\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from '../../func/calc';\nimport ChangeTo from './ChangeTo';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t > 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Play {\n\n  constructor(name, duration, loop) {\n    this.duration = ifNull(calc(duration),1);\n    this.name = calc(name);\n    this.loop = calc(ifNull(loop, 1));\n  }\n\n  run(sprite, time) {\n    // return time left\n    if (time >= this.duration) {\n      // Play animation from the start\n      sprite.changeAnimationStatus({\n        [this.name]: {\n          position: 0,\n          timelapsed: (time - this.duration),\n          loop: this.loop\n        }\n      });\n    }\n    return time - this.duration;\n  };\n}","import calc from '../../func/calc';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Animation from '../Sequence';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Animation.TIMELAPSE_TO_STOP;\n\t}\n}","import calc from '../../func/calc';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../../func/calc';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback';\nimport _ChangeTo from './Animations/ChangeTo';\nimport _End from './Animations/End';\nimport _EndDisabled from './Animations/EndDisabled';\nimport _Image from './Animations/Image';\nimport _ImageFrame from './Animations/ImageFrame';\nimport _Move from './Animations/Move';\nimport _Once from './Animations/Once';\nimport _Play from './Animations/Play';\nimport _Shake from './Animations/Shake';\nimport _ShowOnce from './Animations/ShowOnce';\nimport _Stop from './Animations/Stop';\nimport _Wait from './Animations/Wait';\nimport _WaitDisabled from './Animations/WaitDisabled';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Play = (...args) => new _Play(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  Stop = (...args) => new _Stop(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Image,\n  ImageFrame,\n  Move,\n  Once,\n  Play,\n  Shake,\n  ShowOnce,\n  Stop,\n  Wait,\n  WaitDisabled\n};\n","'use strict';\n\nimport _Engine from './lib/Engine';\nimport Scenes from './lib/Scenes';\nimport ImageManager from './lib/ImageManager';\nimport Sprites from './lib/Sprites';\nimport _Sequence from './lib/Sequence';\nimport Animations from './lib/Animations';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args),\n  Sequence = (...args) => new _Sequence(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Sequence,\n  Animations,\n  Easing\n};"],"names":["Engine","canvas","scene","autoresize","_output","this","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_referenceRequestAnimationFrame","getContext","context","w","width","h","height","ratio","window","addEventListener","maximizeCanvas","resize","audioElement","play","changeScene","normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","gameArea","self","output","newWidth","innerWidth","newHeight","innerHeight","style","marginTop","marginLeft","css","$","siblings","loadingscreen","fillStyle","fillRect","font","let","percent","getPercentLoaded","fillText","Math","random","run","initParameter","requestAnimationFrame","mainLoop","bind","parameterForNewScene","destroy","callInit","now","currentTime","move","totalTimePassed","draw","callLoading","cancelAnimationFrame","ImageManager","add","Images","Callbacks","const","i","Image","onload","loaded","isLoaded","src","count","reset","getLoaded","getCount","getImage","nameOrImage","Scene","endTime","layer","_cacheLayerIsFunction","initCallback","loadingCallback","destroyCallback","sceneCallback","engine","loadingShow","additionalModifier","undefined","Date","init","callbackOrImages","parameter","callback","callDestroy","progress","loadedHeight","max","clearRect","text","isNaN","parseFloat","round","loading","callbackOrBool","imagePercentage","result","timepassed","l","lay","layif","length","animate","calcLayerIsFunction","Array","SceneAudio","super","audioStartTime","audioPosition","enableAndroidHack","controller","playbackState","min","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","c","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","transform","transformInvert","_getViewport","a","save","setTransform","ref","restore","SceneNormAudio","_Default","args","_Audio","_Norm","_NormAudio","ifNull","value","alternative","calc","apply","params","Circle","arc","scaleX","scaleY","alphaMode","color","animation","enabled","changeAnimationStatus","ani","beginPath","fill","closePath","Callback","additionalParameter","Group","sprite","finished","spriteFinished","Object","assign","Canvas","generateTempCanvas","temp_canvas","document","createElement","tctx","wh","hh","drawImage","Emitter","staticArray","functionArray","indexOf","classToEmit","class","index","call","FastBlur","darker","pixel","clear","ceil","targetW","targetH","imageSmoothingEnabled","image","position","CENTER","frameX","frameY","frameWidth","frameHeight","sX","sY","LEFT_TOP","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","isArray","forEach","curve","moveTo","points","bezierCurveTo","stroke","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","centerX","floor","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","ret","lw","lineTo","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Image","_Text","_Particle","_Path","_Rect","_Scroller","_StarField","Sequence","loop","timeWait","obj","animationPosition","setObject","last_timestamp","hide_vote","object","timelapsed","time","is_difference","disable_vote","animation_count","timeleft","current_animationPosition","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","duration","initialized","moveDefault","data","from","delta","moveBezier","copy","values","copyLength","moveColor","colorTo","mix","colorFrom","string","movePath","pasition","_lerp","pathFrom","pathTo","ChangeTo","changeValues","ease","k","isColor","isPath","isFunction","isBezier","push","bezier","moveAlgorithm","t","name","to","_preprocessing","path2shapes","End","Sequenz","EndDisabled","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Move","speed","targetX","targetY","hypotenuse","sqrt","Once","Aniobject","times","Play","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","Animation","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_ImageFrame","_Move","_Once","_Play","_Shake","_ShowOnce","_Stop","_Wait","_WaitDisabled","_Engine","_Sequence"],"mappings":"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"}