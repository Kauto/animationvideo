{"version":3,"file":"animationvideo.cjs","sources":["../func/calc.ts","../func/toArray.ts","../Engine.ts","../ImageManager.ts","../Layer.ts","../LayerManager.ts","../func/transform.ts","../func/ifnull.ts","../Middleware/TimingDefault.ts","../Scene.ts","../Animations/Sequence.ts","../Animations/Wait.ts","../Sprites/Sprite.ts","../Sprites/Circle.ts","../Sprites/Group.ts","../Sprites/Canvas.ts","../Sprites/Emitter.ts","../Position.ts","../Sprites/FastBlur.ts","../Sprites/Image.ts","../Sprites/Text.ts","../Sprites/Particle.ts","../Sprites/Rect.ts","../Sprites/StarField.ts","../Sprites.ts","../Sprites/Callback.ts","../Sprites/Path.ts","../Sprites/Scroller.ts","../Sprites/StackBlur.ts","../Animations/Callback.ts","../Animations/ChangeTo.ts","../Animations/Forever.ts","../Animations/Shake.ts","../Animations/ShowOnce.ts","../Animations/State.ts","../Animations.ts","../Animations/End.ts","../Animations/EndDisabled.ts","../Animations/If.ts","../Animations/Image.ts","../Animations/ImageFrame.ts","../Animations/Loop.ts","../Animations/Once.ts","../Animations/Remove.ts","../Animations/Stop.ts","../Animations/StopDisabled.ts","../Animations/WaitDisabled.ts","../Middleware/Camera.ts","../Middleware/CameraControl.ts","../Middleware/Element.ts","../Middleware/Event.ts","../Middleware.ts","../Middleware/CameraControlSecondButton.ts","../Middleware/Click.ts","../Middleware/LoadingScreen.ts","../Middleware/Norm.ts","../Middleware/TimingAudio.ts"],"sourcesContent":["export type WithoutFunction<R> = R extends Function ? never : R\n\nexport default function calc<\n  T = unknown,\n  FunctionParamsType extends any[] = any[],\n  >(\n    c: T | ((...params: FunctionParamsType) => T),\n    ...params: FunctionParamsType): T {\n  return typeof c === \"function\" ? (c as ((...params: FunctionParamsType) => T))(...params) : c;\n}\n","export default function toArray<T>(value:T|T[]):T[]\t{\n\treturn (value === undefined || value === null ? [] : Array.isArray(value) ? value : [value]);\n}","import calc from \"./func/calc.js\";\nimport toArray from \"./func/toArray.js\";\nimport type TimingAudio from \"./Middleware/TimingAudio.js\";\nimport type Scene from './Scene'\n\nexport interface EngineOptions {\n  canvas: HTMLCanvasElement\n  scene?: null | Scene\n  sceneParameter?: Record<any, any>\n  autoSize?: AutoSizeSettings\n  clickToPlayAudio?: boolean\n  reduceFramerate?: boolean\n}\n\nexport interface AutoSizeSettings {\n  enabled: boolean\n  scaleLimitMin: number\n  scaleLimitMax: number\n  scaleFactor: number\n  referenceWidth: () => number\n  referenceHeight: () => number\n  currentScale: number\n  waitTime: number\n  currentWaitedTime: number\n  currentOffsetTime: number\n  offsetTimeLimitUp: number\n  offsetTimeLimitDown: number\n  registerResizeEvents: boolean\n  registerVisibilityEvents: boolean\n  setCanvasStyle: boolean\n  offsetTimeTarget?: number\n  offsetTimeDelta?: number\n}\n\ninterface EventSafe {\n  n: HTMLElement | Window & typeof globalThis | Document\n  e: string\n  f: EventListenerOrEventListenerObject,\n}\n\nexport interface OutputInfo {\n  canvas: HTMLCanvasElement[],\n  context: CanvasRenderingContext2D[],\n  width: number,\n  height: number,\n  ratio: number,\n}\n\n\nclass Engine {\n  _output: OutputInfo\n  _events: EventSafe[]\n  _scene: null | Scene | undefined\n  _newScene: undefined | null | Scene\n  _sceneParameter: undefined | Record<any, any>\n  _isSceneInitialized: boolean\n  _recalculateCanvasIntend: boolean\n  _lastTimestamp: number\n  _referenceRequestAnimationFrame: number | undefined\n  _autoSize: undefined | AutoSizeSettings\n  _canvasCount: number\n  _drawFrame: number[]\n  _reduceFramerate: boolean\n  _realLastTimestamp: number | undefined\n  _isOddFrame: boolean = false\n  _initializedStartTime: number | undefined\n  _promiseSceneDestroying: Promise<any> | undefined\n  _runParameter: undefined | Record<any, any>\n  _moveOnce: boolean = false\n\n  constructor(canvasOrOptions: HTMLCanvasElement | EngineOptions) {\n    let givenOptions: EngineOptions = canvasOrOptions as EngineOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if ((canvasOrOptions as HTMLCanvasElement).getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions as HTMLCanvasElement,\n      };\n    } else if (!(canvasOrOptions as EngineOptions).canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options: EngineOptions = Object.assign(\n      {},\n      givenOptions\n    );\n\n    this._output = {\n      canvas: [],\n      context: [],\n      width: 0,\n      height: 0,\n      ratio: 1,\n    };\n\n    // list of binded events\n    this._events = [];\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    // this._newScene = undefined;\n    // this._promiseSceneDestroying = undefined;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = undefined;\n\n    // data about the output canvas\n    this._output.canvas = toArray(options.canvas);\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings: AutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 2.5,\n        scaleFactor: 1.07,\n        referenceWidth: () => this._output.canvas[0].clientWidth,\n        referenceHeight: () => this._output.canvas[0].clientHeight,\n        currentScale: 1,\n        waitTime: 100,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        // undefined will be autodetect timing\n        // offsetTimeTarget: 25,\n        // offsetTimeDelta: 10,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false,\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        this._events = [\"resize\", \"orientationchange\"].map((e) => ({\n          n: window,\n          e: e,\n          f: this.recalculateCanvas.bind(this),\n        }));\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        this._events.push({\n          n: document,\n          e: \"visibilitychange\",\n          f: this.handleVisibilityChange.bind(this),\n        });\n      }\n      this._recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas[0].width;\n      this._output.height = this._output.canvas[0].height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.canvas.forEach((canvas, index) => {\n      this._output.context[index] = canvas.getContext(\"2d\")!;\n    });\n    this._canvasCount = this._output.canvas.length;\n    this._drawFrame = Array.from({ length: this._canvasCount }, (v) => 0);\n\n    if (options.clickToPlayAudio) {\n      this._events.push({\n        n: this._output.canvas[0],\n        e: \"click\",\n        f: this.playAudioOfScene.bind(this),\n      });\n    }\n\n    this._reduceFramerate = !!options.reduceFramerate;\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f);\n    });\n\n    this.switchScene(options.scene, options.sceneParameter || {});\n  }\n\n  handleVisibilityChange() {\n    if (this._autoSize) this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (\n      this._isSceneInitialized &&\n      this._scene &&\n      (this._scene.timing as TimingAudio).audioElement\n    ) {\n      (this._scene.timing as TimingAudio).audioElement.play();\n    }\n  }\n\n  normContext(ctx: CanvasRenderingContext2D) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  getOutput() {\n    return this._output;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc<number>(this._autoSize.referenceWidth);\n      const height = calc<number>(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.forEach((canvas) => {\n        canvas.width = Math.round(width / this._autoSize!.currentScale);\n        canvas.height = Math.round(height / this._autoSize!.currentScale);\n        if (this._autoSize!.setCanvasStyle) {\n          canvas.style.width = `${width}px`;\n          canvas.style.height = `${height}px`;\n        }\n      });\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas[0].width;\n    this._output.height = this._output.canvas[0].height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  async recalculateFPS() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n      this._referenceRequestAnimationFrame = undefined;\n    }\n    await new Promise((resolve) => requestAnimationFrame(resolve));\n    const start = this._now();\n    const count = 3;\n    for (let i = count; i--;) {\n      await new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n\n    const timeBetweenFrames = (this._now() - start) / count;\n    this._autoSize!.offsetTimeTarget = timeBetweenFrames;\n    this._autoSize!.offsetTimeDelta = timeBetweenFrames / 3;\n\n    if (this._referenceRequestAnimationFrame === undefined) {\n      this._realLastTimestamp = undefined;\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        this._mainLoop.bind(this)\n      );\n    }\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize();\n    }\n    return this;\n  }\n\n  switchScene(scene: Scene | null | undefined, sceneParameter: undefined | Record<any, any> = undefined) {\n    if (scene) {\n      this._newScene = scene;\n      this._sceneParameter = sceneParameter;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  _mainLoop(timestamp:number) {\n    if (!this._referenceRequestAnimationFrame) return;\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    let isRecalculatedCanvas =\n      this._recalculateCanvasIntend &&\n      (!this._reduceFramerate || !this._isOddFrame);\n\n    if (isRecalculatedCanvas) {\n      this._recalculateCanvas();\n      this._recalculateCanvasIntend = false;\n    }\n\n    for (let i = 0; i < this._canvasCount; i++) {\n      this._drawFrame[i] = Math.max(\n        this._drawFrame[i] - 1,\n        isRecalculatedCanvas ? 1 : 0\n      );\n    }\n\n    if (!this._realLastTimestamp) {\n      this._realLastTimestamp = timestamp;\n    }\n    if (!this._initializedStartTime) {\n      this._initializedStartTime = timestamp;\n    }\n\n    if (this._newScene && !this._promiseSceneDestroying) {\n      this._promiseSceneDestroying = Promise.resolve(\n        this._scene ? this._scene.destroy() : undefined\n      );\n      this._promiseSceneDestroying.then((destroyParameterForNewScene) => {\n        this._newScene!.callInit(\n          {\n            run: this._runParameter,\n            scene: this._sceneParameter,\n            destroy: destroyParameterForNewScene,\n          },\n          this\n        );\n        this._scene = this._newScene;\n        this._newScene = undefined;\n        this._promiseSceneDestroying = undefined;\n        this._isSceneInitialized = false;\n        this._lastTimestamp = this._scene!.currentTime();\n        this._initializedStartTime = timestamp;\n      });\n    }\n\n    if (this._scene) {\n      if (this._reduceFramerate) {\n        this._isOddFrame = !this._isOddFrame;\n      }\n\n      if (!this._reduceFramerate || this._isOddFrame) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(timePassed);\n        timePassed = timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          const moveFrame = timePassed !== 0 || this._moveOnce;\n          this._moveOnce = false;\n\n          const nowAutoSize = this._now();\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              const ctx = this._output.context[index];\n              this.normContext(ctx);\n              this._scene.initSprites(index);\n              //this.normContext(ctx);\n            }\n          }\n\n          const drawFrame = this._scene.isDrawFrame(timePassed);\n          if (Array.isArray(drawFrame)) {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(\n                this._drawFrame[i],\n                drawFrame[i],\n                0\n              );\n            }\n          } else {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame, 0);\n            }\n          }\n\n          if (moveFrame) {\n            this._scene.move(timePassed);\n          }\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              if (this._drawFrame[index]) {\n                this._scene.draw(index);\n              }\n            }\n          }\n\n          if (this._autoSize && this._autoSize.enabled) {\n            const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n            if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n              this._autoSize.currentWaitedTime += deltaTimestamp;\n            } else if (moveFrame) {\n              const targetTime =\n                this._autoSize.offsetTimeTarget! *\n                (this._reduceFramerate ? 2 : 1);\n              const deltaFrame = this._now() - nowAutoSize;\n              const delta =\n                (Math.abs(deltaTimestamp - targetTime) >\n                  Math.abs(deltaFrame - targetTime)\n                  ? deltaTimestamp\n                  : deltaFrame) - targetTime;\n              if (Math.abs(delta) <= this._autoSize.offsetTimeDelta!) {\n                this._autoSize.currentOffsetTime =\n                  this._autoSize.currentOffsetTime >= 0\n                    ? Math.max(\n                      0,\n                      this._autoSize.currentOffsetTime -\n                      this._autoSize.offsetTimeDelta!\n                    )\n                    : Math.min(\n                      0,\n                      this._autoSize.currentOffsetTime +\n                      this._autoSize.offsetTimeDelta!\n                    );\n              } else {\n                if (\n                  delta < 0 &&\n                  this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime <=\n                    -this._autoSize.offsetTimeLimitDown\n                  ) {\n                    this._autoSize.currentScale = Math.max(\n                      this._autoSize.scaleLimitMin,\n                      this._autoSize.currentScale / this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                } else if (\n                  delta > 0 &&\n                  this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime >=\n                    this._autoSize.offsetTimeLimitUp\n                  ) {\n                    this._autoSize.currentScale = Math.min(\n                      this._autoSize.scaleLimitMax,\n                      this._autoSize.currentScale * this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < this._canvasCount; i++) {\n            this.normContext(this._output.context[i]);\n          }\n          this._isSceneInitialized = this._scene.callLoading({\n            timePassed: timestamp - this._realLastTimestamp,\n            totalTimePassed: timestamp - this._initializedStartTime,\n          });\n          if (this._isSceneInitialized) {\n            this._scene.reset();\n            this._lastTimestamp = this._scene.currentTime();\n            this._moveOnce = true;\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      }\n    }\n    this._realLastTimestamp = timestamp;\n  }\n\n  async run(runParameter: Record<any, any>) {\n    this._runParameter = runParameter || {};\n\n    await this.stop();\n\n    this._realLastTimestamp = this._initializedStartTime = undefined;\n\n    if (this._autoSize && !this._autoSize.offsetTimeTarget) {\n      await this.recalculateFPS();\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  async stop() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    }\n    this._referenceRequestAnimationFrame = undefined;\n    this._scene && (await this._scene.destroy());\n  }\n\n  async destroy() {\n    await this.stop();\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f);\n    });\n    this._events = [];\n\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  Images:Record<string, HTMLImageElement>\n  count: number\n  loaded: number\n  _resolve: ((value:unknown)=>void)[] = []\n\n  constructor() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n  }\n\n  add<\n  F extends (key:string, image:HTMLImageElement)=>void\n  >(\n    Images: string[]|Record<string,string>, \n    Callbacks: undefined|(()=>void)|F[]|Record<string,F> = undefined\n    ) {\n    const self = this;\n    for (const key in Images) {\n      if (!self.Images[key]) {\n        const imageSrc = (Images as Record<string,string>)[key];\n        self.Images[key] = new window.Image();\n        self.Images[key].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n            (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n          }\n          if (self._resolve && self.isLoaded()) {\n            self._resolve.forEach(c => c(undefined));\n            self._resolve = [];\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[key].crossOrigin = \"anonymous\";\n        if (imageSrc.substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL;\n          const svg = new window.Blob([imageSrc], { type: \"image/svg+xml\" });\n          self.Images[key].src = DOMURL.createObjectURL(svg);\n        } else {\n          if (/^(https?:)?\\/\\//.test(imageSrc)) {\n            self.Images[key].onerror = () => {\n              // load again without crossOrigin\n              const img = new window.Image();\n              img.onload = self.Images[key].onload;\n              self.Images[key] = img;\n              self.Images[key].src = imageSrc;\n            };\n            self.Images[key].crossOrigin = \"anonymous\";\n          }\n          self.Images[key].src = imageSrc;\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n          (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self._resolve && self.isLoaded()) {\n      self._resolve.forEach(c => c(undefined));\n      self._resolve = [];\n    }\n    return self;\n  }\n\n  reset() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n    return this;\n  }\n\n  isLoaded() {\n    return this.loaded === this.count;\n  }\n\n  getImage(nameOrImage:HTMLImageElement|string) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : this.Images[nameOrImage];\n  }\n\n  isLoadedPromise() {\n    return this.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          this._resolve.push(resolve);\n        });\n  }\n}\n\nexport default new ImageManager();\n","import type { ISpriteFunctionOrSprite, ISprite, TTagParameter } from './Sprites/Sprite'\n\nexport interface LayerCallbackData {\n  elementId: number\n  layerId: number\n  element: ISpriteFunctionOrSprite\n  isFunction: boolean\n  layer: Layer\n}\nexport type LayerCallback = (data: LayerCallbackData) => void | boolean\n\nclass Layer {\n  _layer: (undefined | ISpriteFunctionOrSprite)[]\n  _isFunction: (undefined | boolean)[]\n  _start: number\n  _nextFree: number\n  _canvasIds: number[]\n\n  constructor(canvasIds: undefined | number | number[]) {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n    this._canvasIds =\n      canvasIds === undefined\n        ? []\n        : Array.isArray(canvasIds)\n          ? canvasIds\n          : [canvasIds];\n  }\n\n  addElement(element: ISpriteFunctionOrSprite) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element: ISpriteFunctionOrSprite) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId: number) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element: ISpriteFunctionOrSprite) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element: ISpriteFunctionOrSprite) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId: number) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = undefined;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else if (this._layer[elementId]) {\n      this._layer[elementId] = undefined;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  isCanvasId(canvasId: number|undefined) {\n    return (\n      canvasId === undefined ||\n      !this._canvasIds.length ||\n      this._canvasIds.includes(canvasId)\n    );\n  }\n\n  forEach(callback: LayerCallback, layerId: number = 0) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        if (callback({\n          elementId: index,\n          layerId,\n          element,\n          isFunction: this._isFunction[index]!,\n          layer: this\n        }) === false) {\n          return;\n        }\n      }\n    }\n  }\n\n  getElementsByTag(tag: TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  play(label: string = \"\", timelapsed: number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer\";\nimport type { LayerCallback } from \"./Layer\"\nimport type { ISprite, TTagParameter } from './Sprites/Sprite'\n\n\nclass LayerManager {\n  _layers: Layer[]\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer(canvasIds));\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer(canvasIds))\n    );\n    return result;\n  }\n\n  getById(layerId: number) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback: LayerCallback, canvasId?: number|undefined) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      if (this._layers[i].isCanvasId(canvasId)) {\n        this._layers[i].forEach(callback, i)\n      }\n    }\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  getElementsByTag(tag:TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\n\nexport default class Transform {\n  m: [number, number, number, number, number, number] = [1, 0, 0, 1, 0, 0];\n\n  __constuct() {\n    this.reset()\n  }\n\n  reset() {\n    this.m = [1, 0, 0, 1, 0, 0];\n    return this;\n  }\n\n  multiply(matrix: Transform) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  };\n\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  };\n\n  rotate(rad: number) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  };\n\n  translate(x: number, y: number) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  };\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  };\n\n  transformPoint(px: number, py: number):[number, number] {\n    const x = px;\n    const y = py;\n    px = x * this.m[0] + y * this.m[2] + this.m[4];\n    py = x * this.m[1] + y * this.m[3] + this.m[5];\n    return [px, py];\n  };\n\n  clone() {\n    const n = new Transform();\n    n.m = this.m.slice(0) as [number, number, number, number, number, number];\n    return n;\n  }\n}","export default function ifNull<T>(value:T|null|undefined, alternative:T):T\t{\n\t//@ts-ignore\n\treturn (value === undefined || value === null || value === \"\" ? alternative : value);\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ConfigurationObject, ParameterList, ParameterListWithoutTime } from \"../Scene\";\n\n\nexport interface MiddlewareTimingDefaultOptions {\n  tickChunk?: OrFunction<number>\n  maxSkippedTickChunk?:OrFunction<number|undefined>\n  tickChunkTolerance?:OrFunction<number|undefined>\n}\n\nexport default class TimingDefault implements ConfigurationObject {\n  _configuration: MiddlewareTimingDefaultOptions\n  _tickChunk: number\n  _maxSkippedTickChunk: number\n  _tickChunkTolerance: number\n\n  type = \"timing\"\n  totalTimePassed = 0\n\n  constructor(configuration:MiddlewareTimingDefaultOptions = {}) {\n    this._configuration = configuration;\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 120)\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  init(_params:ParameterListWithoutTime) {}\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime({ timePassed } : ParameterList) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime({ timePassed } : ParameterList) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  get tickChunk() {\n    return this._tickChunk;\n  }\n\n  isChunked() {\n    return !!this._tickChunk;\n  }\n\n  hasOneChunkedFrame({ timePassed } : ParameterList) {\n    return timePassed >= this._tickChunk - this._tickChunkTolerance;\n  }\n\n  calcFrames({ timePassed } : ParameterList) {\n    return Math.min(\n      this._maxSkippedTickChunk,\n      Math.floor((timePassed + this._tickChunkTolerance) / this._tickChunk)\n    );\n  }\n}\n","import ImageManager from \"./ImageManager\";\nimport LayerManager from \"./LayerManager\";\nimport calc, { WithoutFunction } from \"./func/calc\";\nimport toArray from \"./func/toArray\";\nimport Transform from \"./func/transform\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\nimport { OutputInfo } from \"./Engine\";\nimport type Engine from \"./Engine\";\nimport type { ISprite, ISpriteFunction, ISpriteFunctionOrSprite } from \"./Sprites/Sprite\";\nimport type { addPrefix, OrFunction, OrPromise, ValueOf } from \"./helper\";\nimport type Camera from \"./Middleware/Camera\";\nimport type { CameraPosition } from \"./Middleware/Camera\";\nimport type CameraControl from \"./Middleware/CameraControl\";\nimport type TimingAudio from \"./Middleware/TimingAudio\";\n\nexport interface RectPosition {\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n}\n\nexport interface ParameterListWithoutTime {\n  engine: Engine\n  scene: Scene\n  imageManager: typeof ImageManager\n  layerManager: LayerManager\n  totalTimePassed: number\n  output: OutputInfo\n}\n\nexport interface ParameterList extends ParameterListWithoutTime { \n  timePassed: number \n}\n\nexport interface ParameterListFixedUpdate extends ParameterList { \n  lastCall: boolean\n}\n\nexport interface ParameterListCanvas extends ParameterListWithoutTime { \n  canvasId: undefined|number\n}\n\nexport interface ParameterListLoading extends ParameterList {\n    timePassed: number\n    totalTimePassed: number\n    progress: string | number\n}\n\nexport interface ParameterListInitDestroy extends ParameterList {\n  parameter: any\n}\n\nexport interface ElementClickInfo {\n  layerId: number\n  element: ISprite\n  elementId: number\n}\n\nexport interface ElementPositionInfo {\n  mx: number\n  my: number\n  x: number\n  y: number\n}\n\nexport type ParameterListClickElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport type ParameterListClickNonElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport interface ParameterListPositionEvent extends ParameterListWithoutTime {\n  event: Event | MouseEvent | TouchEvent\n  position: [number, number]\n  x:number\n  y:number\n  button: number\n}\n\nexport type EventsReturn = (keyof HTMLElementEventMap|[keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[]\n\nexport interface ConfigurationObject extends Record<string, any> {\n  init?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  destroy?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  enabled?: boolean\n  type?: string\n  images?: OrFunction<string[] | Record<string, string>>\n  endTime?: OrFunction<number>\n  loading?: (params: ParameterListLoading) => void\n  viewport?: (params: ParameterListWithoutTime, matrix:Transform) => Transform\n  currentTime?: (params: ParameterListWithoutTime) => number\n  clampTime?: (params: ParameterList) => number\n  shiftTime?: (params: ParameterList) => number\n  isDrawFrame?: (params: ParameterList) => number|number[]\n  isChunked?: OrFunction<boolean>\n  additionalModifier?: (params: ParameterListWithoutTime, additionalModifier: AdditionalModifier) => AdditionalModifier\n  calcFrames?: OrFunction<number, [ParameterList]>\n  tickChunk?: OrFunction<number, [ParameterListWithoutTime]>\n  fixedUpdate?: (params: ParameterListFixedUpdate) => void\n  draw?: (params: ParameterListCanvas) => void\n  update?: (params: ParameterList) => void\n  reset?: (params: ParameterListWithoutTime) => LayerManager | ISpriteFunctionOrSprite[][]\n  preventDefault?: OrFunction<boolean>,\n  events?: OrFunction<EventsReturn, [ParameterListInitDestroy]>\n  initSprites?: (params: ParameterListCanvas) => void\n  doubleClickElement?: (params: ParameterListClickElement) => void\n  clickElement?: (params: ParameterListClickElement) => void\n  hoverElement?: (params: ParameterListClickElement) => void\n  doubleClickNonElement?: (params: ParameterListClickNonElement) => void\n  clickNonElement?: (params: ParameterListClickNonElement) => void\n  hoverNonElement?: (params: ParameterListClickNonElement) => void\n  mouseDown?: (params: ParameterListPositionEvent) => void\n  mouseUp?: (params: ParameterListPositionEvent) => void\n  mouseOut?: (params: ParameterListPositionEvent) => void\n  mouseMove?: (params: ParameterListPositionEvent) => void\n  mouseWheel?: (params: ParameterListPositionEvent) => void\n  doubleClick?: (params: ParameterListPositionEvent) => void\n  click?: (params: ParameterListPositionEvent) => void\n}\n\nexport interface ConfigurationConstructor {\n  new (options?: Record<string, any>): ConfigurationObject\n}\n\nexport type ConfigurationClassOrObject = ConfigurationObject | ConfigurationConstructor\n\ntype MiddlewareCommandList<T = ConfigurationObject> = {\n  _all: T[],\n  init: T[],\n  isDrawFrame: T[],\n  initSprites: T[],\n  fixedUpdate: T[],\n  update: T[],\n  draw: T[],\n  destroy: T[],\n  reset: T[],\n  resize: T[],\n  currentTime: T[],\n  clampTime: T[],\n  shiftTime: T[],\n  isChunked: T[],\n  hasOneChunkedFrame: T[],\n  calcFrames: T[],\n  tickChunk: T[],\n  additionalModifier: T[],\n} & Record<addPrefix<string, 't_'>, T[]>\n\ntype FullParameterList = ParameterListWithoutTime & Record<string, any>\n\nexport interface AdditionalModifier {\n  alpha: number\n  x: number\n  y: number\n  width: number\n  height: number\n  widthInPixel: number\n  heightInPixel: number\n  scaleCanvas: number\n  visibleScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  fullScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  cam?: CameraPosition\n  radius?: number\n}\n\nconst defaultMiddlewareCommandList = {\n  _all: [],\n  init: [],\n  isDrawFrame: [],\n  initSprites: [],\n  fixedUpdate: [],\n  update: [],\n  draw: [],\n  destroy: [],\n  reset: [],\n  resize: [],\n  currentTime: [],\n  clampTime: [],\n  shiftTime: [],\n  isChunked: [],\n  hasOneChunkedFrame: [],\n  calcFrames: [],\n  tickChunk: [],\n  additionalModifier: [],\n}\n\n\n\nclass Scene {\n  _layerManager: LayerManager\n  _imageManager: typeof ImageManager\n  _totalTimePassed: number\n  _engine: Engine | undefined\n  _middleware: MiddlewareCommandList<ConfigurationObject> = defaultMiddlewareCommandList\n  _stopPropagation: boolean = false\n  _transform: Transform | undefined\n  _transformInvert: Transform | undefined\n  _additionalModifier: AdditionalModifier | undefined\n  _initDone: boolean = false\n  _endTime: number | undefined\n  _resetIntend: boolean = false\n\n  constructor(...configurationClassOrObjects: ConfigurationClassOrObject[]) {\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n    this._totalTimePassed = 0;\n    this._imageManager = ImageManager;\n\n    this.middlewares = configurationClassOrObjects;\n    if (!this.middlewareByType(\"timing\")) {\n      this.middlewares = [TimingDefault as ConfigurationConstructor, ...this.middlewares as ConfigurationObject[]];\n    }\n  }\n\n  _output() {\n    return this._engine?.getOutput();\n  }\n\n  set middlewares(middlewares: ConfigurationClassOrObject | ConfigurationClassOrObject[]) {\n    this._middleware = (toArray(middlewares)\n      .map((configurationClassOrObject) =>\n        typeof configurationClassOrObject === \"function\"\n          ? new (configurationClassOrObject as ConfigurationConstructor)()\n          : configurationClassOrObject\n      ) as ConfigurationObject[])\n      .reduce(\n        (middlewareCommandList: MiddlewareCommandList<ConfigurationObject>, c: ConfigurationObject) => {\n          for (let command of Object.keys(middlewareCommandList)) {\n            if (command in c) {\n              middlewareCommandList[command as keyof MiddlewareCommandList<ConfigurationObject>].push(c);\n            }\n          }\n          middlewareCommandList._all.push(c);\n          if (!(\"enabled\" in c)) c.enabled = true;\n          if (c.type) middlewareCommandList[`t_${c.type}`] = [c];\n          return middlewareCommandList;\n        },\n        defaultMiddlewareCommandList\n      );\n  }\n  get middlewares() {\n    return this._middleware._all;\n  }\n\n  middlewareByType(type: string) {\n    const objs = this._middleware._all.filter((c) => c.type === type);\n    if (objs.length) {\n      return objs[objs.length - 1];\n    }\n  }\n\n  has(command: string) {\n    return (\n      command in this._middleware ||\n      this._middleware._all.some((c) => command in c)\n    );\n  }\n\n  do<\n    K extends string,\n    D = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>,\n    R = D | undefined\n  >(\n    command: K,\n    params: P,\n    defaultValue: D | undefined,\n    func: (ConfigurationObjects: ConfigurationObject[], params: P, defaultValue: D | undefined) => R\n  ) {\n    let objs =\n      this._middleware[command as keyof MiddlewareCommandList] ||\n      this._middleware._all.filter((c) => command in c);\n    objs = objs.filter((v: ConfigurationObject) => v.enabled);\n    if (!objs.length) {\n      return defaultValue;\n    }\n    const fullParams = this._param(params);\n    return func(objs, fullParams, defaultValue);\n  }\n\n  map<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P\n  ) {\n    return this.do<K, R[], P, R[]>(command, params, [], (objs, fullParams) =>\n      objs.map((c: ConfigurationObject) => c[command](fullParams))\n    ) as R[];\n  }\n\n  pipe<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeBack<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let i = objs.length - 1; i >= 0; i--) {\n        const c = objs[i];\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeMax<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, number | number[], P>(command, params, Array.isArray(pipe) ? pipe.map(p => p - 0) : pipe as unknown as number - 0, (objs, fullParams, pipe) => {\n      let res = pipe;\n      this._stopPropagation = false;\n\n      if (Array.isArray(res)) {\n        // res is number\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = (res as unknown as number[]).map((v, i) => Math.max(v, (newRes as number[])[i]));\n          } else {\n            res = res.map((v, i) => Math.max(v, newRes as number));\n          }\n          if (this._stopPropagation) break;\n        }\n      } else {\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = newRes.map((v) => Math.max(v, res as number));\n          } else {\n            res = Math.max(newRes, res as number);\n          }\n          if (this._stopPropagation) break;\n        }\n      }\n      return res;\n    });\n  }\n\n  async pipeAsync<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterList>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P, Promise<R | undefined>>(command, params, pipe, async (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = await c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  value<\n    K extends string,\n    R = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P | undefined = undefined\n  ):WithoutFunction<R>|undefined {\n    let objs: ConfigurationObject[] =\n      this._middleware[command as keyof MiddlewareCommandList<ConfigurationObject>] ||\n      this._middleware._all.filter((c: ConfigurationObject) => command in c);\n    objs.filter((v) => v.enabled);\n    if (!objs.length) {\n      return undefined;\n    }\n    const obj = objs[objs.length - 1];\n    return calc(obj[command], this._param(params || {}));\n  }\n\n  stopPropagation() {\n    this._stopPropagation = true;\n  }\n\n  currentTime() {\n    return this.pipe(\"currentTime\", {})!;\n  }\n\n  clampTime(timePassed: number) {\n    return this.pipe(\"clampTime\", { timePassed })!;\n  }\n\n  shiftTime(timePassed: number) {\n    return this.pipe(\"shiftTime\", { timePassed })!;\n  }\n\n  cacheClear() {\n    this._transform = undefined;\n    this._transformInvert = undefined;\n  }\n\n  viewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this.pipe(\"viewport\", {}, new Transform());\n      this._transformInvert = undefined;\n    }\n    return this._transform!;\n  }\n\n  transformPoint(x: number, y: number, scale = this._additionalModifier!.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this.viewport().clone().invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  callInit(parameter: any, engine: Engine) {\n    this._engine = engine;\n    this.resize();\n    const images = this.value(\"images\");\n    if (images) {\n      this._imageManager.add(images);\n    }\n    Promise.all(\n      this.map(\"init\", {\n        parameter,\n      })\n    ).then((res) => (this._initDone = true));\n  }\n\n  get additionalModifier() {\n    return this._additionalModifier!;\n  }\n\n  updateAdditionalModifier() {\n    const output = this._output()!;\n    this._additionalModifier = this.pipe(\n      \"additionalModifier\",\n      {},\n      {\n        alpha: 1,\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height,\n        widthInPixel: output.width,\n        heightInPixel: output.height,\n        scaleCanvas: 1,\n        visibleScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n        fullScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n      }\n    );\n  }\n\n  resize() {\n    const output = this._output()!;\n    this.updateAdditionalModifier();\n    this.pipe(\"resize\", {});\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).resize(output, this._additionalModifier!);\n      }\n    });\n  }\n\n  async destroy() {\n    const parameter = await this.pipeAsync(\"destroy\", {});\n    this._initDone = false;\n    return parameter;\n  }\n\n  get timing() {\n    return this._middleware.t_timing[0] as TimingDefault|TimingAudio;\n  }\n\n  get camera() {\n    return this._middleware.t_camera[0] as Camera;\n  }\n\n  get control() {\n    return this._middleware.t_control[0] as CameraControl;\n  }\n\n  get totalTimePassed() {\n    return this._totalTimePassed;\n  }\n\n  _param<K extends Record<string, any>>(additionalParameter: K | undefined = undefined): ParameterListWithoutTime & K {\n    return Object.assign({\n      engine: this._engine!,\n      scene: this,\n      imageManager: this._imageManager,\n      layerManager: this._layerManager,\n      totalTimePassed: this._totalTimePassed,\n      output: this._output()!,\n    }, additionalParameter);\n  }\n\n  callLoading(args: {\n    timePassed: number\n    totalTimePassed: number\n  }) {\n    if (this._imageManager.isLoaded() && this._initDone) {\n      this._endTime = this.value(\"endTime\");\n      const progress = \"Click to play\";\n      this.value(\"loading\", {\n        ...args,\n        progress\n      });\n      return true;\n    }\n    const progress = this._imageManager.count\n      ? this._imageManager.loaded / this._imageManager.count\n      : \"Loading...\";\n\n    this.value(\"loading\", {\n      ...args,\n      progress\n    });\n    return false;\n  }\n\n  fixedUpdate(timePassed: number, lastCall: boolean) {\n    this.map(\"fixedUpdate\", {\n      timePassed,\n      lastCall,\n    });\n  }\n\n  isDrawFrame(timePassed: number) {\n    return this.pipeMax(\"isDrawFrame\", { timePassed }, timePassed !== 0)!;\n  }\n\n  move(timePassed:number) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    if (this._resetIntend) {\n      this.reset();\n      // Jump back?\n    } else if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset();\n      this.initSprites();\n      this._totalTimePassed = timePassed;\n    } else if (this._endTime && this._endTime <= this._totalTimePassed) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._endTime;\n      this._totalTimePassed = this._endTime;\n      // End Engine\n      this.map(\"end\", { timePassed });\n    }\n    if (this.value(\"isChunked\")) {\n      if (this.value(\"hasOneChunkedFrame\", { timePassed })) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames = this.value(\"calcFrames\", { timePassed })! - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(this.value(\"tickChunk\", {})!, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(timePassed, true);\n    }\n\n    this.map(\"update\", { timePassed });\n\n    this._layerManager.forEach(({ element, isFunction, layer, elementId }) => {\n      if (!isFunction) {\n        if ((element as ISprite).animate(timePassed)) {\n          layer.deleteById(elementId);\n        }\n      }\n    });\n  }\n\n  draw(canvasId:number) {\n    this.map(\"draw\", { canvasId });\n    const context = this._output()!.context[canvasId]!;\n    context.save();\n\n    context.setTransform(...this.viewport().m);\n\n    this._layerManager.forEach(\n      ({ layer, layerId, element, isFunction, elementId }) => {\n        if (isFunction) {\n          if (\n            (element as ISpriteFunction)(\n              this._param({\n                layerId,\n                elementId,\n                layer,\n                context,\n              })\n            )\n          ) {\n            layer.deleteById(elementId);\n          }\n        } else {\n          (element as ISprite).draw(context, this._additionalModifier!);\n        }\n      },\n      canvasId\n    );\n\n    context.restore();\n  }\n\n  initSprites(canvasId: number|undefined = undefined) {\n    const context = this._output()!.context[canvasId || 0]!;\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).callInit(context, this._additionalModifier!);\n      }\n    }, canvasId);\n    this.map(\"initSprites\", { canvasId });\n  }\n\n  resetIntend() {\n    this._resetIntend = true;\n  }\n\n  reset() {\n    this._totalTimePassed = 0;\n    this._resetIntend = false;\n    let result = this.pipe<\"reset\",LayerManager | ISpriteFunctionOrSprite[][], {}>(\n      \"reset\",\n      {},\n      new LayerManager()\n    );\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach((v) => {\n        (result as LayerManager).addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Wait from \"./Wait\";\n\nexport enum SequenceRunCommand {\n  FORCE_DISABLE = \"F\",\n  STOP = \"S\",\n  REMOVE = \"R\"\n}\n\nexport type TWaitTime = number;\nexport type TLabel = string;\nexport type TAnimationFunction = IAnimation['run'];\nexport type TAnimationSequence = (TWaitTime | TLabel | TAnimationFunction | IAnimation)[]\nexport type AnimationSequenceOptions = TAnimationSequence | TAnimationSequence[]\n\ninterface ISequence {\n  position: number\n  timelapsed: number\n  sequence: IAnimation[]\n  label: Record<string, number>\n  enabled: boolean\n}\n\nclass Sequence implements IAnimation {\n  sequences: ISequence[] = []\n  lastTimestamp: number = 0\n  enabled: boolean = true\n\n  constructor(...sequences: AnimationSequenceOptions) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift() as number;\n    }\n\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait: number = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift() as number;\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof (command as IAnimation).run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command } as IAnimation\n              : command as IAnimation\n          )\n          .filter(command => typeof (command as IAnimation).run === \"function\"),\n        label: sequence.reduce((arr: Record<string, number>, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n  }\n\n  reset(timelapsed: number = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0]?.reset?.(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (label in sequencePosition.label) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        } else {\n          b = b || (sequencePosition.sequence.some(seq => seq.play?.(label, timelapsed)));\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  _runSequence(sprite: ISprite, sequencePosition: ISequence, timePassed: number) {\n    let timeLeft: number = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      const res = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (res === true) {\n        timeLeft = 0;\n      } else if (res === false) {\n        return -1;\n      } else if (res === SequenceRunCommand.FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.REMOVE) {\n        return true;\n      }\n\n      timeLeft = res as number;\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite: ISprite, time:number, is_difference:boolean=false) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this._runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\nexport default Sequence;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class Wait implements IAnimation{\n  _duration:number\n  constructor(duration:OrFunction<number>) {\n    this._duration = calc(duration) - 0;\n  }\n\n  run(sprite: ISprite, time: number) {\n    // return time left\n    return time - this._duration;\n  }\n}\n","import type { OutputInfo } from \"../Engine\"\nimport type { AdditionalModifier, ParameterListWithoutTime } from \"../Scene\"\nimport type { OrFunction, OrPromise } from \"../helper\";\nimport type Layer from \"../Layer\";\nimport Sequence from \"../Animations/Sequence\";\nimport { IAnimation } from \"../Animations/Animation\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\n\nexport type TTagParameter = string | string[] | ((value: string, index: number, array: string[]) => unknown)\nexport interface ISprite {\n    p: SpriteBaseOptionsInternal & Record<string, any>\n    changeToPathInit?: (from: number[][][] | string, to: number[][][] | string) => [number[][][], number[][][]]\n    changeToPath?: (progress: number, data: {\n        pathFrom: number[][][]\n        pathTo: number[][][]\n    }) => number[][][]\n    getElementsByTag: (tag: TTagParameter) => ISprite[]\n    play: (label: string, timelapsed?: number) => void\n    resize: (output: OutputInfo, additionalModifier: AdditionalModifier) => OrPromise<void>\n    callInit: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => OrPromise<void>\n    animate: (timepassed: number) => boolean\n    draw: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => void\n    detect: (context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number) => ISprite | \"c\" | undefined\n    detectDraw: (context: CanvasRenderingContext2D, color: string) => void\n}\n\nexport type ISpriteFunction = (params: ParameterListWithoutTime & {\n    layerId: number\n    elementId: number\n    layer: Layer\n    context: CanvasRenderingContext2D,\n}) => number | boolean\n\nexport type ISpriteFunctionOrSprite = ISpriteFunction | ISprite\n\n\n\nexport interface SpriteBaseOptions {\n    animation?: OrFunction<Sequence | IAnimation[]>\n    enabled?: OrFunction<boolean>\n    isClickable?: OrFunction<boolean>\n    tag?: OrFunction<string[] | string>\n}\n\nexport interface SpriteBaseOptionsInternal {\n    animation: Sequence | undefined\n    enabled: boolean\n    isClickable: boolean\n    tag: string[]\n}\nexport type TParameterList<T, R> = {\n    [P in keyof R & keyof T]?: R[P] | ((value: T[P], givenParameter: T) => R[P]);\n}\n\nexport class SpriteBase<O extends SpriteBaseOptions = SpriteBaseOptions, P extends SpriteBaseOptionsInternal = SpriteBaseOptionsInternal> implements ISprite {\n    _needInit = true\n    p: P\n    constructor(givenParameter: O) {\n        this.p = this._parseParameterList(this._getParameterList(), givenParameter);\n    }\n\n    _parseParameterList(parameterList: TParameterList<O, P>, givenParameter: O): P {\n        const parameterEntries = Object.entries(parameterList as ReturnType<this[\"_getParameterList\"]>)\n        const valueEntries = parameterEntries.map(\n            ([name, d]) => {\n                const givenValue = givenParameter[name as keyof O]\n                return [name,\n                    typeof d === \"function\"\n                        ? d(givenValue, givenParameter)\n                        : ifNull(calc(givenValue), d)\n                ];\n            }\n        );\n        return Object.fromEntries(valueEntries)\n    }\n\n    _getBaseParameterList() {\n        return {\n            // animation\n            animation: (value: OrFunction<Sequence | IAnimation[]> | undefined, givenParameter: O) => {\n                const result = calc(value);\n                return Array.isArray(result) ? new Sequence(result) : result;\n            },\n            // if it's rendering or not\n            enabled: true,\n            // if you can click it or not\n            isClickable: false,\n            // tags to mark the sprites\n            tag: (value: OrFunction<string | undefined | string[]>, givenParameter: O) => {\n                const v: string | string[] | undefined = calc(value)\n                return Array.isArray(v) ? v : v ? [v] : [];\n            }\n        }\n    }\n\n    _getParameterList():TParameterList<O,P> {\n        return this._getBaseParameterList() as TParameterList<O, P>\n    }\n\n    getElementsByTag(tag: TTagParameter):ISprite[] {\n        if (typeof tag === \"function\") {\n            if (this.p.tag.filter(tag).length) {\n                return [this];\n            }\n        } else {\n            const aTag = Array.isArray(tag) ? tag : [tag];\n            if (aTag.filter(tag => this.p.tag.includes(tag)).length) {\n                return [this];\n            }\n        }\n        return [];\n    }\n\n\n    // Animation-Funktion\n    animate(timepassed: number) {\n        if (this.p.animation) {\n            // run animation\n            if (this.p.animation.run(this, timepassed, true) === true) {\n                // disable\n                this.p.enabled = false;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    play(label = \"\", timelapsed = 0) {\n        if (this.p.animation) {\n            this.p.animation.play?.(label, timelapsed);\n        }\n    }\n\n    init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n    callInit(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier):OrPromise<void> {\n        if (this._needInit) {\n            this.init(context, additionalModifier);\n            this._needInit = false;\n        }\n    }\n\n\n    resize(output: OutputInfo, additionalModifier: AdditionalModifier):OrPromise<void> { }\n\n    _detectHelperCallback(p: {\n        enabled: boolean\n        isClickable: boolean\n        x: number\n        y: number\n        scaleX: number\n        scaleY: number\n        rotation: number\n    }, context: CanvasRenderingContext2D, x: number, y: number, callback: () => boolean) {\n        let a = false;\n        if (p.enabled && p.isClickable) {\n            context.save();\n            context.translate(p.x, p.y);\n            context.scale(p.scaleX, p.scaleY);\n            context.rotate(p.rotation);\n            context.beginPath();\n            a = callback();\n            context.restore();\n        }\n        return a ? this as ISprite : undefined;\n    }\n\n    _detectHelper({\n        enabled,\n        isClickable,\n        x = 0,\n        y = 0,\n        width = 0,\n        height = 0,\n        scaleX = 1,\n        scaleY = 1,\n        rotation = 0\n    }: {\n        enabled: boolean\n        isClickable: boolean\n        x?: number\n        y?: number\n        width?: number\n        height?: number\n        scaleX?: number\n        scaleY?: number\n        rotation?: number\n    }, context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number, moveToCenter: boolean, callback?: (hw: number, hh: number) => boolean) {\n        let a = false;\n        if (enabled && isClickable) {\n            const hw = width / 2;\n            const hh = height / 2;\n            context.save();\n            if (moveToCenter) {\n                context.translate(x + hw, y + hh);\n            } else {\n                context.translate(x, y);\n            }\n            context.scale(scaleX, scaleY);\n            context.rotate(rotation);\n            context.beginPath();\n            if (callback) {\n                a = callback(hw, hh);\n            } else {\n                context.rect(-hw, -hh, width, height);\n                context.closePath();\n                a = context.isPointInPath(coordinateX, coordinateY);\n            }\n            context.restore();\n        }\n        return a ? this as ISprite: undefined;\n    }\n\n    detectDraw(context: CanvasRenderingContext2D, color: string) { }\n\n    detect(context: CanvasRenderingContext2D, x: number, y: number):ISprite | \"c\" | undefined { return undefined }\n\n    draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TParameterList } from \"./Sprite\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\nconst degToRad = Math.PI / 180;\n\n\nexport interface SpriteCircleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\nexport interface SpriteCircleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string\n}\n\nexport const CircleParameterList = {\n  // position\n  x: 0 as number,\n  y: 0 as number,\n  // rotation\n  rotation: (value: SpriteCircleOptions['rotation'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(\n      calc(value),\n      ifNull(\n        calc(givenParameter.rotationInRadian),\n        ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n      )\n    ) as number\n  },\n  // scalling\n  scaleX: (value: SpriteCircleOptions['scaleX'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  scaleY: (value: SpriteCircleOptions['scaleY'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  // alpha\n  alpha: 1,\n  // blending\n  compositeOperation: \"source-over\",\n  // color\n  color: \"_fff\"\n}\n\n// Sprite\n// Draw a Circle\nexport default class Circle extends SpriteBase<SpriteCircleOptions, SpriteCircleOptionsInternal> implements ISprite {\n  constructor(givenParameter: SpriteCircleOptions) {\n    super(givenParameter)\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList) as TParameterList<SpriteCircleOptions, SpriteCircleOptionsInternal>\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelperCallback(this.p, context, x, y, () => {\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      return context.isPointInPath(x, y);\n    });\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.beginPath();\n      context.fillStyle = this.p.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      context.fill();\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine.js\"\nimport { OrFunction } from \"../helper.js\"\nimport { AdditionalModifier } from \"../Scene.js\"\nimport { CircleParameterList } from \"./Circle.js\"\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TTagParameter } from \"./Sprite.js\"\n\nexport interface SpriteGroupOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  sprite?: OrFunction<ISprite>\n}\n\nexport interface SpriteGroupOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number|undefined\n  y: number|undefined\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  sprite: ISprite[]\n}\n\n\nexport default class Group<O extends SpriteGroupOptions = SpriteGroupOptions, P extends SpriteGroupOptionsInternal = SpriteGroupOptionsInternal> extends SpriteBase<O, P> {\n  constructor(givenParameter:O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      sprite: []\n    });\n  }\n\n  getElementsByTag(tag: TTagParameter):ISprite[] {\n    let result:ISprite[] = super.getElementsByTag(tag);\n    for (const sprite of this.p.sprite) {\n      const ans = sprite.getElementsByTag(tag);\n      if (ans) {\n        result = result.concat(ans);\n      }\n    }\n    return result;\n  }\n\n  // overwrite change\n  animate(timepassed:number) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        spriteFinished = spriteFinished || sprite.animate(timepassed) === true;\n      }\n    }\n\n    if (this.p.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.p.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.p.animation) {\n      this.p.animation.play?.(label, timelapsed);\n    }\n    for (const sprite of this.p.sprite) {\n      sprite.play?.(label, timelapsed);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    for (const sprite of this.p.sprite) {\n      sprite.resize(output, additionalModifier);\n    }\n  }\n\n  callInit(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    super.callInit(context, additionalModifier);\n    for (let sprite of this.p.sprite) {\n      sprite.callInit(context, additionalModifier);\n    }\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        sprite.detectDraw(context, color);\n      }\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        const a = sprite.detect(context, x, y);\n        if (a) return a;\n      }\n    }\n    return undefined;\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      if (this.p.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.p.alpha;\n      }\n\n      context.save();\n      context.translate(this.p.x!, this.p.y!);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      // draw all sprites\n      for (const sprite of this.p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\nimport Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n\nexport interface SpriteCanvasOptions extends SpriteGroupOptions {\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  canvasWidth?: OrFunction<number>\n  canvasHeight?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  gridSize?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  isDrawFrame?: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport interface SpriteCanvasOptionsInternal extends SpriteGroupOptionsInternal {\n  width: number|undefined\n  height: number|undefined\n  canvasWidth: number|undefined\n  canvasHeight: number|undefined\n  compositeOperation: GlobalCompositeOperation\n  gridSize: number|undefined\n  norm: boolean\n  isDrawFrame: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport default class Canvas extends Group<SpriteCanvasOptions, SpriteCanvasOptionsInternal>  {\n  _currentGridSize:number|undefined;\n  _drawFrame:number = 2;\n  _temp_canvas: undefined|HTMLCanvasElement\n  _tctx: undefined|CanvasRenderingContext2D\n  \n  constructor(givenParameter:SpriteCanvasOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      canvasWidth: undefined,\n      canvasHeight: undefined,\n      gridSize: undefined,\n      compositeOperation: \"source-over\",\n      norm: (value: SpriteCanvasOptions[\"norm\"], givenParameter:SpriteCanvasOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      isDrawFrame: (value: SpriteCanvasOptions[\"isDrawFrame\"], givenParameter:SpriteCanvasOptions) => ifNull(value, 1)\n    });\n  }\n\n  _generateTempCanvas(additionalModifier:AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.canvasWidth && p.canvasHeight) {\n      this._temp_canvas.width = p.canvasWidth;\n      this._temp_canvas.height = p.canvasHeight;\n    } else if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / p.scaleX);\n      this._temp_canvas.height = Math.round(h / p.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n  }\n\n  _normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  _copyCanvas(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (\n      this._temp_canvas &&\n      this._currentGridSize !== p.gridSize &&\n      !p.canvasWidth\n    ) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n      this._drawFrame = 2;\n    }\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._copyCanvas(additionalModifier);\n    super.resize(output!, additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this._copyCanvas(additionalModifier);\n      }\n      this._drawFrame = Math.max(\n        this._drawFrame - 1,\n        calc(p.isDrawFrame, context, additionalModifier)\n      );\n      const w = p.width!,\n        h = p.height!,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas!.width,\n        th = this._temp_canvas!.height;\n\n      if (this._drawFrame) {\n        this._tctx!.textBaseline = \"middle\";\n        this._tctx!.textAlign = \"center\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.globalCompositeOperation = \"source-over\";\n        this._tctx!.save();\n        // draw all sprites\n        const cam = additionalModifier.cam;\n        if (p.norm && cam) {\n          const scale = Math.max(tw, th) / 2;\n          this._tctx!.translate(tw / 2, th / 2);\n          this._tctx!.scale(scale, scale);\n          this._tctx!.scale(cam.zoom, cam.zoom);\n          this._tctx!.translate(-cam.x, -cam.y);\n        }\n        for (const sprite of p.sprite) {\n          sprite.draw(\n            this._tctx!,\n            p.norm\n              ? Object.assign({}, additionalModifier, {\n                  alpha: 1,\n                  widthInPixel: tw,\n                  heightInPixel: th\n                })\n              : {\n                  alpha: 1,\n                  x: 0,\n                  y: 0,\n                  width: tw,\n                  height: th,\n                  widthInPixel: tw,\n                  heightInPixel: th,\n                  scaleCanvas: 1,\n                  visibleScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                  fullScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                }\n          );\n        }\n        this._tctx!.restore();\n      }\n\n      context.save();\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.translate(p.x! + wh, p.y! + hh);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(this._temp_canvas!, 0, 0, tw, th, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport Group, { SpriteGroupOptions } from \"./Group.js\";\nimport { SpriteBaseOptions, ISprite } from \"./Sprite\";\n\nexport interface SpriteEmitterOptions<P extends SpriteBaseOptions = SpriteBaseOptions & Record<string, any>> {\n  count?: number\n  class: { new(options: P): ISprite }\n  self?: SpriteGroupOptions\n}\n\nexport default class Emitter<P> extends Group {\n  constructor(givenParameter: SpriteEmitterOptions<P>) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.p.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      const parameter: P = Object.entries(givenParameter).reduce<P>((p, [index, value]) => {\n        if ([\"self\", \"class\", \"count\"].includes(index)) {\n          return p;\n        }\n        // @ts-ignore\n        p[index] = calc(value, i)\n        return p\n      }, {} as P)\n      this.p.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","export enum Position {\n    LEFT_TOP = 0,\n    CENTER = 1\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport type { OutputInfo } from \"../Engine\";\n\nexport interface SpriteFastBlurOptions extends SpriteBaseOptions {\n  x?: OrFunction<undefined | number>\n  y?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  scaleX?: OrFunction<undefined | number>\n  scaleY?: OrFunction<undefined | number>\n  scale?: OrFunction<undefined | number>\n  alpha?: OrFunction<undefined | number>\n  gridSize?: OrFunction<undefined | number>\n  darker?: OrFunction<undefined | number>\n  pixel?: OrFunction<undefined | boolean>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n  compositeOperation?: OrFunction<undefined | GlobalCompositeOperation>\n}\n\nexport interface SpriteFastBlurOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  scaleX?: number\n  scaleY?: number\n  gridSize: undefined | number\n  darker: number\n  pixel: boolean\n  clear: boolean\n  norm: boolean\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n}\n\nexport default class FastBlur<O extends SpriteFastBlurOptions = SpriteFastBlurOptions, P extends SpriteFastBlurOptionsInternal = SpriteFastBlurOptionsInternal> extends SpriteBase<O,P> {\n  _temp_canvas: HTMLCanvasElement | undefined;\n  _currentGridSize: number | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value: SpriteFastBlurOptions['norm'], givenParameter: SpriteFastBlurOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // scalling\n      scaleX: (value: SpriteFastBlurOptions['scaleX'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteFastBlurOptions['scaleY'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      // alpha\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    });\n  }\n\n  _generateTempCanvas(additionalModifier: AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / p.scaleX!);\n      this._temp_canvas.height = Math.ceil(h / p.scaleY!);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output: OutputInfo | undefined, additionalModifier: AdditionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.p.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this.resize(undefined, additionalModifier);\n      }\n\n      const a = p.alpha * additionalModifier.alpha,\n        w = p.width!,\n        h = p.height!,\n        targetW = this._temp_canvas!.width,\n        targetH = this._temp_canvas!.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx!.globalCompositeOperation = \"copy\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (p.darker > 0) {\n          this._tctx!.globalCompositeOperation = p.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx!.fillStyle = \"rgba(0,0,0,\" + p.darker + \")\";\n          this._tctx!.fillRect(0, 0, targetW, targetH);\n        }\n\n        // @ts-ignore\n        this.additionalBlur?.(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (p.clear) {\n          context.globalCompositeOperation = \"source-over\";\n          context.globalAlpha = 1;\n          context.clearRect(p.x!, p.y!, w, h);\n        }\n        context.globalCompositeOperation = p.compositeOperation;\n        context.globalAlpha = a;\n        const oldValue = context.imageSmoothingEnabled;\n        context.imageSmoothingEnabled = !p.pixel;\n        context.drawImage(\n          this._temp_canvas!,\n          0,\n          0,\n          targetW,\n          targetH,\n          p.x!,\n          p.y!,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = oldValue;\n      }\n    } else {\n      // optional: clear screen\n      if (p.clear) {\n        if (!p.x) {\n          p.x = additionalModifier.x;\n        }\n        if (!p.y) {\n          p.y = additionalModifier.y;\n        }\n        if (!p.width) {\n          p.width = additionalModifier.width;\n        }\n        if (!p.height) {\n          p.height = additionalModifier.height;\n        }\n        context.clearRect(p.x, p.y, p.width, p.height);\n      }\n    }\n  }\n}\n","import type { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport ImageManager from \"../ImageManager\";\nimport { Position } from \"../Position\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions, SpriteCircleOptionsInternal } from \"./Circle\";\nimport { SpriteBase } from \"./Sprite\";\n\nexport interface SpriteImageOptions extends SpriteCircleOptions {\n  image: OrFunction<HTMLImageElement | string>\n  position?: OrFunction<Position>\n  frameX?: OrFunction<number>\n  frameY?: OrFunction<number>\n  frameWidth?: OrFunction<number>\n  frameHeight?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  normCover?: OrFunction<boolean>\n  normToScreen?: OrFunction<boolean>\n  clickExact?: OrFunction<boolean>\n  tint?: OrFunction<number>\n}\n\nexport interface SpriteImageOptionsInternal extends SpriteCircleOptionsInternal {\n  image: HTMLImageElement\n  position: Position\n  frameX: number\n  frameY: number\n  frameWidth: number\n  frameHeight: number\n  width: number\n  height: number\n  norm: boolean\n  normCover: boolean\n  normToScreen: boolean\n  clickExact: boolean\n  tint: number\n}\n\n// Sprite\n// Draw a Image\nclass Image extends SpriteBase<SpriteImageOptions, SpriteImageOptionsInternal> {\n  _currentTintKey: string | undefined\n  _normScale: number | undefined\n  _temp_canvas: HTMLCanvasElement | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: SpriteImageOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      // set image\n      image: (v: OrFunction<HTMLImageElement | string>) => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Position.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      width: undefined,\n      height: undefined,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n      clickExact: false,\n      color: \"_FFF\",\n      tint: 0\n    });\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    const frameWidth = p.frameWidth || p.image.width;\n    const frameHeight = p.frameHeight || p.image.height;\n\n    this._normScale = p.normToScreen\n      ? p.normCover\n        ? Math.max(\n          additionalModifier.fullScreen.width / frameWidth,\n          additionalModifier.fullScreen.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.fullScreen.width / frameWidth,\n            additionalModifier.fullScreen.height / frameHeight\n          )\n          : 1\n      : p.normCover\n        ? Math.max(\n          additionalModifier.width / frameWidth,\n          additionalModifier.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.width / frameWidth,\n            additionalModifier.height / frameHeight\n          )\n          : 1;\n  }\n\n  _tintCacheKey() {\n    const frameWidth = this.p.frameWidth || this.p.image.width;\n    const frameHeight = this.p.frameHeight || this.p.image.height;\n    return [\n      this.p.tint,\n      frameWidth,\n      frameHeight,\n      this.p.color,\n      this.p.frameX,\n      this.p.frameY\n    ].join(\";\");\n  }\n\n  _temp_context(frameWidth: number, frameHeight: number): CanvasRenderingContext2D {\n    if (!this._temp_canvas) {\n      this._temp_canvas = document.createElement(\"canvas\");\n      this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    }\n    this._temp_canvas.width = frameWidth;\n    this._temp_canvas.height = frameHeight;\n    return this._tctx!;\n  }\n\n  detectDraw(context: CanvasRenderingContext2D, color: string) {\n    const p = this.p\n    if (p.enabled && p.isClickable && p.clickExact) {\n      const frameWidth = p.frameWidth || p.image.width;\n      const frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) * this._normScale! * p.scaleX;\n      const sY =\n        (p.height ? p.height : frameHeight) *\n        this._normScale! *\n        p.scaleY;\n      const isTopLeft = p.position === Position.LEFT_TOP;\n\n      const tctx = this._temp_context(frameWidth, frameHeight);\n      tctx.globalAlpha = 1;\n      tctx.globalCompositeOperation = \"source-over\";\n      tctx.fillStyle = color;\n      tctx.fillRect(0, 0, frameWidth, frameHeight);\n      tctx.globalCompositeOperation = \"destination-atop\";\n      tctx.drawImage(\n        p.image,\n        p.frameX,\n        p.frameY,\n        frameWidth,\n        frameHeight,\n        0,\n        0,\n        frameWidth,\n        frameHeight\n      );\n\n      context.save();\n      context.translate(p.x, p.y);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(\n        this._temp_canvas!,\n        0,\n        0,\n        frameWidth,\n        frameHeight,\n        isTopLeft ? 0 : -sX / 2,\n        isTopLeft ? 0 : -sY / 2,\n        sX,\n        sY\n      );\n      context.restore();\n      this._currentTintKey = undefined;\n    }\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    if (this.p.enabled && this.p.isClickable && this.p.clickExact) return \"c\";\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.image && p.alpha > 0) {\n      const frameWidth = p.frameWidth || p.image.width,\n        frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) *\n        this._normScale! *\n        p.scaleX,\n        sY =\n          (p.height ? p.height : frameHeight) *\n          this._normScale! *\n          p.scaleY;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      const isCenter = p.position !== Position.LEFT_TOP;\n\n      let img: CanvasImageSource = p.image\n      let frameX = p.frameX\n      let frameY = p.frameY\n\n      if (p.tint) {\n        const key = this._tintCacheKey()\n        if (this._currentTintKey !== key) {\n          const tctx = this._temp_context(frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"source-over\";\n          tctx.clearRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = p.tint;\n          tctx.fillStyle = p.color;\n          tctx.fillRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"destination-atop\";\n          tctx.drawImage(\n            p.image,\n            p.frameX,\n            p.frameY,\n            frameWidth,\n            frameHeight,\n            0,\n            0,\n            frameWidth,\n            frameHeight\n          );\n          this._currentTintKey = key;\n        }\n        img = this._temp_canvas!\n        frameX = 0\n        frameY = 0\n      }\n\n      let cx = 0\n      let cy = 0\n      if (isCenter) {\n        cx = - sX / 2\n        cy = - sY / 2\n      }\n\n      if (p.rotation == 0) {\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          p.x + cx,\n          p.y + cy,\n          sX,\n          sY\n        );\n      } else {\n        context.save();\n        context.translate(p.x, p.y);\n        context.rotate(p.rotation);\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          cx,\n          cy,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Image;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nexport interface SpriteTextOptions extends SpriteCircleOptions {\n  text?: OrFunction<string|string[]>\n  font?: OrFunction<undefined|string>\n  position?: OrFunction<undefined|Position>\n  borderColor?: OrFunction<undefined|string>\n  lineWidth?:  OrFunction<undefined|number>\n}\n\nexport interface SpriteTextOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  text: string\n  font: string\n  position: Position\n  borderColor: undefined|string\n  color: undefined|string\n  lineWidth: number\n}\n\nexport default class Text extends SpriteBase<SpriteTextOptions, SpriteTextOptionsInternal> implements ISprite {\n  constructor(givenParameters:SpriteTextOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList, {\n      text: (value:SpriteTextOptions['text']) => {\n        const text = calc(value)\n        return (Array.isArray(text) ? text.join('') : text) || ''\n      },\n      font: '2em monospace',\n      position: Position.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    })\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled && this.p.isClickable) {\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.font = this.p.font;\n      context.fillStyle = color;\n      context.fillText(this.p.text, 0, 0);\n      context.restore();\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number):\"c\" {\n    return \"c\" \n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      context.font = this.p.font;\n\n      if (this.p.color) {\n        context.fillStyle = this.p.color;\n        context.fillText(this.p.text, 0, 0);\n      }\n\n      if (this.p.borderColor) {\n        context.strokeStyle = this.p.borderColor;\n        context.lineWidth = this.p.lineWidth;\n        context.strokeText(this.p.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n","import { TinyColor } from \"@ctrl/tinycolor\";\nimport { OutputInfo } from \"../Engine.js\";\nimport calc from \"../func/calc.js\";\nimport ifNull from \"../func/ifnull.js\";\nimport type { OrFunction } from \"../helper.js\";\nimport type { AdditionalModifier } from \"../Scene.js\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nexport interface SpriteParticleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\ntype TinyColorRGB = ReturnType<TinyColor['toRgb']>\n\nexport interface SpriteParticleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string | TinyColorRGB\n}\n\nclass Particle extends SpriteBase<SpriteParticleOptions, SpriteParticleOptionsInternal> {\n  _currentScaleX: number | undefined;\n  _currentPixelSmoothing: boolean = false;\n  static _Gradient: HTMLCanvasElement[][][] = [[[]]]\n\n  constructor(givenParameter: SpriteParticleOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      x: 0,\n      y: 0,\n      // scalling\n      scaleX: (value: SpriteParticleOptions['scaleX'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteParticleOptions['scaleY'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      color: '_FFF',\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    })\n  }\n\n  static getGradientImage(r: number, g: number, b: number) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      const length = 256 >> gradientResolution;\n      Particle._Gradient = Array.from({ length }, (a) =>\n        Array.from({ length }, (a) => Array.from({ length }))\n      );\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr: number, cg: number, cb: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\")!;\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._currentScaleX = undefined;\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      // faster than: if (!(this.color instanceof TinyColor && this.color.model === 'rgb')) {\n      if (!p.color || !(p.color as TinyColorRGB).r) {\n        p.color = new TinyColor(p.color).toRgb();\n      }\n      if (this._currentScaleX !== p.scaleX) {\n        this._currentScaleX = p.scaleX;\n        this._currentPixelSmoothing =\n          (p.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n          gradientSize;\n      }\n      const { r, g, b } = p.color as TinyColorRGB;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled = this._currentPixelSmoothing;\n      context.drawImage(\n        Particle.getGradientImage(r, g, b),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        p.x - p.scaleX / 2,\n        p.y - p.scaleY / 2,\n        p.scaleX,\n        p.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\n\nexport interface SpriteRectOptions extends SpriteCircleOptions {\n  position?: OrFunction<undefined | Position>\n  borderColor?: OrFunction<undefined | string>\n  lineWidth?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n}\n\nexport interface SpriteRectOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  position: Position\n  borderColor: undefined | string\n  color: undefined | string\n  lineWidth: number\n  clear: boolean\n  norm: boolean\n}\n\n\n// Sprite\n// Draw a Circle\nclass Rect extends SpriteBase<SpriteRectOptions, SpriteRectOptionsInternal> implements ISprite {\n  constructor(givenParameters: SpriteRectOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      color: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value: SpriteRectOptions[\"norm\"], givenParameter: SpriteRectOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // relative position\n      position: Position.CENTER\n    })\n  }\n\n  _normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    if (this.p.norm || this.p.width === undefined) {\n      this.p.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.p.norm || this.p.height === undefined) {\n      this.p.height = additionalModifier.visibleScreen.height;\n    }\n    if (this.p.norm || this.p.x === undefined) {\n      this.p.x = additionalModifier.visibleScreen.x;\n      if (this.p.position === Position.CENTER) {\n        this.p.x += this.p.width / 2;\n      }\n    }\n    if (this.p.norm || this.p.y === undefined) {\n      this.p.y = additionalModifier.visibleScreen.y;\n      if (this.p.position === Position.CENTER) {\n        this.p.y += this.p.height / 2;\n      }\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, this.p.position === Position.LEFT_TOP);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      if (p.rotation === 0 && p.position === Position.LEFT_TOP) {\n        if (p.clear) {\n          context.clearRect(p.x!, p.y!, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(p.x!, p.y!, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(p.x!, p.y!, p.width!, p.height!);\n          context.stroke();\n        }\n      } else {\n        let hw = p.width! / 2;\n        let hh = p.height! / 2;\n        context.save();\n        if (p.position === Position.LEFT_TOP) {\n          context.translate(p.x! + hw, p.y! + hh);\n        } else {\n          context.translate(p.x!, p.y!);\n        }\n        context.scale(p.scaleX, p.scaleY);\n        context.rotate(p.rotation);\n        if (p.clear) {\n          context.clearRect(-hw, -hh, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(-hw, -hh, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(-hw, -hh, p.width!, p.height!);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Rect;\n","import { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OrFunction } from \"../helper\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStarFieldOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  alpha?: OrFunction<number>\n  lineWidth?: OrFunction<number>\n  count?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  moveX?: OrFunction<undefined|number>\n  moveY?: OrFunction<undefined|number>\n  moveZ?: OrFunction<undefined|number>\n  highScale?: OrFunction<undefined|boolean>\n  color?: OrFunction<undefined|string>\n}\n\nexport interface SpriteStarFieldOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  alpha: number\n  count: number\n  lineWidth: number\n  compositeOperation: GlobalCompositeOperation\n  moveX: number\n  moveY: number\n  moveZ: number\n  highScale: boolean\n  color: string\n}\n\n\n\n// Sprite\n// Draw a Circle\nexport default class StarField extends SpriteBase<SpriteStarFieldOptions, SpriteStarFieldOptionsInternal> {\n  _starsX: number[] = []\n  _starsY: number[] = []\n  _starsZ: number[] = []\n  _starsOldX: number[] = []\n  _starsOldY: number[] = []\n  _starsNewX: number[] = []\n  _starsNewY: number[] = []\n  _starsEnabled: boolean[] = []\n  _starsLineWidth: number[] = []\n  _centerX: number = 0\n  _centerY: number = 0\n  _scaleZ: number = 0\n\n  constructor(givenParameters: SpriteStarFieldOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0,\n      moveY: 0,\n      moveZ: 0,\n      lineWidth: undefined,\n      highScale: true,\n      color: \"_FFF\" // here default color is white\n    });\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    p.width = p.width || additionalModifier.width;\n    p.height = p.height || additionalModifier.height;\n    p.x = p.x === undefined ? additionalModifier.x : p.x;\n    p.y = p.y === undefined ? additionalModifier.y : p.y;\n    p.lineWidth =\n      p.lineWidth ||\n      Math.min(\n        additionalModifier.height / additionalModifier.heightInPixel,\n        additionalModifier.width / additionalModifier.widthInPixel\n      ) / 2;\n    this._centerX = p.width / 2 + p.x;\n    this._centerY = p.height / 2 + p.y;\n    this._scaleZ = Math.max(p.width, p.height) / 2;\n    function clampOrRandom(val: number | undefined, min: number, max = -min) {\n      return val === undefined || val < min || val >= max\n        ? Math.random() * (max - min) + min\n        : val;\n    }\n    for (let i = 0; i < p.count; i++) {\n      this._starsX[i] = clampOrRandom(this._starsX[i], -p.width / 2);\n      this._starsY[i] = clampOrRandom(this._starsY[i], -p.height / 2);\n      this._starsZ[i] = clampOrRandom(this._starsZ[i], 0, this._scaleZ);\n    }\n  }\n\n  _moveStar(i: number, scaled_timepassed: number, firstPass: boolean) {\n    const p = this.p\n    const hw = p.width! / 2;\n    const hh = p.height! / 2;\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    let\n      x = this._starsX[i] + p.moveX * scaled_timepassed,\n      y = this._starsY[i] + p.moveY * scaled_timepassed,\n      z = this._starsZ[i] + p.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= p.x! &&\n      projectY >= p.y! &&\n      projectX < p.x! + p.width! &&\n      projectY < p.y! + p.height!;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!p.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed:number) {\n    let ret = super.animate(timepassed);\n    if (this.p.enabled && this._centerX !== undefined) {\n      let i = this.p.count;\n      while (i--) {\n        this._moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this._moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      const p = this.p\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n\n      if (p.moveY == 0 && p.moveZ == 0 && p.moveX < 0) {\n        context.fillStyle = p.color;\n        let i = p.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] -\n              (this._starsLineWidth[i] * p.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * p.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = p.color;\n        if (p.highScale) {\n          let i = p.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * p.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * p.lineWidth;\n            i = p.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import Callback from './Sprites/Callback'\nimport Canvas from './Sprites/Canvas'\nimport Circle from './Sprites/Circle'\nimport Emitter from './Sprites/Emitter'\nimport FastBlur from './Sprites/FastBlur'\nimport Group from './Sprites/Group'\nimport Image from './Sprites/Image'\nimport Text from './Sprites/Text'\nimport Particle from './Sprites/Particle'\nimport Path from './Sprites/Path'\nimport Rect from './Sprites/Rect'\nimport Scroller from './Sprites/Scroller'\nimport StackBlur from './Sprites/StackBlur'\nimport StarField from './Sprites/StarField'\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StarField\n};\n","import { AdditionalModifier } from \"../Scene.js\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\n\n\nexport type SpriteCallback = (context:CanvasRenderingContext2D, timePassed:number, additionalParameter:AdditionalModifier, sprite:ISprite) => void\n\nexport interface SpriteCallbackOptions extends SpriteBaseOptions {\n  callback?: SpriteCallback\n}\n\nexport interface SpriteCallbackOptionsInternal extends SpriteBaseOptionsInternal {\n  callback: SpriteCallback\n}\n\n\nexport default class Callback extends SpriteBase<SpriteCallbackOptions,SpriteCallbackOptionsInternal> {\n  _timePassed = 0;\n\n  constructor(givenParameter:SpriteCallbackOptions|SpriteCallbackOptions['callback']) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter } as SpriteCallbackOptions;\n    }\n    super(givenParameter as SpriteCallbackOptions);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      callback: (v:SpriteCallback|undefined) => (typeof v === undefined ? () => {} : v) as SpriteCallback\n    });\n  }\n\n  animate(timePassed:number) {\n    if (this.p.enabled) {\n      this._timePassed += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context:CanvasRenderingContext2D, additionalParameter:AdditionalModifier) {\n    if (this.p.enabled) {\n      this.p.callback(context, this._timePassed, additionalParameter, this);\n    }\n  }\n}\n","import Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n// @ts-ignore\nimport pasition from \"pasition\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\n\nexport interface SpritePathOptions extends SpriteGroupOptions {\n  path?: OrFunction<number[][][]|string|Path2D>\n  color?: OrFunction<string|undefined>\n  borderColor?: OrFunction<string|undefined>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  lineWidth?: OrFunction<number>\n  clip?: OrFunction<boolean>\n  fixed?: OrFunction<boolean>\n  polyfill?: OrFunction<boolean>\n}\n\nexport interface SpritePathOptionsInternal extends SpriteGroupOptionsInternal {\n  path:  number[][][]|string|Path2D\n  color: string|undefined\n  borderColor: string|undefined\n  compositeOperation: GlobalCompositeOperation\n  lineWidth: number\n  clip: boolean\n  fixed: boolean\n  polyfill: boolean\n}\n\nexport default class Path extends Group<SpritePathOptions,SpritePathOptionsInternal> {\n  _oldPath:number[][][]|string|Path2D|undefined;\n  _path2D:Path2D = new Path2D();\n  \n  constructor(givenParameters:SpritePathOptions) {\n    super(givenParameters);\n\n    if (this.p.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.p.polyfill = false;\n        }\n      }\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from: number[][][] | string, to: number[][][] | string): number[][][] {\n    return pasition._preprocessing(\n      typeof from === \"string\" ? pasition.path2shapes(from) : from,\n      typeof to === \"string\" ? pasition.path2shapes(to) : to\n    );\n  }\n  \n  changeToPath(progress: number, data: {\n    pathFrom: number[][][]\n    pathTo: number[][][]\n  }) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false, () => {\n      return context.isPointInPath(this._path2D, x, y);\n    });\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      const a = p.alpha * additionalModifier.alpha;\n      if (this._oldPath !== p.path) {\n        if (p.polyfill && typeof p.path === \"string\") {\n          p.path = pasition.path2shapes(p.path);\n        }\n        if (Array.isArray(p.path)) {\n          this._path2D = new Path2D();\n          p.path.forEach(curve => {\n            this._path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this._path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this._path2D.closePath();\n          });\n        } else if (p.path instanceof Path2D) {\n          this._path2D = p.path;\n        } else {\n          this._path2D = new Path2D(p.path);\n        }\n        this._oldPath = p.path;\n      }\n\n      let scaleX = p.scaleX,\n        scaleY = p.scaleY;\n\n      if (p.fixed) {\n        if (scaleX == 0) {\n          scaleX = Number.EPSILON;\n        }\n        if (scaleY == 0) {\n          scaleY = Number.EPSILON;\n        }\n      }\n\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(p.x!, p.y!);\n      context.scale(scaleX, scaleY);\n      context.rotate(p.rotation);\n\n      if (p.color) {\n        context.fillStyle = p.color;\n        context.fill(this._path2D);\n      }\n\n      context.save();\n\n      if (p.clip) {\n        context.clip(this._path2D);\n        if (p.fixed) {\n          context.rotate(-p.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-p.x!, -p.y!);\n        }\n      }\n\n      // draw all sprites\n      for (const sprite of p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (p.borderColor) {\n        context.strokeStyle = p.borderColor;\n        context.lineWidth = p.lineWidth;\n        context.stroke(this._path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc\";\nimport { OrFunction } from \"../helper\";\nimport Emitter from \"./Emitter\";\nimport Text, { SpriteTextOptions } from \"./Text\";\n\nexport interface SpriteScollerOptions extends SpriteTextOptions {\n  text: OrFunction<string|string[]>\n}\n\n\nexport default class Scroller extends Emitter<SpriteTextOptions> {\n  constructor(givenParameters:SpriteScollerOptions) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: (index:number) => characterList[index],\n        enabled: (index:number) =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled)\n      })\n    );\n  }\n}\n","import FastBlur, { SpriteFastBlurOptions, SpriteFastBlurOptionsInternal } from \"./FastBlur\";\nimport { imageDataRGBA } from \"stackblur-canvas\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStackBlurOptions extends SpriteFastBlurOptions {\n  onCanvas?: OrFunction<boolean>\n  radius?: OrFunction<undefined|number>\n  radiusPart?: OrFunction<undefined|number>\n  radiusScale?: OrFunction<boolean>\n}\n\nexport interface SpriteStackBlurOptionsInternal extends SpriteFastBlurOptionsInternal {\n  onCanvas: boolean\n  radius: undefined|number\n  radiusPart: undefined|number\n  radiusScale: boolean\n}\n\nexport default class StackBlur extends FastBlur<SpriteStackBlurOptions,SpriteStackBlurOptionsInternal> {\n  _currentRadiusPart:number|undefined\n\n    constructor(givenParameter:SpriteStackBlurOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined,\n      radiusScale: true\n    });\n  }\n\n  normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm && p.onCanvas) {\n      p.x = 0;\n      p.y = 0;\n      p.width = additionalModifier.widthInPixel;\n      p.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    super.resize(output, additionalModifier);\n    if (this.p.radiusPart) {\n      this.p.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW:number, targetH:number, additionalModifier:AdditionalModifier) {\n    const imageData = this._tctx!.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius || 1);\n    this._tctx!.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (\n        p.radius === undefined ||\n        this._currentRadiusPart !== p.radiusPart\n      ) {\n        p.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            p.radiusPart!\n        );\n        this._currentRadiusPart = p.radiusPart!;\n      }\n      const radius = Math.round(\n        p.radius! *\n          ((p.radiusScale &&\n            additionalModifier.cam) ? additionalModifier.cam.zoom : 1) /\n              additionalModifier.scaleCanvas)\n      ;\n      if (radius) {\n        if (p.onCanvas) {\n          if (p.width === undefined || p.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(p.x!);\n          const y = Math.round(p.y!);\n          const w = Math.round(p.width!);\n          const h = Math.round(p.height!);\n          const imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport type TAnimationCallbackCallback = (sprite:ISprite, time:number, firstRun:boolean) => ReturnType<IAnimation['run']>\n\nexport default class Callback implements IAnimation{\n    _callback: TAnimationCallbackCallback\n    _duration: number|undefined\n    _initialized: boolean = false\n\n    constructor(callback: TAnimationCallbackCallback, duration?:number) {\n      this._callback = callback;\n      this._duration = ifNull(calc(duration), undefined);\n    }\n\n    reset() {\n      this._initialized = false;\n    }\n\n    run(sprite:ISprite, time:number) {\n      let result;\n\n      if (this._duration !== undefined) {\n        this._callback(sprite, Math.min(time, this._duration), !this._initialized);\n        this._initialized = true;\n        return time - this._duration;\n      } else {\n        result = this._callback(sprite, time, !this._initialized);\n        this._initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nimport type { IAnimation } from \"./Animation\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nconst degToRad = Math.PI / 180;\n\nfunction moveDefault(progress: number, data: IAlgorithmData) {\n  return data.from! as number + progress * data.delta!;\n}\n\nfunction moveStatic(progress: number, data: IAlgorithmData) {\n  return progress >= 0.5 ? data.to : data.from!;\n}\n\nfunction moveBezier(progress: number, data: IAlgorithmData) {\n  var copy = [...data.values!],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress: number, data: IAlgorithmData) {\n  return data.colorFrom!.mix(data.colorTo!, progress * 100).toString();\n}\n\nfunction movePath(progress: number, { pathFrom, pathTo }: IAlgorithmData, sprite?: ISprite) {\n  return sprite!.changeToPath!(progress, { pathFrom: pathFrom!, pathTo: pathTo! });\n}\n\nexport type TProperty = number | string\nexport type TBezier = number[]\nexport type TChangeFunction = ((from?: number | undefined) => number) | ((from?: string | undefined) => string)\nexport type TChangeValue = TProperty | TBezier | TChangeFunction\nexport interface IChangeValueMeta {\n  name: string\n  to: TProperty\n  bezier?: TBezier\n  isColor: boolean\n  isPath: boolean\n  isStatic: boolean\n  isFunction?: TChangeFunction,\n  moveAlgorithm: TAlgorithm\n}\nexport type TAlgorithm = (progress: number, data: IAlgorithmData, sprite?: ISprite) => TProperty | number[][][]\nexport interface IAlgorithmData extends IChangeValueMeta {\n  from?: TProperty\n  delta?: number\n  values?: TBezier\n  pathFrom?: number[][][]\n  pathTo?: number[][][]\n  colorFrom?: TinyColor\n  colorTo?: TinyColor\n}\n\n// to values of a object\nexport default class ChangeTo implements IAnimation {\n  _initialized = false\n  _changeValues: IChangeValueMeta[]\n  _duration: number\n  _ease: (t: number) => number\n  constructor(changeValues: Record<string, TChangeValue>, duration: number, ease: (t: number) => number) {\n    this._changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? (orgValue as number) * degToRad : orgValue;\n      const isColor = k === \"color\" || k === \"borderColor\";\n      const isPath = k === \"path\";\n      const isStatic = k === \"text\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n            ? [\"rotation\"]\n            : [k];\n      for (const name of names) {\n        this._changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value) as TProperty,\n          bezier: isBezier ? value : undefined,\n          isColor,\n          isPath,\n          isStatic,\n          isFunction: isFunction ? value : undefined,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n              ? movePath\n              : isBezier\n                ? moveBezier\n                : isStatic\n                  ? moveStatic\n                  : moveDefault\n        });\n      }\n    }\n    this._duration = ifNull(calc(duration), 0);\n    this._ease = ifNull(ease, (t: number) => t);\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  _init(sprite: ISprite, time: number) {\n    let l = this._changeValues.length\n    while (l--) {\n      const data: IAlgorithmData = this._changeValues[l];\n      // @ts-ignore\n      const from = sprite[data.name] as unknown as TProperty\n      if (data.isFunction) {\n        data.from = from;\n        // @ts-ignore\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = new TinyColor(data.from);\n          data.colorTo = new TinyColor(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n            data.from as string,\n            data.to as string\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [from as number, ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else if (!data.isStatic) {\n          data.delta = data.to as number - (data.from as number);\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        //\n        data.colorFrom = new TinyColor(from as string);\n        data.colorTo = new TinyColor(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n          from as string,\n          data.to as string\n        );\n      } else if (data.bezier) {\n        data.values = [from as number, ...data.bezier];\n      } else {\n        data.from = from as number;\n        data.delta = data.to as number - data.from;\n      }\n    }\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._init(sprite, time);\n    }\n\n    // return time left\n    if (this._duration <= time) {\n      let l = this._changeValues.length;\n      let data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this._changeValues.length;\n      let data;\n      const progress = this._ease(time / this._duration);\n\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this._duration;\n  }\n}\n","import { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Forever implements IAnimation {\n  _Aniobject:Sequence\n\n  constructor(...Aniobject: IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    return this._Aniobject.play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport type { OrFunction } from '../helper.js';\nimport type { ISprite } from '../Sprites/Sprite.js';\n\nexport default class Shake {\n  _initialized = false\n  _duration: number\n  _shakeDiff: number\n  _shakeDiffHalf: number\n  _x: number = 0\n  _y: number = 0\n\n  constructor(shakediff: OrFunction<number>, duration: OrFunction<number>) {\n    this._duration = calc(duration);\n    this._shakeDiff = calc(shakediff);\n    this._shakeDiffHalf = this._shakeDiff / 2;\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._x = sprite.p.x;\n      this._y = sprite.p.y;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      // prevent round errors\n      sprite.p.x = this._x;\n      sprite.p.y = this._y;\n    } else {\n      // shake sprite\n      sprite.p.x = this._x + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n      sprite.p.y = this._y + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n    }\n    return time - this._duration;\n  }\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class ShowOnce implements IAnimation {\n    _showOnce:boolean = true\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = sprite.p.enabled && this._showOnce;\n        this._showOnce = false;\n        return 0;\n    }\n}","import { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\nimport Sequence from './Sequence';\n\nclass State implements IAnimation {\n  _states: Record<string, Sequence | State>\n  _transitions: Record<string, Sequence | State>\n  _currentStateName: string | undefined\n  _currentState: Sequence | State | undefined\n  _isTransitioningToStateName: string | undefined = undefined\n\n  constructor({\n    states = {},\n    transitions = {},\n    defaultState\n  }: {\n    states?: Record<string, IAnimation[] | Sequence>\n    transitions?: Record<string, IAnimation[] | Sequence>\n    defaultState: string\n  }) {\n    // save possible states\n    this._states = Object.fromEntries(Object.entries(states).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ))\n\n    // save transitions\n    this._transitions = Object.fromEntries(Object.entries(transitions).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ));\n    // set start state\n    this._currentStateName = defaultState;\n    this._currentState = this._states[defaultState];\n  }\n\n  setState(name:string) {\n    if (name !== this._currentStateName) {\n      this._isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this._currentStateName}To${UCFirstName}`,\n        `${this._currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => name in this._transitions\n      );\n      if (transitionName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._transitions[transitionName];\n        (this._currentState as Sequence)?.reset?.();\n      } else {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0):boolean|undefined {\n    return this._currentState?.play?.(label, timelapsed);\n  }\n\n  run(sprite: ISprite, time: number, is_difference?: boolean) {\n    let timeLeft:ReturnType<IAnimation['run']> = time;\n    let isDifference = is_difference;\n    if (this._currentState) {\n      timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this._currentState) {\n      if (this._isTransitioningToStateName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n        timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this._currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Callback from './Animations/Callback'\nimport ChangeTo from './Animations/ChangeTo'\nimport End from './Animations/End'\nimport EndDisabled from './Animations/EndDisabled'\nimport Forever from './Animations/Forever'\nimport If from './Animations/If'\nimport Image from './Animations/Image'\nimport ImageFrame from './Animations/ImageFrame'\nimport Loop from './Animations/Loop'\nimport Remove from './Animations/Remove'\nimport Sequence from './Animations/Sequence'\nimport Once from './Animations/Once'\nimport Shake from './Animations/Shake'\nimport ShowOnce from './Animations/ShowOnce'\nimport State from './Animations/State'\nimport Stop from './Animations/Stop'\nimport StopDisabled from './Animations/StopDisabled'\nimport Wait from './Animations/Wait'\nimport WaitDisabled from './Animations/WaitDisabled'\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation {\n\tconstructor() {\n\t}\n\n\trun(sprite: ISprite, time: number) {\n\t\treturn SequenceRunCommand.FORCE_DISABLE;\n\t};\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.FORCE_DISABLE;\n    };\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport type { TAnimationFunction } from \"./Sequence\";\n\nexport default class If implements IAnimation {\n  _ifCallback: OrFunction<boolean>\n  _Aniobject: IAnimation|TAnimationFunction\n  _AniobjectElse: IAnimation|TAnimationFunction\n\n  constructor(ifCallback:OrFunction<boolean>, Aniobject:IAnimation|TAnimationFunction, AniobjectElse:IAnimation|TAnimationFunction) {\n    this._ifCallback = ifCallback;\n    this._Aniobject = Aniobject;\n    this._AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    return (this._Aniobject as IAnimation).play?.(label, timelapsed) || (this._AniobjectElse as IAnimation).play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number) {\n    const AniObject = calc(this._ifCallback)\n      ? this._Aniobject\n      : this._AniobjectElse;\n    return (AniObject as IAnimation).run\n      ?  (AniObject as IAnimation).run(sprite, time)\n      :  (AniObject as TAnimationFunction)(sprite, time);\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport { OrFunction } from '../helper';\nimport ImageManager from '../ImageManager';\nimport { ISprite } from '../Sprites/Sprite';\n\nexport default class Image {\n  _initialized: boolean = false\n  _image: (HTMLImageElement | string)[]\n  _count: number\n  _durationBetweenFrames: number\n  _duration: number\n  _current:number = -1\n\n  constructor(image: OrFunction<HTMLImageElement | string | (HTMLImageElement | string)[]>, durationBetweenFrames: OrFunction<number>) {\n    const imageCalced = calc(image);\n    this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(imageCalced)) {\n      this._image = imageCalced\n      this._count = imageCalced.length;\n    } else {\n      this._image = [imageCalced];\n      this._count = 1;\n    }\n    this._duration = this._count * this._durationBetweenFrames;\n  }\n\n  reset() {\n    this._initialized = false;\n  };\n\n  run(sprite: ISprite, time:number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._current = -1;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      sprite.p.image = ImageManager.getImage(this._image[this._image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this._durationBetweenFrames);\n      if (currentFrame !== this._current) {\n        this._current = currentFrame;\n        sprite.p.image = ImageManager.getImage(this._image[this._current]);\n      }\n    }\n    return time - this._duration;\n  }\n}","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { OrFunction } from '../helper';\nimport { ISprite } from '../Sprites/Sprite';\nimport { IAnimation } from './Animation';\n\nexport default class ImageFrame implements IAnimation{\n    _frameNumber: number[]\n    _durationBetweenFrames: number\n    _duration: number\n    _framesToRight: boolean\n\n    constructor(frameNumber: OrFunction<number | number[]>, framesToRight: OrFunction<boolean>, durationBetweenFrames: OrFunction<number>) {\n        const frameNumberCalc = calc(frameNumber);\n        this._framesToRight = ifNull(calc(framesToRight), true);\n        this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        this._frameNumber = Array.isArray(frameNumberCalc) ? frameNumberCalc : [frameNumberCalc];\n\n        this._duration = this._frameNumber.length * this._durationBetweenFrames;\n    }\n\n    run(sprite: ISprite, time:number) {\n        let currentFrame = 0;\n        if (time >= this._duration) {\n            currentFrame = this._frameNumber[this._frameNumber.length - 1];\n        } else {\n            currentFrame = this._frameNumber[Math.floor(time / this._durationBetweenFrames)];\n        }\n        if (this._framesToRight) {\n            sprite.p.frameX = sprite.p.frameWidth! * currentFrame;\n        } else {\n            sprite.p.frameY = sprite.p.frameHeight! * currentFrame;\n        }\n\n        return time - this._duration;\n    }\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Loop implements IAnimation {\n  _Aniobject: Sequence\n  _times:number\n  _timesOrg:number\n\n  constructor(times:number, ...Aniobject:IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this._times = this._timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    const b = this._Aniobject.play?.(label, timelapsed);\n    if (b) {\n      this._times = this._timesOrg;\n    }\n    return b\n  }\n\n  run(sprite: ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0 && this._times > 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._times--;\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\n\nexport default class Once implements IAnimation {\n  _Aniobject: IAnimation\n  _times: number\n\n  constructor(Aniobject: IAnimation, times: number) {\n    this._Aniobject = Aniobject;\n    this._times = ifNull(calc(times), 1);\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (this._times <= 0) {\n      return time;\n    }\n    else {\n      let t = this._Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this._times--;\n      }\n      return t;\n    }\n  };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class Remove implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.REMOVE;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class End implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.STOP;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.STOP;\n    };\n}","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class WaitDisabled implements IAnimation {\n  duration:number\n\n  constructor(duration:OrFunction<number>) {\n    this.duration = ifNull(calc(duration), 0);\n  }\n\n  run(sprite:ISprite, time:number) {\n    // return time left\n    sprite.p.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import Transform from \"../func/transform\";\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime, RectPosition } from \"../Scene\";\n\nexport interface CameraPosition {\n  zoom: number\n  x: number\n  y: number\n}\n\nexport default class Camera implements ConfigurationObject {\n  type = \"camera\"\n  cam: CameraPosition\n  constructor(config: Partial<CameraPosition> = {}) {\n    this.type = \"camera\";\n    this.cam = Object.assign({\n      zoom: 1,\n      x: 0,\n      y: 0,\n    }, config);\n  }\n\n  viewport({ }:ParameterListWithoutTime, matrix: Transform) {\n    return matrix\n      .scale(this.cam.zoom, this.cam.zoom)\n      .translate(-this.cam.x, -this.cam.y);\n  }\n\n  viewportByCam({ engine }: ParameterListWithoutTime, cam: CameraPosition) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  additionalModifier({ }, additionalModifier: AdditionalModifier) {\n    additionalModifier.cam = Object.assign({}, this.cam);\n    return additionalModifier;\n  }\n\n  clampView(params: ParameterListWithoutTime & { clampLimits?: RectPosition }, cam: CameraPosition) {\n    const { engine, scene, clampLimits } = params\n    const cl = clampLimits || {\n      x1: scene.additionalModifier.x,\n      y1: scene.additionalModifier.y,\n      x2: scene.additionalModifier.x + scene.additionalModifier.width,\n      y2: scene.additionalModifier.y + scene.additionalModifier.height,\n    };\n    const invert = this.viewportByCam(params, cam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      engine.getWidth(),\n      engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= cl.x2 - cl.x1) {\n      if (x1 < cl.x1) {\n        if (x2 <= cl.x2) {\n          cam.x += cl.x1 - x1;\n        }\n      } else {\n        if (x2 > cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > cl.x1) {\n        cam.x += cl.x1 - x1;\n      } else {\n        if (x2 < cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= cl.y2 - cl.y1) {\n      if (y1 < cl.y1) {\n        if (y2 <= cl.y2) {\n          cam.y += cl.y1 - y1;\n        }\n      } else {\n        if (y2 > cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > cl.y1) {\n        cam.y += cl.y1 - y1;\n      } else {\n        if (y2 < cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    }\n    return cam;\n  }\n\n  set zoom(value) {\n    this.cam.zoom = value;\n  }\n\n  set camX(v) {\n    this.cam.x = v;\n  }\n\n  set camY(v) {\n    this.cam.y = v;\n  }\n\n  get zoom() {\n    return this.cam.zoom;\n  }\n\n  get camX() {\n    return this.cam.x;\n  }\n\n  get camY() {\n    return this.cam.y;\n  }\n\n  zoomToFullScreen({ scene }: ParameterListWithoutTime) {\n    return Math.min(\n      scene.additionalModifier.fullScreen.width /\n      scene.additionalModifier.width,\n      scene.additionalModifier.fullScreen.height /\n      scene.additionalModifier.height\n    );\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition & {cam? : CameraPosition}) {\n    const { scene, engine, cam, x1, y1, x2, y2 } = params\n    const scale = scene.additionalModifier.scaleCanvas;\n    const invert = this.viewportByCam(params, cam || this.cam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      engine.getWidth() * scale,\n      engine.getHeight() * scale\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    const ret = {\n      x: mx,\n      y: my,\n      zoom: (cam || this.cam).zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE),\n    };\n    if (cam) {\n      cam.x = ret.x;\n      cam.y = ret.y;\n      cam.zoom = ret.zoom;\n    } else {\n      this.cam = ret;\n    }\n  }\n}\n","import type Scene from \"../Scene\";\nimport type { ConfigurationObject, ParameterList, ParameterListFixedUpdate, ParameterListInitDestroy, ParameterListPositionEvent, ParameterListWithoutTime, RectPosition } from \"../Scene\";\nimport type { CameraPosition } from \"./Camera\";\n\nexport interface MiddlewareCameraControlOptions {\n  zoomMax: number\n  zoomMin: number\n  zoomFactor: number\n  tween: number\n  callResize: boolean\n}\n\nconst clickTime = 300;\nexport default class CameraControl implements ConfigurationObject {\n  type = \"control\"\n  _mousePos: Record<number, {\n    x: number\n    y: number\n    _cx: number\n    _cy: number\n    _isDown: boolean\n    _numOfFingers: number\n    _distance: undefined | number\n    _timestamp: number\n    _czoom: undefined | number\n  }> = {}\n  toCam: CameraPosition = {\n    zoom: 1,\n    x: 0,\n    y: 0\n  }\n  _config: MiddlewareCameraControlOptions\n  _scene: Scene | undefined\n  _instant: boolean = false\n\n  constructor(config: Partial<MiddlewareCameraControlOptions> = {}) {\n    this._config = Object.assign(\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        callResize: true,\n      },\n      config\n    );\n  }\n\n  init({ scene }: ParameterListInitDestroy) {\n    this._scene = scene\n    this.toCam = Object.assign({}, scene.camera.cam);\n  }\n\n  mouseDown({ event: e, position: [mx, my], button: i }: ParameterListPositionEvent) {\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e as TouchEvent).touches?.length || 1,\n      _distance: undefined,\n      _timestamp: Date.now(),\n    });\n  }\n\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      !(\n        (\n          Date.now() - this._mousePos[i]._timestamp < clickTime &&\n          Math.abs(this._mousePos[i].x - mx) < 5 &&\n          Math.abs(this._mousePos[i].y - my) < 5 &&\n          i === 1\n        ) // i === 0\n      )\n    ) {\n      scene.stopPropagation();\n    }\n  }\n\n  mouseOut({ button: i }: ParameterListPositionEvent) {\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n        (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      const viewMatrix = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert();\n      const [ox, oy] = viewMatrix.transformPoint(\n        this._mousePos[i].x * scale,\n        this._mousePos[i].y * scale\n      );\n      const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n      this.toCam.x = this._mousePos[i]._cx + ox - nx;\n      this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    }\n  }\n\n  mouseWheel({ event: e, position: [mx, my], scene }: ParameterListPositionEvent) {\n    const scale = scene.additionalModifier.scaleCanvas;\n    const [ox, oy] = scene.camera\n      .viewportByCam(arguments[0], this.toCam)\n      .invert()\n      .transformPoint(mx * scale, my * scale);\n    // @ts-ignore\n    const wheelData = (e as WheelEvent).wheelDelta || (e as WheelEvent).deltaY * -1;\n    if (wheelData / 120 > 0) {\n      this.zoomIn();\n      const [nx, ny] = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert()\n        .transformPoint(mx * scale, my * scale);\n      this.toCam.x -= nx - ox;\n      this.toCam.y -= ny - oy;\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    } else {\n      this.zoomOut(arguments[0]);\n    }\n  }\n\n  hasCamChanged() {\n    const t = this._config.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this._scene!.camera.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this._scene!.camera.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this._scene!.camera.cam.zoom) >=\n      Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate({ scene, lastCall }: ParameterListFixedUpdate) {\n    if (this._config.tween && !this._instant && this.hasCamChanged()) {\n      scene.camera.cam.x +=\n        (this.toCam.x - scene.camera.cam.x) / this._config.tween;\n      scene.camera.cam.y +=\n        (this.toCam.y - scene.camera.cam.y) / this._config.tween;\n      scene.camera.cam.zoom +=\n        (this.toCam.zoom - scene.camera.cam.zoom) / this._config.tween;\n      if (lastCall) {\n        scene.additionalModifier.cam = scene.camera.cam;\n        if (this._config.callResize) {\n          scene.resize();\n        } else {\n          scene.cacheClear();\n        }\n      }\n    }\n  }\n\n  update({ scene }: ParameterList) {\n    if ((!this._config.tween || this._instant) && this.hasCamChanged()) {\n      this._instant = false;\n      scene.camera.cam = Object.assign({}, this.toCam);\n      if (this._config.callResize) {\n        scene.resize();\n      } else {\n        scene.cacheClear();\n      }\n    }\n  }\n\n  camInstant() {\n    this._instant = true;\n  }\n\n  resize(args: ParameterListWithoutTime& { clampLimits?: RectPosition }) {\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n  }\n\n  zoomToNorm() {\n    this.toCam.zoom = 1;\n    return this;\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this._config.zoomMax,\n      this.toCam.zoom * this._config.zoomFactor\n    );\n    return this;\n  }\n  zoomOut(args: ParameterListWithoutTime & { clampLimits?: RectPosition }) {\n    this.toCam.zoom = Math.max(\n      this._config.zoomMin,\n      this.toCam.zoom / this._config.zoomFactor\n    );\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n    return this;\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition) {\n    params.scene.camera.zoomTo(Object.assign(\n      params, {cam:this.toCam}\n    ));\n  }\n}\n","import Scene, { ConfigurationObject, ElementClickInfo, ParameterListCanvas, ParameterListClickElement, ParameterListClickNonElement, ParameterListPositionEvent } from \"../Scene\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nexport interface MiddlewareElementOptions {\n  doubleClickDetectInterval?: number\n}\n\ninterface MousePosition {\n  mx: number\n  my: number\n}\n\nexport default class Element implements ConfigurationObject {\n  _clickIntend: MousePosition | undefined = undefined;\n  _hoverIntend: MousePosition | undefined = undefined;\n  _hasDetectImage: boolean = false;\n  _doubleClickElementTimer: number | undefined = undefined;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  isDrawFrame() {\n    return this._hasDetectImage ? 1 : 0;\n  }\n\n  _dispatchEvent(scene: Scene, isClick: boolean, param: ParameterListClickElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickElement\")) {\n        if (this._doubleClickElementTimer) {\n          window.clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClickElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"clickElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickElement\", param);\n      }\n    } else {\n      scene.map(\"hoverElement\", param);\n    }\n  }\n\n  _dispatchNonEvent(scene: Scene, isClick: boolean, param: ParameterListClickNonElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickNonElement\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = undefined;\n          scene.map(\"doubleClickNonElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = undefined;\n            scene.map(\"clickNonElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickNonElement\", param);\n      }\n    } else {\n      scene.map(\"hoverNonElement\", param);\n    }\n  }\n\n  initSprites(params: ParameterListCanvas) {\n    const { scene, output, layerManager, canvasId } = params\n    this._hasDetectImage = false;\n    if (this._clickIntend || this._hoverIntend) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[canvasId || 0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n\n      ctx.save();\n      ctx.setTransform(...scene.viewport().m);\n      let found: ElementClickInfo | undefined | \"c\" = undefined;\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const a = (element as ISprite).detect(ctx, cx, cy);\n          if (a === \"c\") {\n            found = \"c\";\n          } else if (a) {\n            found = { layerId, element: a, elementId };\n            return false;\n          }\n        }\n      });\n      ctx.restore();\n\n      if (found === \"c\") {\n        this._hasDetectImage = true;\n      } else {\n        this._clickIntend = undefined;\n        this._hoverIntend = undefined;\n        const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n          mx,\n          my,\n          x,\n          y,\n        }, params) as ParameterListClickNonElement;\n        if (found) {\n          Object.assign(param, found as ElementClickInfo);\n          this._dispatchEvent(scene, isClick, param);\n        } else {\n          this._dispatchNonEvent(scene, isClick, param);\n        }\n      }\n    }\n  }\n\n  draw(params: ParameterListCanvas) {\n    const { engine, scene, layerManager, output, canvasId } = params;\n    if (!canvasId && this._hasDetectImage) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n      const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n        mx,\n        my,\n        x,\n        y,\n      }, params) as ParameterListClickNonElement;\n\n      const oldISE = ctx.imageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = false;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.save();\n\n      ctx.setTransform(...scene.viewport().m);\n\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const color = `rgb(${elementId & 0xff}, ${(elementId & 0xff00) >> 8\n            }, ${layerId & 0xff})`;\n          (element as ISprite).detectDraw(ctx, color);\n        }\n      }, 0);\n      ctx.restore();\n      ctx.imageSmoothingEnabled = oldISE;\n      engine.normContext(ctx);\n\n      this._clickIntend = undefined;\n      this._hoverIntend = undefined;\n\n      const p = ctx.getImageData(cx, cy, 1, 1).data;\n      if (p[3]) {\n        Object.assign(param, {\n          layerId: p[2],\n          elementId: p[0] + (p[1] << 8),\n          element: layerManager\n            .getById(param.layerId)\n            .getById(param.elementId)  \n        })\n        this._dispatchEvent(scene, isClick, param);\n      } else {\n        this._dispatchNonEvent(scene, isClick, param);\n      }\n    }\n  }\n\n  mouseUp({ scene, position: [mx, my], button }:ParameterListPositionEvent) {\n    this._clickIntend = button === 1 && scene.has(\"clickElement\") ? { mx, my } : undefined;\n  }\n\n  mouseMove({ scene, position: [mx, my] }:ParameterListPositionEvent) {\n    this._hoverIntend = scene.has(\"hoverElement\") ? { mx, my } : undefined;\n  }\n}\n","import ifNull from '../func/ifnull'\nimport type { ValueOf } from '../helper';\nimport type { ConfigurationObject, EventsReturn, ParameterList, ParameterListInitDestroy, ParameterListWithoutTime } from '../Scene';\nimport Scene from '../Scene';\n\nexport default class Events implements ConfigurationObject {\n  type = \"events\"\n\n  _events: {\n    n: HTMLElement,\n    e: keyof HTMLElementEventMap\n    f: (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any\n  }[] = []\n\n  _pushEvent(command: \"mouseDown\" | \"mouseUp\" | \"mouseOut\" | \"mouseMove\" | \"mouseWheel\", event: Event | TouchEvent | MouseEvent, scene: Scene) {\n    if (ifNull<boolean>(scene.value(\"preventDefault\"), true)) {\n      event.preventDefault();\n    }\n    const [mx, my] = this.getMousePosition({ event });\n    const [x, y] = scene.transformPoint(mx, my);\n    scene.pipeBack(command, {\n      event,\n      position: [mx, my],\n      x,\n      y,\n      button: this.getMouseButton({ event }),\n    });\n  }\n\n  events({ scene }: ParameterListInitDestroy) {\n    return [\n      scene.has(\"mouseDown\") && [\n        [\"touchstart\", \"mousedown\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseDown\", event, scene),\n      ],\n      scene.has(\"mouseUp\") && [\n        [\"touchend\", \"mouseup\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseUp\", event, scene),\n      ],\n      scene.has(\"mouseOut\") && [\n        [\"touchendoutside\", \"mouseout\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseOut\", event, scene),\n      ],\n      scene.has(\"mouseMove\") && [\n        [\"touchmove\", \"mousemove\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseMove\", event, scene),\n      ],\n      scene.has(\"mouseWheel\") && [\n        [\"wheel\"],\n        (event: Event) => this._pushEvent(\"mouseWheel\", event, scene),\n      ],\n      (ifNull(scene.value<\"preventDefault\", boolean>(\"preventDefault\"), true)) && [\n        [\"contextmenu\"],\n        (e: Event) => e.preventDefault(),\n      ],\n    ].filter((v) => v) as EventsReturn\n  }\n\n  init({ output, scene }: ParameterListInitDestroy) {\n    const element = output.canvas[0];\n\n    const events: (keyof HTMLElementEventMap | [keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[][] = scene.map(\"events\", {});\n\n    this._events = events\n      .filter(Array.isArray)\n      // flat(1)\n      .reduce((acc, cur) => {\n        acc.push.apply(acc, cur);\n        return acc;\n      }, [])\n      // convert strings to call to function with the same name\n      .map(cur =>\n        Array.isArray(cur) ? cur : [[cur], (event: ValueOf<HTMLElementEventMap>) => {\n          if (ifNull(scene.value(\"preventDefault\"), true)) event.preventDefault();\n          scene.pipeBack(cur, { event });\n        }]\n      )\n      .map(([events, func]) =>\n        events.map((e: keyof HTMLElementEventMap) => ({\n          n: element,\n          e: e,\n          f: func,\n        }))\n      )\n      // workaround for .flat(1) for edge\n      .reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          acc.push.apply(acc, cur);\n        } else {\n          acc.push(cur);\n        }\n        return acc;\n      }, []);\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f, true);\n    });\n  }\n\n  destroy() {\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f, true);\n    });\n    this._events = [];\n  }\n\n  getMousePosition({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    let touches;\n    if ((e as TouchEvent).touches && (e as TouchEvent).touches.length > 0) {\n      touches = (e as TouchEvent).targetTouches;\n    } else if ((e as TouchEvent).changedTouches && (e as TouchEvent).changedTouches.length > 0) {\n      touches = (e as TouchEvent).changedTouches;\n    }\n    if (touches) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top,\n      ];\n    }\n    if ((e as MouseEvent).offsetX === undefined) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      return [(e as MouseEvent).clientX - rect.left, (e as MouseEvent).clientY - rect.top];\n    }\n    return [(e as MouseEvent).offsetX, (e as MouseEvent).offsetY];\n  }\n\n  getMouseButton({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    return (\n      (e as TouchEvent).touches\n        ? ((e as TouchEvent).touches.length || (e as TouchEvent).changedTouches.length)\n        : ifNull((e as MouseEvent).buttons\n          ? (e as MouseEvent).buttons\n          : [0, 1, 4, 2][(e as MouseEvent).which], 1)\n    );\n  }\n}\n","import Callback from \"./Middleware/Camera\";\nimport Camera from \"./Middleware/Camera\";\nimport CameraControl from \"./Middleware/CameraControl\";\nimport CameraControlSecondButton from \"./Middleware/CameraControlSecondButton\";\nimport Click from \"./Middleware/Click\";\nimport Element from \"./Middleware/Element\";\nimport Event from \"./Middleware/Event\";\nimport LoadingScreen from \"./Middleware/LoadingScreen\";\nimport Norm from \"./Middleware/Norm\";\nimport TimingAudio from \"./Middleware/TimingAudio\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\n\nexport default {\n  Callback,\n  Camera,\n  CameraControl,\n  CameraControlSecondButton,\n  Click,\n  Element,\n  Event,\n  LoadingScreen,\n  Norm,\n  TimingAudio,\n  TimingDefault,\n};\n","import { ParameterListPositionEvent } from \"../Scene.js\";\nimport CameraControl from \"./CameraControl.js\";\nconst clickTime = 300;\n\nexport default class CameraControlSecondButton extends CameraControl {\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      (Date.now() - this._mousePos[i]._timestamp > clickTime ||\n        Math.abs(this._mousePos[i].x - mx) >= 5 ||\n        Math.abs(this._mousePos[i].y - my) >= 5) &&\n        i === 1\n    ) {\n      scene.stopPropagation();\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"region\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n          (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      if (i === 2) {\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n    }\n\n    if (\n      i === 1 &&\n      scene.has(\"regionMove\") &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!(e as TouchEvent).touches || (e as TouchEvent).touches.length === 1)\n    ) {\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"regionMove\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListPositionEvent } from \"../Scene\";\nimport type { MiddlewareElementOptions } from \"./Element\";\n\nexport default class Click implements ConfigurationObject{\n  _doubleClickElementTimer: undefined|number;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  mouseUp(param:ParameterListPositionEvent) {\n    const { scene, button } = param;\n    if (button === 1) {\n      if (scene.has(\"doubleClick\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClick\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"click\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"click\", param);\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListLoading } from \"../Scene\";\n\nexport default class LoadingScreen implements ConfigurationObject {\n  loading({ output, progress }: ParameterListLoading) {\n    const ctx = output.context[0];\n    const isNumber = typeof progress === \"number\"\n    const loadedHeight =\n      isNumber\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"_aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"_fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNumber\n        ? \"Loading \" + Math.round(100 * progress) + \"%\"\n        : progress,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n}\n","import Transform from '../func/transform'\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime } from '../Scene';\n\nexport default class Norm implements ConfigurationObject {\n  viewport({ engine }: ParameterListWithoutTime, matrix: Transform) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return matrix.translate(hw, hh).scale(scale, scale);\n  }\n\n  additionalModifier({ engine, output, scene }: ParameterListWithoutTime):AdditionalModifier {\n    scene.cacheClear();\n\n    const [x1, y1] = scene.transformPoint(0, 0, 1);\n    const [x2, y2] = scene.transformPoint(output.width, output.height, 1);\n\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    const transformInvert = new Transform().translate(hw, hh).scale(scale, scale).invert();\n    const [sx1, sy1] = transformInvert.transformPoint(0, 0);\n    const [sx2, sy2] = transformInvert.transformPoint(\n      output.width,\n      output.height\n    );\n\n    return {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth,\n      visibleScreen: {\n        x: x1,\n        y: y1,\n        width: x2 - x1,\n        height: y2 - y1,\n      },\n      fullScreen: {\n        x: sx1,\n        y: sy1,\n        width: sx2 - sx1,\n        height: sy2 - sy1,\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterList, ParameterListInitDestroy } from \"../Scene\";\nimport TimingDefault, { MiddlewareTimingDefaultOptions } from \"./TimingDefault\";\n\nexport interface MiddlewareTimingAudioOptions extends MiddlewareTimingDefaultOptions {\n  audioElement: HTMLMediaElement\n}\n\nexport default class TimingAudio extends TimingDefault implements ConfigurationObject {\n  _maxSkippedTickChunk: number = Number.POSITIVE_INFINITY\n  _audioStartTime: number | undefined = undefined\n  _audioPosition: number | undefined = undefined\n  _enableAndroidHack: boolean = false\n  _audioElement: HTMLMediaElement & {\n    controller?: Record<string,any>\n  }\n\n  constructor(configuration: MiddlewareTimingAudioOptions) {\n    super({\n      ...configuration,\n      maxSkippedTickChunk: Number.POSITIVE_INFINITY\n    });\n    this._audioElement = configuration.audioElement;\n  }\n\n  get audioElement() {\n    return this._audioElement;\n  }\n\n  init(_params: ParameterListInitDestroy) {\n    if (this._audioElement) {\n      // Android hack\n      // @ts-ignore\n      if (typeof MediaController === \"function\") {\n        // @ts-ignore\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      return new Promise((resolve) => {\n        let canplaythrough = () => {\n          this._audioElement.removeEventListener(\n            \"canplaythrough\",\n            canplaythrough\n          );\n          let playPromise = this._audioElement.play();\n          if (playPromise) {\n            playPromise.catch((e) => { });\n          }\n          resolve(undefined);\n        };\n        this._audioElement.addEventListener(\"canplaythrough\", canplaythrough);\n        this._audioElement.load();\n      });\n    }\n  }\n\n  endTime() {\n    return this._audioElement ? this._audioElement.duration * 1000 : Number.POSITIVE_INFINITY;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      if (this._audioElement.ended && this._audioElement.duration) {\n        return this._audioElement.duration * 1000;\n      }\n      const currentAudioTime = this._audioElement.currentTime * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === undefined) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller!.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition! < 500 &&\n              currentAudioTime > this._audioPosition! &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition!);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    return timePassed;\n  }\n\n  shiftTime() {\n    return 0;\n  }\n}\n"],"names":["calc","c","slice","call","arguments","toArray","value","Array","isArray","_settle","pact","state","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_events","_classPrivateFieldLooseKey","_scene","_newScene","_sceneParameter","_isSceneInitialized","_recalculateCanvasIntend","_lastTimestamp","_referenceRequestAnimationFrame","_autoSize","_canvasCount","_drawFrame","_reduceFramerate","_realLastTimestamp","_isOddFrame","_initializedStartTime","_promiseSceneDestroying","_runParameter","_moveOnce","ImageManager$1","constructor","Images","count","loaded","Object","defineProperty","_resolve","writable","add","Callbacks","undefined","self","key","imageSrc","window","Image","onload","isLoaded","_classPrivateFieldLooseBase","forEach","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","test","onerror","img","crossOrigin","reset","getImage","nameOrImage","isLoadedPromise","Promise","resolve","reject","push","_layer","_isFunction","_start","_nextFree","_canvasIds","canvasIds","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","length","id","len","nextFree","concat","k","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","Math","min","isCanvasId","canvasId","includes","layerId","index","l","isFunction","layer","getElementsByTag","tag","_ref","ans","play","label","timelapsed","_ref2","clear","_layers","addLayer","Layer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","i","Transform","m","__constuct","multiply","matrix","m12","dy","m21","m22","dx","invert","d","m4","m5","m1","m2","m3","rotate","rad","cos","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","alternative","TimingDefault","configuration","totalTimePassed","_configuration","ifNull","tickChunk","_maxSkippedTickChunk","maxSkippedTickChunk","tickChunkTolerance","init","_params","currentTime","performance","now","Date","clampTime","timePassed","_tickChunk","maxTime","shiftTime","isChunked","hasOneChunkedFrame","_ref3","_tickChunkTolerance","calcFrames","_ref4","floor","_iteratorSymbol","Symbol","iterator","defaultMiddlewareCommandList","_all","isDrawFrame","initSprites","fixedUpdate","update","draw","destroy","resize","additionalModifier","_classPrivateFieldLoo","_engine","getOutput","additionalParameter","assign","engine","scene","imageManager","_imageManager","layerManager","_layerManager","output","SequenceRunCommand","Wait","duration","_duration","run","sprite","time","_runSequence","Sequence","sequences","lastTimestamp","enabled","timeWait","shift","sequence","thisTimeWait","position","command","filter","reduce","arr","keys","sequencePosition","b","_sequencePosition$seq2","some","seq","is_difference","disableVote","Infinity","timeLeft","restTime","res","FORCE_DISABLE","STOP","REMOVE","_sequencePosition$seq3","givenParameter","_needInit","p","_parseParameterList","_getParameterList","parameterList","entries","name","givenValue","fromEntries","valueEntries","_getBaseParameterList","animation","isClickable","animate","timepassed","_this$p$animation$pla","_this$p$animation","context","callInit","_detectHelperCallback","save","scaleX","scaleY","rotation","beginPath","a","restore","_detectHelper","coordinateX","coordinateY","moveToCenter","width","height","hw","hh","rect","closePath","isPointInPath","detectDraw","color","detect","PI","CircleParameterList","rotationInRadian","rotationInDegree","degToRad","alpha","compositeOperation","Group","super","finished","spriteFinished","w","widthInPixel","h","heightInPixel","document","createElement","canvasWidth","canvasHeight","gridSize","_temp_canvas","round","_currentGridSize","_tctx","getContext","norm","visibleScreen","oldTempCanvas","globalCompositeOperation","drawImage","Emitter","classToEmit","class","parameter","Position","FastBlur","SpriteBase","darker","pixel","_generateTempCanvas","ceil","globalAlpha","normalizeFullScreen","targetW","targetH","_this$additionalBlur","canvas","fillStyle","fillRect","additionalBlur","clearRect","oldValue","imageSmoothingEnabled","tint","frameWidth","image","frameHeight","frameX","frameY","join","Text","givenParameters","text","font","CENTER","borderColor","lineWidth","textAlign","textBaseline","fillText","strokeStyle","strokeText","Particle","static","r","g","rIndex","cr","cg","cb","_Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","_currentScaleX","TinyColor","toRgb","_currentPixelSmoothing","getGradientImage","_normalizeFullScreen","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","_centerX","_centerY","_scaleZ","_moveStar","scaled_timepassed","firstPass","moveX","moveY","z","moveZ","random","projectX","projectY","lw","highScale","Sprites","Callback","_timePassed","Canvas","_copyCanvas","_copyCanvas2","_normalizeFullScreen2","_generateTempCanvas2","max","wh","tw","th","cam","zoom","scaleCanvas","fullScreen","Circle","arc","fill","_temp_context","_temp_context2","_tintCacheKey","_tintCacheKey2","_currentTintKey","_normScale","ImageManager","normCover","normToScreen","clickExact","sX","isTopLeft","LEFT_TOP","tctx","sY","isCenter","cx","cy","Path","Path2D","polyfill","getElementsByTagName","script","head","appendChild","ctx","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","progress","_lerp","pathFrom","pathTo","_oldPath","_path2D","curve","moveTo","points","bezierCurveTo","Number","EPSILON","Rect","Scroller","characterList","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","radiusScale","imageDataRGBA","imageData","putImageData","StarField","_moveStar2","clampOrRandom","val","ret","lineTo","_callback","_initialized","moveDefault","delta","moveStatic","moveBezier","copy","values","copyLength","colorFrom","mix","colorTo","toString","isColor","moveAlgorithm","moveColor","isPath","movePath","isStatic","bezier","_Aniobject","_shakeDiff","_shakeDiffHalf","_x","_y","_showOnce","_states","_transitions","_currentStateName","_currentState","_isTransitioningToStateName","Animations","ChangeTo","changeValues","ease","_init","_init2","_changeValues","_ease","orgValue","isBezier","names","t","End","EndDisabled","Forever","Aniobject","_classPrivateFieldLoo2","_classPrivateFieldLoo3","_classPrivateFieldLoo4","isDifference","_classPrivateFieldLoo5","_classPrivateFieldLoo6","If","ifCallback","AniobjectElse","_ifCallback","_AniobjectElse","AniObject","durationBetweenFrames","_image","_count","_durationBetweenFrames","_current","imageCalced","currentFrame","ImageFrame","frameNumber","framesToRight","_frameNumber","_framesToRight","frameNumberCalc","Loop","times","_times","_timesOrg","Once","Remove","Shake","shakediff","ShowOnce","State","states","transitions","defaultState","setState","charAt","toUpperCase","transitionName","UCFirstName","find","Stop","StopDisabled","WaitDisabled","Camera","config","viewport","viewportByCam","getWidth","getHeight","getRatio","clampView","params","clampLimits","cl","x1","y1","x2","y2","camY","camX","zoomToFullScreen","zoomTo","sx1","sy1","sx2","sy2","MIN_VALUE","CameraControl","_mousePos","toCam","_config","_instant","zoomMax","zoomMin","zoomFactor","tween","callResize","camera","mouseDown","_e$touches","event","mx","my","button","_cx","_cy","_isDown","_numOfFingers","touches","_distance","_timestamp","mouseUp","_e$changedTouches","numCurrentFingers","changedTouches","down","numOfFingers","stopPropagation","abs","mouseOut","mouseMove","_ref5","which","_e$touches2","distance","sqrt","pageX","pageY","_czoom","viewMatrix","ox","oy","nx","ny","mouseWheel","_ref6","wheelDelta","deltaY","zoomIn","zoomOut","hasCamChanged","_ref7","lastCall","cacheClear","camInstant","args","zoomToNorm","isClick","param","has","_doubleClickElementTimer","clearTimeout","setTimeout","_doubleClickDetectInterval","_pushEvent","preventDefault","getMousePosition","pipeBack","getMouseButton","Middleware","CameraControlSecondButton","fromX","fromY","toX","toY","Click","doubleClickDetectInterval","_temp","Element","_dispatchNonEvent","_dispatchNonEvent2","_dispatchEvent","_dispatchEvent2","_clickIntend","_hoverIntend","_hasDetectImage","found","setTransform","oldISE","normContext","Event","_pushEvent2","events","acc","cur","apply","func","f","addEventListener","removeEventListener","targetTouches","target","getBoundingClientRect","sum","left","top","offsetX","clientX","clientY","offsetY","buttons","LoadingScreen","loading","isNumber","loadedHeight","Norm","transformInvert","clientWidth","TimingAudio","POSITIVE_INFINITY","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","audioElement","MediaController","controller","preload","canplaythrough","playPromise","catch","load","endTime","ended","currentAudioTime","playbackState","canvasOrOptions","_output","givenOptions","Error","ratio","options","autoSize","defaultAutoSizeSettings","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","recalculateCanvas","handleVisibilityChange","_recalculateCanvas","clickToPlayAudio","playAudioOfScene","reduceFramerate","switchScene","sceneParameter","visibilityState","timing","style","recalculateFPS","cancelAnimationFrame","requestAnimationFrame","_temp2","timeBetweenFrames","_now","start","offsetTimeTarget","offsetTimeDelta","_mainLoop","body","shouldContinue","stage","_resumeAfterTest","_resumeAfterBody","_for","timestamp","isRecalculatedCanvas","destroyParameterForNewScene","moveFrame","nowAutoSize","drawFrame","move","deltaTimestamp","deltaFrame","targetTime","callLoading","runParameter","_this2","stop","_temp4","_temp3","_this3","_temp5","_this4","_transform","_transformInvert","_additionalModifier","_initDone","_endTime","_resetIntend","LayerManager","middlewares","middlewareByType","configurationClassOrObject","middlewareCommandList","objs","_middleware","do","defaultValue","fullParams","pipe","_stopPropagation","pipeMax","newRes","pipeAsync","_interrupt","check","step","_cycle","next","done","return","_fixup","TypeError","array","_forTo","_c$command","_param","images","all","updateAdditionalModifier","t_timing","t_camera","control","t_control","_totalTimePassed","frames","calcFrame","resetIntend","layers"],"mappings":"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"}