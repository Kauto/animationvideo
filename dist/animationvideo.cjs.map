{"version":3,"file":"animationvideo.cjs","sources":["../src/func/calc.ts","../src/func/toArray.ts","../src/Engine.ts","../src/ImageManager.ts","../src/Layer.ts","../src/LayerManager.ts","../src/func/transform.ts","../src/func/ifnull.ts","../src/Middleware/TimingDefault.ts","../src/Scene.ts","../src/Animations/Wait.ts","../src/Animations/Sequence.ts","../src/Sprites/Sprite.ts","../src/Sprites/Circle.ts","../src/Sprites/Group.ts","../src/Sprites/Emitter.ts","../src/Sprites/FastBlur.ts","../src/Position.ts","../src/Sprites/Text.ts","../src/Sprites/Particle.ts","../src/Sprites.ts","../src/Sprites/Callback.ts","../src/Sprites/Canvas.ts","../src/Sprites/Image.ts","../src/Sprites/Path.ts","../src/Sprites/Rect.ts","../src/Sprites/Scroller.ts","../src/Sprites/StackBlur.ts","../src/Sprites/StarField.ts","../src/Animations/ChangeTo.ts","../src/Animations.ts","../src/Animations/Callback.ts","../src/Animations/End.ts","../src/Animations/EndDisabled.ts","../src/Animations/Forever.ts","../src/Animations/If.ts","../src/Animations/Image.ts","../src/Animations/ImageFrame.ts","../src/Animations/Loop.ts","../src/Animations/Once.ts","../src/Animations/Remove.ts","../src/Animations/Shake.ts","../src/Animations/ShowOnce.ts","../src/Animations/State.ts","../src/Animations/Stop.ts","../src/Animations/StopDisabled.ts","../src/Animations/WaitDisabled.ts","../src/Middleware/Camera.ts","../src/Middleware/CameraControl.ts","../src/Middleware.ts","../src/Middleware/CameraControlSecondButton.ts","../src/Middleware/Click.ts","../src/Middleware/Element.ts","../src/Middleware/Event.ts","../src/Middleware/LoadingScreen.ts","../src/Middleware/Norm.ts","../src/Middleware/TimingAudio.ts"],"sourcesContent":["export type WithoutFunction<R> = R extends Function ? never : R\n\nexport default function calc<\n  T = unknown,\n  FunctionParamsType extends any[] = any[],\n  >(\n    c: T | ((...params: FunctionParamsType) => T),\n    ...params: FunctionParamsType): T {\n  return typeof c === \"function\" ? (c as ((...params: FunctionParamsType) => T))(...params) : c;\n}\n","export default function toArray<T>(value:T|T[]):T[]\t{\n\treturn (value === undefined || value === null ? [] : Array.isArray(value) ? value : [value]);\n}","import calc from \"./func/calc.js\";\nimport toArray from \"./func/toArray.js\";\nimport type TimingAudio from \"./Middleware/TimingAudio.js\";\nimport type Scene from './Scene'\n\nexport interface EngineOptions {\n  canvas: HTMLCanvasElement\n  scene?: null | Scene\n  sceneParameter?: Record<any, any>\n  autoSize?: AutoSizeSettings|boolean\n  clickToPlayAudio?: boolean\n  reduceFramerate?: boolean\n}\n\nexport interface AutoSizeSettings {\n  enabled: boolean\n  scaleLimitMin: number\n  scaleLimitMax: number\n  scaleFactor: number\n  referenceWidth: () => number\n  referenceHeight: () => number\n  currentScale: number\n  waitTime: number\n  currentWaitedTime: number\n  currentOffsetTime: number\n  offsetTimeLimitUp: number\n  offsetTimeLimitDown: number\n  registerResizeEvents: boolean\n  registerVisibilityEvents: boolean\n  setCanvasStyle: boolean\n  offsetTimeTarget?: number\n  offsetTimeDelta?: number\n}\n\ninterface EventSafe {\n  n: HTMLElement | Window & typeof globalThis | Document\n  e: string\n  f: EventListenerOrEventListenerObject,\n}\n\nexport interface OutputInfo {\n  canvas: HTMLCanvasElement[],\n  context: CanvasRenderingContext2D[],\n  width: number,\n  height: number,\n  ratio: number,\n}\n\n\nclass Engine {\n  _output: OutputInfo\n  _events: EventSafe[]\n  _scene: null | Scene | undefined\n  _newScene: undefined | null | Scene\n  _sceneParameter: undefined | Record<any, any>\n  _isSceneInitialized: boolean\n  _recalculateCanvasIntend: boolean\n  _lastTimestamp: number\n  _referenceRequestAnimationFrame: number | undefined\n  _autoSize: undefined | AutoSizeSettings\n  _canvasCount: number\n  _drawFrame: number[]\n  _reduceFramerate: boolean\n  _realLastTimestamp: number | undefined\n  _isOddFrame: boolean = false\n  _initializedStartTime: number | undefined\n  _promiseSceneDestroying: Promise<any> | undefined\n  _runParameter: undefined | Record<any, any>\n  _moveOnce: boolean = false\n\n  constructor(canvasOrOptions: HTMLCanvasElement | EngineOptions) {\n    let givenOptions: EngineOptions = canvasOrOptions as EngineOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if ((canvasOrOptions as HTMLCanvasElement).getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions as HTMLCanvasElement,\n      };\n    } else if (!(canvasOrOptions as EngineOptions).canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options: EngineOptions = Object.assign(\n      {},\n      givenOptions\n    );\n\n    this._output = {\n      canvas: [],\n      context: [],\n      width: 0,\n      height: 0,\n      ratio: 1,\n    };\n\n    // list of binded events\n    this._events = [];\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    // this._newScene = undefined;\n    // this._promiseSceneDestroying = undefined;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = undefined;\n\n    // data about the output canvas\n    this._output.canvas = toArray(options.canvas);\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings: AutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 2.5,\n        scaleFactor: 1.07,\n        referenceWidth: () => this._output.canvas[0].clientWidth,\n        referenceHeight: () => this._output.canvas[0].clientHeight,\n        currentScale: 1,\n        waitTime: 100,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        // undefined will be autodetect timing\n        // offsetTimeTarget: 25,\n        // offsetTimeDelta: 10,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false,\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        this._events = [\"resize\", \"orientationchange\"].map((e) => ({\n          n: window,\n          e: e,\n          f: this.recalculateCanvas.bind(this),\n        }));\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        this._events.push({\n          n: document,\n          e: \"visibilitychange\",\n          f: this.handleVisibilityChange.bind(this),\n        });\n      }\n      this._recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas[0].width;\n      this._output.height = this._output.canvas[0].height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.canvas.forEach((canvas, index) => {\n      this._output.context[index] = canvas.getContext(\"2d\")!;\n    });\n    this._canvasCount = this._output.canvas.length;\n    this._drawFrame = Array.from({ length: this._canvasCount }, (v) => 0);\n\n    if (options.clickToPlayAudio) {\n      this._events.push({\n        n: this._output.canvas[0],\n        e: \"click\",\n        f: this.playAudioOfScene.bind(this),\n      });\n    }\n\n    this._reduceFramerate = !!options.reduceFramerate;\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f);\n    });\n\n    this.switchScene(options.scene, options.sceneParameter || {});\n  }\n\n  handleVisibilityChange() {\n    if (this._autoSize) this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (\n      this._isSceneInitialized &&\n      this._scene &&\n      (this._scene.timing as TimingAudio).audioElement\n    ) {\n      (this._scene.timing as TimingAudio).audioElement!.play();\n    }\n  }\n\n  normContext(ctx: CanvasRenderingContext2D) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  getOutput() {\n    return this._output;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc<number>(this._autoSize.referenceWidth);\n      const height = calc<number>(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.forEach((canvas) => {\n        canvas.width = Math.round(width / this._autoSize!.currentScale);\n        canvas.height = Math.round(height / this._autoSize!.currentScale);\n        if (this._autoSize!.setCanvasStyle) {\n          canvas.style.width = `${width}px`;\n          canvas.style.height = `${height}px`;\n        }\n      });\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas[0].width;\n    this._output.height = this._output.canvas[0].height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  async recalculateFPS() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n      this._referenceRequestAnimationFrame = undefined;\n    }\n    await new Promise((resolve) => requestAnimationFrame(resolve));\n    const start = this._now();\n    const count = 3;\n    for (let i = count; i--;) {\n      await new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n\n    const timeBetweenFrames = (this._now() - start) / count;\n    this._autoSize!.offsetTimeTarget = timeBetweenFrames;\n    this._autoSize!.offsetTimeDelta = timeBetweenFrames / 3;\n\n    if (this._referenceRequestAnimationFrame === undefined) {\n      this._realLastTimestamp = undefined;\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        this._mainLoop.bind(this)\n      );\n    }\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize();\n    }\n    return this;\n  }\n\n  switchScene(scene: Scene | null | undefined, sceneParameter: undefined | Record<any, any> = undefined) {\n    if (scene) {\n      this._newScene = scene;\n      this._sceneParameter = sceneParameter;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  _mainLoop(timestamp:number) {\n    if (!this._referenceRequestAnimationFrame) return;\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    let isRecalculatedCanvas =\n      this._recalculateCanvasIntend &&\n      (!this._reduceFramerate || !this._isOddFrame);\n\n    if (isRecalculatedCanvas) {\n      this._recalculateCanvas();\n      this._recalculateCanvasIntend = false;\n    }\n\n    for (let i = 0; i < this._canvasCount; i++) {\n      this._drawFrame[i] = Math.max(\n        this._drawFrame[i] - 1,\n        isRecalculatedCanvas ? 1 : 0\n      );\n    }\n\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n    }\n    if (!this._initializedStartTime) {\n      this._initializedStartTime = timestamp;\n    }\n\n    if (this._newScene && !this._promiseSceneDestroying) {\n      this._promiseSceneDestroying = Promise.resolve(\n        this._scene ? this._scene.destroy() : undefined\n      );\n      this._promiseSceneDestroying.then((destroyParameterForNewScene) => {\n        this._newScene!.callInit(\n          {\n            run: this._runParameter,\n            scene: this._sceneParameter,\n            destroy: destroyParameterForNewScene,\n          },\n          this\n        );\n        this._scene = this._newScene;\n        this._newScene = undefined;\n        this._promiseSceneDestroying = undefined;\n        this._isSceneInitialized = false;\n        this._lastTimestamp = this._scene!.currentTime();\n        this._initializedStartTime = timestamp;\n      });\n    }\n\n    if (this._scene) {\n      let moveFrame = false;\n      const nowAutoSize = this._now();\n\n      if (this._reduceFramerate) {\n        this._isOddFrame = !this._isOddFrame;\n      }\n\n      if (!this._reduceFramerate || this._isOddFrame) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(timePassed);\n        timePassed = timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          moveFrame = timePassed !== 0 || this._moveOnce;\n          this._moveOnce = false;\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              const ctx = this._output.context[index];\n              this.normContext(ctx);\n              this._scene.initSprites(index);\n              //this.normContext(ctx);\n            }\n          }\n\n          const drawFrame = this._scene.isDrawFrame(timePassed);\n          if (Array.isArray(drawFrame)) {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(\n                this._drawFrame[i],\n                drawFrame[i],\n                0\n              );\n            }\n          } else {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame, 0);\n            }\n          }\n\n          if (moveFrame) {\n            this._scene.move(timePassed);\n          }\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              if (this._drawFrame[index]) {\n                this._scene.draw(index);\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < this._canvasCount; i++) {\n            this.normContext(this._output.context[i]);\n          }\n          this._isSceneInitialized = this._scene.callLoading({\n            timePassed: timestamp - this._realLastTimestamp,\n            totalTimePassed: timestamp - this._initializedStartTime,\n          });\n          if (this._isSceneInitialized) {\n            this._scene.reset();\n            this._lastTimestamp = this._scene.currentTime();\n            this._moveOnce = true;\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      } \n\n      if (this._isSceneInitialized && this._autoSize && this._autoSize.enabled) {\n        const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n        if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n          this._autoSize.currentWaitedTime += deltaTimestamp;\n        } else if (moveFrame) {\n          const targetTime =\n            this._autoSize.offsetTimeTarget! *\n            (this._reduceFramerate ? 2 : 1);\n          const deltaFrame = this._now() - nowAutoSize;\n          const delta =\n            (Math.abs(deltaTimestamp - targetTime) >\n              Math.abs(deltaFrame - targetTime)\n              ? deltaTimestamp\n              : deltaFrame) - targetTime;\n\n          if (Math.abs(delta) <= this._autoSize.offsetTimeDelta!) {\n            this._autoSize.currentOffsetTime =\n              this._autoSize.currentOffsetTime >= 0\n                ? Math.max(\n                  0,\n                  this._autoSize.currentOffsetTime -\n                  this._autoSize.offsetTimeDelta!\n                )\n                : Math.min(\n                  0,\n                  this._autoSize.currentOffsetTime +\n                  this._autoSize.offsetTimeDelta!\n                );\n          } else {\n            if (\n              delta < 0 &&\n              this._autoSize.currentScale > this._autoSize.scaleLimitMin\n            ) {\n              this._autoSize.currentOffsetTime += delta;\n              if (\n                this._autoSize.currentOffsetTime <=\n                -this._autoSize.offsetTimeLimitDown\n              ) {\n                this._autoSize.currentScale = Math.max(\n                  this._autoSize.scaleLimitMin,\n                  this._autoSize.currentScale / this._autoSize.scaleFactor\n                );\n                this._recalculateCanvasIntend = true;\n              }\n            } else if (\n              delta > 0 &&\n              this._autoSize.currentScale < this._autoSize.scaleLimitMax\n            ) {\n              this._autoSize.currentOffsetTime += delta;\n              if (\n                this._autoSize.currentOffsetTime >=\n                this._autoSize.offsetTimeLimitUp\n              ) {\n                this._autoSize.currentScale = Math.min(\n                  this._autoSize.scaleLimitMax,\n                  this._autoSize.currentScale * this._autoSize.scaleFactor\n                );\n                this._recalculateCanvasIntend = true;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this._realLastTimestamp = timestamp;\n  }\n\n  async run(runParameter?: Record<any, any>) {\n    this._runParameter = runParameter || {};\n\n    await this.stop();\n\n    this._realLastTimestamp = this._initializedStartTime = undefined;\n\n    if (this._autoSize && !this._autoSize.offsetTimeTarget) {\n      await this.recalculateFPS();\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  async stop() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    }\n    this._referenceRequestAnimationFrame = undefined;\n    this._scene && (await this._scene.destroy());\n  }\n\n  async destroy() {\n    await this.stop();\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f);\n    });\n    this._events = [];\n\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  Images:Record<string, HTMLImageElement>\n  count: number\n  loaded: number\n  _resolve: ((value:unknown)=>void)[] = []\n\n  constructor() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n  }\n\n  add<\n  F extends (key:string, image:HTMLImageElement)=>void\n  >(\n    Images: string[]|Record<string,string>, \n    Callbacks: undefined|(()=>void)|F[]|Record<string,F> = undefined\n    ) {\n    const self = this;\n    for (const key in Images) {\n      if (!self.Images[key]) {\n        const imageSrc = (Images as Record<string,string>)[key];\n        self.Images[key] = new window.Image();\n        self.Images[key].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n            (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n          }\n          if (self._resolve && self.isLoaded()) {\n            self._resolve.forEach(c => c(undefined));\n            self._resolve = [];\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[key].crossOrigin = \"anonymous\";\n        if (imageSrc.substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL;\n          const svg = new window.Blob([imageSrc], { type: \"image/svg+xml\" });\n          self.Images[key].src = DOMURL.createObjectURL(svg);\n        } else {\n          if (/^(https?:)?\\/\\//.test(imageSrc)) {\n            self.Images[key].onerror = () => {\n              // load again without crossOrigin\n              const img = new window.Image();\n              img.onload = self.Images[key].onload;\n              self.Images[key] = img;\n              self.Images[key].src = imageSrc;\n            };\n            self.Images[key].crossOrigin = \"anonymous\";\n          }\n          self.Images[key].src = imageSrc;\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n          (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self._resolve && self.isLoaded()) {\n      self._resolve.forEach(c => c(undefined));\n      self._resolve = [];\n    }\n    return self;\n  }\n\n  reset() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n    return this;\n  }\n\n  isLoaded() {\n    return this.loaded === this.count;\n  }\n\n  getImage(nameOrImage:HTMLImageElement|string) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : this.Images[nameOrImage];\n  }\n\n  isLoadedPromise() {\n    return this.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          this._resolve.push(resolve);\n        });\n  }\n}\n\nexport default new ImageManager();\n","import type { ISpriteFunctionOrSprite, ISprite, TTagParameter } from './Sprites/Sprite'\n\nexport interface LayerCallbackData {\n  elementId: number\n  layerId: number\n  element: ISpriteFunctionOrSprite\n  isFunction: boolean\n  layer: Layer\n}\nexport type LayerCallback = (data: LayerCallbackData) => void | boolean\n\nclass Layer {\n  _layer: (undefined | ISpriteFunctionOrSprite)[]\n  _isFunction: (undefined | boolean)[]\n  _start: number\n  _nextFree: number\n  _canvasIds: number[]\n\n  constructor(canvasIds: undefined | number | number[]) {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n    this._canvasIds =\n      canvasIds === undefined\n        ? []\n        : Array.isArray(canvasIds)\n          ? canvasIds\n          : [canvasIds];\n  }\n\n  addElement(element: ISpriteFunctionOrSprite) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element: ISpriteFunctionOrSprite) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId: number) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element: ISpriteFunctionOrSprite) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element: ISpriteFunctionOrSprite) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId: number) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = undefined;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else if (this._layer[elementId]) {\n      this._layer[elementId] = undefined;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  isCanvasId(canvasId: number|undefined) {\n    return (\n      canvasId === undefined ||\n      !this._canvasIds.length ||\n      this._canvasIds.includes(canvasId)\n    );\n  }\n\n  forEach(callback: LayerCallback, layerId: number = 0) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        if (callback({\n          elementId: index,\n          layerId,\n          element,\n          isFunction: this._isFunction[index]!,\n          layer: this\n        }) === false) {\n          return;\n        }\n      }\n    }\n  }\n\n  getElementsByTag(tag: TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  play(label: string = \"\", timelapsed: number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer\";\nimport type { LayerCallback } from \"./Layer\"\nimport type { ISprite, TTagParameter } from './Sprites/Sprite'\n\n\nclass LayerManager {\n  _layers: Layer[]\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer(canvasIds));\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer(canvasIds))\n    );\n    return result;\n  }\n\n  getById(layerId: number) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback: LayerCallback, canvasId?: number|undefined) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      if (this._layers[i].isCanvasId(canvasId)) {\n        this._layers[i].forEach(callback, i)\n      }\n    }\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  getElementsByTag(tag:TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\n\nexport default class Transform {\n  m: [number, number, number, number, number, number] = [1, 0, 0, 1, 0, 0];\n\n  __constuct() {\n    this.reset()\n  }\n\n  reset() {\n    this.m = [1, 0, 0, 1, 0, 0];\n    return this;\n  }\n\n  multiply(matrix: Transform) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  };\n\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  };\n\n  rotate(rad: number) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  };\n\n  translate(x: number, y: number) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  };\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  };\n\n  transformPoint(px: number, py: number):[number, number] {\n    const x = px;\n    const y = py;\n    px = x * this.m[0] + y * this.m[2] + this.m[4];\n    py = x * this.m[1] + y * this.m[3] + this.m[5];\n    return [px, py];\n  };\n\n  clone() {\n    const n = new Transform();\n    n.m = this.m.slice(0) as [number, number, number, number, number, number];\n    return n;\n  }\n}","export default function ifNull<T>(value:T|null|undefined, alternative:T):T\t{\n\t//@ts-ignore\n\treturn (value === undefined || value === null || value === \"\" ? alternative : value);\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ConfigurationObject, ParameterList, ParameterListWithoutTime } from \"../Scene\";\n\n\nexport interface MiddlewareTimingDefaultOptions {\n  tickChunk?: OrFunction<number>\n  maxSkippedTickChunk?: OrFunction<number | undefined>\n  tickChunkTolerance?: OrFunction<number | undefined>\n}\n\nexport default class TimingDefault implements ConfigurationObject {\n  _configuration: MiddlewareTimingDefaultOptions\n  _tickChunk: number\n  _maxSkippedTickChunk: number\n  _tickChunkTolerance: number\n\n  type = \"timing\"\n  totalTimePassed = 0\n\n  constructor(configuration: MiddlewareTimingDefaultOptions = {}) {\n    this._configuration = configuration;\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 1000 / 60)\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  init(_params: ParameterListWithoutTime) { }\n\n  currentTime() {\n    return window.performance ? window.performance.now() : Date.now();\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    return timePassed > maxTime ? maxTime : timePassed\n  }\n\n  shiftTime({ timePassed }: ParameterList) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  get tickChunk() {\n    return this._tickChunk;\n  }\n\n  isChunked() {\n    return !!this._tickChunk;\n  }\n\n  hasOneChunkedFrame({ timePassed }: ParameterList) {\n    return timePassed >= this._tickChunk - this._tickChunkTolerance;\n  }\n\n  calcFrames({ timePassed }: ParameterList) {\n    return Math.min(\n      this._maxSkippedTickChunk,\n      Math.floor((timePassed + this._tickChunkTolerance) / this._tickChunk)\n    );\n  }\n}\n","import ImageManager from \"./ImageManager\";\nimport LayerManager from \"./LayerManager\";\nimport { WithoutFunction } from \"./func/calc\";\nimport toArray from \"./func/toArray\";\nimport Transform from \"./func/transform\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\nimport { OutputInfo } from \"./Engine\";\nimport type Engine from \"./Engine\";\nimport type { ISprite, ISpriteFunction, ISpriteFunctionOrSprite } from \"./Sprites/Sprite\";\nimport type { addPrefix, OrFunction, OrPromise, ValueOf } from \"./helper\";\nimport type Camera from \"./Middleware/Camera\";\nimport type { CameraPosition } from \"./Middleware/Camera\";\nimport type CameraControl from \"./Middleware/CameraControl\";\nimport type TimingAudio from \"./Middleware/TimingAudio\";\n\nexport interface RectPosition {\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n}\n\nexport interface ParameterListWithoutTime {\n  engine: Engine\n  scene: Scene\n  imageManager: typeof ImageManager\n  layerManager: LayerManager\n  totalTimePassed: number\n  output: OutputInfo\n}\n\nexport interface ParameterList extends ParameterListWithoutTime { \n  timePassed: number \n}\n\nexport interface ParameterListFixedUpdate extends ParameterList { \n  lastCall: boolean\n}\n\nexport interface ParameterListCanvas extends ParameterListWithoutTime { \n  canvasId: undefined|number\n}\n\nexport interface ParameterListLoading extends ParameterList {\n    timePassed: number\n    totalTimePassed: number\n    progress: string | number\n}\n\nexport interface ParameterListInitDestroy extends ParameterList {\n  parameter: any\n}\n\nexport interface ElementClickInfo {\n  layerId: number\n  element: ISprite\n  elementId: number\n}\n\nexport interface ElementPositionInfo {\n  mx: number\n  my: number\n  x: number\n  y: number\n}\n\nexport type ParameterListClickElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport type ParameterListClickNonElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport interface ParameterListPositionEvent extends ParameterListWithoutTime {\n  event: Event | MouseEvent | TouchEvent\n  position: [number, number]\n  x:number\n  y:number\n  button: number\n}\n\nexport type EventsReturn = (keyof HTMLElementEventMap|[keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[]\n\nexport interface ConfigurationObject extends Record<string, any> {\n  init?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  destroy?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  enabled?: boolean\n  type?: string\n  images?: OrFunction<string[] | Record<string, string>>\n  endTime?: OrFunction<number>\n  loading?: (params: ParameterListLoading) => void\n  viewport?: (params: ParameterListWithoutTime, matrix:Transform) => Transform\n  currentTime?: (params: ParameterListWithoutTime) => number\n  clampTime?: (params: ParameterList) => number\n  shiftTime?: (params: ParameterList) => number\n  isDrawFrame?: (params: ParameterList) => number|number[]\n  isChunked?: OrFunction<boolean>\n  additionalModifier?: (params: ParameterListWithoutTime, additionalModifier: AdditionalModifier) => AdditionalModifier\n  calcFrames?: OrFunction<number, [ParameterList]>\n  tickChunk?: OrFunction<number, [ParameterListWithoutTime]>\n  fixedUpdate?: (params: ParameterListFixedUpdate) => void\n  draw?: (params: ParameterListCanvas) => void\n  update?: (params: ParameterList) => void\n  reset?: (params: ParameterListWithoutTime, layerManager: LayerManager| ISpriteFunctionOrSprite[][]) => LayerManager | ISpriteFunctionOrSprite[][]\n  preventDefault?: OrFunction<boolean>,\n  events?: OrFunction<EventsReturn, [ParameterListInitDestroy]>\n  initSprites?: (params: ParameterListCanvas) => void\n  doubleClickElement?: (params: ParameterListClickElement) => void\n  clickElement?: (params: ParameterListClickElement) => void\n  hoverElement?: (params: ParameterListClickElement) => void\n  doubleClickNonElement?: (params: ParameterListClickNonElement) => void\n  clickNonElement?: (params: ParameterListClickNonElement) => void\n  hoverNonElement?: (params: ParameterListClickNonElement) => void\n  mouseDown?: (params: ParameterListPositionEvent) => void\n  mouseUp?: (params: ParameterListPositionEvent) => void\n  mouseOut?: (params: ParameterListPositionEvent) => void\n  mouseMove?: (params: ParameterListPositionEvent) => void\n  mouseWheel?: (params: ParameterListPositionEvent) => void\n  doubleClick?: (params: ParameterListPositionEvent) => void\n  click?: (params: ParameterListPositionEvent) => void\n}\n\nexport interface ConfigurationConstructor {\n  new (options?: Record<string, any>): ConfigurationObject\n}\n\nexport type ConfigurationClassOrObject = ConfigurationObject | ConfigurationConstructor\n\ntype MiddlewareCommandList<T = ConfigurationObject> = {\n  _all: T[],\n  init: T[],\n  isDrawFrame: T[],\n  initSprites: T[],\n  fixedUpdate: T[],\n  update: T[],\n  draw: T[],\n  destroy: T[],\n  reset: T[],\n  resize: T[],\n  currentTime: T[],\n  clampTime: T[],\n  shiftTime: T[],\n  isChunked: T[],\n  hasOneChunkedFrame: T[],\n  calcFrames: T[],\n  tickChunk: T[],\n  additionalModifier: T[],\n} & Record<addPrefix<string, 't_'>, T[]>\n\ntype FullParameterList = ParameterListWithoutTime & Record<string, any>\n\nexport interface AdditionalModifier {\n  alpha: number\n  x: number\n  y: number\n  width: number\n  height: number\n  widthInPixel: number\n  heightInPixel: number\n  scaleCanvas: number\n  visibleScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  fullScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  cam?: CameraPosition\n  radius?: number\n}\n\nconst defaultMiddlewareCommandList = ()=>({\n  _all: [],\n  init: [],\n  isDrawFrame: [],\n  initSprites: [],\n  fixedUpdate: [],\n  update: [],\n  draw: [],\n  destroy: [],\n  reset: [],\n  resize: [],\n  currentTime: [],\n  clampTime: [],\n  shiftTime: [],\n  isChunked: [],\n  hasOneChunkedFrame: [],\n  calcFrames: [],\n  tickChunk: [],\n  additionalModifier: [],\n})\n\n\n\nclass Scene {\n  _layerManager: LayerManager\n  _imageManager: typeof ImageManager\n  _totalTimePassed: number\n  _engine: Engine | undefined\n  _middleware: MiddlewareCommandList<ConfigurationObject> = defaultMiddlewareCommandList()\n  _stopPropagation: boolean = false\n  _transform: Transform | undefined\n  _transformInvert: Transform | undefined\n  _additionalModifier: AdditionalModifier | undefined\n  _initDone: boolean = false\n  _endTime: number | undefined\n  _resetIntend: boolean = false\n\n  constructor(...configurationClassOrObjects: ConfigurationClassOrObject[]) {\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n    this._totalTimePassed = 0;\n    this._imageManager = ImageManager;\n\n    this.middlewares = configurationClassOrObjects;\n    if (!this.middlewareByType(\"timing\")) {\n      this.middlewares = [TimingDefault as ConfigurationConstructor, ...this.middlewares as ConfigurationObject[]];\n    }\n  }\n\n  _output() {\n    return this._engine?.getOutput();\n  }\n\n  set middlewares(middlewares: ConfigurationClassOrObject | ConfigurationClassOrObject[]) {\n    this._middleware = (toArray(middlewares)\n      .map((configurationClassOrObject) =>\n        typeof configurationClassOrObject === \"function\"\n          ? new (configurationClassOrObject as ConfigurationConstructor)()\n          : configurationClassOrObject\n      ) as ConfigurationObject[])\n      .reduce(\n        (middlewareCommandList: MiddlewareCommandList<ConfigurationObject>, c: ConfigurationObject) => {\n          for (let command of Object.keys(middlewareCommandList)) {\n            if (command in c) {\n              middlewareCommandList[command as keyof MiddlewareCommandList<ConfigurationObject>].push(c);\n            }\n          }\n          middlewareCommandList._all.push(c);\n          if (!(\"enabled\" in c)) c.enabled = true;\n          if (c.type) middlewareCommandList[`t_${c.type}`] = [c];\n          return middlewareCommandList;\n        },\n        defaultMiddlewareCommandList()\n      );\n  }\n  get middlewares() {\n    return this._middleware._all;\n  }\n\n  middlewareByType(type: string) {\n    const objs = this._middleware._all.filter((c) => c.type === type);\n    if (objs.length) {\n      return objs[objs.length - 1];\n    }\n  }\n\n  has(command: string) {\n    return (\n      command in this._middleware ||\n      this._middleware._all.some((c) => command in c)\n    );\n  }\n\n  do<\n    K extends string,\n    D = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>,\n    R = D | undefined\n  >(\n    command: K,\n    params: P,\n    defaultValue: D | undefined,\n    func: (ConfigurationObjects: ConfigurationObject[], params: P, defaultValue: D | undefined) => R\n  ) {\n    let objs =\n      this._middleware[command as keyof MiddlewareCommandList] ||\n      this._middleware._all.filter((c) => command in c);\n    objs = objs.filter((v: ConfigurationObject) => v.enabled);\n    if (!objs.length) {\n      return defaultValue;\n    }\n    const fullParams = this._param(params);\n    return func(objs, fullParams, defaultValue);\n  }\n\n  map<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P\n  ) {\n    return this.do<K, R[], P, R[]>(command, params, [], (objs, fullParams) => {\n      return objs.map((c: ConfigurationObject) => c[command](fullParams))\n    }\n    ) as R[];\n  }\n\n  pipe<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeBack<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let i = objs.length - 1; i >= 0; i--) {\n        const c = objs[i];\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeMax<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, number | number[], P>(command, params, Array.isArray(pipe) ? pipe.map(p => p - 0) : pipe as unknown as number - 0, (objs, fullParams, pipe) => {\n      let res = pipe;\n      this._stopPropagation = false;\n\n      if (Array.isArray(res)) {\n        // res is number\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = (res as unknown as number[]).map((v, i) => Math.max(v, (newRes as number[])[i]));\n          } else {\n            res = res.map((v, i) => Math.max(v, newRes as number));\n          }\n          if (this._stopPropagation) break;\n        }\n      } else {\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = newRes.map((v) => Math.max(v, res as number));\n          } else {\n            res = Math.max(newRes, res as number);\n          }\n          if (this._stopPropagation) break;\n        }\n      }\n      return res;\n    });\n  }\n\n  async pipeAsync<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterList>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P, Promise<R | undefined>>(command, params, pipe, async (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = await c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  value<\n    K extends string,\n    R = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P | undefined = undefined\n  ):WithoutFunction<R>|undefined {\n    let objs: ConfigurationObject[] =\n      this._middleware[command as keyof MiddlewareCommandList<ConfigurationObject>] ||\n      this._middleware._all.filter((c: ConfigurationObject) => command in c);\n    objs.filter((v) => v.enabled);\n    if (!objs.length) {\n      return undefined;\n    }\n    const obj = objs[objs.length - 1];\n    return typeof (obj[command]) === 'function' ? obj[command].call(obj, this._param(params || {})) : obj[command]\n  }\n\n  stopPropagation() {\n    this._stopPropagation = true;\n  }\n\n  currentTime() {\n    return this.pipe(\"currentTime\", {})!;\n  }\n\n  clampTime(timePassed: number) {\n    return this.pipe(\"clampTime\", { timePassed })!;\n  }\n\n  shiftTime(timePassed: number) {\n    return this.pipe(\"shiftTime\", { timePassed })!;\n  }\n\n  cacheClear() {\n    this._transform = undefined;\n    this._transformInvert = undefined;\n  }\n\n  viewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this.pipe(\"viewport\", {}, new Transform());\n      this._transformInvert = undefined;\n    }\n    return this._transform!;\n  }\n\n  transformPoint(x: number, y: number, scale = this._additionalModifier!.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this.viewport().clone().invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  callInit(parameter: any, engine: Engine) {\n    this._engine = engine;\n    this.resize();\n    const images = this.value(\"images\");\n    if (images) {\n      this._imageManager.add(images);\n    }  \n    Promise.all(\n      this.map(\"init\", {\n        parameter,\n      })\n    ).then((res) => {\n      this._initDone = true\n    });\n    \n  }\n\n  get additionalModifier() {\n    return this._additionalModifier!;\n  }\n\n  updateAdditionalModifier() {\n    const output = this._output()!;\n    this._additionalModifier = this.pipe(\n      \"additionalModifier\",\n      {},\n      {\n        alpha: 1,\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height,\n        widthInPixel: output.width,\n        heightInPixel: output.height,\n        scaleCanvas: 1,\n        visibleScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n        fullScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n      }\n    );\n  }\n\n  resize() {\n    const output = this._output()!;\n    this.updateAdditionalModifier();\n    this.pipe(\"resize\", {});\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).resize(output, this._additionalModifier!);\n      }\n    });\n  }\n\n  async destroy() {\n    const parameter = await this.pipeAsync(\"destroy\", {});\n    this._initDone = false;\n    return parameter;\n  }\n\n  get timing() {\n    return this._middleware.t_timing[0] as TimingDefault|TimingAudio;\n  }\n\n  get camera() {\n    return this._middleware.t_camera[0] as Camera;\n  }\n\n  get control() {\n    return this._middleware.t_control[0] as CameraControl;\n  }\n\n  get totalTimePassed() {\n    return this._totalTimePassed;\n  }\n\n  _param<K extends Record<string, any>>(additionalParameter: K | undefined = undefined): ParameterListWithoutTime & K {\n    return Object.assign({\n      engine: this._engine!,\n      scene: this,\n      imageManager: this._imageManager,\n      layerManager: this._layerManager,\n      totalTimePassed: this._totalTimePassed,\n      output: this._output()!,\n    }, additionalParameter);\n  }\n\n  callLoading(args: {\n    timePassed: number\n    totalTimePassed: number\n  }) {\n    if (this._imageManager.isLoaded() && this._initDone) {\n      this._endTime = this.value(\"endTime\");\n      const progress = \"Click to play\";\n      this.value(\"loading\", {\n        ...args,\n        progress\n      });\n      return true;\n    }\n    const progress = this._imageManager.count\n      ? this._imageManager.loaded / this._imageManager.count\n      : \"Loading...\";\n\n    this.value(\"loading\", {\n      ...args,\n      progress\n    });\n    return false;\n  }\n\n  fixedUpdate(timePassed: number, lastCall: boolean) {\n    this.map(\"fixedUpdate\", {\n      timePassed,\n      lastCall,\n    });\n  }\n\n  isDrawFrame(timePassed: number) {\n    return this.pipeMax(\"isDrawFrame\", { timePassed }, timePassed !== 0)!;\n  }\n\n  move(timePassed:number) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    if (this._resetIntend) {\n      this.reset();\n      // Jump back?\n    } else if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset();\n      this.initSprites();\n      this._totalTimePassed = timePassed;\n    } else if (this._endTime && this._endTime <= this._totalTimePassed) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._endTime;\n      this._totalTimePassed = this._endTime;\n      // End Engine\n      this.map(\"end\", { timePassed });\n    }\n    if (this.value(\"isChunked\")) {\n      if (this.value(\"hasOneChunkedFrame\", { timePassed })) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames = this.value(\"calcFrames\", { timePassed })! - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(this.value(\"tickChunk\", {})!, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(timePassed, true);\n    }\n\n    this.map(\"update\", { timePassed });\n\n    this._layerManager.forEach(({ element, isFunction, layer, elementId }) => {\n      if (!isFunction) {\n        if ((element as ISprite).animate(timePassed)) {\n          layer.deleteById(elementId);\n        }\n      }\n    });\n  }\n\n  draw(canvasId:number) {\n    this.map(\"draw\", { canvasId });\n    const context = this._output()!.context[canvasId]!;\n    context.save();\n\n    context.setTransform(...this.viewport().m);\n\n    this._layerManager.forEach(\n      ({ layer, layerId, element, isFunction, elementId }) => {\n        if (isFunction) {\n          if (\n            (element as ISpriteFunction)(\n              this._param({\n                layerId,\n                elementId,\n                layer,\n                context,\n              })\n            )\n          ) {\n            layer.deleteById(elementId);\n          }\n        } else {\n          (element as ISprite).draw(context, this._additionalModifier!);\n        }\n      },\n      canvasId\n    );\n\n    context.restore();\n  }\n\n  initSprites(canvasId: number|undefined = undefined) {\n    const context = this._output()!.context[canvasId || 0]!;\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).callInit(context, this._additionalModifier!);\n      }\n    }, canvasId);\n    this.map(\"initSprites\", { canvasId });\n  }\n\n  resetIntend() {\n    this._resetIntend = true;\n  }\n\n  reset() {\n    this._totalTimePassed = 0;\n    this._resetIntend = false;\n    let result = this.pipe<\"reset\",LayerManager | ISpriteFunctionOrSprite[][], {}>(\n      \"reset\",\n      {},\n      new LayerManager()\n    );\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach((v) => {\n        (result as LayerManager).addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class Wait implements IAnimation{\n  _duration:number\n  constructor(duration:OrFunction<number>) {\n    this._duration = calc(duration) - 0;\n  }\n\n  run(sprite: ISprite, time: number) {\n    // return time left\n    return time - this._duration;\n  }\n}\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Wait from \"./Wait\";\n\nexport enum SequenceRunCommand {\n  FORCE_DISABLE = \"F\",\n  STOP = \"S\",\n  REMOVE = \"R\"\n}\n\nexport type TWaitTime = number;\nexport type TLabel = string;\nexport type TAnimationFunction = IAnimation['run'];\nexport type TAnimationSequence = (TWaitTime | TLabel | TAnimationFunction | IAnimation)[]\nexport type AnimationSequenceOptions = TAnimationSequence | TAnimationSequence[]\n\ninterface ISequence {\n  position: number\n  timelapsed: number\n  sequence: IAnimation[]\n  label: Record<string, number>\n  enabled: boolean\n}\n\nclass Sequence implements IAnimation {\n  sequences: ISequence[] = []\n  lastTimestamp: number = 0\n  enabled: boolean = true\n\n  constructor(...sequences: AnimationSequenceOptions) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift() as number;\n    }\n\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait: number = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift() as number;\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof (command as IAnimation).run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command } as IAnimation\n              : command as IAnimation\n          )\n          .filter(command => typeof (command as IAnimation).run === \"function\"),\n        label: sequence.reduce((arr: Record<string, number>, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n  }\n\n  reset(timelapsed: number = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0]?.reset?.(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (label in sequencePosition.label) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        } else {\n          b = b || (sequencePosition.sequence.some(seq => seq.play?.(label, timelapsed)));\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  _runSequence(sprite: ISprite, sequencePosition: ISequence, timePassed: number) {\n    let timeLeft: number = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      const res = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (res === true) {\n        timeLeft = 0;\n      } else if (res === false) {\n        return -1;\n      } else if (res === SequenceRunCommand.FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.REMOVE) {\n        return true;\n      }\n\n      timeLeft = res as number;\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite: ISprite, time:number, is_difference:boolean=false) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this._runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\nexport default Sequence;\n","import type { OutputInfo } from \"../Engine\"\nimport type { AdditionalModifier, ParameterListWithoutTime } from \"../Scene\"\nimport type { OrFunction, OrPromise } from \"../helper\";\nimport type Layer from \"../Layer\";\nimport Sequence from \"../Animations/Sequence\";\nimport { IAnimation } from \"../Animations/Animation\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\n\nexport type TTagParameter = string | string[] | ((value: string, index: number, array: string[]) => unknown)\nexport interface ISprite {\n    p: SpriteBaseOptionsInternal & Record<string, any>\n    changeToPathInit?: (from: number[][][] | string, to: number[][][] | string) => [number[][][], number[][][]]\n    changeToPath?: (progress: number, data: {\n        pathFrom: number[][][]\n        pathTo: number[][][]\n    }) => number[][][]\n    getElementsByTag: (tag: TTagParameter) => ISprite[]\n    play: (label: string, timelapsed?: number) => void\n    resize: (output: OutputInfo, additionalModifier: AdditionalModifier) => OrPromise<void>\n    callInit: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => OrPromise<void>\n    animate: (timepassed: number) => boolean\n    draw: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => void\n    detect: (context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number) => ISprite | \"c\" | undefined\n    detectDraw: (context: CanvasRenderingContext2D, color: string) => void\n}\n\nexport type ISpriteFunction = (params: ParameterListWithoutTime & {\n    layerId: number\n    elementId: number\n    layer: Layer\n    context: CanvasRenderingContext2D,\n}) => number | boolean\n\nexport type ISpriteFunctionOrSprite = ISpriteFunction | ISprite\n\n\n\nexport interface SpriteBaseOptions {\n    animation?: OrFunction<Sequence | (IAnimation|number|string)[]>\n    enabled?: OrFunction<boolean>\n    isClickable?: OrFunction<boolean>\n    tag?: OrFunction<string[] | string>\n}\n\nexport interface SpriteBaseOptionsInternal {\n    animation: Sequence | undefined\n    enabled: boolean\n    isClickable: boolean\n    tag: string[]\n}\nexport type TParameterList<T, R> = {\n    [P in keyof R & keyof T]?: R[P] | ((value: T[P], givenParameter: T) => R[P]);\n}\n\nexport class SpriteBase<O extends SpriteBaseOptions = SpriteBaseOptions, P extends SpriteBaseOptionsInternal = SpriteBaseOptionsInternal> implements ISprite {\n    _needInit = true\n    p: P\n    constructor(givenParameter: O) {\n        this.p = this._parseParameterList(this._getParameterList(), givenParameter);\n    }\n\n    _parseParameterList(parameterList: TParameterList<O, P>, givenParameter: O): P {\n        const parameterEntries = Object.entries(parameterList as ReturnType<this[\"_getParameterList\"]>)\n        const valueEntries = parameterEntries.map(\n            ([name, d]) => {\n                const givenValue = givenParameter[name as keyof O]\n                return [name,\n                    typeof d === \"function\"\n                        ? d(givenValue, givenParameter)\n                        : ifNull(calc(givenValue), d)\n                ];\n            }\n        );\n        return Object.fromEntries(valueEntries)\n    }\n\n    _getBaseParameterList() {\n        return {\n            // animation\n            animation: (value: SpriteBaseOptions['animation'], givenParameter: O) => {\n                const result = calc(value);\n                return Array.isArray(result) ? new Sequence(result) : result;\n            },\n            // if it's rendering or not\n            enabled: true,\n            // if you can click it or not\n            isClickable: false,\n            // tags to mark the sprites\n            tag: (value: SpriteBaseOptions['tag'], givenParameter: O) => {\n                const v: string | string[] | undefined = calc(value)\n                return Array.isArray(v) ? v : v ? [v] : [];\n            }\n        }\n    }\n\n    _getParameterList():TParameterList<O,P> {\n        return this._getBaseParameterList() as TParameterList<O, P>\n    }\n\n    getElementsByTag(tag: TTagParameter):ISprite[] {\n        if (typeof tag === \"function\") {\n            if (this.p.tag.filter(tag).length) {\n                return [this];\n            }\n        } else {\n            const aTag = Array.isArray(tag) ? tag : [tag];\n            if (aTag.filter(tag => this.p.tag.includes(tag)).length) {\n                return [this];\n            }\n        }\n        return [];\n    }\n\n\n    // Animation-Funktion\n    animate(timepassed: number) {\n        if (this.p.animation) {\n            // run animation\n            if (this.p.animation.run(this, timepassed, true) === true) {\n                // disable\n                this.p.enabled = false;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    play(label = \"\", timelapsed = 0) {\n        if (this.p.animation) {\n            this.p.animation.play?.(label, timelapsed);\n        }\n    }\n\n    init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n    callInit(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier):OrPromise<void> {\n        if (this._needInit) {\n            this.init(context, additionalModifier);\n            this._needInit = false;\n        }\n    }\n\n\n    resize(output: OutputInfo, additionalModifier: AdditionalModifier):OrPromise<void> { }\n\n    _detectHelperCallback(p: {\n        enabled: boolean\n        isClickable: boolean\n        x: number\n        y: number\n        scaleX: number\n        scaleY: number\n        rotation: number\n    }, context: CanvasRenderingContext2D, x: number, y: number, callback: () => boolean) {\n        let a = false;\n        if (p.enabled && p.isClickable) {\n            context.save();\n            context.translate(p.x, p.y);\n            context.scale(p.scaleX, p.scaleY);\n            context.rotate(p.rotation);\n            context.beginPath();\n            a = callback();\n            context.restore();\n        }\n        return a ? this as ISprite : undefined;\n    }\n\n    _detectHelper({\n        enabled,\n        isClickable,\n        x = 0,\n        y = 0,\n        width = 0,\n        height = 0,\n        scaleX = 1,\n        scaleY = 1,\n        rotation = 0\n    }: {\n        enabled: boolean\n        isClickable: boolean\n        x?: number\n        y?: number\n        width?: number\n        height?: number\n        scaleX?: number\n        scaleY?: number\n        rotation?: number\n    }, context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number, moveToCenter: boolean, callback?: (hw: number, hh: number) => boolean) {\n        let a = false;\n        if (enabled && isClickable) {\n            const hw = width / 2;\n            const hh = height / 2;\n            context.save();\n            if (moveToCenter) {\n                context.translate(x + hw, y + hh);\n            } else {\n                context.translate(x, y);\n            }\n            context.scale(scaleX, scaleY);\n            context.rotate(rotation);\n            context.beginPath();\n            if (callback) {\n                a = callback(hw, hh);\n            } else {\n                context.rect(-hw, -hh, width, height);\n                context.closePath();\n                a = context.isPointInPath(coordinateX, coordinateY);\n            }\n            context.restore();\n        }\n        return a ? this as ISprite: undefined;\n    }\n\n    detectDraw(context: CanvasRenderingContext2D, color: string) { }\n\n    detect(context: CanvasRenderingContext2D, x: number, y: number):ISprite | \"c\" | undefined { return undefined }\n\n    draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TParameterList } from \"./Sprite\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\nconst degToRad = Math.PI / 180;\n\n\nexport interface SpriteCircleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\nexport interface SpriteCircleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string\n}\n\nexport const CircleParameterList = {\n  // position\n  x: 0 as number,\n  y: 0 as number,\n  // rotation\n  rotation: (value: SpriteCircleOptions['rotation'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(\n      calc(value),\n      ifNull(\n        calc(givenParameter.rotationInRadian),\n        ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n      )\n    ) as number\n  },\n  // scalling\n  scaleX: (value: SpriteCircleOptions['scaleX'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  scaleY: (value: SpriteCircleOptions['scaleY'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  // alpha\n  alpha: 1,\n  // blending\n  compositeOperation: \"source-over\",\n  // color\n  color: \"#fff\"\n}\n\n// Sprite\n// Draw a Circle\nexport default class Circle extends SpriteBase<SpriteCircleOptions, SpriteCircleOptionsInternal> implements ISprite {\n  constructor(givenParameter: SpriteCircleOptions) {\n    super(givenParameter)\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList) as TParameterList<SpriteCircleOptions, SpriteCircleOptionsInternal>\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelperCallback(this.p, context, x, y, () => {\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      return context.isPointInPath(x, y);\n    });\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.beginPath();\n      context.fillStyle = this.p.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      context.fill();\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine.js\"\nimport { OrFunction } from \"../helper.js\"\nimport { AdditionalModifier } from \"../Scene.js\"\nimport { CircleParameterList } from \"./Circle.js\"\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TTagParameter } from \"./Sprite.js\"\n\nexport interface SpriteGroupOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  sprite?: OrFunction<ISprite>\n}\n\nexport interface SpriteGroupOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number|undefined\n  y: number|undefined\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  sprite: ISprite[]\n}\n\n\nexport default class Group<O extends SpriteGroupOptions = SpriteGroupOptions, P extends SpriteGroupOptionsInternal = SpriteGroupOptionsInternal> extends SpriteBase<O, P> {\n  constructor(givenParameter:O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      sprite: []\n    });\n  }\n\n  getElementsByTag(tag: TTagParameter):ISprite[] {\n    let result:ISprite[] = super.getElementsByTag(tag);\n    for (const sprite of this.p.sprite) {\n      const ans = sprite.getElementsByTag(tag);\n      if (ans) {\n        result = result.concat(ans);\n      }\n    }\n    return result;\n  }\n\n  // overwrite change\n  animate(timepassed:number) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        spriteFinished = spriteFinished || sprite.animate(timepassed) === true;\n      }\n    }\n\n    if (this.p.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.p.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.p.animation) {\n      this.p.animation.play?.(label, timelapsed);\n    }\n    for (const sprite of this.p.sprite) {\n      sprite.play?.(label, timelapsed);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    for (const sprite of this.p.sprite) {\n      sprite.resize(output, additionalModifier);\n    }\n  }\n\n  callInit(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    super.callInit(context, additionalModifier);\n    for (let sprite of this.p.sprite) {\n      sprite.callInit(context, additionalModifier);\n    }\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        sprite.detectDraw(context, color);\n      }\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        const a = sprite.detect(context, x, y);\n        if (a) return a;\n      }\n    }\n    return undefined;\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      if (this.p.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.p.alpha;\n      }\n\n      context.save();\n      context.translate(this.p.x!, this.p.y!);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      // draw all sprites\n      for (const sprite of this.p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport Group, { SpriteGroupOptions } from \"./Group.js\";\nimport { SpriteBaseOptions, ISprite } from \"./Sprite\";\n\nexport interface SpriteEmitterOptions<P extends SpriteBaseOptions = SpriteBaseOptions & Record<string, any>> {\n  count?: number\n  class: { new(options: P): ISprite }\n  self?: SpriteGroupOptions\n}\n\nexport default class Emitter<P> extends Group {\n  constructor(givenParameter: SpriteEmitterOptions<P>) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.p.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      const parameter: P = Object.entries(givenParameter).reduce<P>((p, [index, value]) => {\n        if ([\"self\", \"class\", \"count\"].includes(index)) {\n          return p;\n        }\n        // @ts-ignore\n        p[index] = calc(value, i)\n        return p\n      }, {} as P)\n      this.p.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport type { OutputInfo } from \"../Engine\";\n\nexport interface SpriteFastBlurOptions extends SpriteBaseOptions {\n  x?: OrFunction<undefined | number>\n  y?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  scaleX?: OrFunction<undefined | number>\n  scaleY?: OrFunction<undefined | number>\n  scale?: OrFunction<undefined | number>\n  alpha?: OrFunction<undefined | number>\n  gridSize?: OrFunction<undefined | number>\n  darker?: OrFunction<undefined | number>\n  pixel?: OrFunction<undefined | boolean>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n  compositeOperation?: OrFunction<undefined | GlobalCompositeOperation>\n}\n\nexport interface SpriteFastBlurOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  scaleX?: number\n  scaleY?: number\n  gridSize: undefined | number\n  darker: number\n  pixel: boolean\n  clear: boolean\n  norm: boolean\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n}\n\nexport default class FastBlur<O extends SpriteFastBlurOptions = SpriteFastBlurOptions, P extends SpriteFastBlurOptionsInternal = SpriteFastBlurOptionsInternal> extends SpriteBase<O,P> {\n  _temp_canvas: HTMLCanvasElement | undefined;\n  _currentGridSize: number | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value: SpriteFastBlurOptions['norm'], givenParameter: SpriteFastBlurOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // scalling\n      scaleX: (value: SpriteFastBlurOptions['scaleX'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteFastBlurOptions['scaleY'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      // alpha\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    });\n  }\n\n  _generateTempCanvas(additionalModifier: AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / p.scaleX!);\n      this._temp_canvas.height = Math.ceil(h / p.scaleY!);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output: OutputInfo | undefined, additionalModifier: AdditionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.p.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this.resize(undefined, additionalModifier);\n      }\n\n      const a = p.alpha * additionalModifier.alpha,\n        w = p.width!,\n        h = p.height!,\n        targetW = this._temp_canvas!.width,\n        targetH = this._temp_canvas!.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx!.globalCompositeOperation = \"copy\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (p.darker > 0) {\n          this._tctx!.globalCompositeOperation = p.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx!.fillStyle = \"rgba(0,0,0,\" + p.darker + \")\";\n          this._tctx!.fillRect(0, 0, targetW, targetH);\n        }\n\n        // @ts-ignore\n        this.additionalBlur?.(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (p.clear) {\n          context.globalCompositeOperation = \"source-over\";\n          context.globalAlpha = 1;\n          context.clearRect(p.x!, p.y!, w, h);\n        }\n        context.globalCompositeOperation = p.compositeOperation;\n        context.globalAlpha = a;\n        const oldValue = context.imageSmoothingEnabled;\n        context.imageSmoothingEnabled = !p.pixel;\n        context.drawImage(\n          this._temp_canvas!,\n          0,\n          0,\n          targetW,\n          targetH,\n          p.x!,\n          p.y!,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = oldValue;\n      }\n    } else {\n      // optional: clear screen\n      if (p.clear) {\n        if (!p.x) {\n          p.x = additionalModifier.x;\n        }\n        if (!p.y) {\n          p.y = additionalModifier.y;\n        }\n        if (!p.width) {\n          p.width = additionalModifier.width;\n        }\n        if (!p.height) {\n          p.height = additionalModifier.height;\n        }\n        context.clearRect(p.x, p.y, p.width, p.height);\n      }\n    }\n  }\n}\n","export enum Position {\n    LEFT_TOP = 0,\n    CENTER = 1\n}","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nexport interface SpriteTextOptions extends SpriteCircleOptions {\n  text?: OrFunction<string|string[]>\n  font?: OrFunction<undefined|string>\n  position?: OrFunction<undefined|Position>\n  borderColor?: OrFunction<undefined|string>\n  lineWidth?:  OrFunction<undefined|number>\n}\n\nexport interface SpriteTextOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  text: string\n  font: string\n  position: Position\n  borderColor: undefined|string\n  color: undefined|string\n  lineWidth: number\n}\n\nexport default class Text extends SpriteBase<SpriteTextOptions, SpriteTextOptionsInternal> implements ISprite {\n  constructor(givenParameters:SpriteTextOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList, {\n      text: (value:SpriteTextOptions['text']) => {\n        const text = calc(value)\n        return (Array.isArray(text) ? text.join('') : text) || ''\n      },\n      font: '2em monospace',\n      position: Position.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    })\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled && this.p.isClickable) {\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.font = this.p.font;\n      context.fillStyle = color;\n      context.fillText(this.p.text, 0, 0);\n      context.restore();\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number):\"c\" {\n    return \"c\" \n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      context.font = this.p.font;\n\n      if (this.p.color) {\n        context.fillStyle = this.p.color;\n        context.fillText(this.p.text, 0, 0);\n      }\n\n      if (this.p.borderColor) {\n        context.strokeStyle = this.p.borderColor;\n        context.lineWidth = this.p.lineWidth;\n        context.strokeText(this.p.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n","import { TinyColor } from \"@ctrl/tinycolor\";\nimport { OutputInfo } from \"../Engine.js\";\nimport calc from \"../func/calc.js\";\nimport ifNull from \"../func/ifnull.js\";\nimport type { OrFunction } from \"../helper.js\";\nimport type { AdditionalModifier } from \"../Scene.js\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nexport interface SpriteParticleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\ntype TinyColorRGB = ReturnType<TinyColor['toRgb']>\n\nexport interface SpriteParticleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string | TinyColorRGB\n}\n\nclass Particle extends SpriteBase<SpriteParticleOptions, SpriteParticleOptionsInternal> {\n  _currentScaleX: number | undefined;\n  _currentPixelSmoothing: boolean = false;\n  static _Gradient: HTMLCanvasElement[][][]\n\n  constructor(givenParameter: SpriteParticleOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      x: 0,\n      y: 0,\n      // scalling\n      scaleX: (value: SpriteParticleOptions['scaleX'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteParticleOptions['scaleY'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      color: '#FFF',\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    })\n  }\n\n  static getGradientImage(r: number, g: number, b: number) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      const length = 256 >> gradientResolution;\n      Particle._Gradient = Array.from({ length }, (a) =>\n        Array.from({ length }, (a) => Array.from({ length }))\n      );\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr: number, cg: number, cb: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\")!;\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._currentScaleX = undefined;\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      // faster than: if (!(this.color instanceof TinyColor && this.color.model === 'rgb')) {\n      if (!p.color || !(p.color as TinyColorRGB).r) {\n        p.color = new TinyColor(p.color).toRgb();\n      }\n      if (this._currentScaleX !== p.scaleX) {\n        this._currentScaleX = p.scaleX;\n        this._currentPixelSmoothing =\n          (p.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n          gradientSize;\n      }\n      const { r, g, b } = p.color as TinyColorRGB;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled = this._currentPixelSmoothing;\n      context.drawImage(\n        Particle.getGradientImage(r, g, b),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        p.x - p.scaleX / 2,\n        p.y - p.scaleY / 2,\n        p.scaleX,\n        p.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Callback from './Sprites/Callback'\nimport Canvas from './Sprites/Canvas'\nimport Circle from './Sprites/Circle'\nimport Emitter from './Sprites/Emitter'\nimport FastBlur from './Sprites/FastBlur'\nimport Group from './Sprites/Group'\nimport Image from './Sprites/Image'\nimport Text from './Sprites/Text'\nimport Particle from './Sprites/Particle'\nimport Path from './Sprites/Path'\nimport Rect from './Sprites/Rect'\nimport Scroller from './Sprites/Scroller'\nimport StackBlur from './Sprites/StackBlur'\nimport StarField from './Sprites/StarField'\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StarField\n};\n","import { AdditionalModifier } from \"../Scene.js\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\n\n\nexport type SpriteCallback = (context:CanvasRenderingContext2D, timePassed:number, additionalParameter:AdditionalModifier, sprite:ISprite) => void\n\nexport interface SpriteCallbackOptions extends SpriteBaseOptions {\n  callback?: SpriteCallback|undefined\n}\n\nexport interface SpriteCallbackOptionsInternal extends SpriteBaseOptionsInternal {\n  callback: SpriteCallback\n}\n\n\nexport default class Callback extends SpriteBase<SpriteCallbackOptions,SpriteCallbackOptionsInternal> {\n  _timePassed = 0;\n\n  constructor(givenParameter:SpriteCallbackOptions|SpriteCallbackOptions['callback']) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter } as SpriteCallbackOptions;\n    }\n    super(givenParameter as SpriteCallbackOptions);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      callback: (v:SpriteCallbackOptions['callback']) => ((typeof v === undefined ? () => {} : v) as SpriteCallback)\n    });\n  }\n\n  animate(timePassed:number) {\n    if (this.p.enabled) {\n      this._timePassed += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context:CanvasRenderingContext2D, additionalParameter:AdditionalModifier) {\n    if (this.p.enabled) {\n      this.p.callback(context, this._timePassed, additionalParameter, this);\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\nimport Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n\nexport interface SpriteCanvasOptions extends SpriteGroupOptions {\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  canvasWidth?: OrFunction<number>\n  canvasHeight?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  gridSize?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  isDrawFrame?: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport interface SpriteCanvasOptionsInternal extends SpriteGroupOptionsInternal {\n  width: number|undefined\n  height: number|undefined\n  canvasWidth: number|undefined\n  canvasHeight: number|undefined\n  compositeOperation: GlobalCompositeOperation\n  gridSize: number|undefined\n  norm: boolean\n  isDrawFrame: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport default class Canvas extends Group<SpriteCanvasOptions, SpriteCanvasOptionsInternal>  {\n  _currentGridSize:number|undefined;\n  _drawFrame:number = 2;\n  _temp_canvas: undefined|HTMLCanvasElement\n  _tctx: undefined|CanvasRenderingContext2D\n  \n  constructor(givenParameter:SpriteCanvasOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      canvasWidth: undefined,\n      canvasHeight: undefined,\n      gridSize: undefined,\n      compositeOperation: \"source-over\",\n      norm: (value: SpriteCanvasOptions[\"norm\"], givenParameter:SpriteCanvasOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      isDrawFrame: (value: SpriteCanvasOptions[\"isDrawFrame\"], givenParameter:SpriteCanvasOptions) => ifNull(value, 1)\n    });\n  }\n\n  _generateTempCanvas(additionalModifier:AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.canvasWidth && p.canvasHeight) {\n      this._temp_canvas.width = p.canvasWidth;\n      this._temp_canvas.height = p.canvasHeight;\n    } else if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / p.scaleX);\n      this._temp_canvas.height = Math.round(h / p.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n  }\n\n  _normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  _copyCanvas(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (\n      this._temp_canvas &&\n      this._currentGridSize !== p.gridSize &&\n      !p.canvasWidth\n    ) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n      this._drawFrame = 2;\n    }\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._copyCanvas(additionalModifier);\n    super.resize(output!, additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this._copyCanvas(additionalModifier);\n      }\n      this._drawFrame = Math.max(\n        this._drawFrame - 1,\n        calc(p.isDrawFrame, context, additionalModifier)\n      );\n      const w = p.width!,\n        h = p.height!,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas!.width,\n        th = this._temp_canvas!.height;\n\n      if (this._drawFrame) {\n        this._tctx!.textBaseline = \"middle\";\n        this._tctx!.textAlign = \"center\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.globalCompositeOperation = \"source-over\";\n        this._tctx!.save();\n        // draw all sprites\n        const cam = additionalModifier.cam;\n        if (p.norm && cam) {\n          const scale = Math.max(tw, th) / 2;\n          this._tctx!.translate(tw / 2, th / 2);\n          this._tctx!.scale(scale, scale);\n          this._tctx!.scale(cam.zoom, cam.zoom);\n          this._tctx!.translate(-cam.x, -cam.y);\n        }\n        for (const sprite of p.sprite) {\n          sprite.draw(\n            this._tctx!,\n            p.norm\n              ? Object.assign({}, additionalModifier, {\n                  alpha: 1,\n                  widthInPixel: tw,\n                  heightInPixel: th\n                })\n              : {\n                  alpha: 1,\n                  x: 0,\n                  y: 0,\n                  width: tw,\n                  height: th,\n                  widthInPixel: tw,\n                  heightInPixel: th,\n                  scaleCanvas: 1,\n                  visibleScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                  fullScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                }\n          );\n        }\n        this._tctx!.restore();\n      }\n\n      context.save();\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.translate(p.x! + wh, p.y! + hh);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(this._temp_canvas!, 0, 0, tw, th, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import type { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport ImageManager from \"../ImageManager\";\nimport { Position } from \"../Position\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions, SpriteCircleOptionsInternal } from \"./Circle\";\nimport { SpriteBase } from \"./Sprite\";\n\nexport interface SpriteImageOptions extends SpriteCircleOptions {\n  image: OrFunction<HTMLImageElement | string>\n  position?: OrFunction<Position>\n  frameX?: OrFunction<number>\n  frameY?: OrFunction<number>\n  frameWidth?: OrFunction<number>\n  frameHeight?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  normCover?: OrFunction<boolean>\n  normToScreen?: OrFunction<boolean>\n  clickExact?: OrFunction<boolean>\n  tint?: OrFunction<number>\n}\n\nexport interface SpriteImageOptionsInternal extends SpriteCircleOptionsInternal {\n  image: HTMLImageElement\n  position: Position\n  frameX: number\n  frameY: number\n  frameWidth: number\n  frameHeight: number\n  width: number\n  height: number\n  norm: boolean\n  normCover: boolean\n  normToScreen: boolean\n  clickExact: boolean\n  tint: number\n}\n\n// Sprite\n// Draw a Image\nclass Image extends SpriteBase<SpriteImageOptions, SpriteImageOptionsInternal> {\n  _currentTintKey: string | undefined\n  _normScale: number | undefined\n  _temp_canvas: HTMLCanvasElement | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: SpriteImageOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      // set image\n      image: (v: OrFunction<HTMLImageElement | string>) => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Position.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      width: undefined,\n      height: undefined,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n      clickExact: false,\n      color: \"#FFF\",\n      tint: 0\n    });\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    const frameWidth = p.frameWidth || p.image.width;\n    const frameHeight = p.frameHeight || p.image.height;\n\n    this._normScale = p.normToScreen\n      ? p.normCover\n        ? Math.max(\n          additionalModifier.fullScreen.width / frameWidth,\n          additionalModifier.fullScreen.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.fullScreen.width / frameWidth,\n            additionalModifier.fullScreen.height / frameHeight\n          )\n          : 1\n      : p.normCover\n        ? Math.max(\n          additionalModifier.width / frameWidth,\n          additionalModifier.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.width / frameWidth,\n            additionalModifier.height / frameHeight\n          )\n          : 1;\n  }\n\n  _tintCacheKey() {\n    const frameWidth = this.p.frameWidth || this.p.image.width;\n    const frameHeight = this.p.frameHeight || this.p.image.height;\n    return [\n      this.p.tint,\n      frameWidth,\n      frameHeight,\n      this.p.color,\n      this.p.frameX,\n      this.p.frameY\n    ].join(\";\");\n  }\n\n  _temp_context(frameWidth: number, frameHeight: number): CanvasRenderingContext2D {\n    if (!this._temp_canvas) {\n      this._temp_canvas = document.createElement(\"canvas\");\n      this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    }\n    this._temp_canvas.width = frameWidth;\n    this._temp_canvas.height = frameHeight;\n    return this._tctx!;\n  }\n\n  detectDraw(context: CanvasRenderingContext2D, color: string) {\n    const p = this.p\n    if (p.enabled && p.isClickable && p.clickExact) {\n      const frameWidth = p.frameWidth || p.image.width;\n      const frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) * this._normScale! * p.scaleX;\n      const sY =\n        (p.height ? p.height : frameHeight) *\n        this._normScale! *\n        p.scaleY;\n      const isTopLeft = p.position === Position.LEFT_TOP;\n\n      const tctx = this._temp_context(frameWidth, frameHeight);\n      tctx.globalAlpha = 1;\n      tctx.globalCompositeOperation = \"source-over\";\n      tctx.fillStyle = color;\n      tctx.fillRect(0, 0, frameWidth, frameHeight);\n      tctx.globalCompositeOperation = \"destination-atop\";\n      tctx.drawImage(\n        p.image,\n        p.frameX,\n        p.frameY,\n        frameWidth,\n        frameHeight,\n        0,\n        0,\n        frameWidth,\n        frameHeight\n      );\n\n      context.save();\n      context.translate(p.x, p.y);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(\n        this._temp_canvas!,\n        0,\n        0,\n        frameWidth,\n        frameHeight,\n        isTopLeft ? 0 : -sX / 2,\n        isTopLeft ? 0 : -sY / 2,\n        sX,\n        sY\n      );\n      context.restore();\n      this._currentTintKey = undefined;\n    }\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    if (this.p.enabled && this.p.isClickable && this.p.clickExact) return \"c\";\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.image && p.alpha > 0) {\n      const frameWidth = p.frameWidth || p.image.width,\n        frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) *\n        this._normScale! *\n        p.scaleX,\n        sY =\n          (p.height ? p.height : frameHeight) *\n          this._normScale! *\n          p.scaleY;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      const isCenter = p.position !== Position.LEFT_TOP;\n\n      let img: CanvasImageSource = p.image\n      let frameX = p.frameX\n      let frameY = p.frameY\n\n      if (p.tint) {\n        const key = this._tintCacheKey()\n        if (this._currentTintKey !== key) {\n          const tctx = this._temp_context(frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"source-over\";\n          tctx.clearRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = p.tint;\n          tctx.fillStyle = p.color;\n          tctx.fillRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"destination-atop\";\n          tctx.drawImage(\n            p.image,\n            p.frameX,\n            p.frameY,\n            frameWidth,\n            frameHeight,\n            0,\n            0,\n            frameWidth,\n            frameHeight\n          );\n          this._currentTintKey = key;\n        }\n        img = this._temp_canvas!\n        frameX = 0\n        frameY = 0\n      }\n\n      let cx = 0\n      let cy = 0\n      if (isCenter) {\n        cx = - sX / 2\n        cy = - sY / 2\n      }\n\n      if (p.rotation == 0) {\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          p.x + cx,\n          p.y + cy,\n          sX,\n          sY\n        );\n      } else {\n        context.save();\n        context.translate(p.x, p.y);\n        context.rotate(p.rotation);\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          cx,\n          cy,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Image;\n","import Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n// @ts-ignore\nimport pasition from \"pasition\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\n\nexport interface SpritePathOptions extends SpriteGroupOptions {\n  path?: OrFunction<number[][][]|string|Path2D>\n  color?: OrFunction<string|undefined>\n  borderColor?: OrFunction<string|undefined>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  lineWidth?: OrFunction<number>\n  clip?: OrFunction<boolean>\n  fixed?: OrFunction<boolean>\n  polyfill?: OrFunction<boolean>\n}\n\nexport interface SpritePathOptionsInternal extends SpriteGroupOptionsInternal {\n  path:  number[][][]|string|Path2D\n  color: string|undefined\n  borderColor: string|undefined\n  compositeOperation: GlobalCompositeOperation\n  lineWidth: number\n  clip: boolean\n  fixed: boolean\n  polyfill: boolean\n}\n\nexport default class Path extends Group<SpritePathOptions,SpritePathOptionsInternal> {\n  _oldPath:number[][][]|string|Path2D|undefined;\n  _path2D:Path2D = new Path2D();\n  \n  constructor(givenParameters:SpritePathOptions) {\n    super(givenParameters);\n\n    if (this.p.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.p.polyfill = false;\n        }\n      }\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from: number[][][] | string, to: number[][][] | string): number[][][] {\n    return pasition._preprocessing(\n      typeof from === \"string\" ? pasition.path2shapes(from) : Array.isArray(from) ? from : [],\n      typeof to === \"string\" ? pasition.path2shapes(to) : Array.isArray(to) ? to : []\n    );\n  }\n  \n  changeToPath(progress: number, data: {\n    pathFrom: number[][][]\n    pathTo: number[][][]\n  }) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false, () => {\n      return context.isPointInPath(this._path2D, x, y);\n    });\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      const a = p.alpha * additionalModifier.alpha;\n      if (this._oldPath !== p.path) {\n        if (p.polyfill && typeof p.path === \"string\") {\n          p.path = pasition.path2shapes(p.path);\n        }\n        if (Array.isArray(p.path)) {\n          this._path2D = new Path2D();\n          p.path.forEach(curve => {\n            this._path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this._path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this._path2D.closePath();\n          });\n        } else if (p.path instanceof Path2D) {\n          this._path2D = p.path;\n        } else {\n          this._path2D = new Path2D(p.path);\n        }\n        this._oldPath = p.path;\n      }\n\n      let scaleX = p.scaleX,\n        scaleY = p.scaleY;\n\n      if (p.fixed) {\n        if (scaleX == 0) {\n          scaleX = Number.EPSILON;\n        }\n        if (scaleY == 0) {\n          scaleY = Number.EPSILON;\n        }\n      }\n\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(p.x!, p.y!);\n      context.scale(scaleX, scaleY);\n      context.rotate(p.rotation);\n\n      if (p.color) {\n        context.fillStyle = p.color;\n        context.fill(this._path2D);\n      }\n\n      context.save();\n\n      if (p.clip) {\n        context.clip(this._path2D);\n        if (p.fixed) {\n          context.rotate(-p.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-p.x!, -p.y!);\n        }\n      }\n\n      // draw all sprites\n      for (const sprite of p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (p.borderColor) {\n        context.strokeStyle = p.borderColor;\n        context.lineWidth = p.lineWidth;\n        context.stroke(this._path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\n\nexport interface SpriteRectOptions extends SpriteCircleOptions {\n  position?: OrFunction<undefined | Position>\n  borderColor?: OrFunction<undefined | string>\n  lineWidth?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n}\n\nexport interface SpriteRectOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  position: Position\n  borderColor: undefined | string\n  color: undefined | string\n  lineWidth: number\n  clear: boolean\n  norm: boolean\n}\n\n\n// Sprite\n// Draw a Circle\nclass Rect extends SpriteBase<SpriteRectOptions, SpriteRectOptionsInternal> implements ISprite {\n  constructor(givenParameters: SpriteRectOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      color: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value: SpriteRectOptions[\"norm\"], givenParameter: SpriteRectOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // relative position\n      position: Position.CENTER\n    })\n  }\n\n  _normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    if (this.p.norm || this.p.width === undefined) {\n      this.p.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.p.norm || this.p.height === undefined) {\n      this.p.height = additionalModifier.visibleScreen.height;\n    }\n    if (this.p.norm || this.p.x === undefined) {\n      this.p.x = additionalModifier.visibleScreen.x;\n      if (this.p.position === Position.CENTER) {\n        this.p.x += this.p.width / 2;\n      }\n    }\n    if (this.p.norm || this.p.y === undefined) {\n      this.p.y = additionalModifier.visibleScreen.y;\n      if (this.p.position === Position.CENTER) {\n        this.p.y += this.p.height / 2;\n      }\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, this.p.position === Position.LEFT_TOP);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      if (p.rotation === 0 && p.position === Position.LEFT_TOP) {\n        if (p.clear) {\n          context.clearRect(p.x!, p.y!, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(p.x!, p.y!, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(p.x!, p.y!, p.width!, p.height!);\n          context.stroke();\n        }\n      } else {\n        let hw = p.width! / 2;\n        let hh = p.height! / 2;\n        context.save();\n        if (p.position === Position.LEFT_TOP) {\n          context.translate(p.x! + hw, p.y! + hh);\n        } else {\n          context.translate(p.x!, p.y!);\n        }\n        context.scale(p.scaleX, p.scaleY);\n        context.rotate(p.rotation);\n        if (p.clear) {\n          context.clearRect(-hw, -hh, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(-hw, -hh, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(-hw, -hh, p.width!, p.height!);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Rect;\n","import calc from \"../func/calc\";\nimport { OrFunction } from \"../helper\";\nimport Emitter from \"./Emitter\";\nimport Text, { SpriteTextOptions } from \"./Text\";\n\nexport interface SpriteScollerOptions extends SpriteTextOptions {\n  text: OrFunction<string|string[]>\n}\n\n\nexport default class Scroller extends Emitter<SpriteTextOptions> {\n  constructor(givenParameters:SpriteScollerOptions) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: (index:number) => characterList[index],\n        enabled: (index:number) =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled)\n      })\n    );\n  }\n}\n","import FastBlur, { SpriteFastBlurOptions, SpriteFastBlurOptionsInternal } from \"./FastBlur\";\nimport { imageDataRGBA } from \"stackblur-canvas\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStackBlurOptions extends SpriteFastBlurOptions {\n  onCanvas?: OrFunction<boolean>\n  radius?: OrFunction<undefined|number>\n  radiusPart?: OrFunction<undefined|number>\n  radiusScale?: OrFunction<boolean>\n}\n\nexport interface SpriteStackBlurOptionsInternal extends SpriteFastBlurOptionsInternal {\n  onCanvas: boolean\n  radius: undefined|number\n  radiusPart: undefined|number\n  radiusScale: boolean\n}\n\nexport default class StackBlur extends FastBlur<SpriteStackBlurOptions,SpriteStackBlurOptionsInternal> {\n  _currentRadiusPart:number|undefined\n\n    constructor(givenParameter:SpriteStackBlurOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined,\n      radiusScale: true\n    });\n  }\n\n  normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm && p.onCanvas) {\n      p.x = 0;\n      p.y = 0;\n      p.width = additionalModifier.widthInPixel;\n      p.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    super.resize(output, additionalModifier);\n    if (this.p.radiusPart) {\n      this.p.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW:number, targetH:number, additionalModifier:AdditionalModifier) {\n    const imageData = this._tctx!.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius || 1);\n    this._tctx!.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (\n        p.radius === undefined ||\n        this._currentRadiusPart !== p.radiusPart\n      ) {\n        p.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            p.radiusPart!\n        );\n        this._currentRadiusPart = p.radiusPart!;\n      }\n      const radius = Math.round(\n        p.radius! *\n          ((p.radiusScale &&\n            additionalModifier.cam) ? additionalModifier.cam.zoom : 1) /\n              additionalModifier.scaleCanvas)\n      ;\n      if (radius) {\n        if (p.onCanvas) {\n          if (p.width === undefined || p.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(p.x!);\n          const y = Math.round(p.y!);\n          const w = Math.round(p.width!);\n          const h = Math.round(p.height!);\n          const imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OrFunction } from \"../helper\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStarFieldOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  alpha?: OrFunction<number>\n  lineWidth?: OrFunction<number>\n  count?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  moveX?: OrFunction<undefined|number>\n  moveY?: OrFunction<undefined|number>\n  moveZ?: OrFunction<undefined|number>\n  highScale?: OrFunction<undefined|boolean>\n  color?: OrFunction<undefined|string>\n}\n\nexport interface SpriteStarFieldOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  alpha: number\n  count: number\n  lineWidth: number\n  compositeOperation: GlobalCompositeOperation\n  moveX: number\n  moveY: number\n  moveZ: number\n  highScale: boolean\n  color: string\n}\n\n\n\n// Sprite\n// Draw a Circle\nexport default class StarField extends SpriteBase<SpriteStarFieldOptions, SpriteStarFieldOptionsInternal> {\n  _starsX: number[] = []\n  _starsY: number[] = []\n  _starsZ: number[] = []\n  _starsOldX: number[] = []\n  _starsOldY: number[] = []\n  _starsNewX: number[] = []\n  _starsNewY: number[] = []\n  _starsEnabled: boolean[] = []\n  _starsLineWidth: number[] = []\n  _centerX: number = 0\n  _centerY: number = 0\n  _scaleZ: number = 0\n\n  constructor(givenParameters: SpriteStarFieldOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0,\n      moveY: 0,\n      moveZ: 0,\n      lineWidth: undefined,\n      highScale: true,\n      color: \"#FFF\" // here default color is white\n    });\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    p.width = p.width || additionalModifier.width;\n    p.height = p.height || additionalModifier.height;\n    p.x = p.x === undefined ? additionalModifier.x : p.x;\n    p.y = p.y === undefined ? additionalModifier.y : p.y;\n    p.lineWidth =\n      p.lineWidth ||\n      Math.min(\n        additionalModifier.height / additionalModifier.heightInPixel,\n        additionalModifier.width / additionalModifier.widthInPixel\n      ) / 2;\n    this._centerX = p.width / 2 + p.x;\n    this._centerY = p.height / 2 + p.y;\n    this._scaleZ = Math.max(p.width, p.height) / 2;\n    function clampOrRandom(val: number | undefined, min: number, max = -min) {\n      return val === undefined || val < min || val >= max\n        ? Math.random() * (max - min) + min\n        : val;\n    }\n    for (let i = 0; i < p.count; i++) {\n      this._starsX[i] = clampOrRandom(this._starsX[i], -p.width / 2);\n      this._starsY[i] = clampOrRandom(this._starsY[i], -p.height / 2);\n      this._starsZ[i] = clampOrRandom(this._starsZ[i], 0, this._scaleZ);\n    }\n  }\n\n  _moveStar(i: number, scaled_timepassed: number, firstPass: boolean) {\n    const p = this.p\n    const hw = p.width! / 2;\n    const hh = p.height! / 2;\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    let\n      x = this._starsX[i] + p.moveX * scaled_timepassed,\n      y = this._starsY[i] + p.moveY * scaled_timepassed,\n      z = this._starsZ[i] + p.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= p.x! &&\n      projectY >= p.y! &&\n      projectX < p.x! + p.width! &&\n      projectY < p.y! + p.height!;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!p.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed:number) {\n    let ret = super.animate(timepassed);\n    if (this.p.enabled && this._centerX !== undefined) {\n      let i = this.p.count;\n      while (i--) {\n        this._moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this._moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      const p = this.p\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n\n      if (p.moveY == 0 && p.moveZ == 0 && p.moveX < 0) {\n        context.fillStyle = p.color;\n        let i = p.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] -\n              (this._starsLineWidth[i] * p.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * p.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = p.color;\n        if (p.highScale) {\n          let i = p.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * p.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * p.lineWidth;\n            i = p.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nimport type { IAnimation } from \"./Animation\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nconst degToRad = Math.PI / 180;\n\nfunction moveDefault(progress: number, data: IAlgorithmData) {\n  return data.from! as number + progress * data.delta!;\n}\n\nfunction moveStatic(progress: number, data: IAlgorithmData) {\n  return progress >= 0.5 ? data.to : data.from!;\n}\n\nfunction moveBezier(progress: number, data: IAlgorithmData) {\n  var copy = [...data.values!],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress: number, data: IAlgorithmData) {\n  return data.colorFrom!.mix(data.colorTo!, progress * 100).toString();\n}\n\nfunction movePath(progress: number, { pathFrom, pathTo }: IAlgorithmData, sprite?: ISprite) {\n  return sprite!.changeToPath!(progress, { pathFrom: pathFrom!, pathTo: pathTo! });\n}\n\nexport type TProperty = number | string\nexport type TBezier = number[]\nexport type TChangeFunction = ((from?: number | undefined) => number) | ((from?: string | undefined) => string)\nexport type TChangeValue = TProperty | TBezier | TChangeFunction\nexport interface IChangeValueMeta {\n  name: string\n  to: TProperty\n  bezier?: TBezier\n  isColor: boolean\n  isPath: boolean\n  isStatic: boolean\n  isFunction?: TChangeFunction,\n  moveAlgorithm: TAlgorithm\n}\nexport type TAlgorithm = (progress: number, data: IAlgorithmData, sprite?: ISprite) => TProperty | number[][][]\nexport interface IAlgorithmData extends IChangeValueMeta {\n  from?: TProperty\n  delta?: number\n  values?: TBezier\n  pathFrom?: number[][][]\n  pathTo?: number[][][]\n  colorFrom?: TinyColor\n  colorTo?: TinyColor\n}\n\n// to values of a object\nexport default class ChangeTo implements IAnimation {\n  _initialized = false\n  _changeValues: IChangeValueMeta[]\n  _duration: number\n  _ease: (t: number) => number\n  constructor(changeValues: Record<string, TChangeValue>, duration: number, ease?: (t: number) => number) {\n    this._changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? (orgValue as number) * degToRad : orgValue;\n      const isColor = k === \"color\" || k === \"borderColor\";\n      const isPath = k === \"path\";\n      const isStatic = k === \"text\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n            ? [\"rotation\"]\n            : [k];\n      for (const name of names) {\n        this._changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value) as TProperty,\n          bezier: isBezier ? value : undefined,\n          isColor,\n          isPath,\n          isStatic,\n          isFunction: isFunction ? value : undefined,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n              ? movePath\n              : isBezier\n                ? moveBezier\n                : isStatic\n                  ? moveStatic\n                  : moveDefault\n        });\n      }\n    }\n    this._duration = ifNull(calc(duration), 0);\n    this._ease = ifNull(ease, (t: number) => t);\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  _init(sprite: ISprite, time: number) {\n    let l = this._changeValues.length\n    while (l--) {\n      const data: IAlgorithmData = this._changeValues[l];\n      // @ts-ignore\n      const from = sprite.p[data.name] as unknown as TProperty\n      if (data.isFunction) {\n        data.from = from;\n        // @ts-ignore\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = new TinyColor(data.from);\n          data.colorTo = new TinyColor(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n            data.from as string,\n            data.to as string\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [from as number, ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else if (!data.isStatic) {\n          data.delta = data.to as number - (data.from as number);\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        //\n        data.colorFrom = new TinyColor(from as string);\n        data.colorTo = new TinyColor(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n          from as string,\n          data.to as string\n        );\n      } else if (data.bezier) {\n        data.values = [from as number, ...data.bezier];\n      } else {\n        data.from = from as number;\n        data.delta = data.to as number - data.from;\n      }\n    }\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._init(sprite, time);\n    }\n\n    // return time left\n    if (this._duration <= time) {\n      let l = this._changeValues.length;\n      let data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.to;\n      }\n    } else {\n      let l = this._changeValues.length;\n      let data;\n      const progress = this._ease(time / this._duration);\n\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this._duration;\n  }\n}\n","import Callback from './Animations/Callback'\nimport ChangeTo from './Animations/ChangeTo'\nimport End from './Animations/End'\nimport EndDisabled from './Animations/EndDisabled'\nimport Forever from './Animations/Forever'\nimport If from './Animations/If'\nimport Image from './Animations/Image'\nimport ImageFrame from './Animations/ImageFrame'\nimport Loop from './Animations/Loop'\nimport Remove from './Animations/Remove'\nimport Sequence from './Animations/Sequence'\nimport Once from './Animations/Once'\nimport Shake from './Animations/Shake'\nimport ShowOnce from './Animations/ShowOnce'\nimport State from './Animations/State'\nimport Stop from './Animations/Stop'\nimport StopDisabled from './Animations/StopDisabled'\nimport Wait from './Animations/Wait'\nimport WaitDisabled from './Animations/WaitDisabled'\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport type TAnimationCallbackCallback = (sprite:ISprite, time:number, firstRun:boolean) => ReturnType<IAnimation['run']>\n\nexport default class Callback implements IAnimation{\n    _callback: TAnimationCallbackCallback\n    _duration: number|undefined\n    _initialized: boolean = false\n\n    constructor(callback: TAnimationCallbackCallback, duration?:number) {\n      this._callback = callback;\n      this._duration = ifNull(calc(duration), undefined);\n    }\n\n    reset() {\n      this._initialized = false;\n    }\n\n    run(sprite:ISprite, time:number) {\n      let result;\n\n      if (this._duration !== undefined) {\n        this._callback(sprite, Math.min(time, this._duration), !this._initialized);\n        this._initialized = true;\n        return time - this._duration;\n      } else {\n        result = this._callback(sprite, time, !this._initialized);\n        this._initialized = true;\n        return result;\n      }\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation {\n\tconstructor() {\n\t}\n\n\trun(sprite: ISprite, time: number) {\n\t\treturn SequenceRunCommand.FORCE_DISABLE;\n\t};\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.FORCE_DISABLE;\n    };\n}","import { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Forever implements IAnimation {\n  _Aniobject:Sequence\n\n  constructor(...Aniobject: IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    return this._Aniobject.play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport type { TAnimationFunction } from \"./Sequence\";\n\nexport default class If implements IAnimation {\n  _ifCallback: OrFunction<boolean>\n  _Aniobject: IAnimation|TAnimationFunction\n  _AniobjectElse: IAnimation|TAnimationFunction\n\n  constructor(ifCallback:OrFunction<boolean>, Aniobject:IAnimation|TAnimationFunction, AniobjectElse:IAnimation|TAnimationFunction) {\n    this._ifCallback = ifCallback;\n    this._Aniobject = Aniobject;\n    this._AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    return (this._Aniobject as IAnimation).play?.(label, timelapsed) || (this._AniobjectElse as IAnimation).play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number) {\n    const AniObject = calc(this._ifCallback)\n      ? this._Aniobject\n      : this._AniobjectElse;\n    return (AniObject as IAnimation).run\n      ?  (AniObject as IAnimation).run(sprite, time)\n      :  (AniObject as TAnimationFunction)(sprite, time);\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport { OrFunction } from '../helper';\nimport ImageManager from '../ImageManager';\nimport { ISprite } from '../Sprites/Sprite';\n\nexport default class Image {\n  _initialized: boolean = false\n  _image: (HTMLImageElement | string)[]\n  _count: number\n  _durationBetweenFrames: number\n  _duration: number\n  _current:number = -1\n\n  constructor(image: OrFunction<HTMLImageElement | string | (HTMLImageElement | string)[]>, durationBetweenFrames: OrFunction<number>) {\n    const imageCalced = calc(image);\n    this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(imageCalced)) {\n      this._image = imageCalced\n      this._count = imageCalced.length;\n    } else {\n      this._image = [imageCalced];\n      this._count = 1;\n    }\n    this._duration = this._count * this._durationBetweenFrames;\n  }\n\n  reset() {\n    this._initialized = false;\n  };\n\n  run(sprite: ISprite, time:number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._current = -1;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      sprite.p.image = ImageManager.getImage(this._image[this._image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this._durationBetweenFrames);\n      if (currentFrame !== this._current) {\n        this._current = currentFrame;\n        sprite.p.image = ImageManager.getImage(this._image[this._current]);\n      }\n    }\n    return time - this._duration;\n  }\n}","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { OrFunction } from '../helper';\nimport { ISprite } from '../Sprites/Sprite';\nimport { IAnimation } from './Animation';\n\nexport default class ImageFrame implements IAnimation{\n    _frameNumber: number[]\n    _durationBetweenFrames: number\n    _duration: number\n    _framesToRight: boolean\n\n    constructor(frameNumber: OrFunction<number | number[]>, framesToRight: OrFunction<boolean>, durationBetweenFrames: OrFunction<number>) {\n        const frameNumberCalc = calc(frameNumber);\n        this._framesToRight = ifNull(calc(framesToRight), true);\n        this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        this._frameNumber = Array.isArray(frameNumberCalc) ? frameNumberCalc : [frameNumberCalc];\n\n        this._duration = this._frameNumber.length * this._durationBetweenFrames;\n    }\n\n    run(sprite: ISprite, time:number) {\n        let currentFrame = 0;\n        if (time >= this._duration) {\n            currentFrame = this._frameNumber[this._frameNumber.length - 1];\n        } else {\n            currentFrame = this._frameNumber[Math.floor(time / this._durationBetweenFrames)];\n        }\n        if (this._framesToRight) {\n            sprite.p.frameX = sprite.p.frameWidth! * currentFrame;\n        } else {\n            sprite.p.frameY = sprite.p.frameHeight! * currentFrame;\n        }\n\n        return time - this._duration;\n    }\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Loop implements IAnimation {\n  _Aniobject: Sequence\n  _times:number\n  _timesOrg:number\n\n  constructor(times:number, ...Aniobject:IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this._times = this._timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    const b = this._Aniobject.play?.(label, timelapsed);\n    if (b) {\n      this._times = this._timesOrg;\n    }\n    return b\n  }\n\n  run(sprite: ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0 && this._times > 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._times--;\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\n\nexport default class Once implements IAnimation {\n  _Aniobject: IAnimation\n  _times: number\n\n  constructor(Aniobject: IAnimation, times: number) {\n    this._Aniobject = Aniobject;\n    this._times = ifNull(calc(times), 1);\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (this._times <= 0) {\n      return time;\n    }\n    else {\n      let t = this._Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this._times--;\n      }\n      return t;\n    }\n  };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class Remove implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.REMOVE;\n    };\n}","import calc from '../func/calc';\nimport type { OrFunction } from '../helper.js';\nimport type { ISprite } from '../Sprites/Sprite.js';\n\nexport default class Shake {\n  _initialized = false\n  _duration: number\n  _shakeDiff: number\n  _shakeDiffHalf: number\n  _x: number = 0\n  _y: number = 0\n\n  constructor(shakediff: OrFunction<number>, duration: OrFunction<number>) {\n    this._duration = calc(duration);\n    this._shakeDiff = calc(shakediff);\n    this._shakeDiffHalf = this._shakeDiff / 2;\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._x = sprite.p.x;\n      this._y = sprite.p.y;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      // prevent round errors\n      sprite.p.x = this._x;\n      sprite.p.y = this._y;\n    } else {\n      // shake sprite\n      sprite.p.x = this._x + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n      sprite.p.y = this._y + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n    }\n    return time - this._duration;\n  }\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class ShowOnce implements IAnimation {\n    _showOnce:boolean = true\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = sprite.p.enabled && this._showOnce;\n        this._showOnce = false;\n        return 0;\n    }\n}","import { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\nimport Sequence from './Sequence';\n\nclass State implements IAnimation {\n  _states: Record<string, Sequence | State>\n  _transitions: Record<string, Sequence | State>\n  _currentStateName: string | undefined\n  _currentState: Sequence | State | undefined\n  _isTransitioningToStateName: string | undefined = undefined\n\n  constructor({\n    states = {},\n    transitions = {},\n    defaultState\n  }: {\n    states?: Record<string, IAnimation[] | Sequence>\n    transitions?: Record<string, IAnimation[] | Sequence>\n    defaultState: string\n  }) {\n    // save possible states\n    this._states = Object.fromEntries(Object.entries(states).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ))\n\n    // save transitions\n    this._transitions = Object.fromEntries(Object.entries(transitions).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ));\n    // set start state\n    this._currentStateName = defaultState;\n    this._currentState = this._states[defaultState];\n  }\n\n  setState(name:string) {\n    if (name !== this._currentStateName) {\n      this._isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this._currentStateName}To${UCFirstName}`,\n        `${this._currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => name in this._transitions\n      );\n      if (transitionName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._transitions[transitionName];\n        (this._currentState as Sequence)?.reset?.();\n      } else {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0):boolean|undefined {\n    return this._currentState?.play?.(label, timelapsed);\n  }\n\n  run(sprite: ISprite, time: number, is_difference?: boolean) {\n    let timeLeft:ReturnType<IAnimation['run']> = time;\n    let isDifference = is_difference;\n    if (this._currentState) {\n      timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this._currentState) {\n      if (this._isTransitioningToStateName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n        timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this._currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class End implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.STOP;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.STOP;\n    };\n}","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class WaitDisabled implements IAnimation {\n  duration:number\n\n  constructor(duration:OrFunction<number>) {\n    this.duration = ifNull(calc(duration), 0);\n  }\n\n  run(sprite:ISprite, time:number) {\n    // return time left\n    sprite.p.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import Transform from \"../func/transform\";\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime, RectPosition } from \"../Scene\";\n\nexport interface CameraPosition {\n  zoom: number\n  x: number\n  y: number\n}\n\nexport default class Camera implements ConfigurationObject {\n  type = \"camera\"\n  cam: CameraPosition\n  constructor(config: Partial<CameraPosition> = {}) {\n    this.type = \"camera\";\n    this.cam = Object.assign({\n      zoom: 1,\n      x: 0,\n      y: 0,\n    }, config);\n  }\n\n  viewport({ }:ParameterListWithoutTime, matrix: Transform) {\n    return matrix\n      .scale(this.cam.zoom, this.cam.zoom)\n      .translate(-this.cam.x, -this.cam.y);\n  }\n\n  viewportByCam({ engine }: ParameterListWithoutTime, cam: CameraPosition) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  additionalModifier({ }, additionalModifier: AdditionalModifier) {\n    additionalModifier.cam = Object.assign({}, this.cam);\n    return additionalModifier;\n  }\n\n  clampView(params: ParameterListWithoutTime & { clampLimits?: RectPosition }, cam: CameraPosition) {\n    const { engine, scene, clampLimits } = params\n    const cl = clampLimits || {\n      x1: scene.additionalModifier.x,\n      y1: scene.additionalModifier.y,\n      x2: scene.additionalModifier.x + scene.additionalModifier.width,\n      y2: scene.additionalModifier.y + scene.additionalModifier.height,\n    };\n    const invert = this.viewportByCam(params, cam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      engine.getWidth(),\n      engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= cl.x2 - cl.x1) {\n      if (x1 < cl.x1) {\n        if (x2 <= cl.x2) {\n          cam.x += cl.x1 - x1;\n        }\n      } else {\n        if (x2 > cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > cl.x1) {\n        cam.x += cl.x1 - x1;\n      } else {\n        if (x2 < cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= cl.y2 - cl.y1) {\n      if (y1 < cl.y1) {\n        if (y2 <= cl.y2) {\n          cam.y += cl.y1 - y1;\n        }\n      } else {\n        if (y2 > cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > cl.y1) {\n        cam.y += cl.y1 - y1;\n      } else {\n        if (y2 < cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    }\n    return cam;\n  }\n\n  set zoom(value) {\n    this.cam.zoom = value;\n  }\n\n  set camX(v) {\n    this.cam.x = v;\n  }\n\n  set camY(v) {\n    this.cam.y = v;\n  }\n\n  get zoom() {\n    return this.cam.zoom;\n  }\n\n  get camX() {\n    return this.cam.x;\n  }\n\n  get camY() {\n    return this.cam.y;\n  }\n\n  zoomToFullScreen({ scene }: ParameterListWithoutTime) {\n    return Math.min(\n      scene.additionalModifier.fullScreen.width /\n      scene.additionalModifier.width,\n      scene.additionalModifier.fullScreen.height /\n      scene.additionalModifier.height\n    );\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition & {cam? : CameraPosition}) {\n    const { scene, engine, cam, x1, y1, x2, y2 } = params\n    const scale = scene.additionalModifier.scaleCanvas;\n    const invert = this.viewportByCam(params, cam || this.cam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      engine.getWidth() * scale,\n      engine.getHeight() * scale\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    const ret = {\n      x: mx,\n      y: my,\n      zoom: (cam || this.cam).zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE),\n    };\n    if (cam) {\n      cam.x = ret.x;\n      cam.y = ret.y;\n      cam.zoom = ret.zoom;\n    } else {\n      this.cam = ret;\n    }\n  }\n}\n","import type Scene from \"../Scene\";\nimport type { ConfigurationObject, ParameterList, ParameterListFixedUpdate, ParameterListInitDestroy, ParameterListPositionEvent, ParameterListWithoutTime, RectPosition } from \"../Scene\";\nimport type { CameraPosition } from \"./Camera\";\n\nexport interface MiddlewareCameraControlOptions {\n  zoomMax: number\n  zoomMin: number\n  zoomFactor: number\n  tween: number\n  callResize: boolean\n}\n\nconst clickTime = 300;\nexport default class CameraControl implements ConfigurationObject {\n  type = \"control\"\n  _mousePos: Record<number, {\n    x: number\n    y: number\n    _cx: number\n    _cy: number\n    _isDown: boolean\n    _numOfFingers: number\n    _distance: undefined | number\n    _timestamp: number\n    _czoom: undefined | number\n  }> = {}\n  toCam: CameraPosition = {\n    zoom: 1,\n    x: 0,\n    y: 0\n  }\n  _config: MiddlewareCameraControlOptions\n  _scene: Scene | undefined\n  _instant: boolean = false\n\n  constructor(config: Partial<MiddlewareCameraControlOptions> = {}) {\n    this._config = Object.assign(\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        callResize: true,\n      },\n      config\n    );\n  }\n\n  init({ scene }: ParameterListInitDestroy) {\n    this._scene = scene\n    this.toCam = Object.assign({}, scene.camera.cam);\n  }\n\n  mouseDown({ event: e, position: [mx, my], button: i }: ParameterListPositionEvent) {\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e as TouchEvent).touches?.length || 1,\n      _distance: undefined,\n      _timestamp: Date.now(),\n    });\n  }\n\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      !(\n        (\n          Date.now() - this._mousePos[i]._timestamp < clickTime &&\n          Math.abs(this._mousePos[i].x - mx) < 5 &&\n          Math.abs(this._mousePos[i].y - my) < 5 &&\n          i === 1\n        ) // i === 0\n      )\n    ) {\n      scene.stopPropagation();\n    }\n  }\n\n  mouseOut({ button: i }: ParameterListPositionEvent) {\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n        (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      const viewMatrix = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert();\n      const [ox, oy] = viewMatrix.transformPoint(\n        this._mousePos[i].x * scale,\n        this._mousePos[i].y * scale\n      );\n      const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n      this.toCam.x = this._mousePos[i]._cx + ox - nx;\n      this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    }\n  }\n\n  mouseWheel({ event: e, position: [mx, my], scene }: ParameterListPositionEvent) {\n    const scale = scene.additionalModifier.scaleCanvas;\n    const [ox, oy] = scene.camera\n      .viewportByCam(arguments[0], this.toCam)\n      .invert()\n      .transformPoint(mx * scale, my * scale);\n    // @ts-ignore\n    const wheelData = (e as WheelEvent).wheelDelta || (e as WheelEvent).deltaY * -1;\n    if (wheelData / 120 > 0) {\n      this.zoomIn();\n      const [nx, ny] = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert()\n        .transformPoint(mx * scale, my * scale);\n      this.toCam.x -= nx - ox;\n      this.toCam.y -= ny - oy;\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    } else {\n      this.zoomOut(arguments[0]);\n    }\n  }\n\n  hasCamChanged() {\n    const t = this._config.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this._scene!.camera.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this._scene!.camera.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this._scene!.camera.cam.zoom) >=\n      Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate({ scene, lastCall }: ParameterListFixedUpdate) {\n    if (this._config.tween && !this._instant && this.hasCamChanged()) {\n      scene.camera.cam.x +=\n        (this.toCam.x - scene.camera.cam.x) / this._config.tween;\n      scene.camera.cam.y +=\n        (this.toCam.y - scene.camera.cam.y) / this._config.tween;\n      scene.camera.cam.zoom +=\n        (this.toCam.zoom - scene.camera.cam.zoom) / this._config.tween;\n      if (lastCall) {\n        scene.additionalModifier.cam = scene.camera.cam;\n        if (this._config.callResize) {\n          scene.resize();\n        } else {\n          scene.cacheClear();\n        }\n      }\n    }\n  }\n\n  update({ scene }: ParameterList) {\n    if ((!this._config.tween || this._instant) && this.hasCamChanged()) {\n      this._instant = false;\n      scene.camera.cam = Object.assign({}, this.toCam);\n      if (this._config.callResize) {\n        scene.resize();\n      } else {\n        scene.cacheClear();\n      }\n    }\n  }\n\n  camInstant() {\n    this._instant = true;\n  }\n\n  resize(args: ParameterListWithoutTime& { clampLimits?: RectPosition }) {\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n  }\n\n  zoomToNorm() {\n    this.toCam.zoom = 1;\n    return this;\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this._config.zoomMax,\n      this.toCam.zoom * this._config.zoomFactor\n    );\n    return this;\n  }\n  zoomOut(args: ParameterListWithoutTime & { clampLimits?: RectPosition }) {\n    this.toCam.zoom = Math.max(\n      this._config.zoomMin,\n      this.toCam.zoom / this._config.zoomFactor\n    );\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n    return this;\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition) {\n    params.scene.camera.zoomTo(Object.assign(\n      params, {cam:this.toCam}\n    ));\n  }\n}\n","import Callback from \"./Middleware/Camera\";\nimport Camera from \"./Middleware/Camera\";\nimport CameraControl from \"./Middleware/CameraControl\";\nimport CameraControlSecondButton from \"./Middleware/CameraControlSecondButton\";\nimport Click from \"./Middleware/Click\";\nimport Element from \"./Middleware/Element\";\nimport Event from \"./Middleware/Event\";\nimport LoadingScreen from \"./Middleware/LoadingScreen\";\nimport Norm from \"./Middleware/Norm\";\nimport TimingAudio from \"./Middleware/TimingAudio\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\n\nexport default {\n  Callback,\n  Camera,\n  CameraControl,\n  CameraControlSecondButton,\n  Click,\n  Element,\n  Event,\n  LoadingScreen,\n  Norm,\n  TimingAudio,\n  TimingDefault,\n};\n","import { ParameterListPositionEvent } from \"../Scene.js\";\nimport CameraControl from \"./CameraControl.js\";\nconst clickTime = 300;\n\nexport default class CameraControlSecondButton extends CameraControl {\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      (Date.now() - this._mousePos[i]._timestamp > clickTime ||\n        Math.abs(this._mousePos[i].x - mx) >= 5 ||\n        Math.abs(this._mousePos[i].y - my) >= 5) &&\n        i === 1\n    ) {\n      scene.stopPropagation();\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"region\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n          (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      if (i === 2) {\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n    }\n\n    if (\n      i === 1 &&\n      scene.has(\"regionMove\") &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!(e as TouchEvent).touches || (e as TouchEvent).touches.length === 1)\n    ) {\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"regionMove\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListPositionEvent } from \"../Scene\";\nimport type { MiddlewareElementOptions } from \"./Element\";\n\nexport default class Click implements ConfigurationObject{\n  _doubleClickElementTimer: undefined|number;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  mouseUp(param:ParameterListPositionEvent) {\n    const { scene, button } = param;\n    if (button === 1) {\n      if (scene.has(\"doubleClick\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClick\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"click\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"click\", param);\n      }\n    }\n  }\n}\n","import Scene, { ConfigurationObject, ElementClickInfo, ParameterListCanvas, ParameterListClickElement, ParameterListClickNonElement, ParameterListPositionEvent } from \"../Scene\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nexport interface MiddlewareElementOptions {\n  doubleClickDetectInterval?: number\n}\n\ninterface MousePosition {\n  mx: number\n  my: number\n}\n\nexport default class Element implements ConfigurationObject {\n  _clickIntend: MousePosition | undefined = undefined;\n  _hoverIntend: MousePosition | undefined = undefined;\n  _hasDetectImage: boolean = false;\n  _doubleClickElementTimer: number | undefined = undefined;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  isDrawFrame() {\n    return this._hasDetectImage ? 1 : 0;\n  }\n\n  _dispatchEvent(scene: Scene, isClick: boolean, param: ParameterListClickElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickElement\")) {\n        if (this._doubleClickElementTimer) {\n          window.clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClickElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"clickElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickElement\", param);\n      }\n    } else {\n      scene.map(\"hoverElement\", param);\n    }\n  }\n\n  _dispatchNonEvent(scene: Scene, isClick: boolean, param: ParameterListClickNonElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickNonElement\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = undefined;\n          scene.map(\"doubleClickNonElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = undefined;\n            scene.map(\"clickNonElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickNonElement\", param);\n      }\n    } else {\n      scene.map(\"hoverNonElement\", param);\n    }\n  }\n\n  initSprites(params: ParameterListCanvas) {\n    const { scene, output, layerManager, canvasId } = params\n    this._hasDetectImage = false;\n    if (this._clickIntend || this._hoverIntend) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[canvasId || 0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n\n      ctx.save();\n      ctx.setTransform(...scene.viewport().m);\n      let found: ElementClickInfo | undefined | \"c\" = undefined;\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const a = (element as ISprite).detect(ctx, cx, cy);\n          if (a === \"c\") {\n            found = \"c\";\n          } else if (a) {\n            found = { layerId, element: a, elementId };\n            return false;\n          }\n        }\n      });\n      ctx.restore();\n\n      if (found === \"c\") {\n        this._hasDetectImage = true;\n      } else {\n        this._clickIntend = undefined;\n        this._hoverIntend = undefined;\n        const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n          mx,\n          my,\n          x,\n          y,\n        }, params) as ParameterListClickNonElement;\n        if (found) {\n          Object.assign(param, found as ElementClickInfo);\n          this._dispatchEvent(scene, isClick, param);\n        } else {\n          this._dispatchNonEvent(scene, isClick, param);\n        }\n      }\n    }\n  }\n\n  draw(params: ParameterListCanvas) {\n    const { engine, scene, layerManager, output, canvasId } = params;\n    if (!canvasId && this._hasDetectImage) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n      const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n        mx,\n        my,\n        x,\n        y,\n      }, params) as ParameterListClickNonElement;\n\n      const oldISE = ctx.imageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = false;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.save();\n\n      ctx.setTransform(...scene.viewport().m);\n\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const color = `rgb(${elementId & 0xff}, ${(elementId & 0xff00) >> 8\n            }, ${layerId & 0xff})`;\n          (element as ISprite).detectDraw(ctx, color);\n        }\n      }, 0);\n      ctx.restore();\n      ctx.imageSmoothingEnabled = oldISE;\n      engine.normContext(ctx);\n\n      this._clickIntend = undefined;\n      this._hoverIntend = undefined;\n\n      const p = ctx.getImageData(cx, cy, 1, 1).data;\n      if (p[3]) {\n        const layerId = p[2];\n        const elementId = p[0] + (p[1] << 8);\n        Object.assign(param, {\n          layerId,\n          elementId,\n          element: layerManager\n            .getById(layerId)\n            .getById(elementId)  \n        })\n        this._dispatchEvent(scene, isClick, param);\n      } else {\n        this._dispatchNonEvent(scene, isClick, param);\n      }\n    }\n  }\n\n  mouseUp({ scene, position: [mx, my], button }:ParameterListPositionEvent) {\n    this._clickIntend = button === 1 && scene.has(\"clickElement\") ? { mx, my } : undefined;\n  }\n\n  mouseMove({ scene, position: [mx, my] }:ParameterListPositionEvent) {\n    this._hoverIntend = scene.has(\"hoverElement\") ? { mx, my } : undefined;\n  }\n}\n","import ifNull from '../func/ifnull'\nimport type { ValueOf } from '../helper';\nimport LayerManager from '../LayerManager';\nimport type { ConfigurationObject, EventsReturn, ParameterList, ParameterListInitDestroy, ParameterListWithoutTime } from '../Scene';\nimport Scene from '../Scene';\nimport { ISpriteFunctionOrSprite } from '../Sprites/Sprite';\n\nexport default class Events implements ConfigurationObject {\n  type = \"events\"\n  _reseted: boolean = false\n\n  _events: {\n    n: HTMLElement,\n    e: keyof HTMLElementEventMap\n    f: (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any\n  }[] = []\n\n  _pushEvent(command: \"mouseDown\" | \"mouseUp\" | \"mouseOut\" | \"mouseMove\" | \"mouseWheel\", event: Event | TouchEvent | MouseEvent, scene: Scene) {\n    if (ifNull<boolean>(scene.value(\"preventDefault\"), true)) {\n      event.preventDefault();\n    }\n    if (!this._reseted) {\n      return\n    }\n    const [mx, my] = this.getMousePosition({ event });\n    const [x, y] = scene.transformPoint(mx, my);\n    scene.pipeBack(command, {\n      event,\n      position: [mx, my],\n      x,\n      y,\n      button: this.getMouseButton({ event }),\n    });\n  }\n\n  events({ scene }: ParameterListInitDestroy) {\n    return [\n      scene.has(\"mouseDown\") && [\n        [\"touchstart\", \"mousedown\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseDown\", event, scene),\n      ],\n      scene.has(\"mouseUp\") && [\n        [\"touchend\", \"mouseup\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseUp\", event, scene),\n      ],\n      scene.has(\"mouseOut\") && [\n        [\"touchendoutside\", \"mouseout\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseOut\", event, scene),\n      ],\n      scene.has(\"mouseMove\") && [\n        [\"touchmove\", \"mousemove\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseMove\", event, scene),\n      ],\n      scene.has(\"mouseWheel\") && [\n        [\"wheel\"],\n        (event: Event) => this._pushEvent(\"mouseWheel\", event, scene),\n      ],\n      (ifNull(scene.value<\"preventDefault\", boolean>(\"preventDefault\"), true)) && [\n        [\"contextmenu\"],\n        (e: Event) => e.preventDefault(),\n      ],\n    ].filter((v) => v) as EventsReturn\n  }\n\n  init({ output, scene }: ParameterListInitDestroy) {\n    const element = output.canvas[0];\n\n    const events: (keyof HTMLElementEventMap | [keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[][] = scene.map(\"events\", {});\n\n    this._events = events\n      .filter(Array.isArray)\n      // flat(1)\n      .reduce((acc, cur) => {\n        acc.push.apply(acc, cur);\n        return acc;\n      }, [])\n      // convert strings to call to function with the same name\n      .map(cur =>\n        Array.isArray(cur) ? cur : [[cur], (event: ValueOf<HTMLElementEventMap>) => {\n          if (ifNull(scene.value(\"preventDefault\"), true)) event.preventDefault();\n          scene.pipeBack(cur, { event });\n        }]\n      )\n      .map(([events, func]) =>\n        events.map((e: keyof HTMLElementEventMap) => ({\n          n: element,\n          e: e,\n          f: func,\n        }))\n      )\n      // workaround for .flat(1) for edge\n      .reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          acc.push.apply(acc, cur);\n        } else {\n          acc.push(cur);\n        }\n        return acc;\n      }, []);\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f, true);\n    });\n  }\n\n  destroy() {\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f, true);\n    });\n    this._events = [];\n  }\n\n  reset(params: ParameterListWithoutTime, layerManager: LayerManager | ISpriteFunctionOrSprite[][]) {\n    this._reseted = true;\n    return layerManager;\n  }\n\n  getMousePosition({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    let touches;\n    if ((e as TouchEvent).touches && (e as TouchEvent).touches.length > 0) {\n      touches = (e as TouchEvent).targetTouches;\n    } else if ((e as TouchEvent).changedTouches && (e as TouchEvent).changedTouches.length > 0) {\n      touches = (e as TouchEvent).changedTouches;\n    }\n    if (touches) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top,\n      ];\n    }\n    if ((e as MouseEvent).offsetX === undefined) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      return [(e as MouseEvent).clientX - rect.left, (e as MouseEvent).clientY - rect.top];\n    }\n    return [(e as MouseEvent).offsetX, (e as MouseEvent).offsetY];\n  }\n\n  getMouseButton({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    return (\n      (e as TouchEvent).touches\n        ? ((e as TouchEvent).touches.length || (e as TouchEvent).changedTouches.length)\n        : ifNull((e as MouseEvent).buttons\n          ? (e as MouseEvent).buttons\n          : [0, 1, 4, 2][(e as MouseEvent).which], 1)\n    );\n  }\n}\n","import type { ConfigurationObject, ParameterListLoading } from \"../Scene\";\n\nexport default class LoadingScreen implements ConfigurationObject {\n  loading({ output, progress }: ParameterListLoading) {\n    const ctx = output.context[0];\n    const isNumber = typeof progress === \"number\"\n    const loadedHeight =\n      isNumber\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"_aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNumber\n        ? \"Loading \" + Math.round(100 * progress) + \"%\"\n        : progress,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n}\n","import Transform from '../func/transform'\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime } from '../Scene';\n\nexport default class Norm implements ConfigurationObject {\n  viewport({ engine }: ParameterListWithoutTime, matrix: Transform) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return matrix.translate(hw, hh).scale(scale, scale);\n  }\n\n  additionalModifier({ engine, output, scene }: ParameterListWithoutTime):AdditionalModifier {\n    scene.cacheClear();\n\n    const [x1, y1] = scene.transformPoint(0, 0, 1);\n    const [x2, y2] = scene.transformPoint(output.width, output.height, 1);\n\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    const transformInvert = new Transform().translate(hw, hh).scale(scale, scale).invert();\n    const [sx1, sy1] = transformInvert.transformPoint(0, 0);\n    const [sx2, sy2] = transformInvert.transformPoint(\n      output.width,\n      output.height\n    );\n\n    return {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth,\n      visibleScreen: {\n        x: x1,\n        y: y1,\n        width: x2 - x1,\n        height: y2 - y1,\n      },\n      fullScreen: {\n        x: sx1,\n        y: sy1,\n        width: sx2 - sx1,\n        height: sy2 - sy1,\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterList, ParameterListInitDestroy } from \"../Scene\";\nimport TimingDefault, { MiddlewareTimingDefaultOptions } from \"./TimingDefault\";\n\nexport interface MiddlewareTimingAudioOptions extends MiddlewareTimingDefaultOptions {\n  audioElement: HTMLMediaElement\n}\n\nexport default class TimingAudio extends TimingDefault implements ConfigurationObject {\n  _maxSkippedTickChunk: number = Number.POSITIVE_INFINITY\n  _audioStartTime: number | undefined = undefined\n  _audioPosition: number | undefined = undefined\n  _enableAndroidHack: boolean = false\n  _audioElement: undefined | HTMLMediaElement & {\n    controller?: Record<string, any>\n  }\n\n  constructor(configuration: MiddlewareTimingAudioOptions) {\n    super({\n      ...configuration,\n      maxSkippedTickChunk: Number.POSITIVE_INFINITY\n    });\n    this._audioElement = configuration.audioElement;\n  }\n\n  get audioElement() {\n    return this._audioElement;\n  }\n\n  init(_params: ParameterListInitDestroy) {\n    if (this._audioElement) {\n      // Android hack\n      // @ts-ignore\n      if (typeof MediaController === \"function\") {\n        // @ts-ignore\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      return new Promise((resolve, reject) => {\n        const canplaythrough = () => {\n          this._audioElement!.removeEventListener(\n            \"canplaythrough\",\n            canplaythrough\n          );\n          const playPromise = this._audioElement!.play();\n          if (playPromise) {\n            playPromise.catch((e) => { });\n          }\n          resolve(undefined);\n        };\n        this._audioElement!.addEventListener(\"canplaythrough\", canplaythrough);\n        this._audioElement!.onerror = () => {\n          this._audioElement = undefined\n          resolve(undefined);\n        }\n        this._audioElement!.load();\n      });\n    }\n  }\n\n  endTime() {\n    return this._audioElement ? this._audioElement.duration * 1000 : Number.POSITIVE_INFINITY;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      if (this._audioElement.ended && this._audioElement.duration) {\n        return this._audioElement.duration * 1000;\n      }\n      const currentAudioTime = this._audioElement.currentTime * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === undefined) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller!.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition! < 500 &&\n              currentAudioTime > this._audioPosition! &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition!);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    return timePassed;\n  }\n\n  shiftTime() {\n    return 0;\n  }\n}\n"],"names":["calc","c","slice","call","arguments","toArray","value","Array","isArray","pact","state","s","_Pact","o","_settle","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","thenable","ImageManager$1","constructor","Images","count","loaded","_resolve","add","Callbacks","undefined","self","key","imageSrc","window","Image","onload","isLoaded","forEach","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","test","onerror","img","crossOrigin","reset","getImage","nameOrImage","isLoadedPromise","Promise","resolve","reject","push","canvasIds","_layer","_isFunction","_start","_nextFree","_canvasIds","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","nextFree","concat","k","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","Math","min","isCanvasId","canvasId","includes","layerId","index","l","isFunction","layer","getElementsByTag","tag","_ref","ans","play","label","timelapsed","_ref2","clear","LayerManager","_layers","addLayer","Layer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","i","Transform","m","__constuct","multiply","matrix","m12","dy","m21","m22","dx","invert","d","m4","m5","m1","m2","m3","rotate","rad","cos","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","alternative","TimingDefault","configuration","_configuration","_tickChunk","_maxSkippedTickChunk","_tickChunkTolerance","totalTimePassed","ifNull","tickChunk","maxSkippedTickChunk","tickChunkTolerance","init","_params","currentTime","performance","now","Date","clampTime","timePassed","maxTime","shiftTime","isChunked","hasOneChunkedFrame","_ref3","calcFrames","_ref4","floor","Symbol","iterator","Wait","duration","_duration","run","sprite","time","SequenceRunCommand","Sequence","sequences","lastTimestamp","enabled","timeWait","shift","sequence","thisTimeWait","position","command","filter","reduce","arr","Object","keys","sequencePosition","_sequencePosition$seq","b","_sequencePosition$seq2","some","seq","_runSequence","timeLeft","res","FORCE_DISABLE","STOP","REMOVE","_sequencePosition$seq3","is_difference","restTime","Infinity","disableVote","givenParameter","_needInit","p","_parseParameterList","_getParameterList","parameterList","entries","name","givenValue","fromEntries","valueEntries","_getBaseParameterList","animation","isClickable","animate","timepassed","_this$p$animation$pla","_this$p$animation","context","additionalModifier","callInit","resize","output","_detectHelperCallback","save","scaleX","scaleY","rotation","beginPath","a","restore","_detectHelper","coordinateX","coordinateY","moveToCenter","width","height","hw","hh","rect","closePath","isPointInPath","detectDraw","color","detect","draw","PI","CircleParameterList","rotationInRadian","rotationInDegree","degToRad","alpha","compositeOperation","Group","super","assign","finished","spriteFinished","Emitter","classToEmit","class","parameter","FastBlur","SpriteBase","_temp_canvas","_currentGridSize","_tctx","gridSize","darker","pixel","norm","_generateTempCanvas","w","widthInPixel","h","heightInPixel","document","createElement","round","ceil","getContext","globalCompositeOperation","globalAlpha","normalizeFullScreen","visibleScreen","oldTempCanvas","drawImage","targetW","targetH","_this$additionalBlur","canvas","fillStyle","fillRect","additionalBlur","clearRect","oldValue","imageSmoothingEnabled","Position","Text","givenParameters","text","join","font","CENTER","borderColor","lineWidth","textAlign","textBaseline","fillText","strokeStyle","strokeText","_currentScaleX","_currentPixelSmoothing","static","r","g","rIndex","cr","cg","cb","Particle","_Gradient","generateGradientImage","txtc","createRadialGradient","gradientSize","grad","addColorStop","toRgb","getGradientImage","Sprites","Callback","_timePassed","additionalParameter","Canvas","_drawFrame","canvasWidth","canvasHeight","isDrawFrame","_normalizeFullScreen","_copyCanvas","max","wh","tw","th","cam","zoom","scaleCanvas","fullScreen","Circle","arc","fill","_currentTintKey","_normScale","image","ImageManager","frameX","frameY","frameWidth","frameHeight","normCover","normToScreen","clickExact","tint","_tintCacheKey","_temp_context","sX","isTopLeft","LEFT_TOP","tctx","sY","isCenter","cx","cy","Path","_oldPath","_path2D","polyfill","Path2D","getElementsByTagName","script","head","appendChild","ctx","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","progress","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Number","EPSILON","Rect","Scroller","characterList","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","radiusScale","imageDataRGBA","imageData","putImageData","StarField","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","_centerX","_centerY","_scaleZ","moveX","moveY","moveZ","highScale","clampOrRandom","val","random","_moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","ret","lineTo","moveDefault","delta","moveStatic","moveBezier","values","copyLength","copy","moveColor","colorFrom","mix","colorTo","toString","movePath","Animations","_callback","_initialized","ChangeTo","changeValues","ease","_changeValues","_ease","orgValue","isColor","isPath","isStatic","names","isBezier","bezier","moveAlgorithm","t","_init","TinyColor","End","EndDisabled","Forever","_Aniobject","Aniobject","_this$_Aniobject$rese","_this$_Aniobject","_this$_Aniobject$play","isDifference","_this$_Aniobject$rese2","_this$_Aniobject3","If","ifCallback","AniobjectElse","_ifCallback","_AniobjectElse","_this$_AniobjectElse$","AniObject","durationBetweenFrames","_image","_count","_durationBetweenFrames","_current","imageCalced","currentFrame","ImageFrame","frameNumber","framesToRight","_frameNumber","_framesToRight","frameNumberCalc","Loop","times","_times","_timesOrg","_this$_Aniobject2","Once","Remove","Shake","shakediff","_shakeDiff","_shakeDiffHalf","_x","_y","ShowOnce","_showOnce","State","states","transitions","defaultState","_states","_transitions","_currentStateName","_currentState","_isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","find","_this$_currentState","_this$_currentState3","_this$_currentState4","Stop","StopDisabled","WaitDisabled","Camera","config","viewport","viewportByCam","engine","getWidth","getHeight","getRatio","clampView","params","scene","clampLimits","cl","x1","y1","x2","y2","camY","camX","zoomToFullScreen","zoomTo","sx1","sy1","sx2","sy2","MIN_VALUE","CameraControl","_mousePos","toCam","_config","_scene","_instant","zoomMax","zoomMin","zoomFactor","tween","callResize","camera","mouseDown","event","mx","my","button","_cx","_cy","_isDown","_numOfFingers","touches","_e$touches","_distance","_timestamp","mouseUp","_e$changedTouches","down","numCurrentFingers","changedTouches","numOfFingers","stopPropagation","abs","mouseOut","mouseMove","_ref5","which","_e$touches2","distance","sqrt","pageX","pageY","_czoom","viewMatrix","ox","oy","nx","ny","mouseWheel","_ref6","wheelDelta","deltaY","zoomIn","zoomOut","hasCamChanged","fixedUpdate","_ref7","lastCall","cacheClear","update","_ref8","camInstant","args","zoomToNorm","Middleware","CameraControlSecondButton","fromX","fromY","toX","toY","has","Click","_temp","doubleClickDetectInterval","_doubleClickElementTimer","_doubleClickDetectInterval","param","clearTimeout","setTimeout","Element","_clickIntend","_hoverIntend","_hasDetectImage","_dispatchEvent","isClick","_dispatchNonEvent","initSprites","layerManager","found","setTransform","oldISE","normContext","Event","Events","_reseted","_events","_pushEvent","preventDefault","getMousePosition","pipeBack","getMouseButton","events","acc","cur","apply","func","f","addEventListener","destroy","removeEventListener","targetTouches","target","getBoundingClientRect","sum","left","top","offsetX","clientX","clientY","offsetY","buttons","LoadingScreen","loading","isNumber","loadedHeight","Norm","transformInvert","clientWidth","TimingAudio","POSITIVE_INFINITY","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","audioElement","MediaController","controller","preload","canplaythrough","playPromise","catch","load","endTime","ended","currentAudioTime","playbackState","canvasOrOptions","_output","_newScene","_sceneParameter","_isSceneInitialized","_recalculateCanvasIntend","_lastTimestamp","_referenceRequestAnimationFrame","_autoSize","_canvasCount","_reduceFramerate","_realLastTimestamp","_isOddFrame","_initializedStartTime","_promiseSceneDestroying","_runParameter","_moveOnce","givenOptions","Error","options","ratio","autoSize","defaultAutoSizeSettings","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","recalculateCanvas","handleVisibilityChange","_recalculateCanvas","clickToPlayAudio","playAudioOfScene","reduceFramerate","switchScene","sceneParameter","visibilityState","timing","getOutput","style","recalculateFPS","cancelAnimationFrame","requestAnimationFrame","_temp2","timeBetweenFrames","_now","start","offsetTimeTarget","offsetTimeDelta","_mainLoop","body","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","_isSettledPact","timestamp","isRecalculatedCanvas","destroyParameterForNewScene","moveFrame","drawFrame","move","callLoading","deltaTimestamp","deltaFrame","nowAutoSize","targetTime","runParameter","_this2","stop","_temp4","_temp3","_temp5","_this3$_scene$destroy","_this3","_this4","_layerManager","_imageManager","_totalTimePassed","_engine","_middleware","_all","_stopPropagation","_transform","_transformInvert","_additionalModifier","_initDone","_endTime","_resetIntend","middlewares","middlewareByType","_this$_engine","configurationClassOrObject","middlewareCommandList","objs","do","defaultValue","_param","fullParams","pipe","pipeMax","newRes","pipeAsync","_interrupt","check","step","_iteratorSymbol","_cycle","next","done","return","_fixup","TypeError","array","_c$command","obj","images","all","updateAdditionalModifier","t_timing","t_camera","t_control","imageManager","frames","calcFrame","resetIntend","layers"],"mappings":"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"}