{"version":3,"file":"animationvideo.cjs","sources":["../func/calc.ts","../func/toArray.ts","../Engine.ts","../ImageManager.ts","../Layer.ts","../LayerManager.ts","../func/transform.ts","../func/ifnull.ts","../Middleware/TimingDefault.ts","../Scene.ts","../Animations/Wait.ts","../Animations/Sequence.ts","../Sprites/Sprite.ts","../Sprites/Circle.ts","../Sprites/Group.ts","../Sprites/Emitter.ts","../Sprites/FastBlur.ts","../Position.ts","../Sprites/Text.ts","../Sprites/Particle.ts","../Sprites.ts","../Sprites/Callback.ts","../Sprites/Canvas.ts","../Sprites/Image.ts","../Sprites/Path.ts","../Sprites/Rect.ts","../Sprites/Scroller.ts","../Sprites/StackBlur.ts","../Sprites/StarField.ts","../Animations/ChangeTo.ts","../Animations.ts","../Animations/Callback.ts","../Animations/End.ts","../Animations/EndDisabled.ts","../Animations/Forever.ts","../Animations/If.ts","../Animations/Image.ts","../Animations/ImageFrame.ts","../Animations/Loop.ts","../Animations/Once.ts","../Animations/Remove.ts","../Animations/Shake.ts","../Animations/ShowOnce.ts","../Animations/State.ts","../Animations/Stop.ts","../Animations/StopDisabled.ts","../Animations/WaitDisabled.ts","../Middleware/Camera.ts","../Middleware/CameraControl.ts","../Middleware.ts","../Middleware/CameraControlSecondButton.ts","../Middleware/Click.ts","../Middleware/Element.ts","../Middleware/Event.ts","../Middleware/LoadingScreen.ts","../Middleware/Norm.ts","../Middleware/TimingAudio.ts"],"sourcesContent":["export type WithoutFunction<R> = R extends Function ? never : R\n\nexport default function calc<\n  T = unknown,\n  FunctionParamsType extends any[] = any[],\n  >(\n    c: T | ((...params: FunctionParamsType) => T),\n    ...params: FunctionParamsType): T {\n  return typeof c === \"function\" ? (c as ((...params: FunctionParamsType) => T))(...params) : c;\n}\n","export default function toArray<T>(value:T|T[]):T[]\t{\n\treturn (value === undefined || value === null ? [] : Array.isArray(value) ? value : [value]);\n}","import calc from \"./func/calc.js\";\nimport toArray from \"./func/toArray.js\";\nimport type TimingAudio from \"./Middleware/TimingAudio.js\";\nimport type Scene from './Scene'\n\nexport interface EngineOptions {\n  canvas: HTMLCanvasElement\n  scene?: null | Scene\n  sceneParameter?: Record<any, any>\n  autoSize?: AutoSizeSettings\n  clickToPlayAudio?: boolean\n  reduceFramerate?: boolean\n}\n\nexport interface AutoSizeSettings {\n  enabled: boolean\n  scaleLimitMin: number\n  scaleLimitMax: number\n  scaleFactor: number\n  referenceWidth: () => number\n  referenceHeight: () => number\n  currentScale: number\n  waitTime: number\n  currentWaitedTime: number\n  currentOffsetTime: number\n  offsetTimeLimitUp: number\n  offsetTimeLimitDown: number\n  registerResizeEvents: boolean\n  registerVisibilityEvents: boolean\n  setCanvasStyle: boolean\n  offsetTimeTarget?: number\n  offsetTimeDelta?: number\n}\n\ninterface EventSafe {\n  n: HTMLElement | Window & typeof globalThis | Document\n  e: string\n  f: EventListenerOrEventListenerObject,\n}\n\nexport interface OutputInfo {\n  canvas: HTMLCanvasElement[],\n  context: CanvasRenderingContext2D[],\n  width: number,\n  height: number,\n  ratio: number,\n}\n\n\nclass Engine {\n  _output: OutputInfo\n  _events: EventSafe[]\n  _scene: null | Scene | undefined\n  _newScene: undefined | null | Scene\n  _sceneParameter: undefined | Record<any, any>\n  _isSceneInitialized: boolean\n  _recalculateCanvasIntend: boolean\n  _lastTimestamp: number\n  _referenceRequestAnimationFrame: number | undefined\n  _autoSize: undefined | AutoSizeSettings\n  _canvasCount: number\n  _drawFrame: number[]\n  _reduceFramerate: boolean\n  _realLastTimestamp: number | undefined\n  _isOddFrame: boolean = false\n  _initializedStartTime: number | undefined\n  _promiseSceneDestroying: Promise<any> | undefined\n  _runParameter: undefined | Record<any, any>\n  _moveOnce: boolean = false\n\n  constructor(canvasOrOptions: HTMLCanvasElement | EngineOptions) {\n    let givenOptions: EngineOptions = canvasOrOptions as EngineOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if ((canvasOrOptions as HTMLCanvasElement).getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions as HTMLCanvasElement,\n      };\n    } else if (!(canvasOrOptions as EngineOptions).canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options: EngineOptions = Object.assign(\n      {},\n      givenOptions\n    );\n\n    this._output = {\n      canvas: [],\n      context: [],\n      width: 0,\n      height: 0,\n      ratio: 1,\n    };\n\n    // list of binded events\n    this._events = [];\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    // this._newScene = undefined;\n    // this._promiseSceneDestroying = undefined;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = undefined;\n\n    // data about the output canvas\n    this._output.canvas = toArray(options.canvas);\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings: AutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 2.5,\n        scaleFactor: 1.07,\n        referenceWidth: () => this._output.canvas[0].clientWidth,\n        referenceHeight: () => this._output.canvas[0].clientHeight,\n        currentScale: 1,\n        waitTime: 100,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        // undefined will be autodetect timing\n        // offsetTimeTarget: 25,\n        // offsetTimeDelta: 10,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false,\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        this._events = [\"resize\", \"orientationchange\"].map((e) => ({\n          n: window,\n          e: e,\n          f: this.recalculateCanvas.bind(this),\n        }));\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        this._events.push({\n          n: document,\n          e: \"visibilitychange\",\n          f: this.handleVisibilityChange.bind(this),\n        });\n      }\n      this._recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas[0].width;\n      this._output.height = this._output.canvas[0].height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.canvas.forEach((canvas, index) => {\n      this._output.context[index] = canvas.getContext(\"2d\")!;\n    });\n    this._canvasCount = this._output.canvas.length;\n    this._drawFrame = Array.from({ length: this._canvasCount }, (v) => 0);\n\n    if (options.clickToPlayAudio) {\n      this._events.push({\n        n: this._output.canvas[0],\n        e: \"click\",\n        f: this.playAudioOfScene.bind(this),\n      });\n    }\n\n    this._reduceFramerate = !!options.reduceFramerate;\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f);\n    });\n\n    this.switchScene(options.scene, options.sceneParameter || {});\n  }\n\n  handleVisibilityChange() {\n    if (this._autoSize) this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (\n      this._isSceneInitialized &&\n      this._scene &&\n      (this._scene.timing as TimingAudio).audioElement\n    ) {\n      (this._scene.timing as TimingAudio).audioElement!.play();\n    }\n  }\n\n  normContext(ctx: CanvasRenderingContext2D) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  getOutput() {\n    return this._output;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc<number>(this._autoSize.referenceWidth);\n      const height = calc<number>(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.forEach((canvas) => {\n        canvas.width = Math.round(width / this._autoSize!.currentScale);\n        canvas.height = Math.round(height / this._autoSize!.currentScale);\n        if (this._autoSize!.setCanvasStyle) {\n          canvas.style.width = `${width}px`;\n          canvas.style.height = `${height}px`;\n        }\n      });\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas[0].width;\n    this._output.height = this._output.canvas[0].height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  async recalculateFPS() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n      this._referenceRequestAnimationFrame = undefined;\n    }\n    await new Promise((resolve) => requestAnimationFrame(resolve));\n    const start = this._now();\n    const count = 3;\n    for (let i = count; i--;) {\n      await new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n\n    const timeBetweenFrames = (this._now() - start) / count;\n    this._autoSize!.offsetTimeTarget = timeBetweenFrames;\n    this._autoSize!.offsetTimeDelta = timeBetweenFrames / 3;\n\n    if (this._referenceRequestAnimationFrame === undefined) {\n      this._realLastTimestamp = undefined;\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        this._mainLoop.bind(this)\n      );\n    }\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize();\n    }\n    return this;\n  }\n\n  switchScene(scene: Scene | null | undefined, sceneParameter: undefined | Record<any, any> = undefined) {\n    if (scene) {\n      this._newScene = scene;\n      this._sceneParameter = sceneParameter;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  _mainLoop(timestamp:number) {\n    if (!this._referenceRequestAnimationFrame) return;\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    let isRecalculatedCanvas =\n      this._recalculateCanvasIntend &&\n      (!this._reduceFramerate || !this._isOddFrame);\n\n    if (isRecalculatedCanvas) {\n      this._recalculateCanvas();\n      this._recalculateCanvasIntend = false;\n    }\n\n    for (let i = 0; i < this._canvasCount; i++) {\n      this._drawFrame[i] = Math.max(\n        this._drawFrame[i] - 1,\n        isRecalculatedCanvas ? 1 : 0\n      );\n    }\n\n    if (!this._realLastTimestamp) {\n      this._realLastTimestamp = timestamp;\n    }\n    if (!this._initializedStartTime) {\n      this._initializedStartTime = timestamp;\n    }\n\n    if (this._newScene && !this._promiseSceneDestroying) {\n      this._promiseSceneDestroying = Promise.resolve(\n        this._scene ? this._scene.destroy() : undefined\n      );\n      this._promiseSceneDestroying.then((destroyParameterForNewScene) => {\n        this._newScene!.callInit(\n          {\n            run: this._runParameter,\n            scene: this._sceneParameter,\n            destroy: destroyParameterForNewScene,\n          },\n          this\n        );\n        this._scene = this._newScene;\n        this._newScene = undefined;\n        this._promiseSceneDestroying = undefined;\n        this._isSceneInitialized = false;\n        this._lastTimestamp = this._scene!.currentTime();\n        this._initializedStartTime = timestamp;\n      });\n    }\n\n    if (this._scene) {\n      if (this._reduceFramerate) {\n        this._isOddFrame = !this._isOddFrame;\n      }\n\n      if (!this._reduceFramerate || this._isOddFrame) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(timePassed);\n        timePassed = timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          const moveFrame = timePassed !== 0 || this._moveOnce;\n          this._moveOnce = false;\n\n          const nowAutoSize = this._now();\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              const ctx = this._output.context[index];\n              this.normContext(ctx);\n              this._scene.initSprites(index);\n              //this.normContext(ctx);\n            }\n          }\n\n          const drawFrame = this._scene.isDrawFrame(timePassed);\n          if (Array.isArray(drawFrame)) {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(\n                this._drawFrame[i],\n                drawFrame[i],\n                0\n              );\n            }\n          } else {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame, 0);\n            }\n          }\n\n          if (moveFrame) {\n            this._scene.move(timePassed);\n          }\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              if (this._drawFrame[index]) {\n                this._scene.draw(index);\n              }\n            }\n          }\n\n          if (this._autoSize && this._autoSize.enabled) {\n            const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n            if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n              this._autoSize.currentWaitedTime += deltaTimestamp;\n            } else if (moveFrame) {\n              const targetTime =\n                this._autoSize.offsetTimeTarget! *\n                (this._reduceFramerate ? 2 : 1);\n              const deltaFrame = this._now() - nowAutoSize;\n              const delta =\n                (Math.abs(deltaTimestamp - targetTime) >\n                  Math.abs(deltaFrame - targetTime)\n                  ? deltaTimestamp\n                  : deltaFrame) - targetTime;\n              if (Math.abs(delta) <= this._autoSize.offsetTimeDelta!) {\n                this._autoSize.currentOffsetTime =\n                  this._autoSize.currentOffsetTime >= 0\n                    ? Math.max(\n                      0,\n                      this._autoSize.currentOffsetTime -\n                      this._autoSize.offsetTimeDelta!\n                    )\n                    : Math.min(\n                      0,\n                      this._autoSize.currentOffsetTime +\n                      this._autoSize.offsetTimeDelta!\n                    );\n              } else {\n                if (\n                  delta < 0 &&\n                  this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime <=\n                    -this._autoSize.offsetTimeLimitDown\n                  ) {\n                    this._autoSize.currentScale = Math.max(\n                      this._autoSize.scaleLimitMin,\n                      this._autoSize.currentScale / this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                } else if (\n                  delta > 0 &&\n                  this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime >=\n                    this._autoSize.offsetTimeLimitUp\n                  ) {\n                    this._autoSize.currentScale = Math.min(\n                      this._autoSize.scaleLimitMax,\n                      this._autoSize.currentScale * this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < this._canvasCount; i++) {\n            this.normContext(this._output.context[i]);\n          }\n          this._isSceneInitialized = this._scene.callLoading({\n            timePassed: timestamp - this._realLastTimestamp,\n            totalTimePassed: timestamp - this._initializedStartTime,\n          });\n          if (this._isSceneInitialized) {\n            this._scene.reset();\n            this._lastTimestamp = this._scene.currentTime();\n            this._moveOnce = true;\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      }\n    }\n    this._realLastTimestamp = timestamp;\n  }\n\n  async run(runParameter: Record<any, any>) {\n    this._runParameter = runParameter || {};\n\n    await this.stop();\n\n    this._realLastTimestamp = this._initializedStartTime = undefined;\n\n    if (this._autoSize && !this._autoSize.offsetTimeTarget) {\n      await this.recalculateFPS();\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  async stop() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    }\n    this._referenceRequestAnimationFrame = undefined;\n    this._scene && (await this._scene.destroy());\n  }\n\n  async destroy() {\n    await this.stop();\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f);\n    });\n    this._events = [];\n\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  Images:Record<string, HTMLImageElement>\n  count: number\n  loaded: number\n  _resolve: ((value:unknown)=>void)[] = []\n\n  constructor() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n  }\n\n  add<\n  F extends (key:string, image:HTMLImageElement)=>void\n  >(\n    Images: string[]|Record<string,string>, \n    Callbacks: undefined|(()=>void)|F[]|Record<string,F> = undefined\n    ) {\n    const self = this;\n    for (const key in Images) {\n      if (!self.Images[key]) {\n        const imageSrc = (Images as Record<string,string>)[key];\n        self.Images[key] = new window.Image();\n        self.Images[key].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n            (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n          }\n          if (self._resolve && self.isLoaded()) {\n            self._resolve.forEach(c => c(undefined));\n            self._resolve = [];\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[key].crossOrigin = \"anonymous\";\n        if (imageSrc.substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL;\n          const svg = new window.Blob([imageSrc], { type: \"image/svg+xml\" });\n          self.Images[key].src = DOMURL.createObjectURL(svg);\n        } else {\n          if (/^(https?:)?\\/\\//.test(imageSrc)) {\n            self.Images[key].onerror = () => {\n              // load again without crossOrigin\n              const img = new window.Image();\n              img.onload = self.Images[key].onload;\n              self.Images[key] = img;\n              self.Images[key].src = imageSrc;\n            };\n            self.Images[key].crossOrigin = \"anonymous\";\n          }\n          self.Images[key].src = imageSrc;\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n          (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self._resolve && self.isLoaded()) {\n      self._resolve.forEach(c => c(undefined));\n      self._resolve = [];\n    }\n    return self;\n  }\n\n  reset() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n    return this;\n  }\n\n  isLoaded() {\n    return this.loaded === this.count;\n  }\n\n  getImage(nameOrImage:HTMLImageElement|string) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : this.Images[nameOrImage];\n  }\n\n  isLoadedPromise() {\n    return this.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          this._resolve.push(resolve);\n        });\n  }\n}\n\nexport default new ImageManager();\n","import type { ISpriteFunctionOrSprite, ISprite, TTagParameter } from './Sprites/Sprite'\n\nexport interface LayerCallbackData {\n  elementId: number\n  layerId: number\n  element: ISpriteFunctionOrSprite\n  isFunction: boolean\n  layer: Layer\n}\nexport type LayerCallback = (data: LayerCallbackData) => void | boolean\n\nclass Layer {\n  _layer: (undefined | ISpriteFunctionOrSprite)[]\n  _isFunction: (undefined | boolean)[]\n  _start: number\n  _nextFree: number\n  _canvasIds: number[]\n\n  constructor(canvasIds: undefined | number | number[]) {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n    this._canvasIds =\n      canvasIds === undefined\n        ? []\n        : Array.isArray(canvasIds)\n          ? canvasIds\n          : [canvasIds];\n  }\n\n  addElement(element: ISpriteFunctionOrSprite) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element: ISpriteFunctionOrSprite) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId: number) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element: ISpriteFunctionOrSprite) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element: ISpriteFunctionOrSprite) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId: number) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = undefined;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else if (this._layer[elementId]) {\n      this._layer[elementId] = undefined;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  isCanvasId(canvasId: number|undefined) {\n    return (\n      canvasId === undefined ||\n      !this._canvasIds.length ||\n      this._canvasIds.includes(canvasId)\n    );\n  }\n\n  forEach(callback: LayerCallback, layerId: number = 0) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        if (callback({\n          elementId: index,\n          layerId,\n          element,\n          isFunction: this._isFunction[index]!,\n          layer: this\n        }) === false) {\n          return;\n        }\n      }\n    }\n  }\n\n  getElementsByTag(tag: TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  play(label: string = \"\", timelapsed: number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer\";\nimport type { LayerCallback } from \"./Layer\"\nimport type { ISprite, TTagParameter } from './Sprites/Sprite'\n\n\nclass LayerManager {\n  _layers: Layer[]\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer(canvasIds));\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer(canvasIds))\n    );\n    return result;\n  }\n\n  getById(layerId: number) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback: LayerCallback, canvasId?: number|undefined) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      if (this._layers[i].isCanvasId(canvasId)) {\n        this._layers[i].forEach(callback, i)\n      }\n    }\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  getElementsByTag(tag:TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\n\nexport default class Transform {\n  m: [number, number, number, number, number, number] = [1, 0, 0, 1, 0, 0];\n\n  __constuct() {\n    this.reset()\n  }\n\n  reset() {\n    this.m = [1, 0, 0, 1, 0, 0];\n    return this;\n  }\n\n  multiply(matrix: Transform) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  };\n\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  };\n\n  rotate(rad: number) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  };\n\n  translate(x: number, y: number) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  };\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  };\n\n  transformPoint(px: number, py: number):[number, number] {\n    const x = px;\n    const y = py;\n    px = x * this.m[0] + y * this.m[2] + this.m[4];\n    py = x * this.m[1] + y * this.m[3] + this.m[5];\n    return [px, py];\n  };\n\n  clone() {\n    const n = new Transform();\n    n.m = this.m.slice(0) as [number, number, number, number, number, number];\n    return n;\n  }\n}","export default function ifNull<T>(value:T|null|undefined, alternative:T):T\t{\n\t//@ts-ignore\n\treturn (value === undefined || value === null || value === \"\" ? alternative : value);\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ConfigurationObject, ParameterList, ParameterListWithoutTime } from \"../Scene\";\n\n\nexport interface MiddlewareTimingDefaultOptions {\n  tickChunk?: OrFunction<number>\n  maxSkippedTickChunk?:OrFunction<number|undefined>\n  tickChunkTolerance?:OrFunction<number|undefined>\n}\n\nexport default class TimingDefault implements ConfigurationObject {\n  _configuration: MiddlewareTimingDefaultOptions\n  _tickChunk: number\n  _maxSkippedTickChunk: number\n  _tickChunkTolerance: number\n\n  type = \"timing\"\n  totalTimePassed = 0\n\n  constructor(configuration:MiddlewareTimingDefaultOptions = {}) {\n    this._configuration = configuration;\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 120)\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  init(_params:ParameterListWithoutTime) {}\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime({ timePassed } : ParameterList) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime({ timePassed } : ParameterList) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  get tickChunk() {\n    return this._tickChunk;\n  }\n\n  isChunked() {\n    return !!this._tickChunk;\n  }\n\n  hasOneChunkedFrame({ timePassed } : ParameterList) {\n    return timePassed >= this._tickChunk - this._tickChunkTolerance;\n  }\n\n  calcFrames({ timePassed } : ParameterList) {\n    return Math.min(\n      this._maxSkippedTickChunk,\n      Math.floor((timePassed + this._tickChunkTolerance) / this._tickChunk)\n    );\n  }\n}\n","import ImageManager from \"./ImageManager\";\nimport LayerManager from \"./LayerManager\";\nimport { WithoutFunction } from \"./func/calc\";\nimport toArray from \"./func/toArray\";\nimport Transform from \"./func/transform\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\nimport { OutputInfo } from \"./Engine\";\nimport type Engine from \"./Engine\";\nimport type { ISprite, ISpriteFunction, ISpriteFunctionOrSprite } from \"./Sprites/Sprite\";\nimport type { addPrefix, OrFunction, OrPromise, ValueOf } from \"./helper\";\nimport type Camera from \"./Middleware/Camera\";\nimport type { CameraPosition } from \"./Middleware/Camera\";\nimport type CameraControl from \"./Middleware/CameraControl\";\nimport type TimingAudio from \"./Middleware/TimingAudio\";\n\nexport interface RectPosition {\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n}\n\nexport interface ParameterListWithoutTime {\n  engine: Engine\n  scene: Scene\n  imageManager: typeof ImageManager\n  layerManager: LayerManager\n  totalTimePassed: number\n  output: OutputInfo\n}\n\nexport interface ParameterList extends ParameterListWithoutTime { \n  timePassed: number \n}\n\nexport interface ParameterListFixedUpdate extends ParameterList { \n  lastCall: boolean\n}\n\nexport interface ParameterListCanvas extends ParameterListWithoutTime { \n  canvasId: undefined|number\n}\n\nexport interface ParameterListLoading extends ParameterList {\n    timePassed: number\n    totalTimePassed: number\n    progress: string | number\n}\n\nexport interface ParameterListInitDestroy extends ParameterList {\n  parameter: any\n}\n\nexport interface ElementClickInfo {\n  layerId: number\n  element: ISprite\n  elementId: number\n}\n\nexport interface ElementPositionInfo {\n  mx: number\n  my: number\n  x: number\n  y: number\n}\n\nexport type ParameterListClickElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport type ParameterListClickNonElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport interface ParameterListPositionEvent extends ParameterListWithoutTime {\n  event: Event | MouseEvent | TouchEvent\n  position: [number, number]\n  x:number\n  y:number\n  button: number\n}\n\nexport type EventsReturn = (keyof HTMLElementEventMap|[keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[]\n\nexport interface ConfigurationObject extends Record<string, any> {\n  init?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  destroy?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  enabled?: boolean\n  type?: string\n  images?: OrFunction<string[] | Record<string, string>>\n  endTime?: OrFunction<number>\n  loading?: (params: ParameterListLoading) => void\n  viewport?: (params: ParameterListWithoutTime, matrix:Transform) => Transform\n  currentTime?: (params: ParameterListWithoutTime) => number\n  clampTime?: (params: ParameterList) => number\n  shiftTime?: (params: ParameterList) => number\n  isDrawFrame?: (params: ParameterList) => number|number[]\n  isChunked?: OrFunction<boolean>\n  additionalModifier?: (params: ParameterListWithoutTime, additionalModifier: AdditionalModifier) => AdditionalModifier\n  calcFrames?: OrFunction<number, [ParameterList]>\n  tickChunk?: OrFunction<number, [ParameterListWithoutTime]>\n  fixedUpdate?: (params: ParameterListFixedUpdate) => void\n  draw?: (params: ParameterListCanvas) => void\n  update?: (params: ParameterList) => void\n  reset?: (params: ParameterListWithoutTime, layerManager: LayerManager| ISpriteFunctionOrSprite[][]) => LayerManager | ISpriteFunctionOrSprite[][]\n  preventDefault?: OrFunction<boolean>,\n  events?: OrFunction<EventsReturn, [ParameterListInitDestroy]>\n  initSprites?: (params: ParameterListCanvas) => void\n  doubleClickElement?: (params: ParameterListClickElement) => void\n  clickElement?: (params: ParameterListClickElement) => void\n  hoverElement?: (params: ParameterListClickElement) => void\n  doubleClickNonElement?: (params: ParameterListClickNonElement) => void\n  clickNonElement?: (params: ParameterListClickNonElement) => void\n  hoverNonElement?: (params: ParameterListClickNonElement) => void\n  mouseDown?: (params: ParameterListPositionEvent) => void\n  mouseUp?: (params: ParameterListPositionEvent) => void\n  mouseOut?: (params: ParameterListPositionEvent) => void\n  mouseMove?: (params: ParameterListPositionEvent) => void\n  mouseWheel?: (params: ParameterListPositionEvent) => void\n  doubleClick?: (params: ParameterListPositionEvent) => void\n  click?: (params: ParameterListPositionEvent) => void\n}\n\nexport interface ConfigurationConstructor {\n  new (options?: Record<string, any>): ConfigurationObject\n}\n\nexport type ConfigurationClassOrObject = ConfigurationObject | ConfigurationConstructor\n\ntype MiddlewareCommandList<T = ConfigurationObject> = {\n  _all: T[],\n  init: T[],\n  isDrawFrame: T[],\n  initSprites: T[],\n  fixedUpdate: T[],\n  update: T[],\n  draw: T[],\n  destroy: T[],\n  reset: T[],\n  resize: T[],\n  currentTime: T[],\n  clampTime: T[],\n  shiftTime: T[],\n  isChunked: T[],\n  hasOneChunkedFrame: T[],\n  calcFrames: T[],\n  tickChunk: T[],\n  additionalModifier: T[],\n} & Record<addPrefix<string, 't_'>, T[]>\n\ntype FullParameterList = ParameterListWithoutTime & Record<string, any>\n\nexport interface AdditionalModifier {\n  alpha: number\n  x: number\n  y: number\n  width: number\n  height: number\n  widthInPixel: number\n  heightInPixel: number\n  scaleCanvas: number\n  visibleScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  fullScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  cam?: CameraPosition\n  radius?: number\n}\n\nconst defaultMiddlewareCommandList = {\n  _all: [],\n  init: [],\n  isDrawFrame: [],\n  initSprites: [],\n  fixedUpdate: [],\n  update: [],\n  draw: [],\n  destroy: [],\n  reset: [],\n  resize: [],\n  currentTime: [],\n  clampTime: [],\n  shiftTime: [],\n  isChunked: [],\n  hasOneChunkedFrame: [],\n  calcFrames: [],\n  tickChunk: [],\n  additionalModifier: [],\n}\n\n\n\nclass Scene {\n  _layerManager: LayerManager\n  _imageManager: typeof ImageManager\n  _totalTimePassed: number\n  _engine: Engine | undefined\n  _middleware: MiddlewareCommandList<ConfigurationObject> = defaultMiddlewareCommandList\n  _stopPropagation: boolean = false\n  _transform: Transform | undefined\n  _transformInvert: Transform | undefined\n  _additionalModifier: AdditionalModifier | undefined\n  _initDone: boolean = false\n  _endTime: number | undefined\n  _resetIntend: boolean = false\n\n  constructor(...configurationClassOrObjects: ConfigurationClassOrObject[]) {\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n    this._totalTimePassed = 0;\n    this._imageManager = ImageManager;\n\n    this.middlewares = configurationClassOrObjects;\n    if (!this.middlewareByType(\"timing\")) {\n      this.middlewares = [TimingDefault as ConfigurationConstructor, ...this.middlewares as ConfigurationObject[]];\n    }\n  }\n\n  _output() {\n    return this._engine?.getOutput();\n  }\n\n  set middlewares(middlewares: ConfigurationClassOrObject | ConfigurationClassOrObject[]) {\n    this._middleware = (toArray(middlewares)\n      .map((configurationClassOrObject) =>\n        typeof configurationClassOrObject === \"function\"\n          ? new (configurationClassOrObject as ConfigurationConstructor)()\n          : configurationClassOrObject\n      ) as ConfigurationObject[])\n      .reduce(\n        (middlewareCommandList: MiddlewareCommandList<ConfigurationObject>, c: ConfigurationObject) => {\n          for (let command of Object.keys(middlewareCommandList)) {\n            if (command in c) {\n              middlewareCommandList[command as keyof MiddlewareCommandList<ConfigurationObject>].push(c);\n            }\n          }\n          middlewareCommandList._all.push(c);\n          if (!(\"enabled\" in c)) c.enabled = true;\n          if (c.type) middlewareCommandList[`t_${c.type}`] = [c];\n          return middlewareCommandList;\n        },\n        defaultMiddlewareCommandList\n      );\n  }\n  get middlewares() {\n    return this._middleware._all;\n  }\n\n  middlewareByType(type: string) {\n    const objs = this._middleware._all.filter((c) => c.type === type);\n    if (objs.length) {\n      return objs[objs.length - 1];\n    }\n  }\n\n  has(command: string) {\n    return (\n      command in this._middleware ||\n      this._middleware._all.some((c) => command in c)\n    );\n  }\n\n  do<\n    K extends string,\n    D = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>,\n    R = D | undefined\n  >(\n    command: K,\n    params: P,\n    defaultValue: D | undefined,\n    func: (ConfigurationObjects: ConfigurationObject[], params: P, defaultValue: D | undefined) => R\n  ) {\n    let objs =\n      this._middleware[command as keyof MiddlewareCommandList] ||\n      this._middleware._all.filter((c) => command in c);\n    objs = objs.filter((v: ConfigurationObject) => v.enabled);\n    if (!objs.length) {\n      return defaultValue;\n    }\n    const fullParams = this._param(params);\n    return func(objs, fullParams, defaultValue);\n  }\n\n  map<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P\n  ) {\n    return this.do<K, R[], P, R[]>(command, params, [], (objs, fullParams) => {\n      return objs.map((c: ConfigurationObject) => c[command](fullParams))\n    }\n    ) as R[];\n  }\n\n  pipe<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeBack<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let i = objs.length - 1; i >= 0; i--) {\n        const c = objs[i];\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeMax<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, number | number[], P>(command, params, Array.isArray(pipe) ? pipe.map(p => p - 0) : pipe as unknown as number - 0, (objs, fullParams, pipe) => {\n      let res = pipe;\n      this._stopPropagation = false;\n\n      if (Array.isArray(res)) {\n        // res is number\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = (res as unknown as number[]).map((v, i) => Math.max(v, (newRes as number[])[i]));\n          } else {\n            res = res.map((v, i) => Math.max(v, newRes as number));\n          }\n          if (this._stopPropagation) break;\n        }\n      } else {\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = newRes.map((v) => Math.max(v, res as number));\n          } else {\n            res = Math.max(newRes, res as number);\n          }\n          if (this._stopPropagation) break;\n        }\n      }\n      return res;\n    });\n  }\n\n  async pipeAsync<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterList>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P, Promise<R | undefined>>(command, params, pipe, async (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = await c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  value<\n    K extends string,\n    R = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P | undefined = undefined\n  ):WithoutFunction<R>|undefined {\n    let objs: ConfigurationObject[] =\n      this._middleware[command as keyof MiddlewareCommandList<ConfigurationObject>] ||\n      this._middleware._all.filter((c: ConfigurationObject) => command in c);\n    objs.filter((v) => v.enabled);\n    if (!objs.length) {\n      return undefined;\n    }\n    const obj = objs[objs.length - 1];\n    return typeof (obj[command]) === 'function' ? obj[command].call(obj, this._param(params || {})) : obj[command]\n  }\n\n  stopPropagation() {\n    this._stopPropagation = true;\n  }\n\n  currentTime() {\n    return this.pipe(\"currentTime\", {})!;\n  }\n\n  clampTime(timePassed: number) {\n    return this.pipe(\"clampTime\", { timePassed })!;\n  }\n\n  shiftTime(timePassed: number) {\n    return this.pipe(\"shiftTime\", { timePassed })!;\n  }\n\n  cacheClear() {\n    this._transform = undefined;\n    this._transformInvert = undefined;\n  }\n\n  viewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this.pipe(\"viewport\", {}, new Transform());\n      this._transformInvert = undefined;\n    }\n    return this._transform!;\n  }\n\n  transformPoint(x: number, y: number, scale = this._additionalModifier!.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this.viewport().clone().invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  callInit(parameter: any, engine: Engine) {\n    this._engine = engine;\n    this.resize();\n    const images = this.value(\"images\");\n    if (images) {\n      this._imageManager.add(images);\n    }  \n    Promise.all(\n      this.map(\"init\", {\n        parameter,\n      })\n    ).then((res) => {\n      this._initDone = true\n    });\n    \n  }\n\n  get additionalModifier() {\n    return this._additionalModifier!;\n  }\n\n  updateAdditionalModifier() {\n    const output = this._output()!;\n    this._additionalModifier = this.pipe(\n      \"additionalModifier\",\n      {},\n      {\n        alpha: 1,\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height,\n        widthInPixel: output.width,\n        heightInPixel: output.height,\n        scaleCanvas: 1,\n        visibleScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n        fullScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n      }\n    );\n  }\n\n  resize() {\n    const output = this._output()!;\n    this.updateAdditionalModifier();\n    this.pipe(\"resize\", {});\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).resize(output, this._additionalModifier!);\n      }\n    });\n  }\n\n  async destroy() {\n    const parameter = await this.pipeAsync(\"destroy\", {});\n    this._initDone = false;\n    return parameter;\n  }\n\n  get timing() {\n    return this._middleware.t_timing[0] as TimingDefault|TimingAudio;\n  }\n\n  get camera() {\n    return this._middleware.t_camera[0] as Camera;\n  }\n\n  get control() {\n    return this._middleware.t_control[0] as CameraControl;\n  }\n\n  get totalTimePassed() {\n    return this._totalTimePassed;\n  }\n\n  _param<K extends Record<string, any>>(additionalParameter: K | undefined = undefined): ParameterListWithoutTime & K {\n    return Object.assign({\n      engine: this._engine!,\n      scene: this,\n      imageManager: this._imageManager,\n      layerManager: this._layerManager,\n      totalTimePassed: this._totalTimePassed,\n      output: this._output()!,\n    }, additionalParameter);\n  }\n\n  callLoading(args: {\n    timePassed: number\n    totalTimePassed: number\n  }) {\n    if (this._imageManager.isLoaded() && this._initDone) {\n      this._endTime = this.value(\"endTime\");\n      const progress = \"Click to play\";\n      this.value(\"loading\", {\n        ...args,\n        progress\n      });\n      return true;\n    }\n    const progress = this._imageManager.count\n      ? this._imageManager.loaded / this._imageManager.count\n      : \"Loading...\";\n\n    this.value(\"loading\", {\n      ...args,\n      progress\n    });\n    return false;\n  }\n\n  fixedUpdate(timePassed: number, lastCall: boolean) {\n    this.map(\"fixedUpdate\", {\n      timePassed,\n      lastCall,\n    });\n  }\n\n  isDrawFrame(timePassed: number) {\n    return this.pipeMax(\"isDrawFrame\", { timePassed }, timePassed !== 0)!;\n  }\n\n  move(timePassed:number) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    if (this._resetIntend) {\n      this.reset();\n      // Jump back?\n    } else if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset();\n      this.initSprites();\n      this._totalTimePassed = timePassed;\n    } else if (this._endTime && this._endTime <= this._totalTimePassed) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._endTime;\n      this._totalTimePassed = this._endTime;\n      // End Engine\n      this.map(\"end\", { timePassed });\n    }\n    if (this.value(\"isChunked\")) {\n      if (this.value(\"hasOneChunkedFrame\", { timePassed })) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames = this.value(\"calcFrames\", { timePassed })! - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(this.value(\"tickChunk\", {})!, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(timePassed, true);\n    }\n\n    this.map(\"update\", { timePassed });\n\n    this._layerManager.forEach(({ element, isFunction, layer, elementId }) => {\n      if (!isFunction) {\n        if ((element as ISprite).animate(timePassed)) {\n          layer.deleteById(elementId);\n        }\n      }\n    });\n  }\n\n  draw(canvasId:number) {\n    this.map(\"draw\", { canvasId });\n    const context = this._output()!.context[canvasId]!;\n    context.save();\n\n    context.setTransform(...this.viewport().m);\n\n    this._layerManager.forEach(\n      ({ layer, layerId, element, isFunction, elementId }) => {\n        if (isFunction) {\n          if (\n            (element as ISpriteFunction)(\n              this._param({\n                layerId,\n                elementId,\n                layer,\n                context,\n              })\n            )\n          ) {\n            layer.deleteById(elementId);\n          }\n        } else {\n          (element as ISprite).draw(context, this._additionalModifier!);\n        }\n      },\n      canvasId\n    );\n\n    context.restore();\n  }\n\n  initSprites(canvasId: number|undefined = undefined) {\n    const context = this._output()!.context[canvasId || 0]!;\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).callInit(context, this._additionalModifier!);\n      }\n    }, canvasId);\n    this.map(\"initSprites\", { canvasId });\n  }\n\n  resetIntend() {\n    this._resetIntend = true;\n  }\n\n  reset() {\n    this._totalTimePassed = 0;\n    this._resetIntend = false;\n    let result = this.pipe<\"reset\",LayerManager | ISpriteFunctionOrSprite[][], {}>(\n      \"reset\",\n      {},\n      new LayerManager()\n    );\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach((v) => {\n        (result as LayerManager).addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class Wait implements IAnimation{\n  _duration:number\n  constructor(duration:OrFunction<number>) {\n    this._duration = calc(duration) - 0;\n  }\n\n  run(sprite: ISprite, time: number) {\n    // return time left\n    return time - this._duration;\n  }\n}\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Wait from \"./Wait\";\n\nexport enum SequenceRunCommand {\n  FORCE_DISABLE = \"F\",\n  STOP = \"S\",\n  REMOVE = \"R\"\n}\n\nexport type TWaitTime = number;\nexport type TLabel = string;\nexport type TAnimationFunction = IAnimation['run'];\nexport type TAnimationSequence = (TWaitTime | TLabel | TAnimationFunction | IAnimation)[]\nexport type AnimationSequenceOptions = TAnimationSequence | TAnimationSequence[]\n\ninterface ISequence {\n  position: number\n  timelapsed: number\n  sequence: IAnimation[]\n  label: Record<string, number>\n  enabled: boolean\n}\n\nclass Sequence implements IAnimation {\n  sequences: ISequence[] = []\n  lastTimestamp: number = 0\n  enabled: boolean = true\n\n  constructor(...sequences: AnimationSequenceOptions) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift() as number;\n    }\n\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait: number = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift() as number;\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof (command as IAnimation).run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command } as IAnimation\n              : command as IAnimation\n          )\n          .filter(command => typeof (command as IAnimation).run === \"function\"),\n        label: sequence.reduce((arr: Record<string, number>, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n  }\n\n  reset(timelapsed: number = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0]?.reset?.(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (label in sequencePosition.label) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        } else {\n          b = b || (sequencePosition.sequence.some(seq => seq.play?.(label, timelapsed)));\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  _runSequence(sprite: ISprite, sequencePosition: ISequence, timePassed: number) {\n    let timeLeft: number = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      const res = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (res === true) {\n        timeLeft = 0;\n      } else if (res === false) {\n        return -1;\n      } else if (res === SequenceRunCommand.FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.REMOVE) {\n        return true;\n      }\n\n      timeLeft = res as number;\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite: ISprite, time:number, is_difference:boolean=false) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this._runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\nexport default Sequence;\n","import type { OutputInfo } from \"../Engine\"\nimport type { AdditionalModifier, ParameterListWithoutTime } from \"../Scene\"\nimport type { OrFunction, OrPromise } from \"../helper\";\nimport type Layer from \"../Layer\";\nimport Sequence from \"../Animations/Sequence\";\nimport { IAnimation } from \"../Animations/Animation\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\n\nexport type TTagParameter = string | string[] | ((value: string, index: number, array: string[]) => unknown)\nexport interface ISprite {\n    p: SpriteBaseOptionsInternal & Record<string, any>\n    changeToPathInit?: (from: number[][][] | string, to: number[][][] | string) => [number[][][], number[][][]]\n    changeToPath?: (progress: number, data: {\n        pathFrom: number[][][]\n        pathTo: number[][][]\n    }) => number[][][]\n    getElementsByTag: (tag: TTagParameter) => ISprite[]\n    play: (label: string, timelapsed?: number) => void\n    resize: (output: OutputInfo, additionalModifier: AdditionalModifier) => OrPromise<void>\n    callInit: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => OrPromise<void>\n    animate: (timepassed: number) => boolean\n    draw: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => void\n    detect: (context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number) => ISprite | \"c\" | undefined\n    detectDraw: (context: CanvasRenderingContext2D, color: string) => void\n}\n\nexport type ISpriteFunction = (params: ParameterListWithoutTime & {\n    layerId: number\n    elementId: number\n    layer: Layer\n    context: CanvasRenderingContext2D,\n}) => number | boolean\n\nexport type ISpriteFunctionOrSprite = ISpriteFunction | ISprite\n\n\n\nexport interface SpriteBaseOptions {\n    animation?: OrFunction<Sequence | IAnimation[]>\n    enabled?: OrFunction<boolean>\n    isClickable?: OrFunction<boolean>\n    tag?: OrFunction<string[] | string>\n}\n\nexport interface SpriteBaseOptionsInternal {\n    animation: Sequence | undefined\n    enabled: boolean\n    isClickable: boolean\n    tag: string[]\n}\nexport type TParameterList<T, R> = {\n    [P in keyof R & keyof T]?: R[P] | ((value: T[P], givenParameter: T) => R[P]);\n}\n\nexport class SpriteBase<O extends SpriteBaseOptions = SpriteBaseOptions, P extends SpriteBaseOptionsInternal = SpriteBaseOptionsInternal> implements ISprite {\n    _needInit = true\n    p: P\n    constructor(givenParameter: O) {\n        this.p = this._parseParameterList(this._getParameterList(), givenParameter);\n    }\n\n    _parseParameterList(parameterList: TParameterList<O, P>, givenParameter: O): P {\n        const parameterEntries = Object.entries(parameterList as ReturnType<this[\"_getParameterList\"]>)\n        const valueEntries = parameterEntries.map(\n            ([name, d]) => {\n                const givenValue = givenParameter[name as keyof O]\n                return [name,\n                    typeof d === \"function\"\n                        ? d(givenValue, givenParameter)\n                        : ifNull(calc(givenValue), d)\n                ];\n            }\n        );\n        return Object.fromEntries(valueEntries)\n    }\n\n    _getBaseParameterList() {\n        return {\n            // animation\n            animation: (value: OrFunction<Sequence | IAnimation[]> | undefined, givenParameter: O) => {\n                const result = calc(value);\n                return Array.isArray(result) ? new Sequence(result) : result;\n            },\n            // if it's rendering or not\n            enabled: true,\n            // if you can click it or not\n            isClickable: false,\n            // tags to mark the sprites\n            tag: (value: OrFunction<string | undefined | string[]>, givenParameter: O) => {\n                const v: string | string[] | undefined = calc(value)\n                return Array.isArray(v) ? v : v ? [v] : [];\n            }\n        }\n    }\n\n    _getParameterList():TParameterList<O,P> {\n        return this._getBaseParameterList() as TParameterList<O, P>\n    }\n\n    getElementsByTag(tag: TTagParameter):ISprite[] {\n        if (typeof tag === \"function\") {\n            if (this.p.tag.filter(tag).length) {\n                return [this];\n            }\n        } else {\n            const aTag = Array.isArray(tag) ? tag : [tag];\n            if (aTag.filter(tag => this.p.tag.includes(tag)).length) {\n                return [this];\n            }\n        }\n        return [];\n    }\n\n\n    // Animation-Funktion\n    animate(timepassed: number) {\n        if (this.p.animation) {\n            // run animation\n            if (this.p.animation.run(this, timepassed, true) === true) {\n                // disable\n                this.p.enabled = false;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    play(label = \"\", timelapsed = 0) {\n        if (this.p.animation) {\n            this.p.animation.play?.(label, timelapsed);\n        }\n    }\n\n    init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n    callInit(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier):OrPromise<void> {\n        if (this._needInit) {\n            this.init(context, additionalModifier);\n            this._needInit = false;\n        }\n    }\n\n\n    resize(output: OutputInfo, additionalModifier: AdditionalModifier):OrPromise<void> { }\n\n    _detectHelperCallback(p: {\n        enabled: boolean\n        isClickable: boolean\n        x: number\n        y: number\n        scaleX: number\n        scaleY: number\n        rotation: number\n    }, context: CanvasRenderingContext2D, x: number, y: number, callback: () => boolean) {\n        let a = false;\n        if (p.enabled && p.isClickable) {\n            context.save();\n            context.translate(p.x, p.y);\n            context.scale(p.scaleX, p.scaleY);\n            context.rotate(p.rotation);\n            context.beginPath();\n            a = callback();\n            context.restore();\n        }\n        return a ? this as ISprite : undefined;\n    }\n\n    _detectHelper({\n        enabled,\n        isClickable,\n        x = 0,\n        y = 0,\n        width = 0,\n        height = 0,\n        scaleX = 1,\n        scaleY = 1,\n        rotation = 0\n    }: {\n        enabled: boolean\n        isClickable: boolean\n        x?: number\n        y?: number\n        width?: number\n        height?: number\n        scaleX?: number\n        scaleY?: number\n        rotation?: number\n    }, context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number, moveToCenter: boolean, callback?: (hw: number, hh: number) => boolean) {\n        let a = false;\n        if (enabled && isClickable) {\n            const hw = width / 2;\n            const hh = height / 2;\n            context.save();\n            if (moveToCenter) {\n                context.translate(x + hw, y + hh);\n            } else {\n                context.translate(x, y);\n            }\n            context.scale(scaleX, scaleY);\n            context.rotate(rotation);\n            context.beginPath();\n            if (callback) {\n                a = callback(hw, hh);\n            } else {\n                context.rect(-hw, -hh, width, height);\n                context.closePath();\n                a = context.isPointInPath(coordinateX, coordinateY);\n            }\n            context.restore();\n        }\n        return a ? this as ISprite: undefined;\n    }\n\n    detectDraw(context: CanvasRenderingContext2D, color: string) { }\n\n    detect(context: CanvasRenderingContext2D, x: number, y: number):ISprite | \"c\" | undefined { return undefined }\n\n    draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TParameterList } from \"./Sprite\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\nconst degToRad = Math.PI / 180;\n\n\nexport interface SpriteCircleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\nexport interface SpriteCircleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string\n}\n\nexport const CircleParameterList = {\n  // position\n  x: 0 as number,\n  y: 0 as number,\n  // rotation\n  rotation: (value: SpriteCircleOptions['rotation'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(\n      calc(value),\n      ifNull(\n        calc(givenParameter.rotationInRadian),\n        ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n      )\n    ) as number\n  },\n  // scalling\n  scaleX: (value: SpriteCircleOptions['scaleX'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  scaleY: (value: SpriteCircleOptions['scaleY'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  // alpha\n  alpha: 1,\n  // blending\n  compositeOperation: \"source-over\",\n  // color\n  color: \"#fff\"\n}\n\n// Sprite\n// Draw a Circle\nexport default class Circle extends SpriteBase<SpriteCircleOptions, SpriteCircleOptionsInternal> implements ISprite {\n  constructor(givenParameter: SpriteCircleOptions) {\n    super(givenParameter)\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList) as TParameterList<SpriteCircleOptions, SpriteCircleOptionsInternal>\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelperCallback(this.p, context, x, y, () => {\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      return context.isPointInPath(x, y);\n    });\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.beginPath();\n      context.fillStyle = this.p.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      context.fill();\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine.js\"\nimport { OrFunction } from \"../helper.js\"\nimport { AdditionalModifier } from \"../Scene.js\"\nimport { CircleParameterList } from \"./Circle.js\"\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TTagParameter } from \"./Sprite.js\"\n\nexport interface SpriteGroupOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  sprite?: OrFunction<ISprite>\n}\n\nexport interface SpriteGroupOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number|undefined\n  y: number|undefined\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  sprite: ISprite[]\n}\n\n\nexport default class Group<O extends SpriteGroupOptions = SpriteGroupOptions, P extends SpriteGroupOptionsInternal = SpriteGroupOptionsInternal> extends SpriteBase<O, P> {\n  constructor(givenParameter:O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      sprite: []\n    });\n  }\n\n  getElementsByTag(tag: TTagParameter):ISprite[] {\n    let result:ISprite[] = super.getElementsByTag(tag);\n    for (const sprite of this.p.sprite) {\n      const ans = sprite.getElementsByTag(tag);\n      if (ans) {\n        result = result.concat(ans);\n      }\n    }\n    return result;\n  }\n\n  // overwrite change\n  animate(timepassed:number) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        spriteFinished = spriteFinished || sprite.animate(timepassed) === true;\n      }\n    }\n\n    if (this.p.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.p.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.p.animation) {\n      this.p.animation.play?.(label, timelapsed);\n    }\n    for (const sprite of this.p.sprite) {\n      sprite.play?.(label, timelapsed);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    for (const sprite of this.p.sprite) {\n      sprite.resize(output, additionalModifier);\n    }\n  }\n\n  callInit(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    super.callInit(context, additionalModifier);\n    for (let sprite of this.p.sprite) {\n      sprite.callInit(context, additionalModifier);\n    }\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        sprite.detectDraw(context, color);\n      }\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        const a = sprite.detect(context, x, y);\n        if (a) return a;\n      }\n    }\n    return undefined;\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      if (this.p.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.p.alpha;\n      }\n\n      context.save();\n      context.translate(this.p.x!, this.p.y!);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      // draw all sprites\n      for (const sprite of this.p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport Group, { SpriteGroupOptions } from \"./Group.js\";\nimport { SpriteBaseOptions, ISprite } from \"./Sprite\";\n\nexport interface SpriteEmitterOptions<P extends SpriteBaseOptions = SpriteBaseOptions & Record<string, any>> {\n  count?: number\n  class: { new(options: P): ISprite }\n  self?: SpriteGroupOptions\n}\n\nexport default class Emitter<P> extends Group {\n  constructor(givenParameter: SpriteEmitterOptions<P>) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.p.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      const parameter: P = Object.entries(givenParameter).reduce<P>((p, [index, value]) => {\n        if ([\"self\", \"class\", \"count\"].includes(index)) {\n          return p;\n        }\n        // @ts-ignore\n        p[index] = calc(value, i)\n        return p\n      }, {} as P)\n      this.p.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport type { OutputInfo } from \"../Engine\";\n\nexport interface SpriteFastBlurOptions extends SpriteBaseOptions {\n  x?: OrFunction<undefined | number>\n  y?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  scaleX?: OrFunction<undefined | number>\n  scaleY?: OrFunction<undefined | number>\n  scale?: OrFunction<undefined | number>\n  alpha?: OrFunction<undefined | number>\n  gridSize?: OrFunction<undefined | number>\n  darker?: OrFunction<undefined | number>\n  pixel?: OrFunction<undefined | boolean>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n  compositeOperation?: OrFunction<undefined | GlobalCompositeOperation>\n}\n\nexport interface SpriteFastBlurOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  scaleX?: number\n  scaleY?: number\n  gridSize: undefined | number\n  darker: number\n  pixel: boolean\n  clear: boolean\n  norm: boolean\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n}\n\nexport default class FastBlur<O extends SpriteFastBlurOptions = SpriteFastBlurOptions, P extends SpriteFastBlurOptionsInternal = SpriteFastBlurOptionsInternal> extends SpriteBase<O,P> {\n  _temp_canvas: HTMLCanvasElement | undefined;\n  _currentGridSize: number | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value: SpriteFastBlurOptions['norm'], givenParameter: SpriteFastBlurOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // scalling\n      scaleX: (value: SpriteFastBlurOptions['scaleX'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteFastBlurOptions['scaleY'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      // alpha\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    });\n  }\n\n  _generateTempCanvas(additionalModifier: AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / p.scaleX!);\n      this._temp_canvas.height = Math.ceil(h / p.scaleY!);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output: OutputInfo | undefined, additionalModifier: AdditionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.p.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this.resize(undefined, additionalModifier);\n      }\n\n      const a = p.alpha * additionalModifier.alpha,\n        w = p.width!,\n        h = p.height!,\n        targetW = this._temp_canvas!.width,\n        targetH = this._temp_canvas!.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx!.globalCompositeOperation = \"copy\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (p.darker > 0) {\n          this._tctx!.globalCompositeOperation = p.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx!.fillStyle = \"rgba(0,0,0,\" + p.darker + \")\";\n          this._tctx!.fillRect(0, 0, targetW, targetH);\n        }\n\n        // @ts-ignore\n        this.additionalBlur?.(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (p.clear) {\n          context.globalCompositeOperation = \"source-over\";\n          context.globalAlpha = 1;\n          context.clearRect(p.x!, p.y!, w, h);\n        }\n        context.globalCompositeOperation = p.compositeOperation;\n        context.globalAlpha = a;\n        const oldValue = context.imageSmoothingEnabled;\n        context.imageSmoothingEnabled = !p.pixel;\n        context.drawImage(\n          this._temp_canvas!,\n          0,\n          0,\n          targetW,\n          targetH,\n          p.x!,\n          p.y!,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = oldValue;\n      }\n    } else {\n      // optional: clear screen\n      if (p.clear) {\n        if (!p.x) {\n          p.x = additionalModifier.x;\n        }\n        if (!p.y) {\n          p.y = additionalModifier.y;\n        }\n        if (!p.width) {\n          p.width = additionalModifier.width;\n        }\n        if (!p.height) {\n          p.height = additionalModifier.height;\n        }\n        context.clearRect(p.x, p.y, p.width, p.height);\n      }\n    }\n  }\n}\n","export enum Position {\n    LEFT_TOP = 0,\n    CENTER = 1\n}","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nexport interface SpriteTextOptions extends SpriteCircleOptions {\n  text?: OrFunction<string|string[]>\n  font?: OrFunction<undefined|string>\n  position?: OrFunction<undefined|Position>\n  borderColor?: OrFunction<undefined|string>\n  lineWidth?:  OrFunction<undefined|number>\n}\n\nexport interface SpriteTextOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  text: string\n  font: string\n  position: Position\n  borderColor: undefined|string\n  color: undefined|string\n  lineWidth: number\n}\n\nexport default class Text extends SpriteBase<SpriteTextOptions, SpriteTextOptionsInternal> implements ISprite {\n  constructor(givenParameters:SpriteTextOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList, {\n      text: (value:SpriteTextOptions['text']) => {\n        const text = calc(value)\n        return (Array.isArray(text) ? text.join('') : text) || ''\n      },\n      font: '2em monospace',\n      position: Position.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    })\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled && this.p.isClickable) {\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.font = this.p.font;\n      context.fillStyle = color;\n      context.fillText(this.p.text, 0, 0);\n      context.restore();\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number):\"c\" {\n    return \"c\" \n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      context.font = this.p.font;\n\n      if (this.p.color) {\n        context.fillStyle = this.p.color;\n        context.fillText(this.p.text, 0, 0);\n      }\n\n      if (this.p.borderColor) {\n        context.strokeStyle = this.p.borderColor;\n        context.lineWidth = this.p.lineWidth;\n        context.strokeText(this.p.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n","import { TinyColor } from \"@ctrl/tinycolor\";\nimport { OutputInfo } from \"../Engine.js\";\nimport calc from \"../func/calc.js\";\nimport ifNull from \"../func/ifnull.js\";\nimport type { OrFunction } from \"../helper.js\";\nimport type { AdditionalModifier } from \"../Scene.js\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nexport interface SpriteParticleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\ntype TinyColorRGB = ReturnType<TinyColor['toRgb']>\n\nexport interface SpriteParticleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string | TinyColorRGB\n}\n\nclass Particle extends SpriteBase<SpriteParticleOptions, SpriteParticleOptionsInternal> {\n  _currentScaleX: number | undefined;\n  _currentPixelSmoothing: boolean = false;\n  static _Gradient: HTMLCanvasElement[][][]\n\n  constructor(givenParameter: SpriteParticleOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      x: 0,\n      y: 0,\n      // scalling\n      scaleX: (value: SpriteParticleOptions['scaleX'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteParticleOptions['scaleY'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      color: '#FFF',\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    })\n  }\n\n  static getGradientImage(r: number, g: number, b: number) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      const length = 256 >> gradientResolution;\n      Particle._Gradient = Array.from({ length }, (a) =>\n        Array.from({ length }, (a) => Array.from({ length }))\n      );\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr: number, cg: number, cb: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\")!;\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._currentScaleX = undefined;\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      // faster than: if (!(this.color instanceof TinyColor && this.color.model === 'rgb')) {\n      if (!p.color || !(p.color as TinyColorRGB).r) {\n        p.color = new TinyColor(p.color).toRgb();\n      }\n      if (this._currentScaleX !== p.scaleX) {\n        this._currentScaleX = p.scaleX;\n        this._currentPixelSmoothing =\n          (p.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n          gradientSize;\n      }\n      const { r, g, b } = p.color as TinyColorRGB;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled = this._currentPixelSmoothing;\n      context.drawImage(\n        Particle.getGradientImage(r, g, b),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        p.x - p.scaleX / 2,\n        p.y - p.scaleY / 2,\n        p.scaleX,\n        p.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Callback from './Sprites/Callback'\nimport Canvas from './Sprites/Canvas'\nimport Circle from './Sprites/Circle'\nimport Emitter from './Sprites/Emitter'\nimport FastBlur from './Sprites/FastBlur'\nimport Group from './Sprites/Group'\nimport Image from './Sprites/Image'\nimport Text from './Sprites/Text'\nimport Particle from './Sprites/Particle'\nimport Path from './Sprites/Path'\nimport Rect from './Sprites/Rect'\nimport Scroller from './Sprites/Scroller'\nimport StackBlur from './Sprites/StackBlur'\nimport StarField from './Sprites/StarField'\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StarField\n};\n","import { AdditionalModifier } from \"../Scene.js\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\n\n\nexport type SpriteCallback = (context:CanvasRenderingContext2D, timePassed:number, additionalParameter:AdditionalModifier, sprite:ISprite) => void\n\nexport interface SpriteCallbackOptions extends SpriteBaseOptions {\n  callback?: SpriteCallback\n}\n\nexport interface SpriteCallbackOptionsInternal extends SpriteBaseOptionsInternal {\n  callback: SpriteCallback\n}\n\n\nexport default class Callback extends SpriteBase<SpriteCallbackOptions,SpriteCallbackOptionsInternal> {\n  _timePassed = 0;\n\n  constructor(givenParameter:SpriteCallbackOptions|SpriteCallbackOptions['callback']) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter } as SpriteCallbackOptions;\n    }\n    super(givenParameter as SpriteCallbackOptions);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      callback: (v:SpriteCallback|undefined) => (typeof v === undefined ? () => {} : v) as SpriteCallback\n    });\n  }\n\n  animate(timePassed:number) {\n    if (this.p.enabled) {\n      this._timePassed += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context:CanvasRenderingContext2D, additionalParameter:AdditionalModifier) {\n    if (this.p.enabled) {\n      this.p.callback(context, this._timePassed, additionalParameter, this);\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\nimport Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n\nexport interface SpriteCanvasOptions extends SpriteGroupOptions {\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  canvasWidth?: OrFunction<number>\n  canvasHeight?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  gridSize?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  isDrawFrame?: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport interface SpriteCanvasOptionsInternal extends SpriteGroupOptionsInternal {\n  width: number|undefined\n  height: number|undefined\n  canvasWidth: number|undefined\n  canvasHeight: number|undefined\n  compositeOperation: GlobalCompositeOperation\n  gridSize: number|undefined\n  norm: boolean\n  isDrawFrame: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport default class Canvas extends Group<SpriteCanvasOptions, SpriteCanvasOptionsInternal>  {\n  _currentGridSize:number|undefined;\n  _drawFrame:number = 2;\n  _temp_canvas: undefined|HTMLCanvasElement\n  _tctx: undefined|CanvasRenderingContext2D\n  \n  constructor(givenParameter:SpriteCanvasOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      canvasWidth: undefined,\n      canvasHeight: undefined,\n      gridSize: undefined,\n      compositeOperation: \"source-over\",\n      norm: (value: SpriteCanvasOptions[\"norm\"], givenParameter:SpriteCanvasOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      isDrawFrame: (value: SpriteCanvasOptions[\"isDrawFrame\"], givenParameter:SpriteCanvasOptions) => ifNull(value, 1)\n    });\n  }\n\n  _generateTempCanvas(additionalModifier:AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.canvasWidth && p.canvasHeight) {\n      this._temp_canvas.width = p.canvasWidth;\n      this._temp_canvas.height = p.canvasHeight;\n    } else if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / p.scaleX);\n      this._temp_canvas.height = Math.round(h / p.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n  }\n\n  _normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  _copyCanvas(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (\n      this._temp_canvas &&\n      this._currentGridSize !== p.gridSize &&\n      !p.canvasWidth\n    ) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n      this._drawFrame = 2;\n    }\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._copyCanvas(additionalModifier);\n    super.resize(output!, additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this._copyCanvas(additionalModifier);\n      }\n      this._drawFrame = Math.max(\n        this._drawFrame - 1,\n        calc(p.isDrawFrame, context, additionalModifier)\n      );\n      const w = p.width!,\n        h = p.height!,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas!.width,\n        th = this._temp_canvas!.height;\n\n      if (this._drawFrame) {\n        this._tctx!.textBaseline = \"middle\";\n        this._tctx!.textAlign = \"center\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.globalCompositeOperation = \"source-over\";\n        this._tctx!.save();\n        // draw all sprites\n        const cam = additionalModifier.cam;\n        if (p.norm && cam) {\n          const scale = Math.max(tw, th) / 2;\n          this._tctx!.translate(tw / 2, th / 2);\n          this._tctx!.scale(scale, scale);\n          this._tctx!.scale(cam.zoom, cam.zoom);\n          this._tctx!.translate(-cam.x, -cam.y);\n        }\n        for (const sprite of p.sprite) {\n          sprite.draw(\n            this._tctx!,\n            p.norm\n              ? Object.assign({}, additionalModifier, {\n                  alpha: 1,\n                  widthInPixel: tw,\n                  heightInPixel: th\n                })\n              : {\n                  alpha: 1,\n                  x: 0,\n                  y: 0,\n                  width: tw,\n                  height: th,\n                  widthInPixel: tw,\n                  heightInPixel: th,\n                  scaleCanvas: 1,\n                  visibleScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                  fullScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                }\n          );\n        }\n        this._tctx!.restore();\n      }\n\n      context.save();\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.translate(p.x! + wh, p.y! + hh);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(this._temp_canvas!, 0, 0, tw, th, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import type { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport ImageManager from \"../ImageManager\";\nimport { Position } from \"../Position\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions, SpriteCircleOptionsInternal } from \"./Circle\";\nimport { SpriteBase } from \"./Sprite\";\n\nexport interface SpriteImageOptions extends SpriteCircleOptions {\n  image: OrFunction<HTMLImageElement | string>\n  position?: OrFunction<Position>\n  frameX?: OrFunction<number>\n  frameY?: OrFunction<number>\n  frameWidth?: OrFunction<number>\n  frameHeight?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  normCover?: OrFunction<boolean>\n  normToScreen?: OrFunction<boolean>\n  clickExact?: OrFunction<boolean>\n  tint?: OrFunction<number>\n}\n\nexport interface SpriteImageOptionsInternal extends SpriteCircleOptionsInternal {\n  image: HTMLImageElement\n  position: Position\n  frameX: number\n  frameY: number\n  frameWidth: number\n  frameHeight: number\n  width: number\n  height: number\n  norm: boolean\n  normCover: boolean\n  normToScreen: boolean\n  clickExact: boolean\n  tint: number\n}\n\n// Sprite\n// Draw a Image\nclass Image extends SpriteBase<SpriteImageOptions, SpriteImageOptionsInternal> {\n  _currentTintKey: string | undefined\n  _normScale: number | undefined\n  _temp_canvas: HTMLCanvasElement | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: SpriteImageOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      // set image\n      image: (v: OrFunction<HTMLImageElement | string>) => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Position.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      width: undefined,\n      height: undefined,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n      clickExact: false,\n      color: \"#FFF\",\n      tint: 0\n    });\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    const frameWidth = p.frameWidth || p.image.width;\n    const frameHeight = p.frameHeight || p.image.height;\n\n    this._normScale = p.normToScreen\n      ? p.normCover\n        ? Math.max(\n          additionalModifier.fullScreen.width / frameWidth,\n          additionalModifier.fullScreen.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.fullScreen.width / frameWidth,\n            additionalModifier.fullScreen.height / frameHeight\n          )\n          : 1\n      : p.normCover\n        ? Math.max(\n          additionalModifier.width / frameWidth,\n          additionalModifier.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.width / frameWidth,\n            additionalModifier.height / frameHeight\n          )\n          : 1;\n  }\n\n  _tintCacheKey() {\n    const frameWidth = this.p.frameWidth || this.p.image.width;\n    const frameHeight = this.p.frameHeight || this.p.image.height;\n    return [\n      this.p.tint,\n      frameWidth,\n      frameHeight,\n      this.p.color,\n      this.p.frameX,\n      this.p.frameY\n    ].join(\";\");\n  }\n\n  _temp_context(frameWidth: number, frameHeight: number): CanvasRenderingContext2D {\n    if (!this._temp_canvas) {\n      this._temp_canvas = document.createElement(\"canvas\");\n      this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    }\n    this._temp_canvas.width = frameWidth;\n    this._temp_canvas.height = frameHeight;\n    return this._tctx!;\n  }\n\n  detectDraw(context: CanvasRenderingContext2D, color: string) {\n    const p = this.p\n    if (p.enabled && p.isClickable && p.clickExact) {\n      const frameWidth = p.frameWidth || p.image.width;\n      const frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) * this._normScale! * p.scaleX;\n      const sY =\n        (p.height ? p.height : frameHeight) *\n        this._normScale! *\n        p.scaleY;\n      const isTopLeft = p.position === Position.LEFT_TOP;\n\n      const tctx = this._temp_context(frameWidth, frameHeight);\n      tctx.globalAlpha = 1;\n      tctx.globalCompositeOperation = \"source-over\";\n      tctx.fillStyle = color;\n      tctx.fillRect(0, 0, frameWidth, frameHeight);\n      tctx.globalCompositeOperation = \"destination-atop\";\n      tctx.drawImage(\n        p.image,\n        p.frameX,\n        p.frameY,\n        frameWidth,\n        frameHeight,\n        0,\n        0,\n        frameWidth,\n        frameHeight\n      );\n\n      context.save();\n      context.translate(p.x, p.y);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(\n        this._temp_canvas!,\n        0,\n        0,\n        frameWidth,\n        frameHeight,\n        isTopLeft ? 0 : -sX / 2,\n        isTopLeft ? 0 : -sY / 2,\n        sX,\n        sY\n      );\n      context.restore();\n      this._currentTintKey = undefined;\n    }\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    if (this.p.enabled && this.p.isClickable && this.p.clickExact) return \"c\";\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.image && p.alpha > 0) {\n      const frameWidth = p.frameWidth || p.image.width,\n        frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) *\n        this._normScale! *\n        p.scaleX,\n        sY =\n          (p.height ? p.height : frameHeight) *\n          this._normScale! *\n          p.scaleY;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      const isCenter = p.position !== Position.LEFT_TOP;\n\n      let img: CanvasImageSource = p.image\n      let frameX = p.frameX\n      let frameY = p.frameY\n\n      if (p.tint) {\n        const key = this._tintCacheKey()\n        if (this._currentTintKey !== key) {\n          const tctx = this._temp_context(frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"source-over\";\n          tctx.clearRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = p.tint;\n          tctx.fillStyle = p.color;\n          tctx.fillRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"destination-atop\";\n          tctx.drawImage(\n            p.image,\n            p.frameX,\n            p.frameY,\n            frameWidth,\n            frameHeight,\n            0,\n            0,\n            frameWidth,\n            frameHeight\n          );\n          this._currentTintKey = key;\n        }\n        img = this._temp_canvas!\n        frameX = 0\n        frameY = 0\n      }\n\n      let cx = 0\n      let cy = 0\n      if (isCenter) {\n        cx = - sX / 2\n        cy = - sY / 2\n      }\n\n      if (p.rotation == 0) {\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          p.x + cx,\n          p.y + cy,\n          sX,\n          sY\n        );\n      } else {\n        context.save();\n        context.translate(p.x, p.y);\n        context.rotate(p.rotation);\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          cx,\n          cy,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Image;\n","import Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n// @ts-ignore\nimport pasition from \"pasition\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\n\nexport interface SpritePathOptions extends SpriteGroupOptions {\n  path?: OrFunction<number[][][]|string|Path2D>\n  color?: OrFunction<string|undefined>\n  borderColor?: OrFunction<string|undefined>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  lineWidth?: OrFunction<number>\n  clip?: OrFunction<boolean>\n  fixed?: OrFunction<boolean>\n  polyfill?: OrFunction<boolean>\n}\n\nexport interface SpritePathOptionsInternal extends SpriteGroupOptionsInternal {\n  path:  number[][][]|string|Path2D\n  color: string|undefined\n  borderColor: string|undefined\n  compositeOperation: GlobalCompositeOperation\n  lineWidth: number\n  clip: boolean\n  fixed: boolean\n  polyfill: boolean\n}\n\nexport default class Path extends Group<SpritePathOptions,SpritePathOptionsInternal> {\n  _oldPath:number[][][]|string|Path2D|undefined;\n  _path2D:Path2D = new Path2D();\n  \n  constructor(givenParameters:SpritePathOptions) {\n    super(givenParameters);\n\n    if (this.p.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.p.polyfill = false;\n        }\n      }\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from: number[][][] | string, to: number[][][] | string): number[][][] {\n    return pasition._preprocessing(\n      typeof from === \"string\" ? pasition.path2shapes(from) : from,\n      typeof to === \"string\" ? pasition.path2shapes(to) : to\n    );\n  }\n  \n  changeToPath(progress: number, data: {\n    pathFrom: number[][][]\n    pathTo: number[][][]\n  }) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false, () => {\n      return context.isPointInPath(this._path2D, x, y);\n    });\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      const a = p.alpha * additionalModifier.alpha;\n      if (this._oldPath !== p.path) {\n        if (p.polyfill && typeof p.path === \"string\") {\n          p.path = pasition.path2shapes(p.path);\n        }\n        if (Array.isArray(p.path)) {\n          this._path2D = new Path2D();\n          p.path.forEach(curve => {\n            this._path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this._path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this._path2D.closePath();\n          });\n        } else if (p.path instanceof Path2D) {\n          this._path2D = p.path;\n        } else {\n          this._path2D = new Path2D(p.path);\n        }\n        this._oldPath = p.path;\n      }\n\n      let scaleX = p.scaleX,\n        scaleY = p.scaleY;\n\n      if (p.fixed) {\n        if (scaleX == 0) {\n          scaleX = Number.EPSILON;\n        }\n        if (scaleY == 0) {\n          scaleY = Number.EPSILON;\n        }\n      }\n\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(p.x!, p.y!);\n      context.scale(scaleX, scaleY);\n      context.rotate(p.rotation);\n\n      if (p.color) {\n        context.fillStyle = p.color;\n        context.fill(this._path2D);\n      }\n\n      context.save();\n\n      if (p.clip) {\n        context.clip(this._path2D);\n        if (p.fixed) {\n          context.rotate(-p.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-p.x!, -p.y!);\n        }\n      }\n\n      // draw all sprites\n      for (const sprite of p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (p.borderColor) {\n        context.strokeStyle = p.borderColor;\n        context.lineWidth = p.lineWidth;\n        context.stroke(this._path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\n\nexport interface SpriteRectOptions extends SpriteCircleOptions {\n  position?: OrFunction<undefined | Position>\n  borderColor?: OrFunction<undefined | string>\n  lineWidth?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n}\n\nexport interface SpriteRectOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  position: Position\n  borderColor: undefined | string\n  color: undefined | string\n  lineWidth: number\n  clear: boolean\n  norm: boolean\n}\n\n\n// Sprite\n// Draw a Circle\nclass Rect extends SpriteBase<SpriteRectOptions, SpriteRectOptionsInternal> implements ISprite {\n  constructor(givenParameters: SpriteRectOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      color: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value: SpriteRectOptions[\"norm\"], givenParameter: SpriteRectOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // relative position\n      position: Position.CENTER\n    })\n  }\n\n  _normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    if (this.p.norm || this.p.width === undefined) {\n      this.p.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.p.norm || this.p.height === undefined) {\n      this.p.height = additionalModifier.visibleScreen.height;\n    }\n    if (this.p.norm || this.p.x === undefined) {\n      this.p.x = additionalModifier.visibleScreen.x;\n      if (this.p.position === Position.CENTER) {\n        this.p.x += this.p.width / 2;\n      }\n    }\n    if (this.p.norm || this.p.y === undefined) {\n      this.p.y = additionalModifier.visibleScreen.y;\n      if (this.p.position === Position.CENTER) {\n        this.p.y += this.p.height / 2;\n      }\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, this.p.position === Position.LEFT_TOP);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      if (p.rotation === 0 && p.position === Position.LEFT_TOP) {\n        if (p.clear) {\n          context.clearRect(p.x!, p.y!, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(p.x!, p.y!, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(p.x!, p.y!, p.width!, p.height!);\n          context.stroke();\n        }\n      } else {\n        let hw = p.width! / 2;\n        let hh = p.height! / 2;\n        context.save();\n        if (p.position === Position.LEFT_TOP) {\n          context.translate(p.x! + hw, p.y! + hh);\n        } else {\n          context.translate(p.x!, p.y!);\n        }\n        context.scale(p.scaleX, p.scaleY);\n        context.rotate(p.rotation);\n        if (p.clear) {\n          context.clearRect(-hw, -hh, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(-hw, -hh, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(-hw, -hh, p.width!, p.height!);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Rect;\n","import calc from \"../func/calc\";\nimport { OrFunction } from \"../helper\";\nimport Emitter from \"./Emitter\";\nimport Text, { SpriteTextOptions } from \"./Text\";\n\nexport interface SpriteScollerOptions extends SpriteTextOptions {\n  text: OrFunction<string|string[]>\n}\n\n\nexport default class Scroller extends Emitter<SpriteTextOptions> {\n  constructor(givenParameters:SpriteScollerOptions) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: (index:number) => characterList[index],\n        enabled: (index:number) =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled)\n      })\n    );\n  }\n}\n","import FastBlur, { SpriteFastBlurOptions, SpriteFastBlurOptionsInternal } from \"./FastBlur\";\nimport { imageDataRGBA } from \"stackblur-canvas\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStackBlurOptions extends SpriteFastBlurOptions {\n  onCanvas?: OrFunction<boolean>\n  radius?: OrFunction<undefined|number>\n  radiusPart?: OrFunction<undefined|number>\n  radiusScale?: OrFunction<boolean>\n}\n\nexport interface SpriteStackBlurOptionsInternal extends SpriteFastBlurOptionsInternal {\n  onCanvas: boolean\n  radius: undefined|number\n  radiusPart: undefined|number\n  radiusScale: boolean\n}\n\nexport default class StackBlur extends FastBlur<SpriteStackBlurOptions,SpriteStackBlurOptionsInternal> {\n  _currentRadiusPart:number|undefined\n\n    constructor(givenParameter:SpriteStackBlurOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined,\n      radiusScale: true\n    });\n  }\n\n  normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm && p.onCanvas) {\n      p.x = 0;\n      p.y = 0;\n      p.width = additionalModifier.widthInPixel;\n      p.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    super.resize(output, additionalModifier);\n    if (this.p.radiusPart) {\n      this.p.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW:number, targetH:number, additionalModifier:AdditionalModifier) {\n    const imageData = this._tctx!.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius || 1);\n    this._tctx!.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (\n        p.radius === undefined ||\n        this._currentRadiusPart !== p.radiusPart\n      ) {\n        p.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            p.radiusPart!\n        );\n        this._currentRadiusPart = p.radiusPart!;\n      }\n      const radius = Math.round(\n        p.radius! *\n          ((p.radiusScale &&\n            additionalModifier.cam) ? additionalModifier.cam.zoom : 1) /\n              additionalModifier.scaleCanvas)\n      ;\n      if (radius) {\n        if (p.onCanvas) {\n          if (p.width === undefined || p.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(p.x!);\n          const y = Math.round(p.y!);\n          const w = Math.round(p.width!);\n          const h = Math.round(p.height!);\n          const imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OrFunction } from \"../helper\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStarFieldOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  alpha?: OrFunction<number>\n  lineWidth?: OrFunction<number>\n  count?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  moveX?: OrFunction<undefined|number>\n  moveY?: OrFunction<undefined|number>\n  moveZ?: OrFunction<undefined|number>\n  highScale?: OrFunction<undefined|boolean>\n  color?: OrFunction<undefined|string>\n}\n\nexport interface SpriteStarFieldOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  alpha: number\n  count: number\n  lineWidth: number\n  compositeOperation: GlobalCompositeOperation\n  moveX: number\n  moveY: number\n  moveZ: number\n  highScale: boolean\n  color: string\n}\n\n\n\n// Sprite\n// Draw a Circle\nexport default class StarField extends SpriteBase<SpriteStarFieldOptions, SpriteStarFieldOptionsInternal> {\n  _starsX: number[] = []\n  _starsY: number[] = []\n  _starsZ: number[] = []\n  _starsOldX: number[] = []\n  _starsOldY: number[] = []\n  _starsNewX: number[] = []\n  _starsNewY: number[] = []\n  _starsEnabled: boolean[] = []\n  _starsLineWidth: number[] = []\n  _centerX: number = 0\n  _centerY: number = 0\n  _scaleZ: number = 0\n\n  constructor(givenParameters: SpriteStarFieldOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0,\n      moveY: 0,\n      moveZ: 0,\n      lineWidth: undefined,\n      highScale: true,\n      color: \"#FFF\" // here default color is white\n    });\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    p.width = p.width || additionalModifier.width;\n    p.height = p.height || additionalModifier.height;\n    p.x = p.x === undefined ? additionalModifier.x : p.x;\n    p.y = p.y === undefined ? additionalModifier.y : p.y;\n    p.lineWidth =\n      p.lineWidth ||\n      Math.min(\n        additionalModifier.height / additionalModifier.heightInPixel,\n        additionalModifier.width / additionalModifier.widthInPixel\n      ) / 2;\n    this._centerX = p.width / 2 + p.x;\n    this._centerY = p.height / 2 + p.y;\n    this._scaleZ = Math.max(p.width, p.height) / 2;\n    function clampOrRandom(val: number | undefined, min: number, max = -min) {\n      return val === undefined || val < min || val >= max\n        ? Math.random() * (max - min) + min\n        : val;\n    }\n    for (let i = 0; i < p.count; i++) {\n      this._starsX[i] = clampOrRandom(this._starsX[i], -p.width / 2);\n      this._starsY[i] = clampOrRandom(this._starsY[i], -p.height / 2);\n      this._starsZ[i] = clampOrRandom(this._starsZ[i], 0, this._scaleZ);\n    }\n  }\n\n  _moveStar(i: number, scaled_timepassed: number, firstPass: boolean) {\n    const p = this.p\n    const hw = p.width! / 2;\n    const hh = p.height! / 2;\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    let\n      x = this._starsX[i] + p.moveX * scaled_timepassed,\n      y = this._starsY[i] + p.moveY * scaled_timepassed,\n      z = this._starsZ[i] + p.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= p.x! &&\n      projectY >= p.y! &&\n      projectX < p.x! + p.width! &&\n      projectY < p.y! + p.height!;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!p.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed:number) {\n    let ret = super.animate(timepassed);\n    if (this.p.enabled && this._centerX !== undefined) {\n      let i = this.p.count;\n      while (i--) {\n        this._moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this._moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      const p = this.p\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n\n      if (p.moveY == 0 && p.moveZ == 0 && p.moveX < 0) {\n        context.fillStyle = p.color;\n        let i = p.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] -\n              (this._starsLineWidth[i] * p.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * p.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = p.color;\n        if (p.highScale) {\n          let i = p.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * p.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * p.lineWidth;\n            i = p.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nimport type { IAnimation } from \"./Animation\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nconst degToRad = Math.PI / 180;\n\nfunction moveDefault(progress: number, data: IAlgorithmData) {\n  return data.from! as number + progress * data.delta!;\n}\n\nfunction moveStatic(progress: number, data: IAlgorithmData) {\n  return progress >= 0.5 ? data.to : data.from!;\n}\n\nfunction moveBezier(progress: number, data: IAlgorithmData) {\n  var copy = [...data.values!],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress: number, data: IAlgorithmData) {\n  return data.colorFrom!.mix(data.colorTo!, progress * 100).toString();\n}\n\nfunction movePath(progress: number, { pathFrom, pathTo }: IAlgorithmData, sprite?: ISprite) {\n  return sprite!.changeToPath!(progress, { pathFrom: pathFrom!, pathTo: pathTo! });\n}\n\nexport type TProperty = number | string\nexport type TBezier = number[]\nexport type TChangeFunction = ((from?: number | undefined) => number) | ((from?: string | undefined) => string)\nexport type TChangeValue = TProperty | TBezier | TChangeFunction\nexport interface IChangeValueMeta {\n  name: string\n  to: TProperty\n  bezier?: TBezier\n  isColor: boolean\n  isPath: boolean\n  isStatic: boolean\n  isFunction?: TChangeFunction,\n  moveAlgorithm: TAlgorithm\n}\nexport type TAlgorithm = (progress: number, data: IAlgorithmData, sprite?: ISprite) => TProperty | number[][][]\nexport interface IAlgorithmData extends IChangeValueMeta {\n  from?: TProperty\n  delta?: number\n  values?: TBezier\n  pathFrom?: number[][][]\n  pathTo?: number[][][]\n  colorFrom?: TinyColor\n  colorTo?: TinyColor\n}\n\n// to values of a object\nexport default class ChangeTo implements IAnimation {\n  _initialized = false\n  _changeValues: IChangeValueMeta[]\n  _duration: number\n  _ease: (t: number) => number\n  constructor(changeValues: Record<string, TChangeValue>, duration: number, ease: (t: number) => number) {\n    this._changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? (orgValue as number) * degToRad : orgValue;\n      const isColor = k === \"color\" || k === \"borderColor\";\n      const isPath = k === \"path\";\n      const isStatic = k === \"text\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n            ? [\"rotation\"]\n            : [k];\n      for (const name of names) {\n        this._changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value) as TProperty,\n          bezier: isBezier ? value : undefined,\n          isColor,\n          isPath,\n          isStatic,\n          isFunction: isFunction ? value : undefined,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n              ? movePath\n              : isBezier\n                ? moveBezier\n                : isStatic\n                  ? moveStatic\n                  : moveDefault\n        });\n      }\n    }\n    this._duration = ifNull(calc(duration), 0);\n    this._ease = ifNull(ease, (t: number) => t);\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  _init(sprite: ISprite, time: number) {\n    let l = this._changeValues.length\n    while (l--) {\n      const data: IAlgorithmData = this._changeValues[l];\n      // @ts-ignore\n      const from = sprite.p[data.name] as unknown as TProperty\n      if (data.isFunction) {\n        data.from = from;\n        // @ts-ignore\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = new TinyColor(data.from);\n          data.colorTo = new TinyColor(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n            data.from as string,\n            data.to as string\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [from as number, ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else if (!data.isStatic) {\n          data.delta = data.to as number - (data.from as number);\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        //\n        data.colorFrom = new TinyColor(from as string);\n        data.colorTo = new TinyColor(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n          from as string,\n          data.to as string\n        );\n      } else if (data.bezier) {\n        data.values = [from as number, ...data.bezier];\n      } else {\n        data.from = from as number;\n        data.delta = data.to as number - data.from;\n      }\n    }\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._init(sprite, time);\n    }\n\n    // return time left\n    if (this._duration <= time) {\n      let l = this._changeValues.length;\n      let data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.to;\n      }\n    } else {\n      let l = this._changeValues.length;\n      let data;\n      const progress = this._ease(time / this._duration);\n\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this._duration;\n  }\n}\n","import Callback from './Animations/Callback'\nimport ChangeTo from './Animations/ChangeTo'\nimport End from './Animations/End'\nimport EndDisabled from './Animations/EndDisabled'\nimport Forever from './Animations/Forever'\nimport If from './Animations/If'\nimport Image from './Animations/Image'\nimport ImageFrame from './Animations/ImageFrame'\nimport Loop from './Animations/Loop'\nimport Remove from './Animations/Remove'\nimport Sequence from './Animations/Sequence'\nimport Once from './Animations/Once'\nimport Shake from './Animations/Shake'\nimport ShowOnce from './Animations/ShowOnce'\nimport State from './Animations/State'\nimport Stop from './Animations/Stop'\nimport StopDisabled from './Animations/StopDisabled'\nimport Wait from './Animations/Wait'\nimport WaitDisabled from './Animations/WaitDisabled'\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport type TAnimationCallbackCallback = (sprite:ISprite, time:number, firstRun:boolean) => ReturnType<IAnimation['run']>\n\nexport default class Callback implements IAnimation{\n    _callback: TAnimationCallbackCallback\n    _duration: number|undefined\n    _initialized: boolean = false\n\n    constructor(callback: TAnimationCallbackCallback, duration?:number) {\n      this._callback = callback;\n      this._duration = ifNull(calc(duration), undefined);\n    }\n\n    reset() {\n      this._initialized = false;\n    }\n\n    run(sprite:ISprite, time:number) {\n      let result;\n\n      if (this._duration !== undefined) {\n        this._callback(sprite, Math.min(time, this._duration), !this._initialized);\n        this._initialized = true;\n        return time - this._duration;\n      } else {\n        result = this._callback(sprite, time, !this._initialized);\n        this._initialized = true;\n        return result;\n      }\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation {\n\tconstructor() {\n\t}\n\n\trun(sprite: ISprite, time: number) {\n\t\treturn SequenceRunCommand.FORCE_DISABLE;\n\t};\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.FORCE_DISABLE;\n    };\n}","import { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Forever implements IAnimation {\n  _Aniobject:Sequence\n\n  constructor(...Aniobject: IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    return this._Aniobject.play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport type { TAnimationFunction } from \"./Sequence\";\n\nexport default class If implements IAnimation {\n  _ifCallback: OrFunction<boolean>\n  _Aniobject: IAnimation|TAnimationFunction\n  _AniobjectElse: IAnimation|TAnimationFunction\n\n  constructor(ifCallback:OrFunction<boolean>, Aniobject:IAnimation|TAnimationFunction, AniobjectElse:IAnimation|TAnimationFunction) {\n    this._ifCallback = ifCallback;\n    this._Aniobject = Aniobject;\n    this._AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    return (this._Aniobject as IAnimation).play?.(label, timelapsed) || (this._AniobjectElse as IAnimation).play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number) {\n    const AniObject = calc(this._ifCallback)\n      ? this._Aniobject\n      : this._AniobjectElse;\n    return (AniObject as IAnimation).run\n      ?  (AniObject as IAnimation).run(sprite, time)\n      :  (AniObject as TAnimationFunction)(sprite, time);\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport { OrFunction } from '../helper';\nimport ImageManager from '../ImageManager';\nimport { ISprite } from '../Sprites/Sprite';\n\nexport default class Image {\n  _initialized: boolean = false\n  _image: (HTMLImageElement | string)[]\n  _count: number\n  _durationBetweenFrames: number\n  _duration: number\n  _current:number = -1\n\n  constructor(image: OrFunction<HTMLImageElement | string | (HTMLImageElement | string)[]>, durationBetweenFrames: OrFunction<number>) {\n    const imageCalced = calc(image);\n    this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(imageCalced)) {\n      this._image = imageCalced\n      this._count = imageCalced.length;\n    } else {\n      this._image = [imageCalced];\n      this._count = 1;\n    }\n    this._duration = this._count * this._durationBetweenFrames;\n  }\n\n  reset() {\n    this._initialized = false;\n  };\n\n  run(sprite: ISprite, time:number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._current = -1;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      sprite.p.image = ImageManager.getImage(this._image[this._image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this._durationBetweenFrames);\n      if (currentFrame !== this._current) {\n        this._current = currentFrame;\n        sprite.p.image = ImageManager.getImage(this._image[this._current]);\n      }\n    }\n    return time - this._duration;\n  }\n}","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { OrFunction } from '../helper';\nimport { ISprite } from '../Sprites/Sprite';\nimport { IAnimation } from './Animation';\n\nexport default class ImageFrame implements IAnimation{\n    _frameNumber: number[]\n    _durationBetweenFrames: number\n    _duration: number\n    _framesToRight: boolean\n\n    constructor(frameNumber: OrFunction<number | number[]>, framesToRight: OrFunction<boolean>, durationBetweenFrames: OrFunction<number>) {\n        const frameNumberCalc = calc(frameNumber);\n        this._framesToRight = ifNull(calc(framesToRight), true);\n        this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        this._frameNumber = Array.isArray(frameNumberCalc) ? frameNumberCalc : [frameNumberCalc];\n\n        this._duration = this._frameNumber.length * this._durationBetweenFrames;\n    }\n\n    run(sprite: ISprite, time:number) {\n        let currentFrame = 0;\n        if (time >= this._duration) {\n            currentFrame = this._frameNumber[this._frameNumber.length - 1];\n        } else {\n            currentFrame = this._frameNumber[Math.floor(time / this._durationBetweenFrames)];\n        }\n        if (this._framesToRight) {\n            sprite.p.frameX = sprite.p.frameWidth! * currentFrame;\n        } else {\n            sprite.p.frameY = sprite.p.frameHeight! * currentFrame;\n        }\n\n        return time - this._duration;\n    }\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Loop implements IAnimation {\n  _Aniobject: Sequence\n  _times:number\n  _timesOrg:number\n\n  constructor(times:number, ...Aniobject:IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this._times = this._timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    const b = this._Aniobject.play?.(label, timelapsed);\n    if (b) {\n      this._times = this._timesOrg;\n    }\n    return b\n  }\n\n  run(sprite: ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0 && this._times > 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._times--;\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\n\nexport default class Once implements IAnimation {\n  _Aniobject: IAnimation\n  _times: number\n\n  constructor(Aniobject: IAnimation, times: number) {\n    this._Aniobject = Aniobject;\n    this._times = ifNull(calc(times), 1);\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (this._times <= 0) {\n      return time;\n    }\n    else {\n      let t = this._Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this._times--;\n      }\n      return t;\n    }\n  };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class Remove implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.REMOVE;\n    };\n}","import calc from '../func/calc';\nimport type { OrFunction } from '../helper.js';\nimport type { ISprite } from '../Sprites/Sprite.js';\n\nexport default class Shake {\n  _initialized = false\n  _duration: number\n  _shakeDiff: number\n  _shakeDiffHalf: number\n  _x: number = 0\n  _y: number = 0\n\n  constructor(shakediff: OrFunction<number>, duration: OrFunction<number>) {\n    this._duration = calc(duration);\n    this._shakeDiff = calc(shakediff);\n    this._shakeDiffHalf = this._shakeDiff / 2;\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._x = sprite.p.x;\n      this._y = sprite.p.y;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      // prevent round errors\n      sprite.p.x = this._x;\n      sprite.p.y = this._y;\n    } else {\n      // shake sprite\n      sprite.p.x = this._x + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n      sprite.p.y = this._y + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n    }\n    return time - this._duration;\n  }\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class ShowOnce implements IAnimation {\n    _showOnce:boolean = true\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = sprite.p.enabled && this._showOnce;\n        this._showOnce = false;\n        return 0;\n    }\n}","import { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\nimport Sequence from './Sequence';\n\nclass State implements IAnimation {\n  _states: Record<string, Sequence | State>\n  _transitions: Record<string, Sequence | State>\n  _currentStateName: string | undefined\n  _currentState: Sequence | State | undefined\n  _isTransitioningToStateName: string | undefined = undefined\n\n  constructor({\n    states = {},\n    transitions = {},\n    defaultState\n  }: {\n    states?: Record<string, IAnimation[] | Sequence>\n    transitions?: Record<string, IAnimation[] | Sequence>\n    defaultState: string\n  }) {\n    // save possible states\n    this._states = Object.fromEntries(Object.entries(states).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ))\n\n    // save transitions\n    this._transitions = Object.fromEntries(Object.entries(transitions).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ));\n    // set start state\n    this._currentStateName = defaultState;\n    this._currentState = this._states[defaultState];\n  }\n\n  setState(name:string) {\n    if (name !== this._currentStateName) {\n      this._isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this._currentStateName}To${UCFirstName}`,\n        `${this._currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => name in this._transitions\n      );\n      if (transitionName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._transitions[transitionName];\n        (this._currentState as Sequence)?.reset?.();\n      } else {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0):boolean|undefined {\n    return this._currentState?.play?.(label, timelapsed);\n  }\n\n  run(sprite: ISprite, time: number, is_difference?: boolean) {\n    let timeLeft:ReturnType<IAnimation['run']> = time;\n    let isDifference = is_difference;\n    if (this._currentState) {\n      timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this._currentState) {\n      if (this._isTransitioningToStateName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n        timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this._currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class End implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.STOP;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.STOP;\n    };\n}","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class WaitDisabled implements IAnimation {\n  duration:number\n\n  constructor(duration:OrFunction<number>) {\n    this.duration = ifNull(calc(duration), 0);\n  }\n\n  run(sprite:ISprite, time:number) {\n    // return time left\n    sprite.p.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import Transform from \"../func/transform\";\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime, RectPosition } from \"../Scene\";\n\nexport interface CameraPosition {\n  zoom: number\n  x: number\n  y: number\n}\n\nexport default class Camera implements ConfigurationObject {\n  type = \"camera\"\n  cam: CameraPosition\n  constructor(config: Partial<CameraPosition> = {}) {\n    this.type = \"camera\";\n    this.cam = Object.assign({\n      zoom: 1,\n      x: 0,\n      y: 0,\n    }, config);\n  }\n\n  viewport({ }:ParameterListWithoutTime, matrix: Transform) {\n    return matrix\n      .scale(this.cam.zoom, this.cam.zoom)\n      .translate(-this.cam.x, -this.cam.y);\n  }\n\n  viewportByCam({ engine }: ParameterListWithoutTime, cam: CameraPosition) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  additionalModifier({ }, additionalModifier: AdditionalModifier) {\n    additionalModifier.cam = Object.assign({}, this.cam);\n    return additionalModifier;\n  }\n\n  clampView(params: ParameterListWithoutTime & { clampLimits?: RectPosition }, cam: CameraPosition) {\n    const { engine, scene, clampLimits } = params\n    const cl = clampLimits || {\n      x1: scene.additionalModifier.x,\n      y1: scene.additionalModifier.y,\n      x2: scene.additionalModifier.x + scene.additionalModifier.width,\n      y2: scene.additionalModifier.y + scene.additionalModifier.height,\n    };\n    const invert = this.viewportByCam(params, cam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      engine.getWidth(),\n      engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= cl.x2 - cl.x1) {\n      if (x1 < cl.x1) {\n        if (x2 <= cl.x2) {\n          cam.x += cl.x1 - x1;\n        }\n      } else {\n        if (x2 > cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > cl.x1) {\n        cam.x += cl.x1 - x1;\n      } else {\n        if (x2 < cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= cl.y2 - cl.y1) {\n      if (y1 < cl.y1) {\n        if (y2 <= cl.y2) {\n          cam.y += cl.y1 - y1;\n        }\n      } else {\n        if (y2 > cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > cl.y1) {\n        cam.y += cl.y1 - y1;\n      } else {\n        if (y2 < cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    }\n    return cam;\n  }\n\n  set zoom(value) {\n    this.cam.zoom = value;\n  }\n\n  set camX(v) {\n    this.cam.x = v;\n  }\n\n  set camY(v) {\n    this.cam.y = v;\n  }\n\n  get zoom() {\n    return this.cam.zoom;\n  }\n\n  get camX() {\n    return this.cam.x;\n  }\n\n  get camY() {\n    return this.cam.y;\n  }\n\n  zoomToFullScreen({ scene }: ParameterListWithoutTime) {\n    return Math.min(\n      scene.additionalModifier.fullScreen.width /\n      scene.additionalModifier.width,\n      scene.additionalModifier.fullScreen.height /\n      scene.additionalModifier.height\n    );\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition & {cam? : CameraPosition}) {\n    const { scene, engine, cam, x1, y1, x2, y2 } = params\n    const scale = scene.additionalModifier.scaleCanvas;\n    const invert = this.viewportByCam(params, cam || this.cam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      engine.getWidth() * scale,\n      engine.getHeight() * scale\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    const ret = {\n      x: mx,\n      y: my,\n      zoom: (cam || this.cam).zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE),\n    };\n    if (cam) {\n      cam.x = ret.x;\n      cam.y = ret.y;\n      cam.zoom = ret.zoom;\n    } else {\n      this.cam = ret;\n    }\n  }\n}\n","import type Scene from \"../Scene\";\nimport type { ConfigurationObject, ParameterList, ParameterListFixedUpdate, ParameterListInitDestroy, ParameterListPositionEvent, ParameterListWithoutTime, RectPosition } from \"../Scene\";\nimport type { CameraPosition } from \"./Camera\";\n\nexport interface MiddlewareCameraControlOptions {\n  zoomMax: number\n  zoomMin: number\n  zoomFactor: number\n  tween: number\n  callResize: boolean\n}\n\nconst clickTime = 300;\nexport default class CameraControl implements ConfigurationObject {\n  type = \"control\"\n  _mousePos: Record<number, {\n    x: number\n    y: number\n    _cx: number\n    _cy: number\n    _isDown: boolean\n    _numOfFingers: number\n    _distance: undefined | number\n    _timestamp: number\n    _czoom: undefined | number\n  }> = {}\n  toCam: CameraPosition = {\n    zoom: 1,\n    x: 0,\n    y: 0\n  }\n  _config: MiddlewareCameraControlOptions\n  _scene: Scene | undefined\n  _instant: boolean = false\n\n  constructor(config: Partial<MiddlewareCameraControlOptions> = {}) {\n    this._config = Object.assign(\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        callResize: true,\n      },\n      config\n    );\n  }\n\n  init({ scene }: ParameterListInitDestroy) {\n    this._scene = scene\n    this.toCam = Object.assign({}, scene.camera.cam);\n  }\n\n  mouseDown({ event: e, position: [mx, my], button: i }: ParameterListPositionEvent) {\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e as TouchEvent).touches?.length || 1,\n      _distance: undefined,\n      _timestamp: Date.now(),\n    });\n  }\n\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      !(\n        (\n          Date.now() - this._mousePos[i]._timestamp < clickTime &&\n          Math.abs(this._mousePos[i].x - mx) < 5 &&\n          Math.abs(this._mousePos[i].y - my) < 5 &&\n          i === 1\n        ) // i === 0\n      )\n    ) {\n      scene.stopPropagation();\n    }\n  }\n\n  mouseOut({ button: i }: ParameterListPositionEvent) {\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n        (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      const viewMatrix = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert();\n      const [ox, oy] = viewMatrix.transformPoint(\n        this._mousePos[i].x * scale,\n        this._mousePos[i].y * scale\n      );\n      const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n      this.toCam.x = this._mousePos[i]._cx + ox - nx;\n      this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    }\n  }\n\n  mouseWheel({ event: e, position: [mx, my], scene }: ParameterListPositionEvent) {\n    const scale = scene.additionalModifier.scaleCanvas;\n    const [ox, oy] = scene.camera\n      .viewportByCam(arguments[0], this.toCam)\n      .invert()\n      .transformPoint(mx * scale, my * scale);\n    // @ts-ignore\n    const wheelData = (e as WheelEvent).wheelDelta || (e as WheelEvent).deltaY * -1;\n    if (wheelData / 120 > 0) {\n      this.zoomIn();\n      const [nx, ny] = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert()\n        .transformPoint(mx * scale, my * scale);\n      this.toCam.x -= nx - ox;\n      this.toCam.y -= ny - oy;\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    } else {\n      this.zoomOut(arguments[0]);\n    }\n  }\n\n  hasCamChanged() {\n    const t = this._config.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this._scene!.camera.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this._scene!.camera.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this._scene!.camera.cam.zoom) >=\n      Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate({ scene, lastCall }: ParameterListFixedUpdate) {\n    if (this._config.tween && !this._instant && this.hasCamChanged()) {\n      scene.camera.cam.x +=\n        (this.toCam.x - scene.camera.cam.x) / this._config.tween;\n      scene.camera.cam.y +=\n        (this.toCam.y - scene.camera.cam.y) / this._config.tween;\n      scene.camera.cam.zoom +=\n        (this.toCam.zoom - scene.camera.cam.zoom) / this._config.tween;\n      if (lastCall) {\n        scene.additionalModifier.cam = scene.camera.cam;\n        if (this._config.callResize) {\n          scene.resize();\n        } else {\n          scene.cacheClear();\n        }\n      }\n    }\n  }\n\n  update({ scene }: ParameterList) {\n    if ((!this._config.tween || this._instant) && this.hasCamChanged()) {\n      this._instant = false;\n      scene.camera.cam = Object.assign({}, this.toCam);\n      if (this._config.callResize) {\n        scene.resize();\n      } else {\n        scene.cacheClear();\n      }\n    }\n  }\n\n  camInstant() {\n    this._instant = true;\n  }\n\n  resize(args: ParameterListWithoutTime& { clampLimits?: RectPosition }) {\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n  }\n\n  zoomToNorm() {\n    this.toCam.zoom = 1;\n    return this;\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this._config.zoomMax,\n      this.toCam.zoom * this._config.zoomFactor\n    );\n    return this;\n  }\n  zoomOut(args: ParameterListWithoutTime & { clampLimits?: RectPosition }) {\n    this.toCam.zoom = Math.max(\n      this._config.zoomMin,\n      this.toCam.zoom / this._config.zoomFactor\n    );\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n    return this;\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition) {\n    params.scene.camera.zoomTo(Object.assign(\n      params, {cam:this.toCam}\n    ));\n  }\n}\n","import Callback from \"./Middleware/Camera\";\nimport Camera from \"./Middleware/Camera\";\nimport CameraControl from \"./Middleware/CameraControl\";\nimport CameraControlSecondButton from \"./Middleware/CameraControlSecondButton\";\nimport Click from \"./Middleware/Click\";\nimport Element from \"./Middleware/Element\";\nimport Event from \"./Middleware/Event\";\nimport LoadingScreen from \"./Middleware/LoadingScreen\";\nimport Norm from \"./Middleware/Norm\";\nimport TimingAudio from \"./Middleware/TimingAudio\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\n\nexport default {\n  Callback,\n  Camera,\n  CameraControl,\n  CameraControlSecondButton,\n  Click,\n  Element,\n  Event,\n  LoadingScreen,\n  Norm,\n  TimingAudio,\n  TimingDefault,\n};\n","import { ParameterListPositionEvent } from \"../Scene.js\";\nimport CameraControl from \"./CameraControl.js\";\nconst clickTime = 300;\n\nexport default class CameraControlSecondButton extends CameraControl {\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      (Date.now() - this._mousePos[i]._timestamp > clickTime ||\n        Math.abs(this._mousePos[i].x - mx) >= 5 ||\n        Math.abs(this._mousePos[i].y - my) >= 5) &&\n        i === 1\n    ) {\n      scene.stopPropagation();\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"region\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n          (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      if (i === 2) {\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n    }\n\n    if (\n      i === 1 &&\n      scene.has(\"regionMove\") &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!(e as TouchEvent).touches || (e as TouchEvent).touches.length === 1)\n    ) {\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"regionMove\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListPositionEvent } from \"../Scene\";\nimport type { MiddlewareElementOptions } from \"./Element\";\n\nexport default class Click implements ConfigurationObject{\n  _doubleClickElementTimer: undefined|number;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  mouseUp(param:ParameterListPositionEvent) {\n    const { scene, button } = param;\n    if (button === 1) {\n      if (scene.has(\"doubleClick\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClick\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"click\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"click\", param);\n      }\n    }\n  }\n}\n","import Scene, { ConfigurationObject, ElementClickInfo, ParameterListCanvas, ParameterListClickElement, ParameterListClickNonElement, ParameterListPositionEvent } from \"../Scene\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nexport interface MiddlewareElementOptions {\n  doubleClickDetectInterval?: number\n}\n\ninterface MousePosition {\n  mx: number\n  my: number\n}\n\nexport default class Element implements ConfigurationObject {\n  _clickIntend: MousePosition | undefined = undefined;\n  _hoverIntend: MousePosition | undefined = undefined;\n  _hasDetectImage: boolean = false;\n  _doubleClickElementTimer: number | undefined = undefined;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  isDrawFrame() {\n    return this._hasDetectImage ? 1 : 0;\n  }\n\n  _dispatchEvent(scene: Scene, isClick: boolean, param: ParameterListClickElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickElement\")) {\n        if (this._doubleClickElementTimer) {\n          window.clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClickElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"clickElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickElement\", param);\n      }\n    } else {\n      scene.map(\"hoverElement\", param);\n    }\n  }\n\n  _dispatchNonEvent(scene: Scene, isClick: boolean, param: ParameterListClickNonElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickNonElement\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = undefined;\n          scene.map(\"doubleClickNonElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = undefined;\n            scene.map(\"clickNonElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickNonElement\", param);\n      }\n    } else {\n      scene.map(\"hoverNonElement\", param);\n    }\n  }\n\n  initSprites(params: ParameterListCanvas) {\n    const { scene, output, layerManager, canvasId } = params\n    this._hasDetectImage = false;\n    if (this._clickIntend || this._hoverIntend) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[canvasId || 0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n\n      ctx.save();\n      ctx.setTransform(...scene.viewport().m);\n      let found: ElementClickInfo | undefined | \"c\" = undefined;\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const a = (element as ISprite).detect(ctx, cx, cy);\n          if (a === \"c\") {\n            found = \"c\";\n          } else if (a) {\n            found = { layerId, element: a, elementId };\n            return false;\n          }\n        }\n      });\n      ctx.restore();\n\n      if (found === \"c\") {\n        this._hasDetectImage = true;\n      } else {\n        this._clickIntend = undefined;\n        this._hoverIntend = undefined;\n        const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n          mx,\n          my,\n          x,\n          y,\n        }, params) as ParameterListClickNonElement;\n        if (found) {\n          Object.assign(param, found as ElementClickInfo);\n          this._dispatchEvent(scene, isClick, param);\n        } else {\n          this._dispatchNonEvent(scene, isClick, param);\n        }\n      }\n    }\n  }\n\n  draw(params: ParameterListCanvas) {\n    const { engine, scene, layerManager, output, canvasId } = params;\n    if (!canvasId && this._hasDetectImage) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n      const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n        mx,\n        my,\n        x,\n        y,\n      }, params) as ParameterListClickNonElement;\n\n      const oldISE = ctx.imageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = false;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.save();\n\n      ctx.setTransform(...scene.viewport().m);\n\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const color = `rgb(${elementId & 0xff}, ${(elementId & 0xff00) >> 8\n            }, ${layerId & 0xff})`;\n          (element as ISprite).detectDraw(ctx, color);\n        }\n      }, 0);\n      ctx.restore();\n      ctx.imageSmoothingEnabled = oldISE;\n      engine.normContext(ctx);\n\n      this._clickIntend = undefined;\n      this._hoverIntend = undefined;\n\n      const p = ctx.getImageData(cx, cy, 1, 1).data;\n      if (p[3]) {\n        Object.assign(param, {\n          layerId: p[2],\n          elementId: p[0] + (p[1] << 8),\n          element: layerManager\n            .getById(param.layerId)\n            .getById(param.elementId)  \n        })\n        this._dispatchEvent(scene, isClick, param);\n      } else {\n        this._dispatchNonEvent(scene, isClick, param);\n      }\n    }\n  }\n\n  mouseUp({ scene, position: [mx, my], button }:ParameterListPositionEvent) {\n    this._clickIntend = button === 1 && scene.has(\"clickElement\") ? { mx, my } : undefined;\n  }\n\n  mouseMove({ scene, position: [mx, my] }:ParameterListPositionEvent) {\n    this._hoverIntend = scene.has(\"hoverElement\") ? { mx, my } : undefined;\n  }\n}\n","import ifNull from '../func/ifnull'\nimport type { ValueOf } from '../helper';\nimport LayerManager from '../LayerManager';\nimport type { ConfigurationObject, EventsReturn, ParameterList, ParameterListInitDestroy, ParameterListWithoutTime } from '../Scene';\nimport Scene from '../Scene';\nimport { ISpriteFunctionOrSprite } from '../Sprites/Sprite';\n\nexport default class Events implements ConfigurationObject {\n  type = \"events\"\n  _reseted:boolean = false\n\n  _events: {\n    n: HTMLElement,\n    e: keyof HTMLElementEventMap\n    f: (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any\n  }[] = []\n\n  _pushEvent(command: \"mouseDown\" | \"mouseUp\" | \"mouseOut\" | \"mouseMove\" | \"mouseWheel\", event: Event | TouchEvent | MouseEvent, scene: Scene) {\n    if (ifNull<boolean>(scene.value(\"preventDefault\"), true)) {\n      event.preventDefault();\n    }\n    if (!this._reseted) {\n      return\n    }\n    const [mx, my] = this.getMousePosition({ event });\n    const [x, y] = scene.transformPoint(mx, my);\n    scene.pipeBack(command, {\n      event,\n      position: [mx, my],\n      x,\n      y,\n      button: this.getMouseButton({ event }),\n    });\n  }\n\n  events({ scene }: ParameterListInitDestroy) {\n    return [\n      scene.has(\"mouseDown\") && [\n        [\"touchstart\", \"mousedown\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseDown\", event, scene),\n      ],\n      scene.has(\"mouseUp\") && [\n        [\"touchend\", \"mouseup\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseUp\", event, scene),\n      ],\n      scene.has(\"mouseOut\") && [\n        [\"touchendoutside\", \"mouseout\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseOut\", event, scene),\n      ],\n      scene.has(\"mouseMove\") && [\n        [\"touchmove\", \"mousemove\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseMove\", event, scene),\n      ],\n      scene.has(\"mouseWheel\") && [\n        [\"wheel\"],\n        (event: Event) => this._pushEvent(\"mouseWheel\", event, scene),\n      ],\n      (ifNull(scene.value<\"preventDefault\", boolean>(\"preventDefault\"), true)) && [\n        [\"contextmenu\"],\n        (e: Event) => e.preventDefault(),\n      ],\n    ].filter((v) => v) as EventsReturn\n  }\n\n  init({ output, scene }: ParameterListInitDestroy) {\n    const element = output.canvas[0];\n\n    const events: (keyof HTMLElementEventMap | [keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[][] = scene.map(\"events\", {});\n\n    this._events = events\n      .filter(Array.isArray)\n      // flat(1)\n      .reduce((acc, cur) => {\n        acc.push.apply(acc, cur);\n        return acc;\n      }, [])\n      // convert strings to call to function with the same name\n      .map(cur =>\n        Array.isArray(cur) ? cur : [[cur], (event: ValueOf<HTMLElementEventMap>) => {\n          if (ifNull(scene.value(\"preventDefault\"), true)) event.preventDefault();\n          scene.pipeBack(cur, { event });\n        }]\n      )\n      .map(([events, func]) =>\n        events.map((e: keyof HTMLElementEventMap) => ({\n          n: element,\n          e: e,\n          f: func,\n        }))\n      )\n      // workaround for .flat(1) for edge\n      .reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          acc.push.apply(acc, cur);\n        } else {\n          acc.push(cur);\n        }\n        return acc;\n      }, []);\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f, true);\n    });\n  }\n\n  destroy() {\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f, true);\n    });\n    this._events = [];\n  }\n\n  reset(params: ParameterListWithoutTime, layerManager:LayerManager| ISpriteFunctionOrSprite[][]) {\n    return layerManager;\n  }\n\n  getMousePosition({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    let touches;\n    if ((e as TouchEvent).touches && (e as TouchEvent).touches.length > 0) {\n      touches = (e as TouchEvent).targetTouches;\n    } else if ((e as TouchEvent).changedTouches && (e as TouchEvent).changedTouches.length > 0) {\n      touches = (e as TouchEvent).changedTouches;\n    }\n    if (touches) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top,\n      ];\n    }\n    if ((e as MouseEvent).offsetX === undefined) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      return [(e as MouseEvent).clientX - rect.left, (e as MouseEvent).clientY - rect.top];\n    }\n    return [(e as MouseEvent).offsetX, (e as MouseEvent).offsetY];\n  }\n\n  getMouseButton({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    return (\n      (e as TouchEvent).touches\n        ? ((e as TouchEvent).touches.length || (e as TouchEvent).changedTouches.length)\n        : ifNull((e as MouseEvent).buttons\n          ? (e as MouseEvent).buttons\n          : [0, 1, 4, 2][(e as MouseEvent).which], 1)\n    );\n  }\n}\n","import type { ConfigurationObject, ParameterListLoading } from \"../Scene\";\n\nexport default class LoadingScreen implements ConfigurationObject {\n  loading({ output, progress }: ParameterListLoading) {\n    const ctx = output.context[0];\n    const isNumber = typeof progress === \"number\"\n    const loadedHeight =\n      isNumber\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"_aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNumber\n        ? \"Loading \" + Math.round(100 * progress) + \"%\"\n        : progress,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n}\n","import Transform from '../func/transform'\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime } from '../Scene';\n\nexport default class Norm implements ConfigurationObject {\n  viewport({ engine }: ParameterListWithoutTime, matrix: Transform) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return matrix.translate(hw, hh).scale(scale, scale);\n  }\n\n  additionalModifier({ engine, output, scene }: ParameterListWithoutTime):AdditionalModifier {\n    scene.cacheClear();\n\n    const [x1, y1] = scene.transformPoint(0, 0, 1);\n    const [x2, y2] = scene.transformPoint(output.width, output.height, 1);\n\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    const transformInvert = new Transform().translate(hw, hh).scale(scale, scale).invert();\n    const [sx1, sy1] = transformInvert.transformPoint(0, 0);\n    const [sx2, sy2] = transformInvert.transformPoint(\n      output.width,\n      output.height\n    );\n\n    return {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth,\n      visibleScreen: {\n        x: x1,\n        y: y1,\n        width: x2 - x1,\n        height: y2 - y1,\n      },\n      fullScreen: {\n        x: sx1,\n        y: sy1,\n        width: sx2 - sx1,\n        height: sy2 - sy1,\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterList, ParameterListInitDestroy } from \"../Scene\";\nimport TimingDefault, { MiddlewareTimingDefaultOptions } from \"./TimingDefault\";\n\nexport interface MiddlewareTimingAudioOptions extends MiddlewareTimingDefaultOptions {\n  audioElement: HTMLMediaElement\n}\n\nexport default class TimingAudio extends TimingDefault implements ConfigurationObject {\n  _maxSkippedTickChunk: number = Number.POSITIVE_INFINITY\n  _audioStartTime: number | undefined = undefined\n  _audioPosition: number | undefined = undefined\n  _enableAndroidHack: boolean = false\n  _audioElement: undefined|HTMLMediaElement & {\n    controller?: Record<string,any>\n  }\n\n  constructor(configuration: MiddlewareTimingAudioOptions) {\n    super({\n      ...configuration,\n      maxSkippedTickChunk: Number.POSITIVE_INFINITY\n    });\n    this._audioElement = configuration.audioElement;\n  }\n\n  get audioElement() {\n    return this._audioElement;\n  }\n\n  init(_params: ParameterListInitDestroy) {\n    if (this._audioElement) {\n      // Android hack\n      // @ts-ignore\n      if (typeof MediaController === \"function\") {\n        // @ts-ignore\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      return new Promise((resolve, reject) => {\n        const canplaythrough = () => {\n          this._audioElement!.removeEventListener(\n            \"canplaythrough\",\n            canplaythrough\n          );\n          const playPromise = this._audioElement!.play();\n          if (playPromise) {\n            playPromise.catch((e) => { });\n          }\n          resolve(undefined);\n        };\n        this._audioElement!.addEventListener(\"canplaythrough\", canplaythrough);\n        this._audioElement!.onerror = () => {\n          this._audioElement=undefined\n          resolve(undefined);\n        }\n        this._audioElement!.load();\n      });\n    }\n  }\n\n  endTime() {\n    return this._audioElement ? this._audioElement.duration * 1000 : Number.POSITIVE_INFINITY;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      if (this._audioElement.ended && this._audioElement.duration) {\n        return this._audioElement.duration * 1000;\n      }\n      const currentAudioTime = this._audioElement.currentTime * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === undefined) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller!.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition! < 500 &&\n              currentAudioTime > this._audioPosition! &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition!);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    return timePassed;\n  }\n\n  shiftTime() {\n    return 0;\n  }\n}\n"],"names":["calc","c","slice","call","arguments","toArray","value","Array","isArray","pact","state","s","_Pact","o","_settle","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","thenable","ImageManager$1","constructor","Images","count","loaded","_resolve","add","Callbacks","undefined","self","key","imageSrc","window","Image","onload","isLoaded","forEach","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","test","onerror","img","crossOrigin","reset","getImage","nameOrImage","isLoadedPromise","Promise","resolve","reject","push","canvasIds","_layer","_isFunction","_start","_nextFree","_canvasIds","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","nextFree","concat","k","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","Math","min","isCanvasId","canvasId","includes","layerId","index","l","isFunction","layer","getElementsByTag","tag","_ref","ans","play","label","timelapsed","_ref2","clear","LayerManager","_layers","addLayer","Layer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","i","Transform","m","__constuct","multiply","matrix","m12","dy","m21","m22","dx","invert","d","m4","m5","m1","m2","m3","rotate","rad","cos","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","alternative","TimingDefault","configuration","_configuration","_tickChunk","_maxSkippedTickChunk","_tickChunkTolerance","totalTimePassed","ifNull","tickChunk","maxSkippedTickChunk","tickChunkTolerance","init","_params","currentTime","performance","now","Date","clampTime","timePassed","maxTime","shiftTime","isChunked","hasOneChunkedFrame","_ref3","calcFrames","_ref4","floor","Symbol","iterator","defaultMiddlewareCommandList","_all","isDrawFrame","initSprites","fixedUpdate","update","draw","destroy","resize","additionalModifier","Wait","duration","_duration","run","sprite","time","SequenceRunCommand","Sequence","sequences","lastTimestamp","enabled","timeWait","shift","sequence","thisTimeWait","position","command","filter","reduce","arr","Object","keys","sequencePosition","_sequencePosition$seq","b","_sequencePosition$seq2","some","seq","_runSequence","timeLeft","res","FORCE_DISABLE","STOP","REMOVE","_sequencePosition$seq3","is_difference","restTime","Infinity","disableVote","givenParameter","_needInit","p","_parseParameterList","_getParameterList","parameterList","entries","name","givenValue","fromEntries","valueEntries","_getBaseParameterList","animation","isClickable","animate","timepassed","_this$p$animation$pla","_this$p$animation","context","callInit","output","_detectHelperCallback","save","scaleX","scaleY","rotation","beginPath","a","restore","_detectHelper","coordinateX","coordinateY","moveToCenter","width","height","hw","hh","rect","closePath","isPointInPath","detectDraw","color","detect","PI","CircleParameterList","rotationInRadian","rotationInDegree","degToRad","alpha","compositeOperation","Group","super","assign","finished","spriteFinished","Emitter","classToEmit","class","parameter","FastBlur","SpriteBase","_temp_canvas","_currentGridSize","_tctx","gridSize","darker","pixel","norm","_generateTempCanvas","w","widthInPixel","h","heightInPixel","document","createElement","round","ceil","getContext","globalCompositeOperation","globalAlpha","normalizeFullScreen","visibleScreen","oldTempCanvas","drawImage","targetW","targetH","_this$additionalBlur","canvas","fillStyle","fillRect","additionalBlur","clearRect","oldValue","imageSmoothingEnabled","Position","Text","givenParameters","text","join","font","CENTER","borderColor","lineWidth","textAlign","textBaseline","fillText","strokeStyle","strokeText","_currentScaleX","_currentPixelSmoothing","static","r","g","rIndex","cr","cg","cb","Particle","_Gradient","generateGradientImage","txtc","createRadialGradient","gradientSize","grad","addColorStop","toRgb","getGradientImage","Sprites","Callback","_timePassed","additionalParameter","Canvas","_drawFrame","canvasWidth","canvasHeight","_normalizeFullScreen","_copyCanvas","max","wh","tw","th","cam","zoom","scaleCanvas","fullScreen","Circle","arc","fill","_currentTintKey","_normScale","image","ImageManager","frameX","frameY","frameWidth","frameHeight","normCover","normToScreen","clickExact","tint","_tintCacheKey","_temp_context","sX","isTopLeft","LEFT_TOP","tctx","sY","isCenter","cx","cy","Path","_oldPath","_path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","ctx","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","_preprocessing","pasition","path2shapes","changeToPath","progress","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Number","EPSILON","Rect","Scroller","characterList","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","radiusScale","imageDataRGBA","imageData","putImageData","StarField","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","_centerX","_centerY","_scaleZ","moveX","moveY","moveZ","highScale","clampOrRandom","val","random","_moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","ret","lineTo","moveDefault","delta","moveStatic","moveBezier","values","copyLength","copy","moveColor","colorFrom","mix","colorTo","toString","movePath","Animations","_callback","_initialized","ChangeTo","changeValues","ease","_changeValues","_ease","orgValue","isColor","isPath","isStatic","names","isBezier","bezier","moveAlgorithm","t","_init","TinyColor","End","EndDisabled","Forever","_Aniobject","Aniobject","_this$_Aniobject$rese","_this$_Aniobject","_this$_Aniobject$play","isDifference","_this$_Aniobject$rese2","_this$_Aniobject3","If","ifCallback","AniobjectElse","_ifCallback","_AniobjectElse","_this$_AniobjectElse$","AniObject","durationBetweenFrames","_image","_count","_durationBetweenFrames","_current","imageCalced","currentFrame","ImageFrame","frameNumber","framesToRight","_frameNumber","_framesToRight","frameNumberCalc","Loop","times","_times","_timesOrg","_this$_Aniobject2","Once","Remove","Shake","shakediff","_shakeDiff","_shakeDiffHalf","_x","_y","ShowOnce","_showOnce","State","states","transitions","defaultState","_states","_transitions","_currentStateName","_currentState","_isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","find","_this$_currentState","_this$_currentState3","_this$_currentState4","Stop","StopDisabled","WaitDisabled","Camera","config","viewport","viewportByCam","engine","getWidth","getHeight","getRatio","clampView","params","scene","clampLimits","cl","x1","y1","x2","y2","camY","camX","zoomToFullScreen","zoomTo","sx1","sy1","sx2","sy2","MIN_VALUE","CameraControl","_mousePos","toCam","_config","_scene","_instant","zoomMax","zoomMin","zoomFactor","tween","callResize","camera","mouseDown","event","mx","my","button","_cx","_cy","_isDown","_numOfFingers","touches","_e$touches","_distance","_timestamp","mouseUp","_e$changedTouches","down","numCurrentFingers","changedTouches","numOfFingers","stopPropagation","abs","mouseOut","mouseMove","_ref5","which","_e$touches2","distance","sqrt","pageX","pageY","_czoom","viewMatrix","ox","oy","nx","ny","mouseWheel","_ref6","wheelDelta","deltaY","zoomIn","zoomOut","hasCamChanged","_ref7","lastCall","cacheClear","_ref8","camInstant","args","zoomToNorm","Middleware","CameraControlSecondButton","fromX","fromY","toX","toY","has","Click","_temp","doubleClickDetectInterval","_doubleClickElementTimer","_doubleClickDetectInterval","param","clearTimeout","setTimeout","Element","_clickIntend","_hoverIntend","_hasDetectImage","_dispatchEvent","isClick","_dispatchNonEvent","layerManager","found","setTransform","oldISE","normContext","Event","Events","_reseted","_events","_pushEvent","preventDefault","getMousePosition","pipeBack","getMouseButton","events","acc","cur","apply","func","f","addEventListener","removeEventListener","targetTouches","target","getBoundingClientRect","sum","left","top","offsetX","clientX","clientY","offsetY","buttons","LoadingScreen","loading","isNumber","loadedHeight","Norm","transformInvert","clientWidth","TimingAudio","POSITIVE_INFINITY","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","audioElement","MediaController","controller","preload","canplaythrough","playPromise","catch","load","endTime","ended","currentAudioTime","playbackState","canvasOrOptions","_output","_newScene","_sceneParameter","_isSceneInitialized","_recalculateCanvasIntend","_lastTimestamp","_referenceRequestAnimationFrame","_autoSize","_canvasCount","_reduceFramerate","_realLastTimestamp","_isOddFrame","_initializedStartTime","_promiseSceneDestroying","_runParameter","_moveOnce","givenOptions","Error","ratio","options","autoSize","defaultAutoSizeSettings","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","recalculateCanvas","handleVisibilityChange","_recalculateCanvas","clickToPlayAudio","playAudioOfScene","reduceFramerate","switchScene","sceneParameter","visibilityState","timing","getOutput","style","recalculateFPS","cancelAnimationFrame","requestAnimationFrame","_temp2","_now","start","offsetTimeTarget","timeBetweenFrames","offsetTimeDelta","_mainLoop","body","shouldContinue","_isSettledPact","stage","_resumeAfterTest","_resumeAfterBody","timestamp","isRecalculatedCanvas","destroyParameterForNewScene","nowAutoSize","drawFrame","moveFrame","move","deltaTimestamp","targetTime","deltaFrame","callLoading","runParameter","_this2","stop","_temp4","_temp3","_temp5","_this3$_scene$destroy","_this3","_this4","_layerManager","_imageManager","_totalTimePassed","_engine","_middleware","_stopPropagation","_transform","_transformInvert","_additionalModifier","_initDone","_endTime","_resetIntend","middlewares","middlewareByType","_this$_engine","configurationClassOrObject","middlewareCommandList","objs","do","defaultValue","_param","fullParams","pipe","pipeMax","newRes","pipeAsync","_interrupt","check","_iteratorSymbol","step","_cycle","next","done","return","_fixup","TypeError","array","obj","images","all","updateAdditionalModifier","t_timing","t_camera","t_control","imageManager","frames","calcFrame","resetIntend","layers"],"mappings":"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"}