{"version":3,"file":"animationvideo.js","sources":["../src/lib/Engine.mjs","../src/lib/ImageManager.mjs","../src/lib/Layer.mjs","../src/lib/LayerManager.mjs","../src/func/calc.mjs","../src/func/ifnull.mjs","../src/lib/Scenes/Default.mjs","../src/lib/Scenes/Audio.mjs","../src/func/transform.mjs","../src/lib/Scenes/Norm.mjs","../src/lib/Scenes/NormAudio.mjs","../src/lib/Scenes.mjs","../src/lib/Sprites/Circle.mjs","../src/lib/Sprites/Callback.mjs","../src/lib/Sprites/Group.mjs","../src/lib/Sprites/Canvas.mjs","../src/lib/Sprites/Emitter.mjs","../src/lib/Sprites/FastBlur.mjs","../src/lib/Sprites/Image.mjs","../src/lib/Sprites/Text.mjs","../src/lib/Sprites/Particle.mjs","../src/lib/Sprites/Path.mjs","../src/lib/Sprites/Rect.mjs","../src/lib/Sprites/Scroller.mjs","../src/lib/Sprites/StarField.mjs","../src/lib/Sprites.mjs","../src/lib/Sequence.mjs","../src/lib/State.mjs","../src/lib/Animations/Callback.mjs","../src/lib/Animations/ChangeTo.mjs","../src/lib/Animations/End.mjs","../src/lib/Animations/EndDisabled.mjs","../src/lib/Animations/Image.mjs","../src/lib/Animations/ImageFrame.mjs","../src/lib/Animations/Move.mjs","../src/lib/Animations/Once.mjs","../src/lib/Animations/Play.mjs","../src/lib/Animations/Shake.mjs","../src/lib/Animations/ShowOnce.mjs","../src/lib/Animations/Stop.mjs","../src/lib/Animations/Wait.mjs","../src/lib/Animations/WaitDisabled.mjs","../src/lib/Animations.mjs","../src/animationvideo.mjs"],"sourcesContent":["class Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign({},\n      {\n        scene: null,\n        canvas: null,\n        autoresize: false\n      },\n      givenOptions\n    );\n    \n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the _output canvas\n    this._output.canvas = options.canvas;\n    if (!(typeof options.canvas === \"object\" && options.canvas !== null && options.canvas.getContext)) {\n      throw new Error(\"Countn't create contect for canvas in Engine\");\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    if (options.autoresize) {\n      window.addEventListener(\"resize\", this.maximizeCanvas, false);\n      window.addEventListener(\"orientationchange\", this.maximizeCanvas, false);\n      this.resize();\n\n      options.canvas.addEventListener(\n        \"click\",\n        () => {\n          if (this._isSceneInitialized && this._scene.audioElement) {\n            this._scene.audioElement.play();\n          }\n        },\n        false\n      );\n    }\n    this.switchScene(options.scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  maximizeCanvas() {\n    let gameArea = self.output.canvas;\n    let newWidth = window.innerWidth;\n    let newHeight = window.innerHeight;\n    let newWidthToHeight = newWidth / newHeight;\n\n    if (newWidthToHeight > self.output.ratio) {\n      newWidth = newHeight * self.output.ratio;\n      gameArea.style.height = newHeight + \"px\";\n      gameArea.style.width = newWidth + \"px\";\n    } else {\n      newHeight = newWidth / self.output.ratio;\n      gameArea.style.width = newWidth + \"px\";\n      gameArea.style.height = newHeight + \"px\";\n    }\n\n    gameArea.style.marginTop = -newHeight / 2 + \"px\";\n    gameArea.style.marginLeft = -newWidth / 2 + \"px\";\n\n    $(self.output.canvas).css({\n      width: newWidth,\n      height: newHeight\n    });\n    $(self.output.canvas)\n      .siblings()\n      .css({\n        width: newWidth\n      });\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = this._isSceneInitialized ? this._scene.getPercentLoaded() : 0;\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(\n      \"Loading \" + percent + \"%\",\n      10 + Math.random() * 3,\n      this._output.h - 10 + Math.random() * 3\n    );\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop() {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene) {\n        let now = this._scene.currentTime();\n        \n        // modify time by scene\n        // first set a min/max\n        this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(this._timePassed);\n        this._timePassed = this._timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          if (this._timePassed !== 0) {\n            this._scene.move(this._output, this._timePassed);\n\n            // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n            if (this._timePassed < 0) {\n              this._timePassed = this._scene.totalTimePassed;\n            }\n\n            this._scene.draw(this._output);\n          }\n        } else {\n          this._isSceneInitialized = this._scene.callLoading(this._output);\n        }\n      }\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n        };\n        self.Images[i].src = Images[i];\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    this.layer[id] = element;\n    this.isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this.nextFree + 1;\n    while (nextFree !== len && layer[nextFree]) {\n      nextFree++;\n    }\n    this.nextFree = nextFree;\n    if (this.start > id) {\n      this.start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    if (len === id) {\n      this.layer = this.layer.concat(arrayOfElements);\n      this.nextFree = this.layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this.isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this.layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this.layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this.layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this.layer[elementId] = null;\n      while (len && !this.layer[len - 1]) {\n        len--;\n      }\n      this.layer.length = len;\n      this.isFunction.length = len;\n      this.nextFree = Math.min(this.nextFree, len);\n      this.start = Math.min(this.start, len);\n    } else {\n      this.layer[elementId] = null;\n      this.nextFree = Math.min(this.nextFree, elementId);\n      if (this.start === elementId) {\n        this.start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this.layer.length;\n    for (index = this.start; index < l; index++) {\n      element = this.layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this.isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    return this.layer.length;\n  }\n\n  clear() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this.layers = [];\n  }\n\n  addLayer() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers[this.layers.length - 1];\n  }\n\n  addLayerForId() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this.layers.length\n    );\n    this.layers = this.layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this.layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this.layers.length;\n    for (i = 0; i < l; i++) {\n      this.layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this.layers.length;\n  }\n\n  clear() {\n    this.layers = [];\n  }\n}\n\nexport default LayerManager;","export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport ifNull from \"../../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this.configuration = new configurationClassOrObject();\n    } else {\n      this.configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = calc(this.configuration.tickChunk);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this.configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this.configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this.tickChunk) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this.configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this.configuration.init &&\n        this.configuration.init({ engine, output, scene: this, parameter })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: 0,\n      y: 0,\n      w: output.w,\n      h: output.h,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  callDestroy(output) {\n    this.configuration.destroy &&\n      this.configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - loadedHeight / 2, output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.h - 10 + Math.random() * 3\n    );\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      this.reset(output);\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.configuration.loading\n      ? this.configuration.loading({\n          engine: this.engine,\n          scene: this,\n          output,\n          value\n        })\n      : this.loadingscreen(output, value);\n    return false;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (\n      this.configuration.endTime &&\n      this.configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n      // End Engine\n      this.configuration.end &&\n        this.configuration.end({ engine: this.engine, scene: this, output });\n    }\n\n    if (this.configuration.beforeMove) {\n      if (this.tickChunk) {\n        if (timepassed >= this.tickChunk - this.tickChunkTolerance) {\n          // how many frames should be skipped. Maximum is a skip of 2 frames\n          for (\n            let calcFrame = 0,\n              frames = Math.min(\n                this.maxSkippedTickChunk,\n                Math.floor(timepassed / this.tickChunk)\n              );\n            calcFrame < frames;\n            calcFrame++\n          ) {\n            this.configuration.beforeMove({\n              engine: this.engine,\n              scene: this,\n              layerManager: this.layerManager,\n              output,\n              timepassed\n            });\n          }\n        }\n      } else {\n        this.configuration.beforeMove({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output,\n          timepassed\n        });\n      }\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timepassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n\n    if (this.configuration.afterMove) {\n      this.configuration.afterMove({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timepassed\n      });\n    }\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            timepassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    let result = this.configuration.reset\n      ? this.configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from './Default.mjs';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from './Default.mjs';\nimport Transform from '../../func/transform.mjs';\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        const hw = this.engine._output.w / 2\n        const hh = this.engine._output.h / 2\n        const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = (new Transform())\n        .translate(hw, hh)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  resize(output) {\n    this.transform = undefined;\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  transformPoint(x, y) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x, y);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import SceneAudio from './Audio.mjs';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  changeAnimationStatus(ani) {\n    if (typeof this.animation === \"object\") {\n      this.animation.changeAnimationStatus(ani);\n    }\n  };\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) >= 0) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from './Circle.mjs';\n\nexport default class Callback extends Circle{\n    constructor(params) {\n        super(params);\n        // Callback\n\t\tthis.callback = params.callback;\n    }\n\n    draw(context, additionalParameter) {\n\t\tif (this.enabled) {\n\t\t\tthis.callback(context, additionalParameter, this);\n\t\t}\n    }\n}","import ifNull from '../../func/ifnull.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite changeAnimationStatus\n  changeAnimationStatus(ani) {\n    // call super\n    super.changeAnimationStatus(ani);\n    // changeAnimationStatus for all sprites\n    for (let i in this.sprite) {\n      this.sprite[i].changeAnimationStatus(ani);\n    }\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = true;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = this.sprite[i].animate(timepassed) && spriteFinished;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.a < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.round(w / this.scaleX);\n    this.temp_canvas.height = Math.round(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, false);\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, this.temp_canvas.width, this.temp_canvas.height, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nexport default class FastBlur extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    // Darker\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.ceil(w / this.scaleX);\n    this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.x) {\n      this.x = additionalModifier.x;\n    }\n    if (!this.y) {\n      this.y = additionalModifier.y;\n    }\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let a = this.a * additionalModifier.a,\n        w = this.width,\n        h = this.height,\n        targetW = Math.round(w * additionalModifier.orgW / additionalModifier.w / this.scaleX),\n        targetH = Math.round(h * additionalModifier.orgH / additionalModifier.h / this.scaleY);\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(context.canvas, 0, 0, context.canvas.width, context.canvas.height, 0, 0, targetW, targetH);\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear ? \"source-atop\" : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(this.temp_canvas, 0, 0, targetW, targetH, this.x, this.y, w, h);\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.w;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.h;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport ImageManager from '../ImageManager.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height,\n        sX = frameWidth * this.scaleX,\n        sY = frameHeight * this.scaleY;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        }\n        else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      }\n      else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -(sX >> 1),\n          -(sY >> 1),\n          sX,\n          sY\n        );\n        context.restore();\n\n      }\n    }\n  };\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle.mjs';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.imageSmoothingEnabled = this.scaleX * additionalModifier.orgW / additionalModifier.w > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX / 2), this.y - (this.scaleY / 2), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach((curve) => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach((points) => {\n              this.path2D.bezierCurveTo(points[2], points[3], points[4], points[5], points[6], points[7]);\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1/scaleX, 1/scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n      \n      context.restore();\n    }\n  };\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.w;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.h;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n      \n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.arc * degToRad);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-hw, -hh, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport Emitter from './Emitter.mjs';\nimport Text from './Text.mjs';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from \"../../func/ifnull.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(params) {\n    super(params);\n    this.count = ifNull(calc(params.count), 40);\n    this.moveX = ifNull(calc(params.moveX), 0);\n    this.moveY = ifNull(calc(params.moveY), 0);\n    this.moveZ = ifNull(calc(params.moveZ), 0);\n    this.lineWidth = calc(params.lineWidth);\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n\t\t\tthis.height &&\n\t\t\tthis.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n\t\t}\n\t\tconst hw = this.width / 2;\n\t\tconst hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw ) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n\t\tconst projectX = this.centerX + (x / z) * hw;\n\t\tconst projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n\t\t\tthis.starsLineWidth[i] = Math.floor((1 - this.starsZ[i] / this.scaleZ) * 4) + 1;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.w;\n        this.height = this.height || additionalModifier.h;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n\t\t\t\tthis.lineWidth = this.lineWidth || (additionalModifier.h / additionalModifier.orgH) / 4;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - this.starsLineWidth[i] * this.lineWidth / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        let lw = 5,\n          i;\n        while (--lw) {\n          context.beginPath();\n          context.lineWidth = lw * this.lineWidth;\n          i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n            }\n          }\n          context.stroke();\n          context.closePath();\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = Array.isArray(obj) && !Array.isArray(obj[0]) ? [obj] : (obj || {});\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      this.animationPosition[i] = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n        orgLoop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        orgEnabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  reset(timelapsed = 0) {\n    for (let i in this.animation) {\n      const animationPosition = this.animationPosition[i];\n      animationPosition.position = 0;\n      animationPosition.timelapsed = timelapsed;\n      animationPosition.loop = animationPosition.orgLoop;\n      animationPosition.enabled = animationPosition.orgEnabled;\n      this.setObject(i);\n    }\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          else {\n            hide_vote++;\n          }\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","class State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      console.log(name);\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport Color from 'color';\nimport pasition from 'pasition';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return pasition._lerp(data.pathFrom, data.pathTo, progress);\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(data.from), pasition.path2shapes(data.to));\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(sprite[data.name]), pasition.path2shapes(data.to));\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequenz from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (Array.isArray(this.frameNumber)) {\n            this.count = this.frameNumber.length;\n        } else {\n            this.frameNumber = [this.frameNumber];\n            this.count = 1;\n        }\n        this.duration = this.count * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = Math.floor(time / this.durationBetweenFrames);\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from '../../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t > 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Play {\n\n  constructor(name, duration, loop) {\n    this.duration = ifNull(calc(duration),1);\n    this.name = calc(name);\n    this.loop = calc(ifNull(loop, 1));\n  }\n\n  run(sprite, time) {\n    // return time left\n    if (time >= this.duration) {\n      // Play animation from the start\n      sprite.changeAnimationStatus({\n        [this.name]: {\n          position: 0,\n          timelapsed: (time - this.duration),\n          loop: this.loop\n        }\n      });\n    }\n    return time - this.duration;\n  };\n}","import calc from '../../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Animation from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Animation.TIMELAPSE_TO_STOP;\n\t}\n}","import calc from '../../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Play from './Animations/Play.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Play = (...args) => new _Play(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  Stop = (...args) => new _Stop(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Image,\n  ImageFrame,\n  Move,\n  Once,\n  Play,\n  Shake,\n  ShowOnce,\n  Stop,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './lib/Engine.mjs';\nimport Scenes from './lib/Scenes.mjs';\nimport ImageManager from './lib/ImageManager.mjs';\nimport Sprites from './lib/Sprites.mjs';\nimport _Sequence from './lib/Sequence.mjs';\nimport _State from './lib/State.mjs';\nimport Animations from './lib/Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  State = (...args) => new _State(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Sequence,\n  State,\n  Animations,\n  Easing\n};"],"names":["Engine","constructor","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","_output","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_referenceRequestAnimationFrame","context","w","this","width","h","height","ratio","autoresize","window","addEventListener","maximizeCanvas","resize","audioElement","play","switchScene","scene","normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","gameArea","self","output","newWidth","innerWidth","newHeight","innerHeight","style","marginTop","marginLeft","css","$","siblings","loadingscreen","fillStyle","fillRect","font","percent","getPercentLoaded","fillText","Math","random","run","initParameter","requestAnimationFrame","mainLoop","bind","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","shiftTime","move","totalTimePassed","draw","callLoading","cancelAnimationFrame","ImageManager","add","Images","Callbacks","i","Image","onload","loaded","isLoaded","src","count","let","reset","getLoaded","getCount","getImage","nameOrImage","Layer","layer","isFunction","start","nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","min","callback","index","l","clear","LayerManager","layers","calc","c","apply","params","ifNull","value","alternative","addLayer","addLayerForId","addLayersForIds","numberOfLayer","result","layerId","Scene","configurationClassOrObject","configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","performance","Date","timePassed","maxTime","parameter","images","Promise","resolve","init","then","res","orgW","orgH","callDestroy","progress","loadedHeight","max","clearRect","text","isNaN","parseFloat","round","loading","timepassed","endTime","end","beforeMove","calcFrame","frames","floor","ref","animate","afterMove","isArray","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","super","controller","playbackState","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","_getViewport","hw","hh","a","save","setTransform","restore","SceneNormAudio","_Default","_Audio","_Norm","_NormAudio","Circle","arc","scaleX","scaleY","alphaMode","color","animation","enabled","changeAnimationStatus","ani","beginPath","fill","closePath","Callback","additionalParameter","Group","sprite","finished","spriteFinished","Canvas","generateTempCanvas","temp_canvas","document","createElement","tctx","wh","drawImage","Emitter","staticArray","functionArray","classToEmit","class","call","FastBlur","darker","pixel","ceil","targetW","targetH","imageSmoothingEnabled","image","position","CENTER","frameX","frameY","frameWidth","frameHeight","sX","sY","LEFT_TOP","const","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","curve","moveTo","points","bezierCurveTo","stroke","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","centerX","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","ret","lw","lineTo","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Image","_Text","_Particle","_Path","_Rect","_Scroller","_StarField","Sequence","loop","timeWait","obj","animationPosition","orgLoop","setObject","last_timestamp","hide_vote","timelapsed","orgEnabled","object","time","is_difference","current_animationPosition","timeleft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","animation_count","disable_vote","State","states","transitions","delegateTo","currentStateName","defaultState","currentState","isTransitioningToStateName","setState","name","console","log","UCFirstName","charAt","toUpperCase","transitionName","find","timeLeft","isDifference","duration","initialized","moveDefault","data","delta","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","pasition","_lerp","pathFrom","pathTo","ChangeTo","changeValues","ease","isColor","isPath","push","isBezier","bezier","moveAlgorithm","t","to","_preprocessing","path2shapes","End","Sequenz","EndDisabled","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Move","speed","targetX","targetY","hypotenuse","sqrt","Once","Aniobject","times","Play","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","Animation","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_ImageFrame","_Move","_Once","_Play","_Shake","_ShowOnce","_Stop","_Wait","_WaitDisabled","_Engine","_Sequence","_State"],"mappings":"+IAAMA,EACJC,SAAYC,cACNC,EAAeD,KACY,iBAApBA,QACH,IAAIE,MAAM,6CAEdF,EAAgBG,WAClBF,EAAe,QACLD,QAEL,IAAKA,EAAgBI,aACpB,IAAIF,MAAM,8CAEdG,EAAUC,OAAOC,OAAO,GAC1B,OACS,YACC,iBACI,GAEdN,WAGGO,QAAU,QACL,aACC,OACN,IACA,QACI,QAIJC,OAAS,UAETC,qBAAsB,OAEtBC,UAAY,UAGZC,eAAiB,OACjBC,YAAc,OAGdC,gCAAkC,UAGlCN,QAAQJ,OAASC,EAAQD,OACE,iBAAnBC,EAAQD,QAA0C,OAAnBC,EAAQD,SAAmBC,EAAQD,OAAOD,iBAC9E,IAAID,MAAM,qDAEbM,QAAQO,QAAUV,EAAQD,OAAOD,WAAW,WAC5CK,QAAQQ,EAAIC,KAAKT,QAAQJ,OAAOc,WAChCV,QAAQW,EAAIF,KAAKT,QAAQJ,OAAOgB,YAChCZ,QAAQa,MAAQJ,KAAKT,QAAQQ,EAAIC,KAAKT,QAAQW,EAE/Cd,EAAQiB,aACVC,OAAOC,iBAAiB,SAAUP,KAAKQ,gBAAgB,GACvDF,OAAOC,iBAAiB,oBAAqBP,KAAKQ,gBAAgB,QAC7DC,WAEGtB,OAAOoB,iBACb,mBAEMP,EAAKP,qBAAuBO,EAAKR,OAAOkB,gBACrClB,OAAOkB,aAAaC,SAG7B,SAGCC,YAAYxB,EAAQyB,YACpBC,iBAAiBd,KAAKT,QAAQO,UAGrCgB,YAAAA,0BAAiBC,GACfA,EAAIC,aAAe,SACnBD,EAAIE,UAAY,SAChBF,EAAIG,YAAc,EAClBH,EAAII,yBAA2B,eAGjCC,YAAAA,2BACSpB,KAAKT,QAAQQ,GAGtBsB,YAAAA,4BACSrB,KAAKT,QAAQW,GAGtBM,YAAAA,8BACMc,EAAWC,KAAKC,OAAOrC,OACvBsC,EAAWnB,OAAOoB,WAClBC,EAAYrB,OAAOsB,mBACAH,EAAWE,EAEXJ,KAAKC,OAAOpB,SACtBuB,EAAYJ,KAAKC,OAAOpB,QAC1ByB,MAAM1B,OAASwB,EAAY,OAC3BE,MAAM5B,MAAQwB,EAAW,SAEtBA,EAAWF,KAAKC,OAAOpB,QAC1ByB,MAAM5B,MAAQwB,EAAW,OACzBI,MAAM1B,OAASwB,EAAY,MAGtCL,EAASO,MAAMC,WAAaH,EAAY,EAAI,KAC5CL,EAASO,MAAME,YAAcN,EAAW,EAAI,OAE1CF,KAAKC,OAAOrC,QAAQ6C,IAAI,OACjBP,SACCE,IAEVM,EAAEV,KAAKC,OAAOrC,QACX+C,WACAF,IAAI,OACIP,IAEJzB,MAGTY,YAAAA,qBAAYC,UACNA,SACGnB,UAAYmB,GAEZb,MAGTmC,YAAAA,6BACMpB,EAAMf,KAAKT,QAAQO,QACvBiB,EAAII,yBAA2B,cAC/BJ,EAAIG,YAAc,EAElBH,EAAIqB,UAAY,oBACZC,SAAS,EAAG,EAAGrC,KAAKT,QAAQQ,EAAGC,KAAKT,QAAQW,GAEhDa,EAAIuB,KAAO,eACXvB,EAAIqB,UAAY,WACZG,EAAUvC,KAAKP,oBAAsBO,KAAKR,OAAOgD,mBAAqB,EAC1EzB,EAAIE,UAAY,OAChBF,EAAIC,aAAe,SACnBD,EAAI0B,SACF,WAAaF,EAAU,IACvB,GAAqB,EAAhBG,KAAKC,SACV3C,KAAKT,QAAQW,EAAI,GAAqB,EAAhBwC,KAAKC,eAGxB7B,iBAAiBC,IAGxB6B,YAAAA,aAAIC,UACFA,EAAgBA,GAAiB,QAgD5BhD,gCAAkCS,OAAOwC,+BA9CrCC,YACFlD,gCAAkCS,OAAOwC,sBAC5CC,EAASC,KAAKhD,OAGO,OAAnBA,KAAKN,UAAoB,KACvBuD,EAAuBjD,KAAKR,OAC5BQ,KAAKR,OAAO0D,QAAQlD,KAAKT,SACzBsD,EACAI,SACGvD,UAAUyD,SAASnD,KAAKT,QAAS0D,EAAsBjD,WACvDR,OAASQ,KAAKN,eACdA,UAAY,UACZD,qBAAsB,MAI3BO,KAAKR,OAAQ,KACX4D,EAAMpD,KAAKR,OAAO6D,mBAIjBzD,YAAcI,KAAKR,OAAO8D,UAAUF,EAAMpD,KAAKL,oBAE9C4D,EAAYvD,KAAKR,OAAO+D,UAAUvD,KAAKJ,kBACxCA,YAAcI,KAAKJ,YAAc2D,OACjC5D,eAAiByD,EAAMG,EAExBvD,KAAKP,oBACkB,IAArBO,KAAKJ,mBACFJ,OAAOgE,KAAKxD,KAAKT,QAASS,KAAKJ,aAGhCI,KAAKJ,YAAc,SAChBA,YAAcI,KAAKR,OAAOiE,sBAG5BjE,OAAOkE,KAAK1D,KAAKT,eAGnBE,oBAAsBO,KAAKR,OAAOmE,YAAY3D,KAAKT,WAOnDyD,KAAKhD,OAGTA,MAGTkD,YAAAA,+BACOrD,iCACHS,OAAOsD,qBAAqB5D,KAAKH,sCAC9BA,gCAAkC,KAChCG,MChNX,IAAM6D,iBAEGC,aAAIC,EAAQC,OACXzC,EAAOvB,MAAQ6D,gBAEdtC,EAAKwC,OAAOE,GAeXD,GAAsC,mBAAlBA,EAAUC,IAChCD,EAAUC,GAAGA,EAAG1C,EAAKwC,OAAOE,KAf9B1C,EAAKwC,OAAOE,GAAK,IAAI3D,OAAO4D,QACvBH,OAAOE,GAAGE,OAAS,WACtB5C,EAAK6C,SACDJ,GAAmC,mBAAfA,EAClBzC,EAAK8C,gBAGAL,GAAsC,mBAAlBA,EAAUC,IACvCD,EAAUC,GAAGA,EAAG1C,EAAKwC,OAAOE,KAGhC1C,EAAKwC,OAAOE,GAAGK,IAAMP,EAAOE,GAC5B1C,EAAKgD,cAdJC,IAAIP,KAAKF,cAqBVC,GAAmC,mBAAfA,GAA6BzC,EAAK8C,gBAGnD9C,GAGTsC,EAAOY,qBACClD,EAAOvB,MAAQ6D,SACrBtC,EAAKwC,OAAS,GACdxC,EAAKgD,MAAQ,EACbhD,EAAK6C,OAAS,EACP7C,GAGTsC,EAAOa,4BACG1E,MAAQ6D,GAAcO,QAGhCP,EAAOc,2BACG3E,MAAQ6D,GAAcU,OAGhCV,EAAOQ,wBACC9C,EAAOvB,MAAQ6D,SACbtC,EAAK6C,SAAW7C,EAAKgD,SAGxBK,kBAASC,SACgB,iBAAhBA,EAA2BA,GAAe7E,MAAQ6D,GAAcE,OAAOc,IAIzFhB,EAAaE,OAAS,GACtBF,EAAaU,MAAQ,EACrBV,EAAaO,OAAS,EC3DtB,IAAMU,EACJhG,gBACOiG,MAAQ,QACRC,WAAa,QACbC,MAAQ,OACRC,SAAW,GAGlBC,YAAAA,oBAAWC,eACJC,gBAAgBD,GACdA,GAGTE,YAAAA,qBAAYC,eACLC,kBAAkBD,GAChBA,GAGTF,YAAAA,yBAAgBD,OACVK,EAAMzF,KAAK+E,MAAMW,OACjBC,EAAK3F,KAAKkF,cACTH,MAAMY,GAAMP,OACZJ,WAAWW,GAAyB,mBAAZP,EACzBK,IAAQE,eAGRT,EAAWlF,KAAKkF,SAAW,EACxBA,IAAaO,GAAOV,MAAMG,oBAG5BA,SAAWA,EACZlF,KAAKiF,MAAQU,SACVV,MAAQU,GAERA,GAGTH,YAAAA,2BAAkBD,cACZE,EAAMzF,KAAK+E,MAAMW,cAEjBD,IADKzF,KAAKkF,eAEPH,MAAQ/E,KAAK+E,MAAMa,OAAOL,QAC1BL,SAAWlF,KAAK+E,MAAMW,SACXG,iBAASC,EAAGC,KACrBf,WAAWS,EAAMM,GAAkB,mBAAND,IAE7BE,MAAMC,KAAK,CAAEP,OAAQH,EAAgBG,iBAAWI,EAAGC,UAAMA,EAAIN,KAE7DF,EAAgBW,aAAId,UAAWpF,EAAKmF,WAAWC,MAI1De,YAAAA,iBAAQC,UACCpG,KAAK+E,MAAMqB,IAGpBC,YAAAA,wBAAejB,UACNpF,KAAK+E,MAAMuB,QAAQlB,IAG5BmB,YAAAA,yBAAgBnB,OACRgB,EAAYpG,KAAKqG,eAAejB,GAClCgB,GAAa,QACVI,WAAWJ,IAIpBI,YAAAA,oBAAWJ,OACLX,EAAMzF,KAAK+E,MAAMW,OAAS,KAC1BD,EAAM,GAAKW,IAAcX,EAAK,UAC3BV,MAAMqB,GAAa,KACjBX,IAAQzF,KAAK+E,MAAMU,EAAM,aAG3BV,MAAMW,OAASD,OACfT,WAAWU,OAASD,OACpBP,SAAWxC,KAAK+D,IAAIzG,KAAKkF,SAAUO,QACnCR,MAAQvC,KAAK+D,IAAIzG,KAAKiF,MAAOQ,aAE7BV,MAAMqB,GAAa,UACnBlB,SAAWxC,KAAK+D,IAAIzG,KAAKkF,SAAUkB,GACpCpG,KAAKiF,QAAUmB,SACZnB,MAAQmB,EAAY,IAK/BP,YAAAA,iBAAQa,OACFC,EAAOvB,EACLwB,EAAI5G,KAAK+E,MAAMW,WAChBiB,EAAQ3G,KAAKiF,MAAO0B,EAAQC,EAAGD,OACxB3G,KAAK+E,MAAM4B,KAEnBD,EAAS,OACPC,UACAvB,EACAJ,WAAYhF,KAAKgF,WAAW2B,SACrB3G,QAMfuE,YAAAA,wBACSvE,KAAK+E,MAAMW,QAGpBmB,YAAAA,sBACO9B,MAAQ,QACRC,WAAa,QACbC,MAAQ,OACRC,SAAW,GC7GpB,IAAM4B,EACJhI,gBACOiI,OAAS,ICJH,SAASC,EAAKC,uEACP,mBAAPA,EAAoBA,EAAEC,MAAM,KAAKC,GAAUF,ECD3C,SAASG,EAAOC,EAAOC,UAC7B,MAAOD,GAAsD,KAAVA,EAAeC,EAAcD,EFMvFE,YAAAA,gCACOR,OAAO/G,KAAK+G,OAAOrB,QAAU,IAAIZ,EAC/B9E,KAAK+G,OAAO/G,KAAK+G,OAAOrB,OAAS,IAG1C8B,YAAAA,qCACOT,OAAO/G,KAAK+G,OAAOrB,QAAU,IAAIZ,EAC/B9E,KAAK+G,OAAOrB,OAAS,GAG9B+B,YAAAA,yBAAgBC,6BAAgB,OACxBC,EAAS3B,MAAMC,KACnB,QAAUyB,YACT5B,EAAGC,UAAMA,EAAI/F,EAAK+G,OAAOrB,qBAEvBqB,OAAS/G,KAAK+G,OAAOnB,OACxBI,MAAMC,KAAK,QAAUyB,YAAiB5B,UAAK,IAAIhB,KAE1C6C,GAGTxB,YAAAA,iBAAQyB,UACC5H,KAAK+G,OAAOa,IAGrB/B,YAAAA,iBAAQa,OACFzC,EACE2C,EAAI5G,KAAK+G,OAAOrB,WACjBzB,EAAI,EAAGA,EAAI2C,EAAG3C,SACZ8C,OAAO9C,GAAG4B,QAAQa,IAI3BnC,YAAAA,wBACSvE,KAAK+G,OAAOrB,QAGrBmB,YAAAA,sBACOE,OAAS,IGxClB,IAAMc,EACJ/I,SAAYgJ,QAEHC,cADmC,mBAA/BD,EACY,IAAIA,EAEJA,OAIlBE,aAAe,IAAIlB,OAEnBrD,gBAAkB,OAElBwE,OAAS,UACTC,UAAW,OACXC,wBAAqBC,OAErBC,UAAYrB,EAAKhH,KAAK+H,cAAcM,gBACpCC,oBAAsBlB,EACzBJ,EAAKhH,KAAK+H,cAAcO,qBACxB,QAEGC,mBAAqBnB,EACxBJ,EAAKhH,KAAK+H,cAAcQ,oBACxB,KAIJlF,YAAAA,8BACSmF,YAAcA,YAAYpF,MAAQqF,KAAKrF,OAGhDE,YAAAA,mBAAUoF,OACJC,EAAU,WACV3I,KAAKqI,cACGrI,KAAKqI,UAAYrI,KAAKsI,qBAE9BI,EAAaC,EACRA,EAEFD,GAGTnF,YAAAA,mBAAUmF,UACH1I,KAAKqI,WAGDK,EAAa1I,KAAKqI,UAFlB,GAKXlF,YAAAA,kBAAS3B,EAAQoH,EAAWX,mBACrBA,OAASA,OACTxH,OAAOe,OACNqH,EAAS7B,EAAKhH,KAAK+H,cAAcc,QACnCA,GACFhF,EAAaC,IAAI+E,GAEnBC,QAAQC,QACN/I,KAAK+H,cAAciB,MACjBhJ,KAAK+H,cAAciB,KAAK,QAAEf,SAAQzG,QAAexB,eAAM4I,KACzDK,cAAKC,UAAQlJ,EAAKkI,UAAW,KAGjCzH,YAAAA,gBAAOe,QACA2G,mBAAqB,GACrB,IACA,IACA,EACHpI,EAAGyB,EAAOzB,EACVG,EAAGsB,EAAOtB,EACViJ,KAAM3H,EAAOzB,EACbqJ,KAAM5H,EAAOtB,IAIjBmJ,YAAAA,qBAAY7H,QACLuG,cAAc7E,SACjBlD,KAAK+H,cAAc7E,QAAQ,CAAE+E,OAAQjI,KAAKiI,aAAejI,YAAMwB,SAC5D0G,UAAW,GAGlB/F,YAAAA,uBAAcX,EAAQ8H,OACdvI,EAAMS,EAAO1B,QACjByJ,EAAe7G,KAAK8G,IAAI,EAAGF,EAAW9H,EAAOtB,GAC/Ca,EAAII,yBAA2B,cAC/BJ,EAAIG,YAAc,EAClBH,EAAI0I,UAAU,EAAG,EAAGjI,EAAOzB,EAAGyB,EAAOtB,GACrCa,EAAIqB,UAAY,SACZC,SAAS,EAAGb,EAAOtB,EAAI,EAAIqJ,EAAe,EAAG/H,EAAOzB,EAAGwJ,GAC3DxI,EAAIuB,KAAO,eACXvB,EAAIqB,UAAY,OAChBrB,EAAIE,UAAY,OAChBF,EAAIC,aAAe,aACf0I,EAAOJ,EAGNK,MAAMC,WAAWN,KAAeK,MAAML,EAAW,KACpDI,EAAO,WAAahH,KAAKmH,MAAM,IAAMP,GAAY,KAEnDvI,EAAI0B,SACFiH,EACA,GAAqB,EAAhBhH,KAAKC,SACVnB,EAAOtB,EAAI,GAAqB,EAAhBwC,KAAKC,eAGlBsF,QAAUjI,KAAKiI,OAAOnH,iBAAiBC,IAG9C4C,YAAAA,qBAAYnC,MACNqC,EAAaQ,YAAcrE,KAAKkI,qBAC7BzD,MAAMjD,IACJ,MAEH6F,EAAQxD,EAAac,WACvBd,EAAaa,YAAcb,EAAac,WACxC,yBAECoD,cAAc+B,QACf9J,KAAK+H,cAAc+B,QAAQ,CACzB7B,OAAQjI,KAAKiI,aACNjI,YACPwB,QACA6F,IAEFrH,KAAKmC,cAAcX,EAAQ6F,IACxB,GAGT7D,YAAAA,cAAKhC,EAAQuI,WAENtG,iBAAmBsG,EAGpBA,EAAa,QAEVtF,MAAMjD,GACXuI,EAAa/J,KAAKyD,iBAElBzD,KAAK+H,cAAciC,SACnBhK,KAAK+H,cAAciC,SAAWhK,KAAKyD,qBAGrBzD,KAAKyD,gBAAkBzD,KAAKgK,aACrCvG,gBAAkBzD,KAAKgK,aAEvBjC,cAAckC,KACjBjK,KAAK+H,cAAckC,IAAI,CAAEhC,OAAQjI,KAAKiI,aAAejI,YAAMwB,KAG3DxB,KAAK+H,cAAcmC,cACjBlK,KAAKqI,cACH0B,GAAc/J,KAAKqI,UAAYrI,KAAKuI,uBAGpC/D,IAAI2F,EAAY,EACdC,EAAS1H,KAAK+D,IACZzG,KAAKsI,oBACL5F,KAAK2H,MAAMN,EAAa/J,KAAKqI,YAEjC8B,EAAYC,EACZD,SAEKpC,cAAcmC,WAAW,CAC5BjC,OAAQjI,KAAKiI,aACNjI,KACPgI,aAAchI,KAAKgI,oBACnBxG,aACAuI,cAKDhC,cAAcmC,WAAW,CAC5BjC,OAAQjI,KAAKiI,aACNjI,KACPgI,aAAchI,KAAKgI,oBACnBxG,aACAuI,SAKD/B,aAAanC,iBAASyE,mDAEXC,QAAQR,IAClBhF,EAAMyB,WAAWG,KAKnB3G,KAAK+H,cAAcyC,gBAChBzC,cAAcyC,UAAU,CAC3BvC,OAAQjI,KAAKiI,aACNjI,KACPgI,aAAchI,KAAKgI,oBACnBxG,aACAuI,KAKNrG,YAAAA,cAAKlC,mBACEwG,aAAanC,iBAASyE,oDAGrBlF,EAAQ,CACN6C,OAAQjI,EAAKiI,aACNjI,EACPgI,aAAchI,EAAKgI,mBACnBjD,SACAvD,EACAuI,WAAY/J,EAAKyD,mBAGnBsB,EAAMyB,WAAWG,GAGnBvB,EAAQ1B,KAAKlC,EAAO1B,QAASE,EAAKmI,uBAKxC1D,YAAAA,eAAMjD,OACAmG,EAAS3H,KAAK+H,cAActD,MAC5BzE,KAAK+H,cAActD,MAAM,CACvBwD,OAAQjI,KAAKiI,aACNjI,KACPgI,aAAchI,KAAKgI,oBACnBxG,IAEF,IAAIsF,KAEJd,MAAMyE,QAAQ9C,GAAS,KACnBZ,EAASY,EACfA,EAAS,IAAIb,EACbC,EAAOlB,iBAAQC,KACNyB,WAAWjC,YAAYQ,KAI9B6B,SACGK,aAAeL,ICpP1B,IAAqB+C,cACnB5L,WAAY4B,qBAELiK,eAAiB,UACjBC,cAAgB,UAChBC,mBAAoB,OACpBnK,aAAeA,kGAGtB2C,2BACMA,EAAcyH,YAAMzH,0BACpBrD,KAAKU,aAAc,IAEjBV,KAAK6K,kBAAmB,IACE,OAAxB7K,KAAK2K,2BACFA,eAAiBtH,OACjBuH,cAAgB5K,KAAKU,aAAa2C,YACA,IAAhCrD,KAAKU,aAAa2C,eAE0B,YAA/CrD,KAAKU,aAAaqK,WAAWC,cAA6B,IACxDhL,KAAKU,aAAa2C,cAAgBrD,KAAK4K,qBACb,IAArB5K,KAAK4K,cAAuBlI,KAAK+D,IAAI,IAAKpD,EAAcrD,KAAK2K,gBAC/D,GAAK3K,KAAKU,aAAa2C,YAAcrD,KAAK4K,cAAiB,IAAQ5K,KAAKU,aAAa2C,YAAcrD,KAAK4K,eAAkBvH,EAAcrD,KAAK2K,eAAiB,gBAC9JA,eAAiB3K,KAAK2K,eAAwE,KAAtD3K,KAAKU,aAAa2C,YAAcrD,KAAK4K,oBAC7EA,cAAgB5K,KAAKU,aAAa2C,YACX,IAArBrD,KAAK4K,cAAuBvH,EAAcrD,KAAK2K,2BAGrDA,eAAiBtH,OACjBuH,cAAgB5K,KAAKU,aAAa2C,YACX,IAArBrD,KAAK4K,qBAGyB,IAAhC5K,KAAKU,aAAa2C,mBAIpBA,eAIXC,mBAAUoF,UACDA,eAGTM,8EAEMhJ,KAAKU,eACWV,KAAKU,aAAauK,YAAY,aAChCC,MAAM,mBAIU,mBAArBC,uBACJzK,aAAaqK,WAAa,IAAII,qBAC9BN,mBAAoB,QAEtBnK,aAAa0K,QAAU,YACvB1K,aAAa2K,QAGbP,YAAM9B,WAAKhJ,KAAGsL,gBAGvB3H,qBAAYnC,OACN4C,EAAS0G,YAAMnH,sBAAYnC,MAE3B4C,GAAUpE,KAAKU,aAAc,MACzBV,KAAKU,aAAa6K,YAAcvL,KAAKU,aAAa8K,8BAEjDrJ,cAAcX,EAAQ,sBACpB,OAEFd,aAAaC,YACbwB,cAAcX,EAAQ,wBAI1B4C,MA9E+ByD,GCsBxC,SAAS4D,SACFhH,QAGPgH,EAAUC,UAAUjH,MAAQ,uBACrBkH,EAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACb3L,MAGTyL,EAAUC,UAAUE,SAAW,SAASC,OAElCC,EAAM9L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAErDI,EAAM/L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GACrDK,EAAMhM,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAErDM,EAAKjM,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,GAChEO,EAAKlM,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,eAE/DA,EAAE,GATG3L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,GAAK3L,KAAK2L,EAAE,GAAKE,EAAOF,EAAE,QAUpDA,EAAE,GAAKG,OACPH,EAAE,GAAKI,OACPJ,EAAE,GAAKK,OACPL,EAAE,GAAKM,OACPN,EAAE,GAAKO,EACLlM,MAGTyL,EAAUC,UAAUS,OAAS,eACvBC,EAAI,GAAKpM,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,IAEpDU,GAAMrM,KAAK2L,EAAE,GAAKS,EAClBE,GAAMtM,KAAK2L,EAAE,GAAKS,EAClBG,EAAKvM,KAAK2L,EAAE,GAAKS,EACjBI,EAAKJ,GAAKpM,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,IACrDc,EAAKL,GAAKpM,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,gBACpDA,EAAE,GANE3L,KAAK2L,EAAE,GAAKS,OAOhBT,EAAE,GAAKU,OACPV,EAAE,GAAKW,OACPX,EAAE,GAAKY,OACPZ,EAAE,GAAKa,OACPb,EAAE,GAAKc,EACLzM,MAGTyL,EAAUC,UAAUgB,OAAS,SAASC,OAChC1F,EAAIvE,KAAKkK,IAAID,GACbE,EAAInK,KAAKoK,IAAIH,GAEbb,EAAM9L,KAAK2L,EAAE,GAAK1E,EAAIjH,KAAK2L,EAAE,GAAKkB,EAClCd,EAAM/L,KAAK2L,EAAE,IAAMkB,EAAI7M,KAAK2L,EAAE,GAAK1E,EACnC+E,EAAMhM,KAAK2L,EAAE,IAAMkB,EAAI7M,KAAK2L,EAAE,GAAK1E,cAClC0E,EAAE,GAJG3L,KAAK2L,EAAE,GAAK1E,EAAIjH,KAAK2L,EAAE,GAAKkB,OAKjClB,EAAE,GAAKG,OACPH,EAAE,GAAKI,OACPJ,EAAE,GAAKK,EACLhM,MAGTyL,EAAUC,UAAUqB,UAAY,SAASC,EAAGC,eACrCtB,EAAE,IAAM3L,KAAK2L,EAAE,GAAKqB,EAAIhN,KAAK2L,EAAE,GAAKsB,OACpCtB,EAAE,IAAM3L,KAAK2L,EAAE,GAAKqB,EAAIhN,KAAK2L,EAAE,GAAKsB,EAClCjN,MAGTyL,EAAUC,UAAUwB,MAAQ,SAASC,EAAIC,eAClCzB,EAAE,IAAMwB,OACRxB,EAAE,IAAMwB,OACRxB,EAAE,IAAMyB,OACRzB,EAAE,IAAMyB,EACNpN,MAGTyL,EAAUC,UAAU2B,eAAiB,SAASC,EAAIC,OAC5CP,EAAIM,QAID,CAFPA,EAAKN,EAAIhN,KAAK2L,EAAE,GADR4B,EACiBvN,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,GAC5C4B,EAAKP,EAAIhN,KAAK2L,EAAE,GAFR4B,EAEiBvN,KAAK2L,EAAE,GAAK3L,KAAK2L,EAAE,KAI9CF,EAAUC,UAAU8B,MAAQ,eACtBC,EAAI,IAAIhC,SACZgC,EAAE9B,EAAI3L,KAAK2L,EAAE+B,MAAM,GACZD,GCzGT,IAAqBE,cACnB7O,4EACQkB,KAAG4N,QACJC,UAAY,UACZC,gBAAkB,qGAGzBC,4BACO/N,KAAKiI,OAAQ,OAAO,IAAIwD,MAExBzL,KAAK6N,UAAW,KACXG,EAAKhO,KAAKiI,OAAO1I,QAAQQ,EAAI,EAC7BkO,EAAKjO,KAAKiI,OAAO1I,QAAQW,EAAI,EAC7BgN,EAAQlN,KAAKiI,OAAO1I,QAAQa,MAAQ,EAAI4N,EAAKC,OAEhDJ,WAAa,IAAIpC,GACnBsB,UAAUiB,EAAIC,GACdf,MAAMA,EAAOA,QACXY,gBAAkB,YAOlB9N,KAAK6N,uBAGdpN,gBAAOe,QACAqM,eAAYzF,OACZD,mBAAqB,CACxB+F,EAAG,EACHlB,GAAI,EACJC,GAAI,EACJlN,EAAG,EACHG,EAAG,EACHiJ,KAAM3H,EAAOzB,EACbqJ,KAAM5H,EAAOtB,gBAIjBmN,wBAAeL,EAAGC,UACXjN,KAAK8N,uBACHA,gBAAkB9N,KAAK+N,eAAeP,QAAQrB,UAE9CnM,KAAK8N,gBAAgBT,eAAeL,EAAGC,gBAGhDvJ,cAAKlC,SACHA,EAAO1B,QAAQqO,UAEf3M,EAAO1B,SAAQsO,mBAAa9D,EAAGtK,KAAK+N,eAAepC,eAE7CjI,eAAKlC,GACXA,EAAO1B,QAAQuO,cAtDoBxG,GCDlByG,cACnBxP,WAAY4B,eACJA,mGAGRD,gBAAOe,QACA2G,mBAAqB,CACxB+F,EAAG,EACHlB,GAAI,EACJC,GAAI,EACJlN,EAAG,EACHG,EAAG,EACHiJ,KAAM3H,EAAOzB,EACbqJ,KAAM5H,EAAOtB,gBAIjBwD,cAAKlC,GACHA,EAAO1B,QAAQqO,OACf3M,EAAO1B,QAAQiN,UAAUvL,EAAOzB,EAAI,EAAGyB,EAAOtB,EAAI,GAClDsB,EAAO1B,QAAQoN,MAAM1L,EAAOzB,EAAGyB,EAAOtB,GAKtCsB,EAAO1B,QAAQiN,WAAW,IAAK,gBAEzBrJ,eAAKlC,GACXA,EAAO1B,QAAQuO,cA5ByB3D,KCS7B,kFALU,kCAAI6D,gBAAYX,qFAGlB,kCAAIY,gBAAUZ,oFAFf,kCAAIa,gBAASb,yFACR,kCAAIc,gBAAcd,OCDxBe,EAEnB7P,SAAYqI,QAEL6F,EAAI5F,EAAOJ,EAAKG,EAAO6F,GAAI,QAC3BC,EAAI7F,EAAOJ,EAAKG,EAAO8F,GAAI,QAE3B2B,IAAMxH,EAAOJ,EAAKG,EAAOyH,KAAM,QAE/BC,OAASzH,EAAOJ,EAAKG,EAAO0H,QAAS,QACrCC,OAAS1H,EAAOJ,EAAKG,EAAO2H,QAAS,QAErCZ,EAAI9G,EAAOJ,EAAKG,EAAO+G,GAAI,QAE3Ba,UAAY3H,EAAOJ,EAAKG,EAAO4H,WAAY,oBAE3CC,MAAQ5H,EAAOJ,EAAKG,EAAO6H,OAAQ,aAEnCC,UAAYjI,EAAKG,EAAO8H,gBAExBC,QAAU9H,EAAOJ,EAAKG,EAAO+H,UAAU,IAG9CC,YAAAA,+BAAsBC,GACU,iBAAnBpP,KAAKiP,gBACTA,UAAUE,sBAAsBC,IAKzC7E,YAAAA,iBAAQR,SACyB,iBAApB/J,KAAKiP,WAEVjP,KAAKiP,UAAUrM,IAAI5C,KAAM+J,GAAY,IAAS,SAE3CmF,SAAU,GACR,IAQbxL,YAAAA,cAAK5D,EAASqI,GACRnI,KAAKkP,UACPpP,EAAQqB,yBAA2BnB,KAAK+O,YAChC7N,YAAclB,KAAKkO,EAAI/F,EAAmB+F,EAClDpO,EAAQqO,OACRrO,EAAQiN,UAAU/M,KAAKgN,EAAGhN,KAAKiN,GAC/BnN,EAAQoN,MAAMlN,KAAK6O,OAAQ7O,KAAK8O,QAChChP,EAAQuP,YACRvP,EAAQsC,UAAYpC,KAAKgP,MACzBlP,EAAQ8O,IAAI,EAAG,EAAG,EAzDP,qBAyDW,GAAK5O,KAAK4O,KAzDrB,qBAyDuC,IAAM5O,KAAK4O,MAAiB,GAC9E9O,EAAQwP,OACRxP,EAAQyP,YACRzP,EAAQuO,YC7Dd,IAAqBmB,cACjB1Q,WAAYqI,eACFA,QAEPT,SAAWS,EAAOT,yGAGrBhD,cAAK5D,EAAS2P,GACZzP,KAAKkP,cACHxI,SAAS5G,EAAS2P,EAAqBzP,UATT2O,GCGjBe,cACnB5Q,WAAYqI,eACJA,QAEDwI,OAASvI,EAAOD,EAAOwI,OAAQ,oGAItCR,+BAAsBC,OAIf5K,IAAIP,iBAFHkL,gCAAsBC,GAEdpP,KAAK2P,YACZA,OAAO1L,GAAGkL,sBAAsBC,gBAKzC7E,iBAAQR,OAEF6F,EAAW9E,YAAMP,kBAAQR,GAC3B8F,GAAiB,KAEf7P,KAAKkP,YACF1K,IAAIP,KAAKjE,KAAK2P,OACjBE,EAAiB7P,KAAK2P,OAAO1L,GAAGsG,QAAQR,IAAe8F,SAIvD7P,KAAKiP,UACAW,GAEHC,SACGX,SAAU,GAEVW,gBAKXnM,cAAK5D,EAASqI,MACRnI,KAAKkP,QAAS,KAWX1K,IAAIP,KAVLjE,KAAKkO,EAAI,KACX/F,EAAqB9I,OAAOC,OAAO,GAAI6I,IACpB+F,GAAKlO,KAAKkO,GAG/BpO,EAAQqO,OACRrO,EAAQiN,UAAU/M,KAAKgN,EAAGhN,KAAKiN,GAC/BnN,EAAQoN,MAAMlN,KAAK6O,OAAQ7O,KAAK8O,QAChChP,EAAQ4M,OApDG,oBAoDI1M,KAAK4O,KAEN5O,KAAK2P,YACZA,OAAO1L,GAAGP,KAAK5D,EAASqI,GAE/BrI,EAAQuO,eAvDqBM,GCAdmB,cAEnBhR,WAAYqI,eACJA,QAEDlH,MAAQ+G,EAAKG,EAAOlH,YACpBE,OAAS6G,EAAKG,EAAOhH,wGAG5B4P,4BAAmBjQ,EAASqI,OACtBpI,EAAID,EAAQX,OAAOc,MACrBC,EAAIJ,EAAQX,OAAOgB,YAChB6P,YAAcC,SAASC,cAAc,eACrCF,YAAY/P,MAAQyC,KAAKmH,MAAM9J,EAAIC,KAAK6O,aACxCmB,YAAY7P,OAASuC,KAAKmH,MAAM3J,EAAIF,KAAK8O,aACzCqB,KAAOnQ,KAAKgQ,YAAY9Q,WAAW,WACnCiR,KAAKhP,yBAA2B,mBAChCgP,KAAKjP,YAAc,EACnBlB,KAAKC,aACHA,MAAQkI,EAAmBpI,GAE7BC,KAAKG,cACHA,OAASgI,EAAmBjI,gBAKrCwD,cAAK5D,EAASqI,MACRnI,KAAKkP,QAAS,CACXlP,KAAKgQ,kBACHD,mBAAmBjQ,EAASqI,OAG/BpI,EAAIC,KAAKC,MACXC,EAAIF,KAAKG,OACTiQ,EAAKrQ,EAAI,EACTkO,EAAK/N,EAAI,MAGNsE,IAAIP,KAAKjE,KAAK2P,YACZA,OAAO1L,GAAGP,KAAK1D,KAAKmQ,MAAM,GAGjCrQ,EAAQqO,OACRrO,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAclB,KAAKkO,EAAI/F,EAAmB+F,EAClDpO,EAAQiN,UAAU/M,KAAKgN,EAAIoD,EAAIpQ,KAAKiN,EAAIgB,GACxCnO,EAAQoN,MAAMlN,KAAK6O,OAAQ7O,KAAK8O,QAChChP,EAAQ4M,OAlDG,oBAkDI1M,KAAK4O,KACpB9O,EAAQuQ,UAAUrQ,KAAKgQ,YAAa,EAAG,EAAGhQ,KAAKgQ,YAAY/P,MAAOD,KAAKgQ,YAAY7P,QAASiQ,GAAKnC,EAAIlO,EAAGG,GACxGJ,EAAQuO,eAlDsBqB,GCDfY,cACjBxR,WAAYqI,eACFA,EAAO5F,MAAQ,QACjBgP,EAAc,GAChBC,EAAgB,OAEdhM,IAAIP,KAAKkD,GACsC,IAA3C,CAAC,OAAQ,QAAS,SAASb,QAAQrC,KACT,mBAAfkD,EAAOlD,GAChBuM,EAAcvM,GAAKkD,EAAOlD,GAE1BsM,EAAYtM,GAAKkD,EAAOlD,QAM9BM,EAAQ6C,EAAOJ,EAAKG,EAAO5C,OAAQ,QAClCoL,OAAS,OAEVnL,IAAIP,EAAI,EAAGA,EAAIM,EAAON,IAAK,KACvBwM,EAActJ,EAAOuJ,MACrB9H,EAAY,OACZpE,IAAImC,KAAS4J,EACf3H,EAAUjC,GAAS4J,EAAY5J,OAE7BnC,IAAImC,KAAS6J,EACf5H,EAAUjC,GAAS6J,EAAc7J,GAAOgK,KAAK,KAAM1M,QAEhD0L,OAAO1L,GAAK,IAAIwM,EAAY7H,2FA7BR8G,GCAhBkB,cAEnB9R,WAAYqI,eACJA,QAEDlH,MAAQ+G,EAAKG,EAAOlH,YACpBE,OAAS6G,EAAKG,EAAOhH,aAErB0Q,OAASzJ,EAAOJ,EAAKG,EAAO0J,QAAS,QACrCC,MAAQ1J,EAAOJ,EAAKG,EAAO2J,QAAQ,QACnCjK,MAAQO,EAAOJ,EAAKG,EAAON,QAAQ,mGAG1CkJ,4BAAmBjQ,EAASqI,OACtBpI,EAAID,EAAQX,OAAOc,MACrBC,EAAIJ,EAAQX,OAAOgB,YAChB6P,YAAcC,SAASC,cAAc,eACrCF,YAAY/P,MAAQyC,KAAKqO,KAAKhR,EAAIC,KAAK6O,aACvCmB,YAAY7P,OAASuC,KAAKqO,KAAK7Q,EAAIF,KAAK8O,aACxCqB,KAAOnQ,KAAKgQ,YAAY9Q,WAAW,WACnCiR,KAAKhP,yBAA2B,mBAChCgP,KAAKjP,YAAc,EACnBlB,KAAKgN,SACHA,EAAI7E,EAAmB6E,GAEzBhN,KAAKiN,SACHA,EAAI9E,EAAmB8E,GAEzBjN,KAAKC,aACHA,MAAQkI,EAAmBpI,GAE7BC,KAAKG,cACHA,OAASgI,EAAmBjI,gBAKrCwD,cAAK5D,EAASqI,MACRnI,KAAKkP,QAAS,CACXlP,KAAKgQ,kBACHD,mBAAmBjQ,EAASqI,OAG/B+F,EAAIlO,KAAKkO,EAAI/F,EAAmB+F,EAClCnO,EAAIC,KAAKC,MACTC,EAAIF,KAAKG,OACT6Q,EAAUtO,KAAKmH,MAAM9J,EAAIoI,EAAmBgB,KAAOhB,EAAmBpI,EAAIC,KAAK6O,QAC/EoC,EAAUvO,KAAKmH,MAAM3J,EAAIiI,EAAmBiB,KAAOjB,EAAmBjI,EAAIF,KAAK8O,QAE7EZ,EAAI,GAAK8C,GAAWC,SACjBd,KAAKhP,yBAA2B,YAChCgP,KAAKjP,YAAc,OACnBiP,KAAKE,UAAUvQ,EAAQX,OAAQ,EAAG,EAAGW,EAAQX,OAAOc,MAAOH,EAAQX,OAAOgB,OAAQ,EAAG,EAAG6Q,EAASC,GAElGjR,KAAK6Q,OAAS,SACXV,KAAKhP,yBAA2BnB,KAAK6G,MAAQ,cAAgB,mBAC7DsJ,KAAK/N,UAAY,cAAgBpC,KAAK6Q,OAAS,SAC/CV,KAAK9N,SAAS,EAAG,EAAG2O,EAASC,IAIhCjR,KAAK6G,OACP/G,EAAQ2J,UAAUzJ,KAAKgN,EAAGhN,KAAKiN,EAAGlN,EAAGG,GAEvCJ,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAcgN,EACtBpO,EAAQoR,uBAAyBlR,KAAK8Q,MACtChR,EAAQuQ,UAAUrQ,KAAKgQ,YAAa,EAAG,EAAGgB,EAASC,EAASjR,KAAKgN,EAAGhN,KAAKiN,EAAGlN,EAAGG,GAC/EJ,EAAQoR,uBAAwB,QAI9BlR,KAAK6G,QACF7G,KAAKgN,SACHA,EAAI7E,EAAmB6E,GAEzBhN,KAAKiN,SACHA,EAAI9E,EAAmB8E,GAEzBjN,KAAKC,aACHA,MAAQkI,EAAmBpI,GAE7BC,KAAKG,cACHA,OAASgI,EAAmBjI,GAEnCJ,EAAQ2J,UAAUzJ,KAAKgN,EAAGhN,KAAKiN,EAAGjN,KAAKC,MAAOD,KAAKG,aArFrBwO,GCKhCzK,cACJpF,WAAYqI,eACJA,QAEDgK,MAAQtN,EAAae,SAASoC,EAAKG,EAAOgK,aAE1CC,SAAWhK,EAAOJ,EAAKG,EAAOiK,UAAWlN,EAAMmN,aAC/CC,OAASlK,EAAOJ,EAAKG,EAAOmK,QAAS,QACrCC,OAASnK,EAAOJ,EAAKG,EAAOoK,QAAS,QACrCC,WAAapK,EAAOJ,EAAKG,EAAOqK,YAAa,QAC7CC,YAAcrK,EAAOJ,EAAKG,EAAOsK,aAAc,mGAItD/N,cAAK5D,EAASqI,MACRnI,KAAKkP,QAAS,KACZsC,EAAaxR,KAAKwR,YAAcxR,KAAKmR,MAAMlR,MAC7CwR,EAAczR,KAAKyR,aAAezR,KAAKmR,MAAMhR,OAC7CuR,EAAKF,EAAaxR,KAAK6O,OACvB8C,EAAKF,EAAczR,KAAK8O,OAC1BhP,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAclB,KAAKkO,EAAI/F,EAAmB+F,EAClC,GAAZlO,KAAK4O,IACH5O,KAAKoR,WAAalN,EAAM0N,SAC1B9R,EAAQuQ,UACNrQ,KAAKmR,MACLnR,KAAKsR,OACLtR,KAAKuR,OACLC,EACAC,EACAzR,KAAKgN,EACLhN,KAAKiN,EACLyE,EACAC,GAIF7R,EAAQuQ,UACNrQ,KAAKmR,MACLnR,KAAKsR,OACLtR,KAAKuR,OACLC,EACAC,EACAzR,KAAKgN,EAAI0E,EAAK,EACd1R,KAAKiN,EAAI0E,EAAK,EACdD,EACAC,IAKJ7R,EAAQqO,OACRrO,EAAQiN,UAAU/M,KAAKgN,EAAGhN,KAAKiN,GAC/BnN,EAAQ4M,OAzDC,oBAyDM1M,KAAK4O,KACpB9O,EAAQuQ,UACNrQ,KAAKmR,MACLnR,KAAKsR,OACLtR,KAAKuR,OACLC,EACAC,IACEC,GAAM,KACNC,GAAM,GACRD,EACAC,GAEF7R,EAAQuO,gBAjEIM,GAuEpBzK,EAAM0N,SAAW,EACjB1N,EAAMmN,OAAS,EC7EfQ,IAEMC,cACJhT,WAAYqI,eACJA,QAEDuC,KAAO1C,EAAKG,EAAOuC,WAEnBpH,KAAO8E,EAAOJ,EAAKG,EAAO7E,MAAO,uBAEjC8O,SAAWhK,EAAOJ,EAAKG,EAAOiK,UAAWU,EAAKT,aAE9CrC,MAAQhI,EAAKG,EAAO6H,YACpB+C,YAAc/K,EAAKG,EAAO4K,kBAC1BC,UAAY5K,EAAOJ,EAAKG,EAAO6K,WAAY,mGAIlDtO,cAAK5D,EAASqI,GACRnI,KAAKkP,UACPpP,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAclB,KAAKkO,EAAI/F,EAAmB+F,EAClDpO,EAAQqO,OACJ2D,EAAKF,WACP9R,EAAQmB,UAAY,OACpBnB,EAAQkB,aAAe,OAEzBlB,EAAQiN,UAAU/M,KAAKgN,EAAGhN,KAAKiN,GAC/BnN,EAAQoN,MAAMlN,KAAK6O,OAAQ7O,KAAK8O,QAChChP,EAAQ4M,OA7BG,oBA6BI1M,KAAK4O,KACpB9O,EAAQwC,KAAOtC,KAAKsC,KAEhBtC,KAAKgP,QACPlP,EAAQsC,UAAYpC,KAAKgP,MACzBlP,EAAQ2C,SAASzC,KAAK0J,KAAM,EAAG,IAG7B1J,KAAK+R,cACPjS,EAAQmS,YAAcjS,KAAK+R,YAC3BjS,EAAQkS,UAAYhS,KAAKgS,UACzBlS,EAAQoS,WAAWlS,KAAK0J,KAAM,EAAG,IAGnC5J,EAAQuO,eAzCKM,GA+CnBmD,EAAKF,SAAW,EAChBE,EAAKT,OAAS,ECnDdQ,IAIMM,cAGJrT,WAAYqI,eACJA,yFAGDiL,0BAAiBC,EAAGC,EAAGC,OACxBC,EAAQC,EAAQC,EAAKL,GAXF,EAW2BM,EAAKL,GAXhC,EAWyDM,EAAKL,GAX9D,MAalBJ,EAASU,aACZV,EAASU,SAAW,IAAI7M,MAAM,IACzBwM,EAAS,EAAGA,EAASL,EAASU,SAASnN,OAAQ8M,QAClDL,EAASU,SAASL,GAAU,IAAIxM,MAAM,IACjCyM,EAAS,EAAGA,EAASN,EAASU,SAASL,GAAQ9M,OAAQ+M,IAC1DN,EAASU,SAASL,GAAQC,GAAU,IAAIzM,MAAM,WAK/CmM,EAASU,SAASH,GAAIC,GAAIC,KAC7BT,EAASU,SAASH,GAAIC,GAAIC,GAAMT,EAASW,sBAAsBJ,EAAIC,EAAIC,IAElET,EAASU,SAASH,GAAIC,GAAIC,MAG5BE,+BAAsBJ,EAAIC,EAAIC,OAC/BzT,EAAS8Q,SAASC,cAAc,UACpC/Q,EAAOc,MAAQd,EAAOgB,OAhCL,OAkCb4S,EAAO5T,EAAOD,WAAW,MAC7B6T,EAAK7R,YAAc,EACnB6R,EAAK5R,yBAA2B,cAChC4R,EAAKtJ,UAAU,EAAG,EArCD,GAAA,QAuCbuJ,EAAOD,EAAKE,qBArCKC,GAAAA,GAqCoD,EArCpDA,GAAAA,GAAAA,WAsCrBF,EAAKG,aAAa,EAAG,aAAYT,GAvCV,GAuCkE,GAAK,SAAQC,GAvC/E,GAuCuI,GAAK,SAAQC,GAvCpJ,GAuC4M,GAAK,OACxOI,EAAKG,aAAa,GAAK,aAAYT,GAxCZ,GAwCoE,GAAK,SAAQC,GAxCjF,GAwCyI,GAAK,SAAQC,GAxCtJ,GAwC8M,GAAK,SAC1OI,EAAKG,aAAa,EAAG,aAAYT,GAzCV,GAyCkE,GAAK,SAAQC,GAzC/E,GAyCuI,GAAK,SAAQC,GAzCpJ,GAyC4M,GAAK,OAExOG,EAAK3Q,UAAY4Q,EACjBD,EAAK1Q,SAAS,EAAG,EA7CA,GAAA,IA+CVlD,eAITuE,cAAK5D,EAASqI,MACRnI,KAAKkP,QAAS,CAEXlP,KAAKgP,OAAUhP,KAAKgP,MAAMA,aACxBA,MAAQoE,EAAMpT,KAAKgP,OAAOqE,WAE3BrE,EAAQhP,KAAKgP,MAAMA,MACzBlP,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAclB,KAAKkO,EAAI/F,EAAmB+F,EAClDpO,EAAQoR,sBAAwBlR,KAAK6O,OAAS1G,EAAmBgB,KAAOhB,EAAmBpI,EA5D5E,GA6DfD,EAAQuQ,UAAU8B,EAASC,iBAAiBpD,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAK,EAAG,EA7D/D,GAAA,GA6D8FhP,KAAKgN,EAAKhN,KAAK6O,OAAS,EAAI7O,KAAKiN,EAAKjN,KAAK8O,OAAS,EAAI9O,KAAK6O,OAAQ7O,KAAK8O,QACvLhP,EAAQoR,uBAAwB,OA1DfvC,GA+DvBwD,EAASU,SAAW,KClEpBhB,IAEqByB,cACnBxU,WAAYqI,eACJA,QAEDoM,aAAUnL,OACVoL,KAAOxM,EAAKG,EAAOqM,WACnBC,OAAS,IAAIC,YAEb1E,MAAQhI,EAAKG,EAAO6H,YACpB+C,YAAc/K,EAAKG,EAAO4K,kBAC1BC,UAAY5K,EAAOJ,EAAKG,EAAO6K,WAAY,QAC3C2B,KAAOvM,EAAOJ,EAAKG,EAAOwM,OAAO,QACjCC,MAAQxM,EAAOJ,EAAKG,EAAOyM,QAAQ,mGAI1ClQ,cAAK5D,EAASqI,iBACRnI,KAAKkP,QAAS,KACZhB,EAAIlO,KAAKkO,EACTlO,KAAKuT,UAAYvT,KAAKwT,OACpBxN,MAAMyE,QAAQzK,KAAKwT,YAChBC,OAAS,IAAIC,YACbF,KAAK3N,iBAASgO,KACZJ,OAAOK,OAAOD,EAAM,GAAG,GAAIA,EAAM,GAAG,IACzCA,EAAMhO,iBAASkO,KACRN,OAAOO,cAAcD,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,QAErFN,OAAOlE,oBAGTkE,OAAS,IAAIC,OAAO1T,KAAKwT,WAE3BD,QAAUvT,KAAKwT,MAElBrL,IACF+F,GAAK/F,EAAmB+F,OAGtBW,EAAS7O,KAAK6O,OAChBC,EAAS9O,KAAK8O,WAmCXtK,IAAIP,KAjCLjE,KAAK4T,QACO,GAAV/E,IACFA,EAAS,OAEG,GAAVC,IACFA,EAAS,QAIbhP,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAcgN,EACtBpO,EAAQqO,OACRrO,EAAQiN,UAAU/M,KAAKgN,EAAGhN,KAAKiN,GAC/BnN,EAAQoN,MAAM2B,EAAQC,GACtBhP,EAAQ4M,OAzDG,oBAyDI1M,KAAK4O,KAEhB5O,KAAKgP,QACPlP,EAAQsC,UAAYpC,KAAKgP,MACzBlP,EAAQwP,KAAKtP,KAAKyT,SAGpB3T,EAAQqO,OAEJnO,KAAK2T,OACP7T,EAAQ6T,KAAK3T,KAAKyT,QACdzT,KAAK4T,QACP9T,EAAQ4M,OArED,qBAqES1M,KAAK4O,KACrB9O,EAAQoN,MAAM,EAAE2B,EAAQ,EAAEC,GAC1BhP,EAAQiN,WAAW/M,KAAKgN,GAAIhN,KAAKiN,KAKvBjN,KAAK2P,YACZA,OAAO1L,GAAGP,KAAK5D,EAASqI,GAG/BrI,EAAQuO,UAEJrO,KAAK+R,cACPjS,EAAQmS,YAAcjS,KAAK+R,YAC3BjS,EAAQkS,UAAYhS,KAAKgS,UACzBlS,EAAQmU,OAAOjU,KAAKyT,SAGtB3T,EAAQuO,eAtFoBqB,GCEbwE,cAEnBpV,WAAYqI,eACJA,QAEDlH,MAAQ+G,EAAKG,EAAOlH,YACpBE,OAAS6G,EAAKG,EAAOhH,aACrB6M,EAAIhG,EAAKG,EAAO6F,QAChBC,EAAIjG,EAAKG,EAAO8F,QAEhB8E,YAAc/K,EAAKG,EAAO4K,kBAC1BC,UAAY5K,EAAOJ,EAAKG,EAAO6K,WAAY,QAC3CnL,MAAQO,EAAOJ,EAAKG,EAAON,QAAQ,mGAI1CnD,cAAK5D,EAASqI,MACRnI,KAAKkP,WACFlP,KAAKC,aACHA,MAAQkI,EAAmBpI,GAE7BC,KAAKG,cACHA,OAASgI,EAAmBjI,QAEpBkI,IAAXpI,KAAKgN,SACFA,EAAI7E,EAAmB6E,QAEf5E,IAAXpI,KAAKiN,SACFA,EAAI9E,EAAmB8E,GAG9BnN,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAclB,KAAKkO,EAAI/F,EAAmB+F,EACjC,IAAblO,KAAK4O,IACH5O,KAAK6G,MACP/G,EAAQ2J,UAAUzJ,KAAKgN,EAAGhN,KAAKiN,EAAGjN,KAAKC,MAAOD,KAAKG,SAEnDL,EAAQsC,UAAYpC,KAAKgP,MACzBlP,EAAQuC,SAASrC,KAAKgN,EAAGhN,KAAKiN,EAAGjN,KAAKC,MAAOD,KAAKG,SAEhDH,KAAK+R,cACLjS,EAAQuP,YACRvP,EAAQkS,UAAYhS,KAAKgS,UACzBlS,EAAQmS,YAAcjS,KAAK+R,YAC3BjS,EAAQqU,KAAKnU,KAAKgN,EAAGhN,KAAKiN,EAAGjN,KAAKC,MAAOD,KAAKG,QAC9CL,EAAQmU,cAEP,KACDjG,EAAKhO,KAAKC,MAAQ,EAClBgO,EAAKjO,KAAKG,OAAS,EACvBL,EAAQqO,OACRrO,EAAQiN,UAAU/M,KAAKgN,EAAIgB,EAAIhO,KAAKiN,EAAIgB,GACxCnO,EAAQ4M,OAxDC,oBAwDM1M,KAAK4O,KAChB5O,KAAK6G,MACP/G,EAAQ2J,WAAWuE,GAAKC,EAAIjO,KAAKC,MAAOD,KAAKG,SAE7CL,EAAQsC,UAAYpC,KAAKgP,MACzBlP,EAAQuC,UAAU2L,GAAKC,EAAIjO,KAAKC,MAAOD,KAAKG,SAE1CH,KAAK+R,cACLjS,EAAQuP,YACRvP,EAAQkS,UAAYhS,KAAKgS,UACzBlS,EAAQmS,YAAcjS,KAAK+R,YAC3BjS,EAAQqU,MAAMnG,GAAKC,EAAIjO,KAAKC,MAAOD,KAAKG,QACxCL,EAAQmU,UAEZnU,EAAQuO,eAlEkBM,GCJbyF,cACnBtV,WAAYqI,OACNuC,EAAO1C,EAAKG,EAAOuC,MACrB2K,EAAgBrO,MAAMyE,QAAQf,GAAQA,EAAO,UAAIA,eAC7CrK,OAAOC,OAAO,GAAI6H,EAAQ,CAC9BuJ,MAAOoB,EACPvN,MAAO8P,EAAc3O,OACrBgE,cAAO/C,UAAU0N,EAAc1N,IAC/BuI,iBAAUvI,SAAmC,MAAzB0N,EAAc1N,IAAkBK,EAAKG,EAAO+H,QAASvI,8FARzC2J,GCCjBgE,cACnBxV,WAAYqI,eACJA,QACD5C,MAAQ6C,EAAOJ,EAAKG,EAAO5C,OAAQ,SACnCgQ,MAAQnN,EAAOJ,EAAKG,EAAOoN,OAAQ,QACnCC,MAAQpN,EAAOJ,EAAKG,EAAOqN,OAAQ,QACnCC,MAAQrN,EAAOJ,EAAKG,EAAOsN,OAAQ,QACnCzC,UAAYhL,EAAKG,EAAO6K,gBAEhB5J,IAAXpI,KAAKgN,QACM5E,IAAXpI,KAAKiN,GACLjN,KAAKC,OACRD,KAAKG,QACLH,KAAKgS,eAEGhJ,YAEA0L,aAAUtM,kGAInBY,qBACO0L,QAAU1U,KAAKC,MAAQ,EAAID,KAAKgN,OAChC2H,QAAU3U,KAAKG,OAAS,EAAIH,KAAKiN,OACjC2H,OAASlS,KAAK8G,IAAIxJ,KAAKC,MAAOD,KAAKG,QAAU,OAC7C0U,OAAS,QACTC,OAAS,QACTC,OAAS,QACTC,UAAY,QACZC,UAAY,QACZC,UAAY,QACZC,UAAY,QACZC,aAAe,QACfC,eAAiB,OACjB7Q,IAAIP,EAAI,EAAGA,EAAIjE,KAAKuE,MAAON,SACzB4Q,OAAO5Q,GAAKvB,KAAKC,SAAW3C,KAAKC,MAAQD,KAAKC,MAAQ,OACtD6U,OAAO7Q,GAAKvB,KAAKC,SAAW3C,KAAKG,OAASH,KAAKG,OAAS,OACxD4U,OAAO9Q,GAAKvB,KAAKC,SAAW3C,KAAK4U,oBAI1CU,kBAASrR,EAAGsR,EAAmBC,GACzBA,SACGJ,aAAanR,IAAK,WAErB+J,EAAKhO,KAAKC,MAAQ,EAClBgO,EAAKjO,KAAKG,OAAS,EACnB6M,EAAIhN,KAAK6U,OAAO5Q,GAAKjE,KAAKuU,MAAQgB,EACpCtI,EAAIjN,KAAK8U,OAAO7Q,GAAKjE,KAAKwU,MAAQe,EAClCE,EAAIzV,KAAK+U,OAAO9Q,GAAKjE,KAAKyU,MAAQc,EAC7BvI,GAAKgB,GACVhB,GAAKhN,KAAKC,MACVgN,EAAIvK,KAAKC,SAAW3C,KAAKG,OAAS8N,OAC7BmH,aAAanR,IAAK,OAElB+I,EAAIgB,GACThB,GAAKhN,KAAKC,MACVgN,EAAIvK,KAAKC,SAAW3C,KAAKG,OAAS8N,OAC7BmH,aAAanR,IAAK,OAGlBgJ,GAAKgB,GACVhB,GAAKjN,KAAKG,OACV6M,EAAItK,KAAKC,SAAW3C,KAAKC,MAAQ+N,OAC5BoH,aAAanR,IAAK,OAElBgJ,EAAIgB,GACThB,GAAKjN,KAAKG,OACV6M,EAAItK,KAAKC,SAAW3C,KAAKC,MAAQ+N,OAC5BoH,aAAanR,IAAK,OAGlBwR,GAAK,GACVA,GAAKzV,KAAK4U,OACV5H,EAAItK,KAAKC,SAAW3C,KAAKC,MAAQ+N,EACjCf,EAAIvK,KAAKC,SAAW3C,KAAKG,OAAS8N,OAC7BmH,aAAanR,IAAK,OAElBwR,EAAIzV,KAAK4U,QACda,GAAKzV,KAAK4U,OACV5H,EAAItK,KAAKC,SAAW3C,KAAKC,MAAQ+N,EACjCf,EAAIvK,KAAKC,SAAW3C,KAAKG,OAAS8N,OAC7BmH,aAAanR,IAAK,MAGrByR,EAAW1V,KAAK0U,QAAW1H,EAAIyI,EAAKzH,EACpC2H,EAAW3V,KAAK2U,QAAW1H,EAAIwI,EAAKxH,OACnCmH,aAAanR,GAChBjE,KAAKoV,aAAanR,IAClByR,GAAY1V,KAAKgN,GACjB2I,GAAY3V,KAAKiN,GACjByI,EAAW1V,KAAKgN,EAAIhN,KAAKC,OACzB0V,EAAW3V,KAAKiN,EAAIjN,KAAKG,OACvBqV,QACGX,OAAO5Q,GAAK+I,OACZ8H,OAAO7Q,GAAKgJ,OACZ8H,OAAO9Q,GAAKwR,OACZP,UAAUjR,GAAKyR,OACfP,UAAUlR,GAAK0R,SAEfX,UAAU/Q,GAAKyR,OACfT,UAAUhR,GAAK0R,OAClBN,eAAepR,GAAKvB,KAAK2H,MAA2C,GAApC,EAAIrK,KAAK+U,OAAO9Q,GAAKjE,KAAK4U,SAAe,gBAI/ErK,iBAAQR,OACF6L,EAAM9K,YAAMP,kBAAQR,MACpB/J,KAAKkP,cAA4B9G,IAAjBpI,KAAK0U,gBACnBzQ,EAAIjE,KAAKuE,MACNN,UACAqR,SAASrR,EAAG8F,EAAa,IAAI,GAC9B/J,KAAKoV,aAAanR,SACfqR,SAASrR,GAAI,GAAG,UAIpB2R,eAITlS,cAAK5D,EAASqI,MACRnI,KAAKkP,QAAS,SACK9G,IAAjBpI,KAAK0U,oBACFzU,MAAQD,KAAKC,OAASkI,EAAmBpI,OACzCI,OAASH,KAAKG,QAAUgI,EAAmBjI,OAC3C8M,OAAe5E,IAAXpI,KAAKgN,EAAkB7E,EAAmB6E,EAAIhN,KAAKgN,OACvDC,OAAe7E,IAAXpI,KAAKiN,EAAkB9E,EAAmB8E,EAAIjN,KAAKiN,OAC3D+E,UAAYhS,KAAKgS,WAAc7J,EAAmBjI,EAAIiI,EAAmBiB,KAAQ,YAC7EJ,UAGPlJ,EAAQqB,yBAA2BnB,KAAK+O,UACxCjP,EAAQoB,YAAclB,KAAKkO,EAAI/F,EAAmB+F,EAChC,GAAdlO,KAAKwU,OAA4B,GAAdxU,KAAKyU,OAAczU,KAAKuU,MAAQ,EAAG,CACxDzU,EAAQsC,UAAYpC,KAAKgP,cACrB/K,EAAIjE,KAAKuE,MACNN,KACDjE,KAAKoV,aAAanR,IACpBnE,EAAQuC,SACNrC,KAAKkV,UAAUjR,GACfjE,KAAKmV,UAAUlR,GAAKjE,KAAKqV,eAAepR,GAAKjE,KAAKgS,UAAY,EAC9DhS,KAAKgV,UAAU/Q,GAAKjE,KAAKkV,UAAUjR,GACnCjE,KAAKqV,eAAepR,GAAKjE,KAAKgS,eAI/B,CACLlS,EAAQmS,YAAcjS,KAAKgP,cAEzB/K,EADE4R,EAAK,IAEAA,GAAI,KACX/V,EAAQuP,YACRvP,EAAQkS,UAAY6D,EAAK7V,KAAKgS,UAC9B/N,EAAIjE,KAAKuE,MACFN,KACDjE,KAAKoV,aAAanR,IAAMjE,KAAKqV,eAAepR,KAAO4R,IACrD/V,EAAQgU,OAAO9T,KAAKgV,UAAU/Q,GAAIjE,KAAKiV,UAAUhR,IACjDnE,EAAQgW,OAAO9V,KAAKkV,UAAUjR,GAAIjE,KAAKmV,UAAUlR,KAGrDnE,EAAQmU,SACRnU,EAAQyP,mBAlKqB2E,KCwBxB,mFAdW,kCAAI6B,gBAAanI,sFACnB,kCAAIoI,gBAAWpI,sFACf,kCAAIqI,gBAAWrI,uFACd,kCAAIsI,gBAAYtI,wFACf,kCAAIuI,gBAAavI,qFACpB,kCAAIwI,gBAAUxI,qFACd,kCAAIyI,gBAAUzI,oFACf,kCAAI0I,gBAAS1I,wFACT,kCAAI2I,gBAAa3I,oFACrB,kCAAI4I,gBAAS5I,oFACb,kCAAI6I,gBAAS7I,wFACT,kCAAI8I,gBAAa9I,yFAChB,kCAAI+I,gBAAc/I,OCxBvCgJ,EACJ9X,SAAY+X,EAAMC,EAAUC,OAQrBvS,IAAIP,UAPJ4S,KAAOA,OAEPC,SAAW1P,EAAO0P,EAAU,QAE5B7H,UAAYjJ,MAAMyE,QAAQsM,KAAS/Q,MAAMyE,QAAQsM,EAAI,IAAM,CAACA,GAAQA,GAAO,QAE3EC,kBAAoB,GACXhX,KAAKiP,eACZ+H,kBAAkB/S,GAAK,UAChB,cACG+C,EAAKhH,KAAK8W,iBACf,KACRD,KAAmC7P,EAAZ,iBAAT6P,EAA0BA,EAAK5S,GAAW4S,aAC5B,iBAATA,IAAuC,IAAlB7P,EAAK6P,EAAK5S,MAAiC,IAAf+C,EAAK6P,IACzEI,QAAsCjQ,EAAZ,iBAAT6P,EAA0BA,EAAK5S,GAAW4S,gBAC5B,iBAATA,IAAuC,IAAlB7P,EAAK6P,EAAK5S,MAAiC,IAAf+C,EAAK6P,UAEzEK,UAAUjT,QAGZkT,eAAiB,OACjBC,WAAY,GAGnB3S,YAAAA,eAAM4S,OACC7S,IAAIP,oBADQ,GACHjE,KAAKiP,UAAW,KACtB+H,EAAoBhX,KAAKgX,kBAAkB/S,GACjD+S,EAAkB5F,SAAW,EAC7B4F,EAAkBK,WAAaA,EAC/BL,EAAkBH,KAAOG,EAAkBC,QAC3CD,EAAkB9H,QAAU8H,EAAkBM,gBACzCJ,UAAUjT,KAInBiT,YAAAA,mBAAUjT,GAENjE,KAAKgX,kBAAkB/S,GAAGmN,SAAWpR,KAAKiP,UAAUhL,GAAGyB,QACM,OAA1D1F,KAAKiP,UAAUhL,GAAGjE,KAAKgX,kBAAkB/S,GAAGmN,gBAE1C4F,kBAAkB/S,GAAGsT,OAASvX,KAAKiP,UAAUhL,GAAGjE,KAAKgX,kBAAkB/S,GAAGmN,UAEzB,mBAA3CpR,KAAKgX,kBAAkB/S,GAAGsT,OAAO9S,YACrCuS,kBAAkB/S,GAAGsT,OAAO9S,QAIiB,mBAAzCzE,KAAKgX,kBAAkB/S,GAAGsT,OAAO3U,WACrCoU,kBAAkB/S,GAAGsT,OAAS,KAAMvX,KAAKgX,kBAAkB/S,GAAGsT,eAKhEP,kBAAkB/S,GAAGsT,OAAS,MAIvCpI,YAAAA,+BAAsBC,OAChBnL,MAECA,KAAKmL,EACiC,iBAA9BpP,KAAKgX,kBAAkB/S,KACR,OAApBmL,EAAInL,GAAGmN,gBACJ4F,kBAAkB/S,GAAGmN,SAAWhC,EAAInL,GAAGmN,UAE1B,OAAhBhC,EAAInL,GAAG4S,YACJG,kBAAkB/S,GAAG4S,KAAOzH,EAAInL,GAAG4S,UACnCG,kBAAkB/S,GAAGiL,WAA4B,IAAhBE,EAAInL,GAAG4S,OAErB,OAAtBzH,EAAInL,GAAGoT,kBACJL,kBAAkB/S,GAAGoT,WAAajI,EAAInL,GAAGoT,iBAE3CH,UAAUjT,QAIdA,KAAKjE,KAAKiP,UAC4B,iBAA9BjP,KAAKgX,kBAAkB/S,IAAmBjE,KAAKgX,kBAAkB/S,GAAGsT,kBAAkBX,QAC1FI,kBAAkB/S,GAAGsT,OAAOpI,sBAAsBC,IAM7DxM,YAAAA,aAAI+M,EAAQ6H,EAAMC,OAEZ1N,EAAayN,IAEA,IACH,IACM,IAEP,IACiB,SAKzBhT,IAAIP,KAJJwT,IACH1N,EAAayN,EAAOxX,KAAKmX,oBACpBA,eAAiBK,GAEVxX,KAAKiP,kBAGyB,OADdjP,KAAKgX,kBAAkB/S,IACrBiL,aACjBnF,EAE8B,OAArC2N,EAA0BH,iBAGjB,UAGPI,EAAW,OACNA,EAAW,MAEhBD,EAA0BL,YAAcM,EAEpCD,EAA0BL,YAAc,EAAG,KAI5B,KAFjBM,EAAWD,EAA0BH,OAAO3U,IAAI+M,EAAQ+H,EAA0BL,iBAGrE,GAETM,IAAaf,EAASgB,kCACjB7N,EACE4N,IAAaf,EAASiB,mBAE/BH,EAA0BL,WAAa,OAElCH,UAAUjT,GAEfyT,EAA0BH,OAAS,OAExB,IACW,IAAbI,GAAsBA,GAAY,IAE3CD,EAA0BtG,WAEtBsG,EAA0BtG,UAAYpR,KAAKiP,UAAUhL,GAAGyB,UACnB,IAAnCgS,EAA0Bb,MAC5Ba,EAA0Bb,OAExBa,EAA0Bb,KAC5Ba,EAA0BtG,SAAWsG,EAA0BtG,SAAWpR,KAAKiP,UAAUhL,GAAGyB,OAG5FgS,EAA0BxI,SAAU,GAIxCwI,EAA0BL,WAAa,OAElCH,UAAUjT,GACVyT,EAA0BxI,UAC7BwI,EAA0BH,OAAS,KACnCG,EAA0BxI,SAAU,GAEG,OAArCwI,EAA0BH,eAEjB,WAKJ,kBAWnBO,EAAkB,EAAG,IAEnBC,IAAiBD,SAEZ/N,EAGL4F,EAAOT,SAAWkI,IAAcU,GAElCnI,EAAOT,SAAU,OACZkI,WAAY,GAEVpX,KAAKoX,WAAaA,IAAcU,SAClCV,WAAY,EACjBzH,EAAOT,SAAU,UAGb,GAIZ0H,EAASgB,2BAA6B,gBACtChB,EAASiB,kBAAoB,OCzM7B,IAAMG,EACJlZ,SAAYwL,kBAKR,kCAJO,uCACK,wCACUlC,0CACXA,QAGR6P,OAASA,OAETC,YAAcA,OAEdC,WAAaA,OAEbC,iBAAmBC,OACnBC,aAAetY,KAAKiY,OAAOI,QAC3BE,gCAA6BnQ,GAGpCoQ,YAAAA,kBAASC,EAAMrZ,iBACTqZ,IAASzY,KAAKoY,iBAAkB,CAClCM,QAAQC,IAAIF,QACPF,2BAA6BE,MAC5BG,EAAe,GAAEH,EAAKI,OAAO,GAAGC,cAAgBL,EAAK/K,MAAM,GAM3DqL,EAL0B,CAC3B/Y,2BAA0B4Y,EAC1B5Y,gCACE4Y,GAEwCI,cAC7CP,UAAQzY,EAAKkY,YAAYO,KAEvBM,QACGX,iBAAmBpY,KAAKuY,gCACxBD,aAAetY,KAAKkY,YAAYa,QAChCT,cAAgBtY,KAAKsY,aAAa7T,OAASzE,KAAKsY,aAAa7T,eAE7D2T,iBAAmBpY,KAAKuY,gCACxBD,aAAetY,KAAKiY,OAAOjY,KAAKoY,uBAChCE,cAAgBtY,KAAKsY,aAAa7T,OAASzE,KAAKsY,aAAa7T,aAC7D8T,gCAA6BnQ,KAOxCxF,YAAAA,aAAI+M,EAAQ6H,EAAMC,OACZwB,EAAWzB,EACX0B,EAAezB,SACfzX,KAAKsY,eACPW,EAAWjZ,KAAKsY,aAAa1V,IAAI+M,EAAQsJ,EAAUC,MACpC,IAEbD,GAAY,IAAMjZ,KAAKsY,gBACrBtY,KAAKuY,iCACFH,iBAAmBpY,KAAKuY,gCACxBD,aAAetY,KAAKiY,OAAOjY,KAAKoY,uBAChCE,cAAgBtY,KAAKsY,aAAa7T,OAASzE,KAAKsY,aAAa7T,aAC7D8T,gCAA6BnQ,EAClC6Q,EAAWjZ,KAAKsY,aAAa1V,IAAI+M,EAAQsJ,EAAUC,SAE9CZ,kBAAelQ,IAGhB,GC9DZ,IAAqBoH,EAEjB1Q,SAAY4H,EAAUyS,QACfzS,SAAWA,OACXyS,SAAW/R,EAAOJ,EAAKmS,QAAW/Q,QAClCgR,aAAc,GCHzB,SAASC,EAAY/P,EAAUgQ,UACtBA,EAAKrT,KAAOqD,EAAWgQ,EAAKC,MAGrC,SAASC,EAAWlQ,EAAUgQ,WAG1BrV,EAFEwV,EAAO,UAAIH,EAAKI,QAClBC,EAAaF,EAAK/T,OAGbiU,EAAa,OAClBA,IACK1V,EAAI,EAAGA,EAAI0V,EAAY1V,IAC1BwV,EAAKxV,GAAKwV,EAAKxV,GAAKqF,GAAYmQ,EAAKxV,EAAI,GAAKwV,EAAKxV,WAGhDwV,EAAK,GAGd,SAASG,EAAUtQ,EAAUgQ,EAAM3J,UAC1B2J,EAAKO,UAAUC,IAAIR,EAAKS,QAASzQ,GAAU0Q,SAGpD,SAASC,EAAS3Q,EAAUgQ,EAAM3J,UACzBuK,EAASC,MAAMb,EAAKc,SAAUd,EAAKe,OAAQ/Q,GDjBhD7E,YAAAA,sBACO2U,aAAc,GAGrBxW,YAAAA,aAAI+M,EAAQ6H,OACN7P,cAEkBS,IAAlBpI,KAAKmZ,eACFzS,SAASiJ,EAAQjN,KAAK+D,IAAI+Q,EAAMxX,KAAKmZ,WAAYnZ,KAAKoZ,kBACtDA,aAAc,EACZ5B,EAAOxX,KAAKmZ,WAEnBxR,EAAS3H,KAAK0G,SAASiJ,EAAQ6H,GAAOxX,KAAKoZ,kBACtCA,aAAc,EACZzR,ICOf,IAAqB2S,EAEnBxb,SAAYyb,EAAcpB,EAAUqB,OAG7BhW,IAAIuB,UAFJqT,aAAc,OACdmB,aAAe,GACNA,EAAc,KACtBlT,EAAQkT,EAAaxU,GACvB0U,EAAgB,UAAN1U,EACV2U,EAAe,SAAN3U,EACTf,EAA8B,mBAAVqC,KACRoT,GAAWzU,MAAMyE,QAAQpD,QAClCkT,aAAaI,KAAK,MACf5U,KACF6U,EAAWvT,EAAMA,EAAM3B,OAAS,GAAKsB,EAAKK,EAAO,EAAG,IACxDwT,SAAQD,GAAWvT,UACVoT,SACDC,EACR1V,aAAYA,GAAaqC,EACzByT,cAAeL,EAAUb,EAAYc,EAAST,EAAWW,EAAWpB,EAAaH,SAGhFF,SAAW/R,EAAOJ,EAAKmS,GAAW,QAClCqB,KAAOpT,EAAOoT,WAAOO,UAAIA,KAGhCtW,YAAAA,sBACO2U,aAAc,GAGrBpQ,YAAAA,cAAK2G,EAAQ6H,eAET8B,EADE1S,EAAI5G,KAAKua,aAAa7U,OAEnBkB,QACE5G,KAAKua,aAAa3T,IAChB5B,cACFiB,KAAO0J,EAAO2J,EAAKb,MACxBa,EAAK0B,GAAK1B,EAAKtU,WAAWsU,EAAKrT,MAC3BqT,EAAKmB,WACFZ,UAAYzG,EAAMkG,EAAKrT,QACvB8T,QAAU3G,EAAMkG,EAAK0B,IAC1B1B,EAAKwB,cAAgBlB,GACZN,EAAKoB,UACiBR,EAASe,eAAef,EAASgB,YAAY5B,EAAKrT,MAAOiU,EAASgB,YAAY5B,EAAK0B,KAAjH1B,EAAKc,cAAUd,EAAKe,YACrBf,EAAKwB,cAAgBb,GAEdjU,MAAMyE,QAAQ6O,EAAK0B,KAC1B1B,EAAKI,OAAS,CAAC/J,EAAO2J,EAAKb,cAAUa,EAAK0B,IAC1C1B,EAAKwB,cAAgBtB,MAEhBD,MAAQD,EAAK0B,GAAK1B,EAAKrT,KAC5BqT,EAAKwB,cAAgBzB,IAEdC,EAAKmB,SACdnB,EAAKO,UAAYzG,EAAMzD,EAAO2J,EAAKb,SAC9BsB,QAAU3G,EAAMkG,EAAK0B,KACjB1B,EAAKoB,UACiBR,EAASe,eAAef,EAASgB,YAAYvL,EAAO2J,EAAKb,OAAQyB,EAASgB,YAAY5B,EAAK0B,KAAzH1B,EAAKc,cAAUd,EAAKe,aACZf,EAAKuB,OACdvB,EAAKI,OAAS,CAAC/J,EAAO2J,EAAKb,cAAUa,EAAKuB,WAErC5U,KAAO0J,EAAO2J,EAAKb,QACnBc,MAAQD,EAAK0B,GAAK1B,EAAKrT,OAKlCrD,YAAAA,aAAI+M,EAAQ6H,MACLxX,KAAKoZ,mBACHA,aAAc,OACdpQ,KAAK2G,EAAQ6H,IAIhBxX,KAAKmZ,UAAY3B,UAEjB8B,EADE1S,EAAI5G,KAAKua,aAAa7U,OAInBkB,UACE5G,KAAKua,aAAa3T,IACb6R,MAAQa,EAAK0B,gBAKzB1B,EAFE1S,EAAI5G,KAAKua,aAAa7U,SACb1F,KAAKwa,KAAKhD,EAAOxX,KAAKmZ,UAG5BvS,KAEL+I,KADO3P,KAAKua,aAAa3T,IACb6R,MAAQa,EAAKwB,cAAcxR,EAAUgQ,EAAM3J,UAGpD6H,EAAOxX,KAAKmZ,UC1HR,IAAMgC,EAEpBrc,aAGA8D,YAAAA,aAAI+M,EAAQ6H,UACJ4D,EAAQxD,4BCNF,IAAMyD,EAEjBvc,aAGA8D,YAAAA,aAAI+M,EAAQ6H,UACR7H,EAAOT,SAAU,EACVkM,EAAQxD,4BCLvB,IAAqB1T,EAEnBpF,SAAYqS,EAAOmK,QACZlC,aAAc,OACdjI,MAAQnK,EAAKmK,QACbmK,sBAAwBlU,EAAOJ,EAAKsU,GAAwB,GAC7DtV,MAAMyE,QAAQzK,KAAKmR,YAChB5M,MAAQvE,KAAKmR,MAAMzL,aAEnByL,MAAQ,CAACnR,KAAKmR,YACd5M,MAAQ,QAEV4U,SAAWnZ,KAAKuE,MAAQvE,KAAKsb,uBAGpC7W,YAAAA,sBACO2U,aAAc,GAGrBxW,YAAAA,aAAI+M,EAAQ6H,MACLxX,KAAKoZ,mBACHA,aAAc,OACdmC,SAAW,GAId/D,GAAQxX,KAAKmZ,WACRhI,MAAQtN,EAAae,SAAS5E,KAAKmR,MAAMnR,KAAKmR,MAAMzL,OAAS,QAC/D,KACD8V,EAAe9Y,KAAK2H,MAAMmN,EAAOxX,KAAKsb,uBACtCE,IAAiBxb,KAAKub,eACnBA,QAAUC,EACf7L,EAAOwB,MAAQtN,EAAae,SAAS5E,KAAKmR,MAAMnR,KAAKub,kBAGlD/D,EAAOxX,KAAKmZ,UCpCvB,IAAqBsC,EAEjB3c,SAAY4c,EAAaC,EAAeL,QAC/BlC,aAAc,OACdsC,YAAc1U,EAAK0U,QACnBC,cAAgBvU,EAAOJ,EAAK2U,IAAgB,QAC5CL,sBAAwBlU,EAAOJ,EAAKsU,GAAwB,GAC7DtV,MAAMyE,QAAQzK,KAAK0b,kBACdnX,MAAQvE,KAAK0b,YAAYhW,aAEzBgW,YAAc,CAAC1b,KAAK0b,kBACpBnX,MAAQ,QAEZ4U,SAAWnZ,KAAKuE,MAAQvE,KAAKsb,uBAGtC1Y,YAAAA,aAAI+M,EAAQ6H,OACJgE,SAEAA,EADAhE,GAAQxX,KAAKmZ,SACEnZ,KAAK0b,YAAY1b,KAAK0b,YAAYhW,OAAS,GAE3ChD,KAAK2H,MAAMmN,EAAOxX,KAAKsb,uBAEtCtb,KAAK2b,gBACErK,OAAS3B,EAAO6B,WAAagK,IAE7BjK,OAAS5B,EAAO8B,YAAc+J,EAGlChE,EAAOxX,KAAKmZ,UC7B3BtH,IAEqB+J,cACnB9c,WAAYkO,EAAGC,EAAG4O,EAAOrB,eACjB,GACJxN,IACAC,GACC,EAAGuN,QACDqB,MAAQ7U,EAAK6U,IAAU,kGAG9B7S,cAAK2G,EAAQ6H,MACO,GAAdxX,KAAK6b,OAAe7b,KAAK8b,UAAYnM,EAAO3C,GAAKhN,KAAK+b,UAAYpM,EAAO1C,OACtEkM,SAAW,MAEb,KACCnM,EAAIhN,KAAKua,aAAa,GACxBtN,EAAIjN,KAAKua,aAAa,GAExBvN,EAAE/G,KAAO0J,EAAO3C,EAChBC,EAAEhH,KAAO0J,EAAO1C,EAEhBD,EAAEuM,MAAQvM,EAAEgO,GAAKhO,EAAE/G,KACnBgH,EAAEsM,MAAQtM,EAAE+N,GAAK/N,EAAEhH,SAEb+V,EAAatZ,KAAKuZ,KAAKjP,EAAEuM,MAAQvM,EAAEuM,MAAQtM,EAAEsM,MAAQtM,EAAEsM,YAExDJ,SA3Bc,GA2BH6C,EAAgChc,KAAK6b,kBAGjD7S,eAAK2G,EAAQ6H,OA5BW8C,GCFb4B,EACnBpd,SAAYqd,EAAWC,QAChBD,UAAYA,OACZC,MAAQhV,EAAOJ,EAAKoV,GAAQ,IAGnCxZ,YAAAA,aAAI+M,EAAQ6H,MACNxX,KAAKoc,OAAS,SACT5E,MAGHuD,EAAI/a,KAAKmc,UAAUvZ,IAAI+M,EAAQ6H,UAC/BuD,EAAI,QACDqB,QAEArB,GCfb,IAAqBsB,EAEnBvd,SAAY2Z,EAAMU,EAAUtC,QACrBsC,SAAW/R,EAAOJ,EAAKmS,GAAU,QACjCV,KAAOzR,EAAKyR,QACZ5B,KAAO7P,EAAKI,EAAOyP,EAAM,KAGhCjU,YAAAA,aAAI+M,EAAQ6H,gBAENA,GAAQxX,KAAKmZ,YAERhK,0BAAsB,IAC1BnP,KAAKyY,MAAO,UACD,EACVpB,WAAaG,EAAOxX,KAAKmZ,SACzBtC,KAAM7W,KAAK6W,UAIVW,EAAOxX,KAAKmZ,UCrBvB,IAAqBmD,EAEnBxd,SAAYyd,EAAWpD,QAChBC,aAAc,OACdD,SAAWnS,EAAKmS,QAChBqD,UAAYxV,EAAKuV,QACjBE,cAAgBzc,KAAKwc,UAAY,GAGxC/X,YAAAA,sBACO2U,aAAc,GAGrBxW,YAAAA,aAAI+M,EAAQ6H,UACLxX,KAAKoZ,mBACHA,aAAc,OACdpM,EAAI2C,EAAO3C,OACXC,EAAI0C,EAAO1C,GAIduK,GAAQxX,KAAKmZ,UAEfxJ,EAAO3C,EAAIhN,KAAKgN,EAChB2C,EAAO1C,EAAIjN,KAAKiN,MAGTD,EAAIhN,KAAKgN,EAAItK,KAAKC,SAAW3C,KAAKwc,UAAYxc,KAAKyc,gBACnDxP,EAAIjN,KAAKiN,EAAIvK,KAAKC,SAAW3C,KAAKwc,UAAYxc,KAAKyc,eAErDjF,EAAOxX,KAAKmZ,UChCR,IAAMuD,EAEjB5d,gBACS6d,UAAW,GAGpB/Z,YAAAA,aAAI+M,EAAQ6H,YACDtI,QAAUS,EAAOT,SAAWlP,KAAK2c,cACnCA,UAAW,EACT,GCPA,IAAMxB,EAEpBrc,aAGA8D,YAAAA,aAAI+M,EAAQ6H,UACJoF,EAAU/E,mBCNJ,IAAMgF,EAEjB/d,SAAYqa,QACHA,SAAWnS,EAAKmS,IAGzBvW,YAAAA,aAAI+M,EAAQ6H,UAEDxX,KAAKmZ,SAAW3B,EAAOxX,KAAKmZ,UAAY,GCRxC,IAAM2D,EAEnBhe,SAAYqa,QACLA,SAAWnS,EAAKmS,IAGvBvW,YAAAA,aAAI+M,EAAQ6H,YAEHtI,QAAWsI,GAAQxX,KAAKmZ,SACxB3B,EAAOxX,KAAKmZ,UCIvBtH,MAgBe,mFAfW,kCAAIkE,gBAAanI,wFACjB,kCAAImP,gBAAanP,mFACtB,kCAAIoP,gBAAQpP,2FACJ,kCAAIqP,gBAAgBrP,qFAC1B,kCAAIyI,gBAAUzI,0FACT,kCAAIsP,gBAAetP,oFACzB,kCAAIuP,gBAASvP,oFACb,kCAAIwP,gBAASxP,oFACb,kCAAIyP,gBAASzP,qFACZ,kCAAI0P,gBAAU1P,wFACX,kCAAI2P,gBAAa3P,oFACrB,kCAAI4P,gBAAS5P,oFACb,kCAAI6P,gBAAS7P,4FACL,kCAAI8P,gBAAiB9P,gHCpBzB,kCAAI+P,gBAAW/P,0JACf,kCAAIgQ,gBAAahQ,6FACpB,kCAAIiQ,gBAAUjQ"}