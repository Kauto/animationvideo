{"version":3,"file":"animationvideo.js","sources":["../src/lib/Engine.js","../src/lib/ImageManager.js","../src/lib/Scenes/Default.js","../src/lib/Scenes/Audio.js","../src/func/transform.js","../src/lib/Scenes/Norm.js","../src/lib/Scenes/NormAudio.js","../src/lib/Scenes.js","../src/func/ifnull.js","../src/func/calc.js","../src/lib/Sprites/Circle.js","../src/lib/Sprites/Callback.js","../src/lib/Sprites/Group.js","../src/lib/Sprites/Canvas.js","../src/lib/Sprites/Emitter.js","../src/lib/Sprites/FastBlur.js","../src/lib/Sprites/Image.js","../src/lib/Sprites/Text.js","../src/lib/Sprites/Particle.js","../src/lib/Sprites/Path.js","../src/lib/Sprites/Rect.js","../src/lib/Sprites/Scroller.js","../src/lib/Sprites/StarField.js","../src/lib/Sprites.js","../src/lib/Sequence.js","../src/lib/Animations/Callback.js","../src/lib/Animations/ChangeTo.js","../src/lib/Animations/End.js","../src/lib/Animations/EndDisabled.js","../src/lib/Animations/Image.js","../src/lib/Animations/ImageFrame.js","../src/lib/Animations/Move.js","../src/lib/Animations/Once.js","../src/lib/Animations/Play.js","../src/lib/Animations/Shake.js","../src/lib/Animations/ShowOnce.js","../src/lib/Animations/Stop.js","../src/lib/Animations/Wait.js","../src/lib/Animations/WaitDisabled.js","../src/lib/Animations.js","../src/animationvideo.js"],"sourcesContent":["'use strict';\n\nclass Engine {\n  constructor(canvas, scene, autoresize) {\n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n\n    // data about the _output canvas\n    this._output.canvas = canvas;\n    if (!(typeof(canvas) === \"object\" && canvas !== null && canvas.getContext)) {\n      throw 'No context';\n    }\n    this._output.context = canvas.getContext(\"2d\");\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    if (autoresize) {\n      window.addEventListener('resize', this.maximizeCanvas, false);\n      window.addEventListener('orientationchange', this.maximizeCanvas, false);\n      this.resize();\n\n      canvas.addEventListener('click', () => {\n        if (this._isSceneInitialized && this._scene.audioElement) {\n          this._scene.audioElement.play();\n        }\n      }, false);\n    }\n    this.changeScene(scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = 'source-over';\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  maximizeCanvas() {\n    let gameArea = self.output.canvas;\n    let newWidth = window.innerWidth;\n    let newHeight = window.innerHeight;\n    let newWidthToHeight = newWidth / newHeight;\n\n    if (newWidthToHeight > self.output.ratio) {\n      newWidth = newHeight * self.output.ratio;\n      gameArea.style.height = newHeight + 'px';\n      gameArea.style.width = newWidth + 'px';\n    } else {\n      newHeight = newWidth / self.output.ratio;\n      gameArea.style.width = newWidth + 'px';\n      gameArea.style.height = newHeight + 'px';\n    }\n\n    gameArea.style.marginTop = (-newHeight / 2) + 'px';\n    gameArea.style.marginLeft = (-newWidth / 2) + 'px';\n\n    $(self.output.canvas).css({\n      width: newWidth,\n      height: newHeight\n    });\n    $(self.output.canvas).siblings().css({\n      width: newWidth\n    });\n  };\n\n  changeScene(scene) {\n    this._newScene = scene;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = (this._isSceneInitialized ? this._scene.getPercentLoaded() : 0);\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'bottom';\n    ctx.fillText(\"Loading \" + percent + \"%\", 10 + Math.random() * 3, this._output.h - 10 + Math.random() * 3);\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n\n    initParameter = initParameter || {};\n\n    function mainLoop() {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(mainLoop.bind(this));\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = (this._scene ? this._scene.destroy(this._output) : initParameter);\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      let now = this._scene.currentTime();\n      this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n\n      this._lastTimestamp = now;\n\n      if (this._isSceneInitialized) {\n        if (this._timePassed !== 0) {\n          this._scene.move(this._output, this._timePassed);\n\n          // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n          if (this._timePassed < 0) {\n            this._timePassed = this._scene.totalTimePassed;\n          }\n\n          this._scene.draw(this._output);\n        }\n      } else {\n        this._isSceneInitialized = this._scene.callLoading(this._output);\n      }\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(mainLoop.bind(this));\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame && window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n        };\n        self.Images[i].src = Images[i];\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","'use strict';\nimport ImageManager from '../ImageManager';\n\nclass Scene {\n  constructor(endTime) {\n    // Layer consists of Sprites\n    this.layer = [];\n\n    // For precalculation if a layer is a function\n    this._cacheLayerIsFunction = [];\n\n    this.totalTimePassed = 0;\n\n    this.initCallback = null;\n    this.loadingCallback = null;\n    this.destroyCallback = null;\n    this.sceneCallback = null;\n    this.engine = null;\n    this.loadingShow = true;\n    this.endTime = endTime;\n    this.additionalModifier = undefined;\n  }\n\n  currentTime() {\n    return Date.now();\n  }\n\n  clampTime(timePassed) {\n    if (timePassed > 2000) {\n      return 2000;\n    }\n    return timePassed;\n  }\n\n  init(callbackOrImages) {\n    if (typeof callbackOrImages === 'function') {\n      this.initCallback = callbackOrImages;\n    } else {\n      ImageManager.add(callbackOrImages);\n    }\n    return this;\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.initCallback && this.initCallback(output, parameter);\n    this.resize(output)\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: 0,\n      y: 0,\n      w: output.w,\n      h: output.h,\n      orgW: output.w,\n      orgH: output.h\n    }\n  }\n\n  destroy(callback) {\n    this.destroyCallback = callback;\n    return this;\n  }\n\n  scene(callback) {\n    this.sceneCallback = callback;\n    return this;\n  }\n\n  callDestroy(output) {\n    if (this.destroyCallback) {\n      return this.destroyCallback(output);\n    } else {\n      return true;\n    }\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - (loadedHeight / 2), output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'bottom';\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(text, 10 + Math.random() * 3, output.h - 10 + Math.random() * 3);\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  loading(callbackOrBool) {\n    if (typeof callback === 'function') {\n      this.loadingCallback = callback;\n      this.loadingShow = true;\n    } else {\n      this.loadingCallback = null;\n      this.loadingShow = !!callbackOrBool;\n    }\n    return this;\n  }\n\n  callLoading(output) {\n    const imagePercentage = ImageManager.getCount() && ImageManager.getLoaded() < ImageManager.getCount() && ImageManager.getLoaded() / ImageManager.getCount();\n\n    if (this.loadingShow) {\n      if (this.loadingCallback) {\n        let result = this.loadingCallback(output, imagePercentage);\n        if (result === null) {\n          return false;\n        } else if (result !== true) {\n          this.loadingscreen(output, result ? result : (imagePercentage || 'Loading...'));\n          return false;\n        }\n      } else {\n        if (imagePercentage) {\n          this.loadingscreen(output, imagePercentage);\n        }\n      }\n    }\n\n    if (imagePercentage) {\n      return false;\n    }\n\n    this.reset(output);\n    return true;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (this.endTime && this.endTime <= this.totalTimePassed) {\n      // End Engine\n      this.engine.destroy();\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n    }\n\n    let l, i, lay, layif;\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (!layif[i] && lay[i] !== null) {\n          if (lay[i].animate(timepassed)) {\n            this.layer[l][i] = null;\n          }\n        }\n      }\n    }\n  }\n\n  draw(output) {\n    let l, i, lay, layif;\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (lay[i] !== null) {\n          if (layif[i]) {\n            if (lay[i](output.context, this.totalTimePassed)) {\n              this.layer[l][i] = null;\n            }\n          }\n          else {\n            this.layer[l][i].draw(output.context, this.additionalModifier);\n          }\n        }\n      }\n    }\n  }\n\n  calcLayerIsFunction() {\n    this._cacheLayerIsFunction = new Array(this.layer.length);\n    for (let l in this.layer) {\n      this._cacheLayerIsFunction[l] = new Array(this.layer[l].length);\n      for (let i in this.layer[l]) {\n        this._cacheLayerIsFunction[l][i] = (typeof this.layer[l][i] === \"function\");\n      }\n    }\n  }\n\n  reset(output) {\n    this.layer = this.sceneCallback(output, []).reverse();\n    this.calcLayerIsFunction();\n  }\n}\n\nexport default Scene;\n","'use strict';\nimport Scene from './Default';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","'use strict';\nimport Scene from './Default';\nimport Transform from '../../func/transform';\n\nexport default class SceneNorm extends Scene {\n  constructor(endTime) {\n    super(endTime);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        const hw = this.engine._output.w / 2\n        const hh = this.engine._output.h / 2\n        const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = (new Transform())\n        .translate(hw, hh)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  resize(output) {\n    this.transform = undefined;\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  transformPoint(x, y) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x, y);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","'use strict';\nimport SceneAudio from './Audio';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default';\nimport _Audio from './Scenes/Audio';\nimport _Norm from './Scenes/Norm';\nimport _NormAudio from './Scenes/NormAudio';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  changeAnimationStatus(ani) {\n    if (typeof this.animation === \"object\") {\n      this.animation.changeAnimationStatus(ani);\n    }\n  };\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) >= 0) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from './Circle';\n\nexport default class Callback extends Circle{\n    constructor(params) {\n        super(params);\n        // Callback\n\t\tthis.callback = params.callback;\n    }\n\n    draw(context, additionalParameter) {\n\t\tif (this.enabled) {\n\t\t\tthis.callback(context, additionalParameter, this);\n\t\t}\n    }\n}","import ifNull from '../../func/ifnull';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite changeAnimationStatus\n  changeAnimationStatus(ani) {\n    // call super\n    super.changeAnimationStatus(ani);\n    // changeAnimationStatus for all sprites\n    for (let i in this.sprite) {\n      this.sprite[i].changeAnimationStatus(ani);\n    }\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = true;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = this.sprite[i].animate(timepassed) && spriteFinished;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.a < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../../func/calc';\nimport Group from './Group';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.round(w / this.scaleX);\n    this.temp_canvas.height = Math.round(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, false);\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, this.temp_canvas.width, this.temp_canvas.height, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Group from './Group';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nexport default class FastBlur extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    // Darker\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.ceil(w / this.scaleX);\n    this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.x) {\n      this.x = additionalModifier.x;\n    }\n    if (!this.y) {\n      this.y = additionalModifier.y;\n    }\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let a = this.a * additionalModifier.a,\n        w = this.width,\n        h = this.height,\n        targetW = Math.round(w * additionalModifier.orgW / additionalModifier.w / this.scaleX),\n        targetH = Math.round(h * additionalModifier.orgH / additionalModifier.h / this.scaleY);\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(context.canvas, 0, 0, context.canvas.width, context.canvas.height, 0, 0, targetW, targetH);\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear ? \"source-atop\" : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(this.temp_canvas, 0, 0, targetW, targetH, this.x, this.y, w, h);\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.w;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.h;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport ImageManager from '../ImageManager';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height,\n        sX = frameWidth * this.scaleX,\n        sY = frameHeight * this.scaleY;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        }\n        else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      }\n      else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -(sX >> 1),\n          -(sY >> 1),\n          sX,\n          sY\n        );\n        context.restore();\n\n      }\n    }\n  };\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.imageSmoothingEnabled = this.scaleX * additionalModifier.orgW / additionalModifier.w > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX / 2), this.y - (this.scaleY / 2), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Group from './Group';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach((curve) => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach((points) => {\n              this.path2D.bezierCurveTo(points[2], points[3], points[4], points[5], points[6], points[7]);\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1/scaleX, 1/scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n      \n      context.restore();\n    }\n  };\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.w;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.h;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n      \n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.arc * degToRad);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-hw, -hh, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../../func/calc';\nimport Emitter from './Emitter';\nimport Text from './Text';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from \"../../func/ifnull\";\nimport calc from \"../../func/calc\";\nimport Rect from \"./Rect\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(params) {\n    super(params);\n    this.count = ifNull(calc(params.count), 40);\n    this.moveX = ifNull(calc(params.moveX), 0);\n    this.moveY = ifNull(calc(params.moveY), 0);\n    this.moveZ = ifNull(calc(params.moveZ), 0);\n    this.lineWidth = calc(params.lineWidth);\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n\t\t\tthis.height &&\n\t\t\tthis.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n\t\t}\n\t\tconst hw = this.width / 2;\n\t\tconst hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw ) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n\t\tconst projectX = this.centerX + (x / z) * hw;\n\t\tconst projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n\t\t\tthis.starsLineWidth[i] = Math.floor((1 - this.starsZ[i] / this.scaleZ) * 4) + 1;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.w;\n        this.height = this.height || additionalModifier.h;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n\t\t\t\tthis.lineWidth = this.lineWidth || (additionalModifier.h / additionalModifier.orgH) / 4;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - this.starsLineWidth[i] * this.lineWidth / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        let lw = 5,\n          i;\n        while (--lw) {\n          context.beginPath();\n          context.lineWidth = lw * this.lineWidth;\n          i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n            }\n          }\n          context.stroke();\n          context.closePath();\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback';\nimport _Canvas from './Sprites/Canvas';\nimport _Circle from './Sprites/Circle';\nimport _Emitter from './Sprites/Emitter';\nimport _FastBlur from './Sprites/FastBlur';\nimport _Group from './Sprites/Group';\nimport _Image from './Sprites/Image';\nimport _Text from './Sprites/Text';\nimport _Particle from './Sprites/Particle';\nimport _Path from './Sprites/Path';\nimport _Rect from './Sprites/Rect';\nimport _Scroller from './Sprites/Scroller';\nimport _StarField from './Sprites/StarField';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = obj || {};\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      this.animationPosition[i] = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          else {\n            hide_vote++;\n          }\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\nimport Color from 'color';\nimport pasition from 'pasition';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorTo.mix(data.colorFrom, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return pasition._lerp(data.pathFrom, data.pathTo, progress);\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(data.from), pasition.path2shapes(data.to));\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(sprite[data.name]), pasition.path2shapes(data.to));\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequenz from '../Sequence';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\nimport ImageManager from '../ImageManager';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (Array.isArray(this.frameNumber)) {\n            this.count = this.frameNumber.length;\n        } else {\n            this.frameNumber = [this.frameNumber];\n            this.count = 1;\n        }\n        this.duration = this.count * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = Math.floor(time / this.durationBetweenFrames);\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from '../../func/calc';\nimport ChangeTo from './ChangeTo';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t > 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Play {\n\n  constructor(name, duration, loop) {\n    this.duration = ifNull(calc(duration),1);\n    this.name = calc(name);\n    this.loop = calc(ifNull(loop, 1));\n  }\n\n  run(sprite, time) {\n    // return time left\n    if (time >= this.duration) {\n      // Play animation from the start\n      sprite.changeAnimationStatus({\n        [this.name]: {\n          position: 0,\n          timelapsed: (time - this.duration),\n          loop: this.loop\n        }\n      });\n    }\n    return time - this.duration;\n  };\n}","import calc from '../../func/calc';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Animation from '../Sequence';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Animation.TIMELAPSE_TO_STOP;\n\t}\n}","import calc from '../../func/calc';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../../func/calc';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback';\nimport _ChangeTo from './Animations/ChangeTo';\nimport _End from './Animations/End';\nimport _EndDisabled from './Animations/EndDisabled';\nimport _Image from './Animations/Image';\nimport _ImageFrame from './Animations/ImageFrame';\nimport _Move from './Animations/Move';\nimport _Once from './Animations/Once';\nimport _Play from './Animations/Play';\nimport _Shake from './Animations/Shake';\nimport _ShowOnce from './Animations/ShowOnce';\nimport _Stop from './Animations/Stop';\nimport _Wait from './Animations/Wait';\nimport _WaitDisabled from './Animations/WaitDisabled';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Play = (...args) => new _Play(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  Stop = (...args) => new _Stop(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Image,\n  ImageFrame,\n  Move,\n  Once,\n  Play,\n  Shake,\n  ShowOnce,\n  Stop,\n  Wait,\n  WaitDisabled\n};\n","'use strict';\n\nimport _Engine from './lib/Engine';\nimport Scenes from './lib/Scenes';\nimport ImageManager from './lib/ImageManager';\nimport Sprites from './lib/Sprites';\nimport _Sequence from './lib/Sequence';\nimport Animations from './lib/Animations';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args),\n  Sequence = (...args) => new _Sequence(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Sequence,\n  Animations,\n  Easing\n};"],"names":["Engine","canvas","scene","autoresize","_output","this","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_referenceRequestAnimationFrame","getContext","context","w","width","h","height","ratio","window","addEventListener","maximizeCanvas","resize","audioElement","play","changeScene","normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","gameArea","self","output","newWidth","innerWidth","newHeight","innerHeight","style","marginTop","marginLeft","css","$","siblings","loadingscreen","fillStyle","fillRect","font","let","percent","getPercentLoaded","fillText","Math","random","run","initParameter","requestAnimationFrame","mainLoop","bind","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","move","totalTimePassed","draw","callLoading","cancelAnimationFrame","ImageManager","add","Images","Callbacks","const","i","Image","onload","loaded","isLoaded","src","count","reset","getLoaded","getCount","getImage","nameOrImage","Scene","endTime","layer","_cacheLayerIsFunction","initCallback","loadingCallback","destroyCallback","sceneCallback","engine","loadingShow","additionalModifier","undefined","Date","timePassed","init","callbackOrImages","parameter","orgW","orgH","callback","callDestroy","progress","loadedHeight","max","clearRect","text","isNaN","parseFloat","round","loading","callbackOrBool","imagePercentage","result","timepassed","l","lay","layif","length","animate","calcLayerIsFunction","Array","reverse","SceneAudio","super","audioStartTime","audioPosition","enableAndroidHack","controller","playbackState","min","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","c","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","transform","transformInvert","_getViewport","hw","hh","a","save","setTransform","ref","restore","SceneNormAudio","_Default","args","_Audio","_Norm","_NormAudio","ifNull","value","alternative","calc","apply","params","Circle","arc","scaleX","scaleY","alphaMode","color","animation","enabled","changeAnimationStatus","ani","beginPath","fill","closePath","Callback","additionalParameter","Group","sprite","finished","spriteFinished","Object","assign","Canvas","generateTempCanvas","temp_canvas","document","createElement","tctx","wh","drawImage","Emitter","staticArray","functionArray","indexOf","classToEmit","class","index","call","FastBlur","darker","pixel","clear","ceil","targetW","targetH","imageSmoothingEnabled","image","position","CENTER","frameX","frameY","frameWidth","frameHeight","sX","sY","LEFT_TOP","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","isArray","forEach","curve","moveTo","points","bezierCurveTo","stroke","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","centerX","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","floor","ret","lw","lineTo","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Image","_Text","_Particle","_Path","_Rect","_Scroller","_StarField","Sequence","loop","timeWait","obj","animationPosition","setObject","last_timestamp","hide_vote","object","timelapsed","time","is_difference","disable_vote","animation_count","timeleft","current_animationPosition","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","duration","initialized","moveDefault","data","from","delta","moveBezier","copy","values","copyLength","moveColor","colorTo","mix","colorFrom","string","movePath","pasition","_lerp","pathFrom","pathTo","ChangeTo","changeValues","ease","k","isColor","isPath","isFunction","isBezier","push","bezier","moveAlgorithm","t","name","to","_preprocessing","path2shapes","End","Sequenz","EndDisabled","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Move","speed","targetX","targetY","hypotenuse","sqrt","Once","Aniobject","times","Play","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","Animation","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_ImageFrame","_Move","_Once","_Play","_Shake","_ShowOnce","_Stop","_Wait","_WaitDisabled","_Engine","_Sequence"],"mappings":"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"}