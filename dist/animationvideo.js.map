{"version":3,"file":"animationvideo.js","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes/NormCamera.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StackBlur.mjs","../Sprites/StackBlurCanvas.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Stop.mjs","../Animations/StopDisabled.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        /* undefined is falsy - saves a few bytes\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false,\n        reduceFramerate: false\n        */\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the output canvas\n    this._output.canvas = options.canvas;\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas.width;\n      this._output.height = this._output.canvas.height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n\n    this._reduceFramerate = options.reduceFramerate;\n    // not needed because undefined is falsy\n    // this._isOddFrame = true\n\n    this.switchScene(options.scene);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.getConfiguration().audioElement) {\n      this._scene.getConfiguration().audioElement.play();\n    }\n  }\n\n  _normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(\n        width / this._autoSize.currentScale\n      );\n      this._output.canvas.height = Math.round(\n        height / this._autoSize.currentScale\n      );\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas.width;\n    this._output.height = this._output.canvas.height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      let drawFrame = false;\n      if (\n        this._recalculateCanvasIntend &&\n        (!this._reduceFramerate || !this._isOddFrame)\n      ) {\n        this._recalculateCanvas();\n        this._recalculateCanvasIntend = false;\n        drawFrame = true;\n      }\n\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n          this._lastTimestamp = this._scene.currentTime();\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        if (this._reduceFramerate) {\n          this._isOddFrame = !this._isOddFrame;\n        }\n\n        if (!this._reduceFramerate || this._isOddFrame) {\n          let now = this._scene.currentTime();\n\n          // modify time by scene\n          // first set a min/max\n          this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n          // then maybe shift to fit a framerate\n          const shiftTime = this._scene.shiftTime(this._timePassed);\n          this._timePassed = this._timePassed + shiftTime;\n          this._lastTimestamp = now + shiftTime;\n\n          this._normalizeContext(this._output.context);\n          if (this._isSceneInitialized) {\n            if (this._timePassed !== 0 || drawFrame) {\n              if (!drawFrame) {\n                drawFrame = !this._scene.isFrameToSkip(\n                  this._output,\n                  this._timePassed\n                );\n              }\n\n              const nowAutoSize = this._now();\n              this._scene.move(this._output, this._timePassed);\n\n              // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n              if (this._timePassed < 0) {\n                this._timePassed = this._scene.totalTimePassed;\n              }\n\n              drawFrame && this._scene.draw(this._output);\n\n              if (this._autoSize && this._autoSize.enabled) {\n                const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n                if (\n                  this._autoSize.currentWaitedTime < this._autoSize.waitTime\n                ) {\n                  this._autoSize.currentWaitedTime += deltaTimestamp;\n                } else if (drawFrame) {\n                  const targetTime =\n                    this._autoSize.offsetTimeTarget *\n                    (this._reduceFramerate ? 2 : 1);\n                  const deltaFrame = this._now() - nowAutoSize;\n                  const delta =\n                    (Math.abs(deltaTimestamp - targetTime) >\n                    Math.abs(deltaFrame - targetTime)\n                      ? deltaTimestamp\n                      : deltaFrame) - targetTime;\n                  if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                    this._autoSize.currentOffsetTime =\n                      this._autoSize.currentOffsetTime >= 0\n                        ? Math.max(\n                            0,\n                            this._autoSize.currentOffsetTime -\n                              this._autoSize.offsetTimeDelta\n                          )\n                        : Math.min(\n                            0,\n                            this._autoSize.currentOffsetTime +\n                              this._autoSize.offsetTimeDelta\n                          );\n                  } else {\n                    if (\n                      delta < 0 &&\n                      this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime <=\n                        -this._autoSize.offsetTimeLimitDown\n                      ) {\n                        this._autoSize.currentScale = Math.max(\n                          this._autoSize.scaleLimitMin,\n                          this._autoSize.currentScale /\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvasIntend = true;\n                      }\n                    } else if (\n                      delta > 0 &&\n                      this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime >=\n                        this._autoSize.offsetTimeLimitUp\n                      ) {\n                        this._autoSize.currentScale = Math.min(\n                          this._autoSize.scaleLimitMax,\n                          this._autoSize.currentScale *\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvasIntend = true;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            this._isSceneInitialized = this._scene.callLoading(this._output);\n            if (this._isSceneInitialized) {\n              this._scene.reset(this._output);\n              this._lastTimestamp = this._scene.currentTime();\n              if (this._autoSize) {\n                this._autoSize.currentWaitedTime = 0;\n              }\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output);\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof Callbacks[i] === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        self.Images[i].crossOrigin = \"Anonymous\";\n        if (Images[i].substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], { type: \"image/svg+xml\" });\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        } else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof Callbacks[i] === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return self.loaded === self.count;\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          self.resolve = resolve;\n        });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = null;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else {\n      this._layer[elementId] = null;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this._isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer());\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      this._layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this._configuration = new configurationClassOrObject();\n    } else {\n      this._configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = ifNull(calc(this._configuration.tickChunk), 100 / 6);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this._configuration.fixedUpdate) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this._configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this._configuration.init &&\n        this._configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: ImageManager\n        })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this._configuration.destroy &&\n      this._configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n    return parameter;\n  }\n\n  getConfiguration() {\n    return this._configuration;\n  }\n\n  loadingScreen(output, progress) {\n    if (this._configuration.loading) {\n      return this._configuration.loading({\n        engine: this.engine,\n        scene: this,\n        output,\n        progress\n      });\n    }\n    const ctx = output.context;\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(output, value);\n    return false;\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    if (this._configuration.fixedUpdate) {\n      this._configuration.fixedUpdate({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed,\n        lastCall\n      });\n    }\n  }\n\n  isFrameToSkip(output, timePassed) {\n    return this._configuration.isFrameToSkip && this._configuration.isFrameToSkip({\n      engine: this.engine,\n      scene: this,\n      layerManager: this.layerManager,\n      output,\n      timePassed,\n      totalTimePassed: this.totalTimePassed\n    });\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this.totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this.totalTimePassed;\n      this.reset(output);\n      this.totalTimePassed = timePassed;\n    } else if (\n      this._configuration.endTime &&\n      this._configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this.totalTimePassed - this._configuration.endTime;\n      this.totalTimePassed = this._configuration.endTime;\n      // End Engine\n      this._configuration.end &&\n        this._configuration.end({\n          engine: this.engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this.totalTimePassed\n        });\n    }\n\n    if (this.tickChunk) {\n      if (timePassed >= this.tickChunk - this.tickChunkTolerance) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        for (\n          let calcFrame = 0,\n            frames = Math.min(\n              this.maxSkippedTickChunk,\n              Math.floor(timePassed / this.tickChunk)\n            );\n          calcFrame < frames;\n          calcFrame++\n        ) {\n          this.fixedUpdate(output, this.tickChunk, calcFrame === frames - 1);\n        }\n      }\n    } else {\n      this.fixedUpdate(output, timePassed, true);\n    }\n\n    if (this._configuration.update) {\n      this._configuration.update({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            totalTimePassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    this.totalTimePassed = 0;\n    let result = this._configuration.reset\n      ? this._configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this._audioStartTime = null;\n    this._audioPosition = null;\n    this._enableAndroidHack = false;\n    this._audioElement = this._configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      const currentAudioTime = (this._audioElement.ended\n        ? this._audioElement.duration\n        : this._audioElement.currentTime) * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === null) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller.playbackState === \"playing\") {\n            if (currentAudioTime=== this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition < 500 &&\n              currentAudioTime > this._audioPosition &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime +\n                (currentAudioTime - this._audioPosition);\n              this._audioPosition = currentAudioTime;\n              return (\n                this._audioPosition + currentTime - this._audioStartTime\n              );\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(...arg) {\n    // init audio\n    if (this._audioElement) {\n      var canPlayType = this._audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        console.log('android hack')\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      this._audioElement.load();\n    }\n\n    return super.callInit(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this._audioElement) {\n      if (\n        !(this._audioElement.readyState >= this._audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        this.loadingScreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        let playPromise = this._audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this._configuration.endTime && this._audioElement.duration > 0) {\n          this._configuration.endTime = this._audioElement.duration * 1000;\n        }\n        this.loadingScreen(output, \"Click to play\");\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n    this.cam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      this.transform = this._getViewportByCam(this.cam);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  _getViewportByCam(cam) {\n    const hw = this.engine.getWidth() / 2;\n    const hh = this.engine.getHeight() / 2;\n    const scale = this.engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    const transform = this._getViewportByCam({x:0,y:0,zoom:1}).invert();\n    const [sx1, sy1] = transform.transformPoint(0, 0, 1);\n    const [sx2, sy2] = transform.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.fullScreen = {\n      x: sx1,\n      y: sy1,\n      width: sx2 - sx1,\n      height: sy2 - sy1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      const hw = this.engine.getWidth() / 2;\n      const hh = this.engine.getHeight() / 2;\n      const scale = this.engine.getRatio() > 1 ? hw : hh;\n\n      this.transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneNorm from \"./Norm.mjs\";\nimport calc from \"../func/calc.mjs\";\n\nexport default class SceneNormCamera extends SceneNorm {\n  constructor(...args) {\n    super(...args);\n    this.camConfig = Object.assign(\n      {},\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        registerEvents: true,\n        preventDefault: true,\n        enabled: true,\n        callResize: true,\n        doubleClickDetectInterval: 350,\n        alternative: false\n      },\n      calc(this._configuration.cam) || {}\n    );\n    if (!this._configuration.click) {\n      this._configuration.click = () => {};\n    }\n    this.toCam = {\n      x: this.camConfig.currentX || 0,\n      y: this.camConfig.currentY || 0,\n      zoom: this.camConfig.currentZoom || 1\n    };\n\n    this._mousePos = [];\n  }\n\n  camEnable() {\n    this.camConfig.enabled = true;\n  }\n\n  camDisable() {\n    this.camConfig.enabled = false;\n  }\n\n  camReset() {\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  }\n\n  camTween(tween) {\n    this.camConfig.tween = tween;\n  }\n\n  camAlternative(bool) {\n    this._mousePos = [];\n    this.camConfig.alternative = bool;\n  }\n\n  callInit(output, parameter, engine) {\n    if (this.camConfig.registerEvents) {\n      this.registerCamEvents(output.canvas);\n    }\n    return super.callInit(output, parameter, engine);\n  }\n\n  destroy(output) {\n    if (this.camConfig.registerEvents) {\n      this.destroyCamEvents(output.canvas);\n    }\n    return super.destroy(output);\n  }\n\n  hasCamChanged() {\n    const t = this.camConfig.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this.cam.zoom) >= Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    const ret = super.fixedUpdate(output, timePassed, lastCall);\n    if (this.camConfig.tween && this.hasCamChanged()) {\n      this.cam.x += (this.toCam.x - this.cam.x) / this.camConfig.tween;\n      this.cam.y += (this.toCam.y - this.cam.y) / this.camConfig.tween;\n      this.cam.zoom += (this.toCam.zoom - this.cam.zoom) / this.camConfig.tween;\n      if (lastCall) {\n        if (this.camConfig.callResize) {\n          this.resize(output);\n        } else {\n          this.transform = null;\n          this.transformInvert = null;\n        }\n      }\n    }\n    return ret;\n  }\n\n  move(output, timePassed) {\n    const ret = super.move(output, timePassed);\n    if (!this.camConfig.tween && this.hasCamChanged()) {\n      this.cam = Object.assign({}, this.toCam);\n      if (this.camConfig.callResize) {\n        this.resize(output);\n      } else {\n        this.transform = null;\n        this.transformInvert = null;\n      }\n    }\n    return ret;\n  }\n\n  registerCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.addEventListener(eventName, this._mouseDown.bind(this), true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.addEventListener(eventName, this._mouseUp.bind(this), true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.addEventListener(eventName, this._mouseOut.bind(this), true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.addEventListener(eventName, this._mouseMove.bind(this), true);\n    }\n    element.addEventListener(\"wheel\", this._mouseWheel.bind(this), true);\n    element.addEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  destroyCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.removeEventListener(eventName, this._mouseDown, true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.removeEventListener(eventName, this._mouseUp, true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.removeEventListener(eventName, this._mouseOut, true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.removeEventListener(eventName, this._mouseMove, true);\n    }\n    element.removeEventListener(\"wheel\", this._mouseWheel, true);\n    element.removeEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  _eventPrevent(e) {\n    e.preventDefault();\n  }\n\n  _getMousePosition(e) {\n    let touches;\n    if (e.touches && e.touches.length > 0) {\n      touches = e.targetTouches;\n    } else if (e.changedTouches && e.changedTouches.length > 0) {\n      touches = e.changedTouches;\n    }\n    if (touches) {\n      const rect = e.target.getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top\n      ];\n    }\n    return [e.offsetX, e.offsetY];\n  }\n\n  _getMouseButton(e) {\n    return this.camConfig.alternative\n      ? e.which\n        ? e.which - 1\n        : e.button || 0\n      : 0;\n  }\n\n  _mouseDown(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const [mx, my] = this._getMousePosition(e);\n    const i = this._getMouseButton(e);\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e.touches && e.touches.length) || 1,\n      _distance: undefined,\n      _timestamp: Date.now()\n    });\n  }\n  _mouseUp(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const i = this._getMouseButton(e);\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers = (e.changedTouches && e.changedTouches.length) || 1;\n    const numOfFingers = Math.max(this._mousePos[i]._numOfFingers, numCurrentFingers);\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n    if (!down || numOfFingers > 1) {\n      return;\n    }\n    const [mx, my] = this._getMousePosition(e);\n    if (\n      Date.now() - this._mousePos[i]._timestamp < 150 &&\n      Math.abs(this._mousePos[i].x - mx) < 5 &&\n      Math.abs(this._mousePos[i].y - my) < 5 &&\n      !i // i === 0\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      if (this._configuration.doubleClick) {\n        if (this._mousePos[i].doubleClickTimer) {\n          clearTimeout(this._mousePos[i].doubleClickTimer);\n          this._mousePos[i].doubleClickTimer = undefined;\n          this._configuration.doubleClick({ event: e, x, y, scene: this });\n        } else {\n          this._mousePos[i].doubleClickTimer = setTimeout(() => {\n            this._mousePos[i].doubleClickTimer = undefined;\n            this._configuration.click({ event: e, x, y, scene: this });\n          }, this.camConfig.doubleClickDetectInterval);\n        }\n      } else {\n        this._configuration.click({ event: e, x, y, scene: this });\n      }\n    } else if (this.camConfig.alternative && !i /* i === 0 */) {\n      const [x, y] = this.transformPoint(mx, my);\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.region &&\n        this._configuration.region({\n          event: e,\n          x1: Math.min(ox, x),\n          y1: Math.min(oy, y),\n          x2: Math.max(ox, x),\n          y2: Math.max(oy, y),\n          fromX: ox,\n          fromY: oy,\n          toX: x,\n          toY: y,\n          scene: this\n        });\n    }\n  }\n  _mouseOut(e) {\n    const i = this._getMouseButton(e);\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n  _mouseMove(e) {\n    const i = this._getMouseButton(e);\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      (e.which === 0 && !e.touches)\n    ) {\n      return;\n    }\n    if (this.camConfig.enabled) {\n      if (e.touches && e.touches.length >= 2) {\n        const t = e.touches;\n        // get distance of two finger\n        const distance = Math.sqrt(\n          (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n            (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n        );\n        if (this._mousePos[i]._distance === undefined) {\n          if (distance > 0) {\n            this._mousePos[i]._distance = distance;\n            this._mousePos[i]._czoom = this.toCam.zoom;\n          }\n        } else {\n          this.toCam.zoom = Math.max(\n            this.camConfig.zoomMin,\n            Math.min(\n              this.camConfig.zoomMax,\n              (this._mousePos[i]._czoom * distance) /\n                this._mousePos[i]._distance\n            )\n          );\n          if (this.camConfig.alternative) {\n            const viewMatrix = this._getViewportByCam(this.toCam).invert();\n            const [ox, oy] = viewMatrix.transformPoint(\n              this._mousePos[i].x,\n              this._mousePos[i].y\n            );\n            const [nx, ny] = viewMatrix.transformPoint(\n              ...this._getMousePosition(e)\n            );\n            this.toCam.x = this._mousePos[i]._cx + ox - nx;\n            this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          }\n          this.clampView();\n        }\n      } else {\n        this._mousePos[i]._distance = undefined;\n        if (!this.camConfig.alternative || i === 2) {\n          const viewMatrix = this._getViewportByCam(this.toCam).invert();\n          const [ox, oy] = viewMatrix.transformPoint(\n            this._mousePos[i].x,\n            this._mousePos[i].y\n          );\n          const [nx, ny] = viewMatrix.transformPoint(\n            ...this._getMousePosition(e)\n          );\n          this.toCam.x = this._mousePos[i]._cx + ox - nx;\n          this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          this.clampView();\n        }\n      }\n    }\n    if (\n      this.camConfig.alternative &&\n      i === 0 &&\n      this._configuration.regionMove &&\n      Date.now() - this._mousePos[i]._timestamp >= 150 &&\n      (!e.touches || e.touches.length === 1)\n    ) {\n      const [x, y] = this.transformPoint(...this._getMousePosition(e));\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.regionMove({\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n        scene: this\n      });\n    }\n  }\n  _mouseWheel(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (this.camConfig.enabled) {\n      const [mx, my] = this._getMousePosition(e);\n      const [ox, oy] = this._getViewportByCam(this.toCam)\n        .invert()\n        .transformPoint(mx, my);\n      const wheelData = e.wheelDelta || e.deltaY * -1;\n      if (wheelData / 120 > 0) {\n        this.zoomIn();\n        const [nx, ny] = this._getViewportByCam(this.toCam)\n          .invert()\n          .transformPoint(mx, my);\n        this.toCam.x -= nx - ox;\n        this.toCam.y -= ny - oy;\n        this.clampView();\n      } else {\n        this.zoomOut();\n      }\n    }\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this.camConfig.zoomMax,\n      this.toCam.zoom * this.camConfig.zoomFactor\n    );\n  }\n  zoomOut() {\n    this.toCam.zoom = Math.max(\n      this.camConfig.zoomMin,\n      this.toCam.zoom / this.camConfig.zoomFactor\n    );\n    this.clampView();\n  }\n  zoomTo(x1, y1, x2, y2) {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    this.toCam.x = mx;\n    this.toCam.y = my;\n    this.toCam.zoom =\n      this.toCam.zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE);\n  }\n\n  clampView() {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= 2) {\n      if (x1 < -1) {\n        if (x2 <= 1) {\n          this.toCam.x += -1 - x1;\n        }\n      } else {\n        if (x2 > 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    } else {\n      if (x1 > -1) {\n        this.toCam.x += -1 - x1;\n      } else {\n        if (x2 < 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= 2) {\n      if (y1 < -1) {\n        if (y2 <= 1) {\n          this.toCam.y += -1 - y1;\n        }\n      } else {\n        if (y2 > 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    } else {\n      if (y1 > -1) {\n        this.toCam.y += -1 - y1;\n      } else {\n        if (y2 < 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    }\n  };\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\nimport _NormCamera from './Scenes/NormCamera.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n  NormCamera = (...args) => new _NormCamera(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio,\n  NormCamera\n};\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import Wait from \"./Wait.mjs\";\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    \n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof command.run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command }\n              : command\n          )\n          .filter(command => typeof command.run === \"function\"),\n        label: sequence.reduce((arr, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (sequencePosition.label.hasOwnProperty(label)) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position] &&\n            sequencePosition.sequence[sequencePosition.position].reset &&\n            sequencePosition.sequence[sequencePosition.position].reset();\n        } else {\n          b |=\n            sequencePosition.sequence.find(seq => {\n              return seq.play && seq.play(label, timelapsed);\n            }) >= 0;\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    const parameterList = this.getParameterList();\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      this[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, this)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  getBaseParameterList () {\n    return {\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result)\n          ? new Sequence(result)\n          : result;\n      },\n      // if it's rendering or not\n      enabled: true\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.rotationInRadian),\n            ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      scaleY: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      // alpha\n      alpha: 1.,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\"\n    });\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this.timePassed = 0;\n    this.deltaTime = 0;\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this.timePassed += timePassed;\n      this.deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timePassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n    for (let i in this.sprite) {\n      this.sprite[i].play && this.sprite[i].play(label, timelapsed);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      this.tctx.textBaseline = \"middle\";\n      this.tctx.textAlign = \"center\";\n      this.tctx.globalAlpha = 1;\n      this.tctx.globalCompositeOperation = \"source-over\";\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          alpha: 1,\n          x: 0,\n          y: 0,\n          width: tw,\n          height: th,\n          widthInPixel: tw,\n          heightInPixel: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            width: tw,\n            height: th\n          }\n        });\n      }\n\n      this.additionalBlur && this.additionalBlur(tw, th, additionalModifier);\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(\n        this.temp_canvas,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height,\n        -wh,\n        -hh,\n        w,\n        h\n      );\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      let parameter = {};\n      for (let index in givenParameter) {\n        if (![\"self\", \"class\", \"count\"].includes(index)) {\n          if (typeof givenParameter[index] === \"function\") {\n            parameter[index] = givenParameter[index].call(givenParameter, i);\n          } else {\n            parameter[index] = givenParameter[index];\n          }\n        }\n      } \n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        this.additionalBlur && this.additionalBlur(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n    });\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this.normScale) {\n        this.normScale = this.normToScreen ? (this.normCover\n          ? Math.max(\n              additionalModifier.fullScreen.width / frameWidth,\n              additionalModifier.fullScreen.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.fullScreen.width / frameWidth,\n              additionalModifier.fullScreen.height / frameHeight\n            )\n          : 1) : (this.normCover\n          ? Math.max(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1);\n      }\n      const sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      text: undefined,\n      font: '2em monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(\n            256 >> gradientResolution\n          );\n        }\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled =\n        (this.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n        gradientSize;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      typeof from === 'string' ? pasition.path2shapes(from) : from,\n      typeof to === 'string' ? pasition.path2shapes(to) : to\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n      ifNull(\n        calc(value),\n        setParameter.x === undefined &&\n          setParameter.y === undefined &&\n          setParameter.width === undefined &&\n          setParameter.height === undefined\n      )\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.width === undefined) {\n        this.width = additionalModifier.width;\n      }\n      if (this.height === undefined) {\n        this.height = additionalModifier.height;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import FastBlur from \"./FastBlur.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur\n\nexport default class StackBlur extends FastBlur {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm && this.onCanvas) {\n      this.x = 0;\n      this.y = 0;\n      this.width = additionalModifier.widthInPixel;\n      this.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(this.imageData, 0, 0, targetW, targetH, additionalModifier.radius);\n    this.tctx.putImageData(this.imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.radius === undefined || this.currentRadiusPart !== this.radiusPart) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      const radius = Math.round(this.radius);\n      if (radius) {\n        if (this.onCanvas) {\n          if (this.width === undefined || this.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(this.x);\n          const y = Math.round(this.y);\n          const w = Math.round(this.width);\n          const h = Math.round(this.height);\n          this.imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(this.imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(this.imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import CanvasSprite from \"./Canvas.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur \n\nexport default class StackBlurCanvas extends CanvasSprite {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    if (additionalModifier.radius) {\n      this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n      imageDataRGBA(\n        this.imageData,\n        0,\n        0,\n        targetW,\n        targetH,\n        additionalModifier.radius\n      );\n      this.tctx.putImageData(this.imageData, 0, 0);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (\n        this.radius === undefined ||\n        this.currentRadiusPart !== this.radiusPart\n      ) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      additionalModifier.radius = Math.round(this.radius);\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this._centerX = undefined;\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true\n    });\n  }\n\n  init() {\n    this._centerX = this.width / 2 + this.x;\n    this._centerY = this.height / 2 + this.y;\n    this._scaleZ = Math.max(this.width, this.height) / 2;\n    this._starsX = [];\n    this._starsY = [];\n    this._starsZ = [];\n    this._starsOldX = [];\n    this._starsOldY = [];\n    this._starsNewX = [];\n    this._starsNewY = [];\n    this._starsEnabled = [];\n    this._starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this._starsX[i] = Math.random() * this.width - this.width / 2;\n      this._starsY[i] = Math.random() * this.height - this.height / 2;\n      this._starsZ[i] = Math.random() * this._scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this._starsX[i] + this.moveX * scaled_timepassed,\n      y = this._starsY[i] + this.moveY * scaled_timepassed,\n      z = this._starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this._centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(context, additionalModifier){}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this._centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] - (this._starsLineWidth[i] * this.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StackBlur from './Sprites/StackBlur.mjs';\nimport _StackBlurCanvas from './Sprites/StackBlurCanvas.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StackBlur = (...args) => new _StackBlur(...args);\n  StackBlurCanvas = (...args) => new _StackBlurCanvas(...args);\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StackBlurCanvas,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Color from \"color\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite);\n}\n\n// to values of a object\nexport default class ChangeTo {\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? orgValue * degToRad : orgValue;\n      const isColor = k === \"color\";\n      const isPath = k === \"path\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n          ? [\"rotation\"]\n          : [k];\n      for (const name of names) {\n        this.changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n          bezier: isBezier ? value : false,\n          isColor,\n          isPath,\n          isFunction: isFunction ? value : false,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n            ? movePath\n            : isBezier\n            ? moveBezier\n            : moveDefault\n        });\n      }\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, t => t);\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n            data.from,\n            data.to\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n          sprite[data.name],\n          data.to\n        );\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.currentState.play && this.currentState.play(label, timelapsed);\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_STOP;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_STOP;\n    };\n}","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _StopDisabled from './Animations/StopDisabled.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Stop = (...args) => new _Stop(...args),\n  StopDisabled = (...args) => new _StopDisabled(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","params","apply","Engine","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","this","_output","context","width","height","ratio","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvasIntend","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","_this","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","offsetTimeTarget","offsetTimeDelta","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","_autoSize","window","addEventListener","recalculateCanvas","bind","document","handleVisibilityChange","clickToPlayAudio","playAudioOfScene","_reduceFramerate","reduceFramerate","switchScene","scene","visibilityState","getConfiguration","audioElement","play","_normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","_recalculateCanvas","Math","round","style","resize","_now","performance","now","Date","run","initParameter","requestAnimationFrame","mainLoop","timestamp","drawFrame","_isOddFrame","_realLastTimestamp","parameterForNewScene","destroy","callInit","currentTime","clampTime","shiftTime","isFrameToSkip","nowAutoSize","move","totalTimePassed","draw","deltaTimestamp","targetTime","deltaFrame","delta","abs","max","min","callLoading","reset","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","crossOrigin","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","count","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","_layer","_isFunction","_start","_nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","nextFree","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","isFunction","layer","clear","LayerManager","_layers","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","ifNull","value","alternative","Scene","configurationClassOrObject","_configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","fixedUpdate","output","parameter","images","init","imageManager","then","res","alpha","x","y","widthInPixel","heightInPixel","visibleScreen","_this2","loadingScreen","progress","loading","loadedHeight","clearRect","fillStyle","fillRect","font","text","isNaN","parseFloat","fillText","random","lastCall","endTime","end","calcFrame","frames","floor","update","animate","_this3","isArray","layers","SceneAudio","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","currentAudioTime","ended","duration","controller","playbackState","canPlayType","match","MediaController","console","log","preload","load","arg","readyState","HAVE_ENOUGH_DATA","playPromise","e","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","cam","zoom","_getViewport","_getViewportByCam","hw","hh","scaleCanvas","x1","y1","sx1","sy1","fullScreen","save","setTransform","_Scene","restore","SceneNormAudio","_SceneAudio","SceneNormCamera","camConfig","zoomMax","zoomMin","zoomFactor","tween","registerEvents","preventDefault","callResize","doubleClickDetectInterval","click","toCam","currentX","currentY","currentZoom","_mousePos","camEnable","camDisable","camReset","camTween","camAlternative","bool","registerCamEvents","destroyCamEvents","hasCamChanged","t","Number","EPSILON","ret","_mouseDown","_mouseUp","_mouseOut","_mouseMove","_mouseWheel","_eventPrevent","_getMousePosition","touches","targetTouches","changedTouches","rect","target","getBoundingClientRect","reduce","sum","pageX","left","pageY","top","offsetX","offsetY","_getMouseButton","which","button","mx","my","_cx","_cy","_isDown","_numOfFingers","_distance","_timestamp","down","numCurrentFingers","numOfFingers","doubleClick","doubleClickTimer","clearTimeout","event","setTimeout","ox","oy","region","x2","y2","fromX","fromY","toX","toY","distance","sqrt","_czoom","viewMatrix","ny","clampView","regionMove","wheelDelta","deltaY","zoomIn","zoomOut","zoomTo","w","h","zoomX","zoomY","MIN_VALUE","NormCamera","_NormCamera","Default","_Default","Audio","_Audio","Norm","_Norm","NormAudio","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","position","timelapsed","command","filter","label","arr","keys","lastTimestamp","sequencePosition","b","hasOwnProperty","find","seq","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","Circle","givenParameter","parameterList","getParameterList","name","getBaseParameterList","animation","rotation","rotationInRadian","rotationInDegree","scaleX","scaleY","compositeOperation","color","timepassed","beginPath","arc","PI","fill","closePath","Callback","deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","currentGridSize","gridSize","norm","setParameter","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","additionalBlur","Emitter","classToEmit","includes","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normCover","normToScreen","normScale","sX","sY","LEFT_TOP","Text","givenParameters","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","Scroller","characterList","class","imageDataRGBA","stackblur","StackBlur","currentRadiusPart","onCanvas","radius","radiusPart","_FastBlur","imageData","putImageData","StackBlurCanvas","_CanvasSprite","CanvasSprite","StarField","_centerX","moveX","moveY","moveZ","highScale","_centerY","_scaleZ","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","lineTo","_Image","_Text","_StackBlurCanvas","_StarField","_Callback","_Canvas","_Circle","_Emitter","_Group","_Particle","_Path","_Rect","_Scroller","_StackBlur","initialized","degToRad","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","push","bezier","moveAlgorithm","End","EndDisabled","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","_ChangeTo","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","defaultState","delegateTo","currentStateName","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","WaitDisabled","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","Stop","_Stop","StopDisabled","_StopDisabled","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}