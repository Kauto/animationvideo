{"version":3,"file":"animationvideo.js","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Sequence.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Wait.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvas = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the _output canvas\n    this._output.canvas = options.canvas;\n    if (\n      !(\n        typeof options.canvas === \"object\" &&\n        options.canvas !== null &&\n        options.canvas.getContext\n      )\n    ) {\n      throw new Error(\"Countn't create contect for canvas in Engine\");\n    }\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.w = this._output.canvas.width;\n      this._output.h = this._output.canvas.height;\n      this._output.ratio = this._output.w / this._output.h;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n    this.switchScene(options.scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.audioElement) {\n      this._scene.audioElement.play();\n    }\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(width / this._autoSize.currentScale);\n      this._output.canvas.height = Math.round(height / this._autoSize.currentScale);\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    this.resize();\n    return this;\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = this._isSceneInitialized ? this._scene.getPercentLoaded() : 0;\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(\n      \"Loading \" + percent + \"%\",\n      10 + Math.random() * 3,\n      this._output.h - 10 + Math.random() * 3\n    );\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (this._recalculateCanvas) {\n        this.recalculateCanvas();\n        this._recalculateCanvas = false;\n      }\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(this._timePassed);\n        this._timePassed = this._timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          if (this._timePassed !== 0) {\n            if (this._autoSize && this._autoSize.enabled) {\n              now = window.performance ? performance.now() : Date.now();\n            }\n\n            this._scene.move(this._output, this._timePassed);\n\n            // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n            if (this._timePassed < 0) {\n              this._timePassed = this._scene.totalTimePassed;\n            }\n\n            this._scene.draw(this._output);\n\n            if (this._autoSize && this._autoSize.enabled) {\n              const delta =\n                (window.performance ? performance.now() : Date.now()) -\n                now -\n                this._autoSize.offsetTimeTarget;\n              if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n                this._autoSize.currentWaitedTime +=\n                  timestamp - this._realLastTimestamp;\n              } else {\n                if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                  this._autoSize.currentOffsetTime =\n                    this._autoSize.currentOffsetTime >= 0\n                      ? Math.max(\n                          0,\n                          this._autoSize.currentOffsetTime -\n                            this._autoSize.offsetTimeDelta\n                        )\n                      : Math.min(\n                          0,\n                          this._autoSize.currentOffsetTime +\n                            this._autoSize.offsetTimeDelta\n                        );\n                } else {\n                  if (\n                    delta < 0 &&\n                    this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime <=\n                      this._autoSize.offsetTimeLimitDown\n                    ) {\n                      this._autoSize.currentScale = Math.max(\n                        this._autoSize.scaleLimitMin,\n                        this._autoSize.currentScale / this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  } else if (\n                    delta > 0 &&\n                    this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime >=\n                      this._autoSize.offsetTimeLimitUp\n                    ) {\n                      this._autoSize.currentScale = Math.min(\n                        this._autoSize.scaleLimitMax,\n                        this._autoSize.currentScale * this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          this._isSceneInitialized = this._scene.callLoading(this._output);\n          if (this._isSceneInitialized && this._autoSize) {\n            this._autoSize.currentWaitedTime = 0;\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        if (Images[i].substr(0,4) === '<svg') {\n          const  DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], {type: 'image/svg+xml'});\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        }else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\nreturn self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded() ? true : new Promise((resolve, reject) => {\n      self.resolve = resolve\n    });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    this.layer[id] = element;\n    this.isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this.nextFree + 1;\n    while (nextFree !== len && layer[nextFree]) {\n      nextFree++;\n    }\n    this.nextFree = nextFree;\n    if (this.start > id) {\n      this.start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    if (len === id) {\n      this.layer = this.layer.concat(arrayOfElements);\n      this.nextFree = this.layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this.isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this.layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this.layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this.layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this.layer[elementId] = null;\n      while (len && !this.layer[len - 1]) {\n        len--;\n      }\n      this.layer.length = len;\n      this.isFunction.length = len;\n      this.nextFree = Math.min(this.nextFree, len);\n      this.start = Math.min(this.start, len);\n    } else {\n      this.layer[elementId] = null;\n      this.nextFree = Math.min(this.nextFree, elementId);\n      if (this.start === elementId) {\n        this.start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this.layer.length;\n    for (index = this.start; index < l; index++) {\n      element = this.layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this.isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    return this.layer.length;\n  }\n\n  clear() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this.layers = [];\n  }\n\n  addLayer() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers[this.layers.length - 1];\n  }\n\n  addLayerForId() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this.layers.length\n    );\n    this.layers = this.layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this.layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this.layers.length;\n    for (i = 0; i < l; i++) {\n      this.layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this.layers.length;\n  }\n\n  clear() {\n    this.layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this.configuration = new configurationClassOrObject();\n    } else {\n      this.configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = calc(this.configuration.tickChunk);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this.configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this.configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this.tickChunk) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this.configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this.configuration.init &&\n        this.configuration.init({ engine, output, scene: this, parameter, imageManager: ImageManager })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: 0,\n      y: 0,\n      w: output.w,\n      h: output.h,\n      orgW: output.w,\n      orgH: output.h,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        w: output.w,\n        h: output.h\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  callDestroy(output) {\n    this.configuration.destroy &&\n      this.configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - loadedHeight / 2, output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.h - 10 + Math.random() * 3\n    );\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      this.reset(output);\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.configuration.loading\n      ? this.configuration.loading({\n          engine: this.engine,\n          scene: this,\n          output,\n          value\n        })\n      : this.loadingscreen(output, value);\n    return false;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (\n      this.configuration.endTime &&\n      this.configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n      // End Engine\n      this.configuration.end &&\n        this.configuration.end({ engine: this.engine, scene: this, output });\n    }\n\n    if (this.configuration.beforeMove) {\n      if (this.tickChunk) {\n        if (timepassed >= this.tickChunk - this.tickChunkTolerance) {\n          // how many frames should be skipped. Maximum is a skip of 2 frames\n          for (\n            let calcFrame = 0,\n              frames = Math.min(\n                this.maxSkippedTickChunk,\n                Math.floor(timepassed / this.tickChunk)\n              );\n            calcFrame < frames;\n            calcFrame++\n          ) {\n            this.configuration.beforeMove({\n              engine: this.engine,\n              scene: this,\n              layerManager: this.layerManager,\n              output,\n              timepassed\n            });\n          }\n        }\n      } else {\n        this.configuration.beforeMove({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output,\n          timepassed\n        });\n      }\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timepassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n\n    if (this.configuration.afterMove) {\n      this.configuration.afterMove({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timepassed\n      });\n    }\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            timepassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    let result = this.configuration.reset\n      ? this.configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from './Default.mjs';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from './Default.mjs';\nimport Transform from '../func/transform.mjs';\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        const hw = this.engine._output.w / 2\n        const hh = this.engine._output.h / 2\n        const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = (new Transform())\n        .translate(hw, hh)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h,\n      scaleCanvas: output.w / output.canvas.clientWidth\n    };\n    const [x1,y1] = this.transformPoint(0,0,1);\n    const [x2,y2] = this.transformPoint(output.w,output.h,1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      w: x2-x1,\n      h: y2-y1\n    }\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import SceneAudio from './Audio.mjs';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","class Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      return {\n        position: 0,\n        timelapsed: -timeWait,\n        sequence: sequence.map(command =>\n          typeof command.run !== \"function\" ? { run: command } : command\n        ),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      if (typeof sequencePosition.sequence[sequencePosition.position].run !== 'function') {\n        debugger;\n      }\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from '../func/ifnull.mjs';\nimport calc from '../func/calc.mjs';\nimport Sequence from '../Animations/Sequence.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    if (Array.isArray(this.animation)) {\n      this.animation = new Sequence(this.animation)\n    }\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(params) {\n    if (typeof params === \"function\") {\n      params = { callback: params };\n    }\n    super(params);\n    // Callback\n    this.callback = params.callback;\n    this.timepassed = 0;\n    this.deltaTime = 0;\n  }\n\n  animate(timepassed) {\n    if (this.enabled) {\n      this.timepassed += timepassed;\n      this.deltaTime += timepassed;\n    }\n    return super.animate(timepassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timepassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import ifNull from '../func/ifnull.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.a < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // x,y,width,height without default to enable norm \n    this.x = calc(params.x);\n    this.y = calc(params.y);\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.gridSize = calc(params.gridSize);\n    this.norm = ifNull(calc(params.norm), (this.x === undefined && this.y === undefined && this.width === undefined && this.height === undefined));\n    this.currentGridSize = false;\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.orgW || context.canvas.width,\n      h = additionalModifier.orgH || context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n      } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n      }\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.w;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.h;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(oldTempCanvas,0,0,oldTempCanvas.width, oldTempCanvas.height, 0,0,this.temp_canvas.width, this.temp_canvas.height)\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          a: 1,\n          x: 0,\n          y: 0,\n          w: tw,\n          h: th,\n          orgW: tw,\n          orgH: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            w: tw,\n            h: th\n          }\n        });\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, this.temp_canvas.width, this.temp_canvas.height, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../func/ifnull.mjs';\nimport calc from '../func/calc.mjs';\nimport Group from './Group.mjs';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(params) {\n    super(params);\n    // Size\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n\n    this.gridSize = calc(params.gridSize);\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n    this.norm = ifNull(\n      calc(params.norm),\n      this.x === undefined &&\n        this.y === undefined &&\n        this.width === undefined &&\n        this.height === undefined\n    );\n    this.currentGridSize = false;\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.orgW || context.canvas.width,\n      h = additionalModifier.orgH || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.w;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.h;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      let a = this.a * additionalModifier.a,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.w;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.h;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n    this.norm = ifNull(calc(params.norm), false);\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this.normScale) {\n        this.normScale = this.norm\n          ? Math.min(\n              additionalModifier.w / frameWidth,\n              additionalModifier.h / frameHeight\n            )\n          : 1;\n      }\n      const sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../func/ifnull.mjs';\nimport calc from '../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle.mjs';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.imageSmoothingEnabled = this.scaleX * additionalModifier.orgW / additionalModifier.w > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX / 2), this.y - (this.scaleY / 2), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n\n    this.polyfill = ifNull(calc(params.polyfill), true);\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      pasition.path2shapes(from),\n      pasition.path2shapes(to)\n    );\n  }\n\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../func/ifnull.mjs';\nimport calc from '../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.w;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.h;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n      \n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.arc * degToRad);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-hw, -hh, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../func/calc.mjs';\nimport Emitter from './Emitter.mjs';\nimport Text from './Text.mjs';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(params) {\n    super(params);\n    this.count = ifNull(calc(params.count), 40);\n    this.moveX = ifNull(calc(params.moveX), 0);\n    this.moveY = ifNull(calc(params.moveY), 0);\n    this.moveZ = ifNull(calc(params.moveZ), 0);\n    this.lineWidth = calc(params.lineWidth);\n    this.highScale = ifNull(calc(params.highScale), true);\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    const projectX = this.centerX + (x / z) * hw;\n    const projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n      let lw = (1 - this.starsZ[i] / this.scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this.starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.w;\n        this.height = this.height || additionalModifier.h;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.h / additionalModifier.orgH,\n            additionalModifier.w / additionalModifier.orgW\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - (this.starsLineWidth[i] * this.lineWidth) / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this.starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n                context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n                context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport Color from 'color';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite)\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(data.from, data.to);\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(sprite[data.name], data.to);\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import calc from './func/calc.mjs';\nimport ifNull from './func/ifnull.mjs';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = Array.isArray(obj) && !Array.isArray(obj[0]) ? [obj] : (obj || {});\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      const animationPosition = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      animationPosition.orgTimelapsed = animationPosition.timelapsed\n      animationPosition.orgLoop = animationPosition.loop\n      animationPosition.orgEnabled = animationPosition.enabled\n      this.animationPosition[i] = animationPosition\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  reset(timelapsed = undefined) {\n    for (let i in this.animation) {\n      const animationPosition = this.animationPosition[i];\n      animationPosition.position = 0;\n      animationPosition.timelapsed = timelapsed === undefined ? animationPosition.orgTimelapsed : timelapsed;\n      animationPosition.loop = animationPosition.orgLoop;\n      animationPosition.enabled = animationPosition.orgEnabled;\n      this.setObject(i);\n    }\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          //else {\n          //  hide_vote++;\n          //}\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","import Sequence from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from '../Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return this.duration ? time - this.duration : -1;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","apply","params","Engine","constructor","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","_output","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvas","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","this","clientWidth","clientHeight","offsetTimeTarget","_autoSize","registerResizeEvents","window","addEventListener","recalculateCanvas","bind","registerVisibilityEvents","document","handleVisibilityChange","w","width","h","height","ratio","context","clickToPlayAudio","playAudioOfScene","switchScene","scene","normalizeContext","enabled","visibilityState","audioElement","play","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","referenceWidth","referenceHeight","Math","round","currentScale","setCanvasStyle","style","currentWaitedTime","currentOffsetTime","resize","loadingscreen","fillStyle","fillRect","font","percent","getPercentLoaded","fillText","random","run","initParameter","requestAnimationFrame","mainLoop","timestamp","_realLastTimestamp","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","shiftTime","performance","Date","move","totalTimePassed","draw","delta","waitTime","abs","offsetTimeDelta","max","min","scaleLimitMin","offsetTimeLimitDown","scaleFactor","scaleLimitMax","offsetTimeLimitUp","callLoading","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","substr","DOMURL","URL","webkitURL","svg","Blob","src","createObjectURL","count","let","reset","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","layer","isFunction","start","nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","clear","LayerManager","layers","ifNull","value","alternative","addLayer","addLayerForId","addLayersForIds","numberOfLayer","result","layerId","Scene","configurationClassOrObject","configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","output","parameter","images","init","then","res","orgW","orgH","visibleScreen","ref","callDestroy","progress","loadedHeight","clearRect","text","isNaN","parseFloat","loading","timepassed","endTime","end","beforeMove","calcFrame","frames","floor","animate","afterMove","isArray","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","super","controller","playbackState","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","_getViewport","hw","hh","a","scaleCanvas","x1","y1","save","setTransform","restore","SceneNormAudio","_Default","_Audio","_Norm","_NormAudio","Sequence","timeWait","sequences","shift","sequence","command","lastTimestamp","timelapsed","sequencePosition","position","runSequence","sprite","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","time","is_difference","disableVote","restTime","Infinity","const","Circle","arc","scaleX","scaleY","alphaMode","color","animation","beginPath","fill","closePath","Callback","deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","gridSize","norm","currentGridSize","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","Emitter","staticArray","functionArray","classToEmit","class","call","FastBlur","darker","pixel","ceil","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normScale","sX","sY","LEFT_TOP","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","polyfill","head","getElementsByTagName","script","type","appendChild","stroke","getImageData","data","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","highScale","centerX","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","ret","lineTo","_Image","_Text","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Particle","_Path","_Rect","_Scroller","_StarField","duration","initialized","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","isColor","isPath","push","isBezier","bezier","moveAlgorithm","t","name","loop","obj","animationPosition","orgTimelapsed","orgLoop","orgEnabled","setObject","last_timestamp","hide_vote","object","changeAnimationStatus","ani","current_animationPosition","timeleft","animation_count","disable_vote","End","EndDisabled","Sequenz","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","sqrt","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","keys","transitions","delegateTo","currentStateName","defaultState","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","find","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}