{"version":3,"file":"animationvideo.js","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes/NormCamera.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StackBlur.mjs","../Sprites/StackBlurCanvas.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Stop.mjs","../Animations/StopDisabled.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        /* undefined is falsy - saves a few bytes\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false,\n        reduceFramerate: false\n        */\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvas = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the output canvas\n    this._output.canvas = options.canvas;\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas.width;\n      this._output.height = this._output.canvas.height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n\n    this._reduceFramerate = options.reduceFramerate;\n    // not needed because undefined is falsy\n    // this._isOddFrame = true\n\n    this.switchScene(options.scene);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.audioElement) {\n      this._scene.audioElement.play();\n    }\n  }\n\n  _normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(\n        width / this._autoSize.currentScale\n      );\n      this._output.canvas.height = Math.round(\n        height / this._autoSize.currentScale\n      );\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas.width;\n    this._output.height = this._output.canvas.height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n    return this;\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        if (this._reduceFramerate) {\n          this._isOddFrame = !this._isOddFrame;\n        }\n\n        if (!this._reduceFramerate || this._isOddFrame) {\n          let now = this._scene.currentTime();\n\n          // modify time by scene\n          // first set a min/max\n          this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n          // then maybe shift to fit a framerate\n          const shiftTime = this._scene.shiftTime(this._timePassed);\n          this._timePassed = this._timePassed + shiftTime;\n          this._lastTimestamp = now + shiftTime;\n\n          this._normalizeContext(this._output.context);\n          if (this._isSceneInitialized) {\n            if (this._timePassed !== 0) {\n              const drawFrame = !this._scene.isFrameToSkip(this._output, this._timePassed);\n              if (this._recalculateCanvas && drawFrame) {\n                this.recalculateCanvas();\n                this._recalculateCanvas = false;\n              }\n\n              const nowAutoSize = this._now();\n              this._scene.move(this._output, this._timePassed);\n\n              // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n              if (this._timePassed < 0) {\n                this._timePassed = this._scene.totalTimePassed;\n              }\n\n              drawFrame && this._scene.draw(this._output);\n\n              if (this._autoSize && this._autoSize.enabled) {\n                const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n                if (\n                  this._autoSize.currentWaitedTime < this._autoSize.waitTime\n                ) {\n                  this._autoSize.currentWaitedTime += deltaTimestamp;\n                } else if (drawFrame) {\n                  const targetTime =\n                    this._autoSize.offsetTimeTarget *\n                    (this._reduceFramerate ? 2 : 1);\n                  const deltaFrame = this._now() - nowAutoSize;\n                  const delta =\n                    (Math.abs(deltaTimestamp - targetTime) >\n                    Math.abs(deltaFrame - targetTime)\n                      ? deltaTimestamp\n                      : deltaFrame) - targetTime;\n                  if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                    this._autoSize.currentOffsetTime =\n                      this._autoSize.currentOffsetTime >= 0\n                        ? Math.max(\n                            0,\n                            this._autoSize.currentOffsetTime -\n                              this._autoSize.offsetTimeDelta\n                          )\n                        : Math.min(\n                            0,\n                            this._autoSize.currentOffsetTime +\n                              this._autoSize.offsetTimeDelta\n                          );\n                  } else {\n                    if (\n                      delta < 0 &&\n                      this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime <=\n                        -this._autoSize.offsetTimeLimitDown\n                      ) {\n                        this._autoSize.currentScale = Math.max(\n                          this._autoSize.scaleLimitMin,\n                          this._autoSize.currentScale /\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvas = true;\n                      }\n                    } else if (\n                      delta > 0 &&\n                      this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime >=\n                        this._autoSize.offsetTimeLimitUp\n                      ) {\n                        this._autoSize.currentScale = Math.min(\n                          this._autoSize.scaleLimitMax,\n                          this._autoSize.currentScale *\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvas = true;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            this._isSceneInitialized = this._scene.callLoading(this._output);\n            if (this._isSceneInitialized) {\n              this._scene.reset(this._output);\n              if (this._autoSize) {\n                this._autoSize.currentWaitedTime = 0;\n              }\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output);\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        if (Images[i].substr(0,4) === '<svg') {\n          const  DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], {type: 'image/svg+xml'});\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        }else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\nreturn self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded() ? true : new Promise((resolve, reject) => {\n      self.resolve = resolve\n    });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = null;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else {\n      this._layer[elementId] = null;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this._isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer());\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      this._layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this._configuration = new configurationClassOrObject();\n    } else {\n      this._configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = ifNull(calc(this._configuration.tickChunk), 100 / 6);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this._configuration.fixedUpdate) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this._configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this._configuration.init &&\n        this._configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: ImageManager\n        })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this._configuration.destroy &&\n      this._configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n    return parameter;\n  }\n\n  getConfiguration() {\n    return this._configuration;\n  }\n\n  loadingScreen(output, progress) {\n    if (this._configuration.loading) {\n      return this._configuration.loading({\n        engine: this.engine,\n        scene: this,\n        output,\n        progress\n      });\n    }\n    const ctx = output.context;\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.h)\n        : output.h;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(output, value);\n    return false;\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    if (this._configuration.fixedUpdate) {\n      this._configuration.fixedUpdate({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed,\n        lastCall\n      });\n    }\n  }\n\n  isFrameToSkip(output, timePassed) {\n    return this._configuration.isFrameToSkip && this._configuration.isFrameToSkip({\n      engine: this.engine,\n      scene: this,\n      layerManager: this.layerManager,\n      output,\n      timePassed,\n      totalTimePassed: this.totalTimePassed\n    });\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this.totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this.totalTimePassed;\n      this.reset(output);\n      this.totalTimePassed = timePassed;\n    } else if (\n      this._configuration.endTime &&\n      this._configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this.totalTimePassed - this._configuration.endTime;\n      this.totalTimePassed = this._configuration.endTime;\n      // End Engine\n      this._configuration.end &&\n        this._configuration.end({\n          engine: this.engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this.totalTimePassed\n        });\n    }\n\n    if (this.tickChunk) {\n      if (timePassed >= this.tickChunk - this.tickChunkTolerance) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        for (\n          let calcFrame = 0,\n            frames = Math.min(\n              this.maxSkippedTickChunk,\n              Math.floor(timePassed / this.tickChunk)\n            );\n          calcFrame < frames;\n          calcFrame++\n        ) {\n          this.fixedUpdate(output, this.tickChunk, calcFrame === frames - 1);\n        }\n      }\n    } else {\n      this.fixedUpdate(output, timePassed, true);\n    }\n\n    if (this._configuration.update) {\n      this._configuration.update({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            totalTimePassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    this.totalTimePassed = 0;\n    let result = this._configuration.reset\n      ? this._configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = this._configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === \"playing\") {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return (\n                this.audioPosition * 1000 +\n                Math.min(260, currentTime - this.audioStartTime)\n              );\n            } else if (\n              this.audioElement.currentTime - this.audioPosition < 0.5 &&\n              this.audioElement.currentTime > this.audioPosition &&\n              currentTime - this.audioStartTime < 350\n            ) {\n              this.audioStartTime =\n                this.audioStartTime +\n                (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return (\n                this.audioPosition * 1000 + currentTime - this.audioStartTime\n              );\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition =\n            (this.audioElement.ended\n              ? this.audioElement.duration\n              : this.audioElement.currentTime) * 1000;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return (\n          (this.audioElement.ended\n            ? this.audioElement.duration\n            : this.audioElement.currentTime) * 1000\n        );\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.callInit(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (\n        !(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        this.loadingScreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        let playPromise = this.audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this._configuration.endTime) {\n          this._configuration.endTime = this.audioElement.duration * 1000;\n        }\n        this.loadingScreen(output, \"Click to play\");\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n    this.cam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      this.transform = this._getViewportByCam(this.cam);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  _getViewportByCam(cam) {\n    const hw = this.engine.getWidth() / 2;\n    const hh = this.engine.getHeight() / 2;\n    const scale = this.engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      const hw = this.engine.getWidth() / 2;\n      const hh = this.engine.getHeight() / 2;\n      const scale = this.engine.getRatio() > 1 ? hw : hh;\n\n      this.transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneNorm from \"./Norm.mjs\";\nimport calc from \"../func/calc.mjs\";\n\nexport default class SceneNormCamera extends SceneNorm {\n  constructor(...args) {\n    super(...args);\n    this.camConfig = Object.assign(\n      {},\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        registerEvents: true,\n        preventDefault: true,\n        enabled: true,\n        callResize: true,\n        doubleClickDetectInterval: 350,\n        alternative: false\n      },\n      calc(this._configuration.cam) || {}\n    );\n    if (!this._configuration.click) {\n      this._configuration.click = () => {};\n    }\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n\n    this._mousePos = [];\n  }\n\n  camEnable() {\n    this.camConfig.enabled = true;\n  }\n\n  camDisable() {\n    this.camConfig.enabled = false;\n  }\n\n  camReset() {\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  }\n\n  camTween(tween) {\n    this.camConfig.tween = tween;\n  }\n\n  camAlternative(bool) {\n    this._mousePos = [];\n    this.camConfig.alternative = bool;\n  }\n\n  callInit(output, parameter, engine) {\n    if (this.camConfig.registerEvents) {\n      this.registerCamEvents(output.canvas);\n    }\n    return super.callInit(output, parameter, engine);\n  }\n\n  destroy(output) {\n    if (this.camConfig.registerEvents) {\n      this.destroyCamEvents(output.canvas);\n    }\n    return super.destroy(output);\n  }\n\n  hasCamChanged() {\n    const t = this.camConfig.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this.cam.zoom) >= Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    const ret = super.fixedUpdate(output, timePassed, lastCall);\n    if (this.camConfig.tween && this.hasCamChanged()) {\n      this.cam.x += (this.toCam.x - this.cam.x) / this.camConfig.tween;\n      this.cam.y += (this.toCam.y - this.cam.y) / this.camConfig.tween;\n      this.cam.zoom += (this.toCam.zoom - this.cam.zoom) / this.camConfig.tween;\n      if (lastCall) {\n        if (this.camConfig.callResize) {\n          this.resize(output);\n        } else {\n          this.transform = null;\n          this.transformInvert = null;\n        }\n      }\n    }\n    return ret;\n  }\n\n  move(output, timePassed) {\n    const ret = super.move(output, timePassed);\n    if (!this.camConfig.tween && this.hasCamChanged()) {\n      this.cam = Object.assign({}, this.toCam);\n      if (this.camConfig.callResize) {\n        this.resize(output);\n      } else {\n        this.transform = null;\n        this.transformInvert = null;\n      }\n    }\n    return ret;\n  }\n\n  registerCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.addEventListener(eventName, this._mouseDown.bind(this), true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.addEventListener(eventName, this._mouseUp.bind(this), true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.addEventListener(eventName, this._mouseOut.bind(this), true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.addEventListener(eventName, this._mouseMove.bind(this), true);\n    }\n    element.addEventListener(\"mousewheel\", this._mouseWheel.bind(this), true);\n    element.addEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  destroyCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.removeEventListener(eventName, this._mouseDown, true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.removeEventListener(eventName, this._mouseUp, true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.removeEventListener(eventName, this._mouseOut, true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.removeEventListener(eventName, this._mouseMove, true);\n    }\n    element.removeEventListener(\"mousewheel\", this._mouseWheel, true);\n    element.removeEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  _eventPrevent(e) {\n    e.preventDefault();\n  }\n\n  _getMousePosition(e) {\n    let touches;\n    if (e.touches && e.touches.length > 0) {\n      touches = e.targetTouches;\n    } else if (e.changedTouches && e.changedTouches.length > 0) {\n      touches = e.changedTouches;\n    }\n    if (touches) {\n      const rect = e.target.getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top\n      ];\n    }\n    return [e.offsetX, e.offsetY];\n  }\n\n  _getMouseButton(e) {\n    return this.camConfig.alternative\n      ? e.which\n        ? e.which - 1\n        : e.button || 0\n      : 0;\n  }\n\n  _mouseDown(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const [mx, my] = this._getMousePosition(e);\n    const i = this._getMouseButton(e);\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e.touches && e.touches.length) || 1,\n      _distance: undefined,\n      _timestamp: Date.now()\n    });\n  }\n  _mouseUp(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const i = this._getMouseButton(e);\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers = (e.changedTouches && e.changedTouches.length) || 1;\n    const numOfFingers = Math.max(this._mousePos[i]._numOfFingers, numCurrentFingers);\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n    if (!down || numOfFingers > 1) {\n      return;\n    }\n    const [mx, my] = this._getMousePosition(e);\n    if (\n      Date.now() - this._mousePos[i]._timestamp < 150 &&\n      Math.abs(this._mousePos[i].x - mx) < 5 &&\n      Math.abs(this._mousePos[i].y - my) < 5 &&\n      !i // i === 0\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      if (this._configuration.doubleClick) {\n        if (this._mousePos[i].doubleClickTimer) {\n          clearTimeout(this._mousePos[i].doubleClickTimer);\n          this._mousePos[i].doubleClickTimer = undefined;\n          this._configuration.doubleClick({ event: e, x, y, scene: this });\n        } else {\n          this._mousePos[i].doubleClickTimer = setTimeout(() => {\n            this._mousePos[i].doubleClickTimer = undefined;\n            this._configuration.click({ event: e, x, y, scene: this });\n          }, this.camConfig.doubleClickDetectInterval);\n        }\n      } else {\n        this._configuration.click({ event: e, x, y, scene: this });\n      }\n    } else if (this.camConfig.alternative && !i /* i === 0 */) {\n      const [x, y] = this.transformPoint(mx, my);\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.region &&\n        this._configuration.region({\n          event: e,\n          x1: Math.min(ox, x),\n          y1: Math.min(oy, y),\n          x2: Math.max(ox, x),\n          y2: Math.max(oy, y),\n          fromX: ox,\n          fromY: oy,\n          toX: x,\n          toY: y,\n          scene: this\n        });\n    }\n  }\n  _mouseOut(e) {\n    const i = this._getMouseButton(e);\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n  _mouseMove(e) {\n    const i = this._getMouseButton(e);\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      (e.which === 0 && !e.touches)\n    ) {\n      return;\n    }\n    if (this.camConfig.enabled) {\n      if (e.touches && e.touches.length >= 2) {\n        const t = e.touches;\n        // get distance of two finger\n        const distance = Math.sqrt(\n          (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n            (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n        );\n        if (this._mousePos[i]._distance === undefined) {\n          if (distance > 0) {\n            this._mousePos[i]._distance = distance;\n            this._mousePos[i]._czoom = this.toCam.zoom;\n          }\n        } else {\n          this.toCam.zoom = Math.max(\n            this.camConfig.zoomMin,\n            Math.min(\n              this.camConfig.zoomMax,\n              (this._mousePos[i]._czoom * distance) /\n                this._mousePos[i]._distance\n            )\n          );\n          if (this.camConfig.alternative) {\n            const viewMatrix = this._getViewportByCam(this.toCam).invert();\n            const [ox, oy] = viewMatrix.transformPoint(\n              this._mousePos[i].x,\n              this._mousePos[i].y\n            );\n            const [nx, ny] = viewMatrix.transformPoint(\n              ...this._getMousePosition(e)\n            );\n            this.toCam.x = this._mousePos[i]._cx + ox - nx;\n            this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          }\n          this.clampView();\n        }\n      } else {\n        this._mousePos[i]._distance = undefined;\n        if (!this.camConfig.alternative || i === 2) {\n          const viewMatrix = this._getViewportByCam(this.toCam).invert();\n          const [ox, oy] = viewMatrix.transformPoint(\n            this._mousePos[i].x,\n            this._mousePos[i].y\n          );\n          const [nx, ny] = viewMatrix.transformPoint(\n            ...this._getMousePosition(e)\n          );\n          this.toCam.x = this._mousePos[i]._cx + ox - nx;\n          this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          this.clampView();\n        }\n      }\n    }\n    if (\n      this.camConfig.alternative &&\n      i === 0 &&\n      this._configuration.regionMove &&\n      Date.now() - this._mousePos[i]._timestamp >= 150 &&\n      (!e.touches || e.touches.length === 1)\n    ) {\n      const [x, y] = this.transformPoint(...this._getMousePosition(e));\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.regionMove({\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n        scene: this\n      });\n    }\n  }\n  _mouseWheel(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (this.camConfig.enabled) {\n      const [mx, my] = this._getMousePosition(e);\n      const [ox, oy] = this._getViewportByCam(this.toCam)\n        .invert()\n        .transformPoint(mx, my);\n      const wheelData = e.wheelDelta || e.deltaY * -1;\n      if (wheelData / 120 > 0) {\n        this.zoomIn();\n        const [nx, ny] = this._getViewportByCam(this.toCam)\n          .invert()\n          .transformPoint(mx, my);\n        this.toCam.x -= nx - ox;\n        this.toCam.y -= ny - oy;\n        this.clampView();\n      } else {\n        this.zoomOut();\n      }\n    }\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this.camConfig.zoomMax,\n      this.toCam.zoom * this.camConfig.zoomFactor\n    );\n  }\n  zoomOut() {\n    this.toCam.zoom = Math.max(\n      this.camConfig.zoomMin,\n      this.toCam.zoom / this.camConfig.zoomFactor\n    );\n    this.clampView();\n  }\n  zoomTo(x1, y1, x2, y2) {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    this.toCam.x = mx;\n    this.toCam.y = my;\n    this.toCam.zoom =\n      this.toCam.zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE);\n  }\n\n  clampView = function() {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= 2) {\n      if (x1 < -1) {\n        if (x2 <= 1) {\n          this.toCam.x += -1 - x1;\n        }\n      } else {\n        if (x2 > 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    } else {\n      if (x1 > -1) {\n        this.toCam.x += -1 - x1;\n      } else {\n        if (x2 < 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= 2) {\n      if (y1 < -1) {\n        if (y2 <= 1) {\n          this.toCam.y += -1 - y1;\n        }\n      } else {\n        if (y2 > 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    } else {\n      if (y1 > -1) {\n        this.toCam.y += -1 - y1;\n      } else {\n        if (y2 < 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    }\n  };\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\nimport _NormCamera from './Scenes/NormCamera.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n  NormCamera = (...args) => new _NormCamera(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio,\n  NormCamera\n};\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import Wait from \"./Wait.mjs\";\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    \n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof command.run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command }\n              : command\n          )\n          .filter(command => typeof command.run === \"function\"),\n        label: sequence.reduce((arr, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (sequencePosition.label.hasOwnProperty(label)) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position] &&\n            sequencePosition.sequence[sequencePosition.position].reset &&\n            sequencePosition.sequence[sequencePosition.position].reset();\n        } else {\n          b |=\n            sequencePosition.sequence.find(seq => {\n              return seq.play && seq.play(label, timelapsed);\n            }) >= 0;\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    const parameterList = this.getParameterList();\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      this[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, this)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  getBaseParameterList () {\n    return {\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result)\n          ? new Sequence(result)\n          : result;\n      },\n      // if it's rendering or not\n      enabled: true\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.rotationInRadian),\n            ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      scaleY: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      // alpha\n      alpha: 1.,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\"\n    });\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this.timePassed = 0;\n    this.deltaTime = 0;\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this.timePassed += timePassed;\n      this.deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timePassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n    for (let i in this.sprite) {\n      this.sprite[i].play && this.sprite[i].play(label, timelapsed);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      this.tctx.textBaseline = \"middle\";\n      this.tctx.textAlign = \"center\";\n      this.tctx.globalAlpha = 1;\n      this.tctx.globalCompositeOperation = \"source-over\";\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          alpha: 1,\n          x: 0,\n          y: 0,\n          width: tw,\n          height: th,\n          widthInPixel: tw,\n          heightInPixel: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            width: tw,\n            height: th\n          }\n        });\n      }\n\n      this.additionalBlur && this.additionalBlur(tw, th, additionalModifier);\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(\n        this.temp_canvas,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height,\n        -wh,\n        -hh,\n        w,\n        h\n      );\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      let parameter = {};\n      for (let index in givenParameter) {\n        if (![\"self\", \"class\", \"count\"].includes(index)) {\n          if (typeof givenParameter[index] === \"function\") {\n            parameter[index] = givenParameter[index].call(givenParameter, i);\n          } else {\n            parameter[index] = givenParameter[index];\n          }\n        }\n      } \n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        this.additionalBlur && this.additionalBlur(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      // autoscale to max\n      norm: false,\n      normCover: false\n    });\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this.normScale) {\n        this.normScale = this.normCover\n          ? Math.max(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1;\n      }\n      const sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      text: undefined,\n      font: '2em monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(\n            256 >> gradientResolution\n          );\n        }\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled =\n        (this.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n        gradientSize;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      typeof from === 'string' ? pasition.path2shapes(from) : from,\n      typeof to === 'string' ? pasition.path2shapes(to) : to\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n      ifNull(\n        calc(value),\n        setParameter.x === undefined &&\n          setParameter.y === undefined &&\n          setParameter.width === undefined &&\n          setParameter.height === undefined\n      )\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.width === undefined) {\n        this.width = additionalModifier.width;\n      }\n      if (this.height === undefined) {\n        this.height = additionalModifier.height;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import FastBlur from \"./FastBlur.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur\n\nexport default class StackBlur extends FastBlur {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm && this.onCanvas) {\n      this.x = 0;\n      this.y = 0;\n      this.width = additionalModifier.widthInPixel;\n      this.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(this.imageData, 0, 0, targetW, targetH, additionalModifier.radius);\n    this.tctx.putImageData(this.imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.radius === undefined || this.currentRadiusPart !== this.radiusPart) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      const radius = Math.round(this.radius);\n      if (radius) {\n        if (this.onCanvas) {\n          if (this.width === undefined || this.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(this.x);\n          const y = Math.round(this.y);\n          const w = Math.round(this.width);\n          const h = Math.round(this.height);\n          this.imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(this.imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(this.imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import CanvasSprite from \"./Canvas.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur \n\nexport default class StackBlurCanvas extends CanvasSprite {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    if (additionalModifier.radius) {\n      this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n      imageDataRGBA(\n        this.imageData,\n        0,\n        0,\n        targetW,\n        targetH,\n        additionalModifier.radius\n      );\n      this.tctx.putImageData(this.imageData, 0, 0);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (\n        this.radius === undefined ||\n        this.currentRadiusPart !== this.radiusPart\n      ) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      additionalModifier.radius = Math.round(this.radius);\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this._centerX = undefined;\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true\n    });\n  }\n\n  init() {\n    this._centerX = this.width / 2 + this.x;\n    this._centerY = this.height / 2 + this.y;\n    this._scaleZ = Math.max(this.width, this.height) / 2;\n    this._starsX = [];\n    this._starsY = [];\n    this._starsZ = [];\n    this._starsOldX = [];\n    this._starsOldY = [];\n    this._starsNewX = [];\n    this._starsNewY = [];\n    this._starsEnabled = [];\n    this._starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this._starsX[i] = Math.random() * this.width - this.width / 2;\n      this._starsY[i] = Math.random() * this.height - this.height / 2;\n      this._starsZ[i] = Math.random() * this._scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this._starsX[i] + this.moveX * scaled_timepassed,\n      y = this._starsY[i] + this.moveY * scaled_timepassed,\n      z = this._starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this._centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(context, additionalModifier){}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this._centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] - (this._starsLineWidth[i] * this.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StackBlur from './Sprites/StackBlur.mjs';\nimport _StackBlurCanvas from './Sprites/StackBlurCanvas.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StackBlur = (...args) => new _StackBlur(...args);\n  StackBlurCanvas = (...args) => new _StackBlurCanvas(...args);\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StackBlurCanvas,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Color from \"color\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite);\n}\n\n// to values of a object\nexport default class ChangeTo {\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? orgValue * degToRad : orgValue;\n      const isColor = k === \"color\";\n      const isPath = k === \"path\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n          ? [\"rotation\"]\n          : [k];\n      for (const name of names) {\n        this.changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n          bezier: isBezier ? value : false,\n          isColor,\n          isPath,\n          isFunction: isFunction ? value : false,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n            ? movePath\n            : isBezier\n            ? moveBezier\n            : moveDefault\n        });\n      }\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, t => t);\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n            data.from,\n            data.to\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n          sprite[data.name],\n          data.to\n        );\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.currentState.play && this.currentState.play(label, timelapsed);\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_STOP;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_STOP;\n    };\n}","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _StopDisabled from './Animations/StopDisabled.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Stop = (...args) => new _Stop(...args),\n  StopDisabled = (...args) => new _StopDisabled(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","params","apply","Engine","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","this","_output","context","width","height","ratio","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvas","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","_this","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","offsetTimeTarget","offsetTimeDelta","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","_autoSize","window","addEventListener","recalculateCanvas","bind","document","handleVisibilityChange","clickToPlayAudio","playAudioOfScene","_reduceFramerate","reduceFramerate","switchScene","scene","visibilityState","audioElement","play","_normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","Math","round","style","resize","_now","performance","now","Date","run","initParameter","requestAnimationFrame","mainLoop","timestamp","_realLastTimestamp","parameterForNewScene","destroy","callInit","_isOddFrame","currentTime","clampTime","shiftTime","drawFrame","isFrameToSkip","nowAutoSize","move","totalTimePassed","draw","deltaTimestamp","targetTime","deltaFrame","delta","abs","max","min","callLoading","reset","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","count","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","_layer","_isFunction","_start","_nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","nextFree","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","isFunction","layer","clear","LayerManager","_layers","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","ifNull","value","alternative","Scene","configurationClassOrObject","_configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","fixedUpdate","output","parameter","images","init","imageManager","then","res","alpha","x","y","widthInPixel","heightInPixel","visibleScreen","_this2","getConfiguration","loadingScreen","progress","loading","loadedHeight","h","clearRect","w","fillStyle","fillRect","font","text","isNaN","parseFloat","fillText","random","lastCall","endTime","end","calcFrame","frames","floor","update","animate","_this3","isArray","layers","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","controller","playbackState","ended","duration","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","playPromise","e","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","cam","zoom","_getViewport","_getViewportByCam","hw","hh","scaleCanvas","x1","y1","save","setTransform","_Scene","restore","SceneNormAudio","_SceneAudio","SceneNormCamera","clampView","toCam","x2","y2","camConfig","zoomMax","zoomMin","zoomFactor","tween","registerEvents","preventDefault","callResize","doubleClickDetectInterval","click","_mousePos","camEnable","camDisable","camReset","camTween","camAlternative","bool","registerCamEvents","destroyCamEvents","hasCamChanged","t","Number","EPSILON","ret","_mouseDown","_mouseUp","_mouseOut","_mouseMove","_mouseWheel","_eventPrevent","_getMousePosition","touches","targetTouches","changedTouches","rect","target","getBoundingClientRect","reduce","sum","pageX","left","pageY","top","offsetX","offsetY","_getMouseButton","which","button","mx","my","_cx","_cy","_isDown","_numOfFingers","_distance","_timestamp","down","numCurrentFingers","numOfFingers","doubleClick","doubleClickTimer","clearTimeout","event","setTimeout","ox","oy","region","fromX","fromY","toX","toY","distance","sqrt","_czoom","viewMatrix","ny","regionMove","wheelDelta","deltaY","zoomIn","zoomOut","zoomTo","sx1","sy1","zoomX","zoomY","MIN_VALUE","NormCamera","_NormCamera","Default","_Default","Audio","_Audio","Norm","_Norm","NormAudio","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","position","timelapsed","command","filter","label","arr","keys","lastTimestamp","sequencePosition","b","hasOwnProperty","find","seq","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","Circle","givenParameter","parameterList","getParameterList","name","getBaseParameterList","animation","rotation","rotationInRadian","rotationInDegree","scaleX","scaleY","compositeOperation","color","timepassed","beginPath","arc","PI","fill","closePath","Callback","deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","currentGridSize","gridSize","norm","setParameter","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","additionalBlur","Emitter","classToEmit","includes","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normCover","normScale","sX","sY","LEFT_TOP","Text","givenParameters","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","Scroller","characterList","class","imageDataRGBA","stackblur","StackBlur","currentRadiusPart","onCanvas","radius","radiusPart","_FastBlur","imageData","putImageData","StackBlurCanvas","_CanvasSprite","CanvasSprite","StarField","_centerX","moveX","moveY","moveZ","highScale","_centerY","_scaleZ","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","lineTo","_Image","_Text","_StackBlurCanvas","_StarField","_Callback","_Canvas","_Circle","_Emitter","_Group","_Particle","_Path","_Rect","_Scroller","_StackBlur","initialized","degToRad","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","push","bezier","moveAlgorithm","End","EndDisabled","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","_ChangeTo","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","defaultState","delegateTo","currentStateName","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","WaitDisabled","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","Stop","_Stop","StopDisabled","_StopDisabled","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}