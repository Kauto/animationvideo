{"version":3,"file":"animationvideo.js","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes/NormCamera.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StackBlur.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Stop.mjs","../Animations/StopDisabled.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        /* undefined is falsy - saves a few bytes\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false,\n        reduceFramerate: false\n        */\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: [],\n      context: [],\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // list of binded events\n    this._events = [];\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    // this._newScene = undefined;\n    // this._promiseSceneDestroying = undefined;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the output canvas\n    this._output.canvas = Array.isArray(options.canvas)\n      ? options.canvas\n      : [options.canvas];\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 3,\n        scaleFactor: 1.07,\n        referenceWidth: () => this._output.canvas[0].clientWidth,\n        referenceHeight: () => this._output.canvas[0].clientHeight,\n        currentScale: 1,\n        waitTime: 100,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 25,\n        offsetTimeDelta: 10,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        this._events = [\"resize\", \"orientationchange\"].map(e => ({\n          _node: window,\n          _event: e,\n          _function: this.recalculateCanvas.bind(this)\n        }));\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        this._events.push({\n          _node: document,\n          _event: \"visibilitychange\",\n          _function: this.handleVisibilityChange.bind(this)\n        });\n      }\n      this._recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas[0].width;\n      this._output.height = this._output.canvas[0].height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.canvas.forEach((canvas, index) => {\n      this._output.context[index] = canvas.getContext(\"2d\");\n    });\n    this._canvasCount = this._output.canvas.length;\n    this._drawFrame = Array.from({ length: this._canvasCount }, v => 0);\n\n    if (options.clickToPlayAudio) {\n      this._events.push({\n        _node: this._output.canvas[0],\n        _event: \"click\",\n        _function: this.playAudioOfScene.bind(this)\n      });\n    }\n\n    this._reduceFramerate = options.reduceFramerate;\n    // not needed because undefined is falsy\n    // this._isOddFrame = true\n\n    this._events.forEach(v => {\n      v._node.addEventListener(v._event, v._function);\n    });\n\n    this.switchScene(options.scene, options.sceneParameter || {});\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (\n      this._isSceneInitialized &&\n      this._scene &&\n      this._scene.getConfiguration().audioElement\n    ) {\n      this._scene.getConfiguration().audioElement.play();\n    }\n  }\n\n  _normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  getOutput() {\n    return this._output;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.forEach(canvas => {\n        canvas.width = Math.round(width / this._autoSize.currentScale);\n        canvas.height = Math.round(height / this._autoSize.currentScale);\n        if (this._autoSize.setCanvasStyle) {\n          canvas.style.width = `${width}px`;\n          canvas.style.height = `${height}px`;\n        }\n      });\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas[0].width;\n    this._output.height = this._output.canvas[0].height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene, sceneParameter) {\n    if (scene) {\n      this._newScene = scene;\n      this._sceneParameter = sceneParameter;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n  run(runParameter) {\n    runParameter = runParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (\n        this._recalculateCanvasIntend &&\n        (!this._reduceFramerate || !this._isOddFrame)\n      ) {\n        this._recalculateCanvas();\n        this._recalculateCanvasIntend = false;\n        for (let i = 0; i < this._canvasCount; i++) {\n          this._drawFrame[i] = Math.max(this._drawFrame[i] - 1, 1);\n        }\n      } else {\n        for (let i = 0; i < this._canvasCount; i++) {\n          this._drawFrame[i] = Math.max(this._drawFrame[i] - 1, 0);\n        }\n      }\n\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n      if (!this._initializedStartTime) {\n        this._initializedStartTime = timestamp;\n      }\n\n      if (this._newScene && !this._promiseSceneDestroying) {\n        this._promiseSceneDestroying = Promise.resolve(\n          this._scene ? this._scene.destroy(this._output) : {}\n        );\n        this._promiseSceneDestroying.then(destroyParameterForNewScene => {\n          this._newScene.callInit(\n            this._output,\n            {\n              run: runParameter,\n              scene: this._sceneParameter,\n              destroy: destroyParameterForNewScene\n            },\n            this\n          );\n          this._scene = this._newScene;\n          this._newScene = undefined;\n          this._promiseSceneDestroying = undefined;\n          this._isSceneInitialized = false;\n          this._lastTimestamp = this._scene.currentTime();\n          this._initializedStartTime = timestamp;\n        });\n      }\n\n      if (this._scene) {\n        if (this._reduceFramerate) {\n          this._isOddFrame = !this._isOddFrame;\n        }\n\n        if (!this._reduceFramerate || this._isOddFrame) {\n          let now = this._scene.currentTime();\n\n          // modify time by scene\n          // first set a min/max\n          let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n          // then maybe shift to fit a framerate\n          const shiftTime = this._scene.shiftTime(timePassed);\n          timePassed = timePassed + shiftTime;\n          this._lastTimestamp = now + shiftTime;\n\n          if (this._isSceneInitialized) {\n            const moveFrame = timePassed !== 0 || this._moveOnce;\n            this._moveOnce = false\n            const drawFrame = this._scene.isDrawFrame(this._output, timePassed);\n            if (Array.isArray(drawFrame)) {\n              for (let i = 0; i < this._canvasCount; i++) {\n                this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame[i]);\n              }\n            } else {\n              for (let i = 0; i < this._canvasCount; i++) {\n                this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame);\n              }\n            }\n\n            const nowAutoSize = this._now();\n            if (moveFrame) {\n              this._scene.move(this._output, timePassed);\n            }\n\n            if (this._output.canvas[0].width) {\n              for (let index = 0; index < this._canvasCount; index++) {\n                if (this._drawFrame[index]) {\n                  this._normalizeContext(this._output.context[index]);\n                  this._scene.draw(this._output, index);\n                }\n              }\n            }\n\n            if (this._autoSize && this._autoSize.enabled) {\n              const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n              if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n                this._autoSize.currentWaitedTime += deltaTimestamp;\n              } else if (moveFrame) {\n                const targetTime =\n                  this._autoSize.offsetTimeTarget *\n                  (this._reduceFramerate ? 2 : 1);\n                const deltaFrame = this._now() - nowAutoSize;\n                const delta =\n                  (Math.abs(deltaTimestamp - targetTime) >\n                  Math.abs(deltaFrame - targetTime)\n                    ? deltaTimestamp\n                    : deltaFrame) - targetTime;\n                if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                  this._autoSize.currentOffsetTime =\n                    this._autoSize.currentOffsetTime >= 0\n                      ? Math.max(\n                          0,\n                          this._autoSize.currentOffsetTime -\n                            this._autoSize.offsetTimeDelta\n                        )\n                      : Math.min(\n                          0,\n                          this._autoSize.currentOffsetTime +\n                            this._autoSize.offsetTimeDelta\n                        );\n                } else {\n                  if (\n                    delta < 0 &&\n                    this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime <=\n                      -this._autoSize.offsetTimeLimitDown\n                    ) {\n                      this._autoSize.currentScale = Math.max(\n                        this._autoSize.scaleLimitMin,\n                        this._autoSize.currentScale / this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvasIntend = true;\n                    }\n                  } else if (\n                    delta > 0 &&\n                    this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime >=\n                      this._autoSize.offsetTimeLimitUp\n                    ) {\n                      this._autoSize.currentScale = Math.min(\n                        this._autoSize.scaleLimitMax,\n                        this._autoSize.currentScale * this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvasIntend = true;\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._normalizeContext(this._output.context[i]);\n            }\n            this._isSceneInitialized = this._scene.callLoading({\n              output: this._output,\n              timePassed: timestamp - this._realLastTimestamp,\n              totalTimePassed: timestamp - this._initializedStartTime\n            });\n            if (this._isSceneInitialized) {\n              this._scene.reset();\n              this._lastTimestamp = this._scene.currentTime();\n              this._moveOnce = true;\n              if (this._autoSize) {\n                this._autoSize.currentWaitedTime = 0;\n              }\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    this._realLastTimestamp = this._initializedStartTime = false;\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output);\n    this._events.forEach(v => {\n      v._node.removeEventListener(v._event, v._function);\n    });\n    this._events = [];\n\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  constructor() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n  }\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (const i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof Callbacks[i] === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[i].crossOrigin = \"anonymous\";\n        if (Images[i].substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], { type: \"image/svg+xml\" });\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        } else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof Callbacks[i] === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return self.loaded === self.count;\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          self.resolve = resolve;\n        });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor(canvasIds) {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n    this._canvasIds =\n      canvasIds === undefined\n        ? []\n        : Array.isArray(canvasIds)\n        ? canvasIds\n        : [canvasIds];\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = null;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else {\n      this._layer[elementId] = null;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  isCanvasId(canvasId) {\n    return (\n      canvasId === undefined ||\n      !this._canvasIds.length ||\n      this._canvasIds.includes(canvasId)\n    );\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this._isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && element.play(label, timelapsed)\n    );\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer(canvasIds) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1, canvasIds) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer(canvasIds));\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId(canvasIds) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1, canvasIds) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer(canvasIds))\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback, canvasId) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      if (this._layers[i].isCanvasId(canvasId)) {\n        this._layers[i].forEach(callback);\n      }\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && element.play(label, timelapsed)\n    );\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (value === undefined || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this._configuration = new configurationClassOrObject();\n    } else {\n      this._configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n\n    this._totalTimePassed = 0;\n\n    this._engine = null;\n    this._initDone = false;\n    this._additionalModifier = undefined;\n    this._imageManager = ImageManager;\n\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 100 / 6);\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  callInit(output, parameter, engine) {\n    this._engine = engine;\n    this.resize(output);\n    const images = calc(this._configuration.images);\n    if (images) {\n      this._imageManager.add(images);\n    }\n    Promise.resolve(\n      this._configuration.init &&\n        this._configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: this._imageManager\n        })\n    ).then(res => (this._initDone = true));\n  }\n\n  resize(output) {\n    this._additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: 1,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      },\n      fullScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this._additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this._configuration.destroy &&\n      this._configuration.destroy({\n        engine: this._engine,\n        scene: this,\n        output,\n        layerManager: this._layerManager,\n        imageManager: this._imageManager\n      });\n    this._initDone = false;\n    return parameter;\n  }\n\n  getConfiguration() {\n    return this._configuration;\n  }\n\n  loadingScreen({ output, timePassed, totalTimePassed, progress }) {\n    if (this._configuration.loading) {\n      return this._configuration.loading({\n        engine: this._engine,\n        scene: this,\n        output,\n        timePassed,\n        totalTimePassed,\n        progress,\n        imageManager: this._imageManager\n      });\n    }\n    const ctx = output.context[0];\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNaN(parseFloat(progress))\n        ? progress\n        : \"Loading \" + Math.round(100 * progress) + \"%\",\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n\n  callLoading(args) {\n    if (this._imageManager.isLoaded() && this._initDone) {\n      return true;\n    }\n    args.progress = this._imageManager.getCount()\n      ? this._imageManager.getLoaded() / this._imageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(args);\n    return false;\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    if (this._configuration.fixedUpdate) {\n      this._configuration.fixedUpdate({\n        engine: this._engine,\n        scene: this,\n        layerManager: this._layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this._totalTimePassed,\n        imageManager: this._imageManager,\n        lastCall\n      });\n    }\n  }\n\n  isDrawFrame(output, timePassed) {\n    return this._configuration.isDrawFrame\n      ? this._configuration.isDrawFrame({\n          engine: this._engine,\n          scene: this,\n          layerManager: this._layerManager,\n          output,\n          timePassed,\n          totalTimePassed: this._totalTimePassed,\n          imageManager: this._imageManager\n        })\n      : timePassed !== 0;\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset();\n      this._totalTimePassed = timePassed;\n    } else if (\n      this._configuration.endTime &&\n      this._configuration.endTime <= this._totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._configuration.endTime;\n      this._totalTimePassed = this._configuration.endTime;\n      // End Engine\n      this._configuration.end &&\n        this._configuration.end({\n          engine: this._engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this._totalTimePassed,\n          imageManager: this._imageManager\n        });\n    }\n\n    if (this._tickChunk) {\n      if (timePassed >= this._tickChunk - this._tickChunkTolerance) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames =\n          Math.min(\n            this._maxSkippedTickChunk,\n            Math.floor(\n              (timePassed + this._tickChunkTolerance) / this._tickChunk\n            )\n          ) - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(output, this._tickChunk, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(output, timePassed, true);\n    }\n\n    if (this._configuration.update) {\n      this._configuration.update({\n        engine: this._engine,\n        scene: this,\n        layerManager: this._layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this._totalTimePassed,\n        imageManager: this._imageManager\n      });\n    }\n\n    this._layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output, canvasId) {\n    const context = output.context[canvasId]\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this._engine,\n            scene: this,\n            layerManager: this._layerManager,\n            layer,\n            output,\n            context,\n            totalTimePassed: this._totalTimePassed,\n            imageManager: this._imageManager\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(context, this._additionalModifier);\n      }\n    }, canvasId);\n  }\n\n  reset() {\n    this._totalTimePassed = 0;\n    let result = this._configuration.reset\n      ? this._configuration.reset({\n          engine: this._engine,\n          scene: this,\n          layerManager: this._layerManager,\n          output: this._engine.getOutput(),\n          imageManager: this._imageManager\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this._audioStartTime = null;\n    this._audioPosition = null;\n    this._enableAndroidHack = false;\n    this._audioElement = this._configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      const currentAudioTime =\n        (this._audioElement.ended\n          ? this._audioElement.duration\n          : this._audioElement.currentTime) * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === null) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition < 500 &&\n              currentAudioTime > this._audioPosition &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(output, parameter, engine) {\n    // init audio\n    if (this._audioElement) {\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      this._audioElement.load();\n    }\n\n    return super.callInit(output, parameter, engine);\n  }\n\n  callLoading(args) {\n    let loaded = super.callLoading(args);\n\n    if (loaded && this._audioElement) {\n      if (\n        !(this._audioElement.readyState >= this._audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        args.progress = \"Waiting for Audio\";\n        this.loadingScreen(args);\n        return false;\n      } else {\n        let playPromise = this._audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this._configuration.endTime && this._audioElement.duration > 0) {\n          this._configuration.endTime = this._audioElement.duration * 1000;\n        }\n\n        args.progress = \"Click to play\";\n        this.loadingScreen(args);\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this._transform = null;\n    this._transformInvert = null;\n    this.cam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };\n  }\n\n  _getViewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this._getViewportByCam(this.cam);\n      this._transformInvert = null;\n    }\n    return this._transform;\n  }\n\n  _getViewportByCam(cam) {\n    const hw = this._engine.getWidth() / 2;\n    const hh = this._engine.getHeight() / 2;\n    const scale = this._engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  resize(output) {\n    this._transform = null;\n    this._transformInvert = null;\n    this._additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this._additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    const transformInvert = this._getViewportByCam({ x: 0, y: 0, zoom: 1 }).invert();\n    const [sx1, sy1] = transformInvert.transformPoint(0, 0, 1);\n    const [sx2, sy2] = transformInvert.transformPoint(output.width, output.height, 1);\n    this._additionalModifier.fullScreen = {\n      x: sx1,\n      y: sy1,\n      width: sx2 - sx1,\n      height: sy2 - sy1\n    };\n    this._additionalModifier.cam = this.cam;\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this._additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this._additionalModifier.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output, canvasId) {\n    const ctx = output.context[canvasId];\n    ctx.save();\n\n    ctx.setTransform(...this._getViewport().m);\n\n    super.draw(output, canvasId);\n    ctx.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this._transform = null;\n    this._transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      const hw = this._engine.getWidth() / 2;\n      const hh = this._engine.getHeight() / 2;\n      const scale = this._engine.getRatio() > 1 ? hw : hh;\n\n      this._transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this._transformInvert = null;\n    }\n    return this._transform;\n  }\n\n  resize(output) {\n    this._transform = null;\n    this._transformInvert = null;\n    this._additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this._additionalModifier.fullScreen = this._additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this._additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this._additionalModifier.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output, canvasId) {\n    const ctx = output.context[canvasId];\n    ctx.save();\n\n    ctx.setTransform(...this._getViewport().m);\n\n    super.draw(output, canvasId);\n    ctx.restore();\n  }\n}\n","import SceneNorm from \"./Norm.mjs\";\nimport calc from \"../func/calc.mjs\";\n\nconst clickTime = 300;\n\nexport default class SceneNormCamera extends SceneNorm {\n  constructor(...args) {\n    super(...args);\n    this._events = [];\n    this.camConfig = Object.assign(\n      {},\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        registerEvents: true,\n        preventDefault: true,\n        enabled: true,\n        callResize: true,\n        doubleClickDetectInterval: 350,\n        alternative: false\n      },\n      calc(this._configuration.cam) || {}\n    );\n    if (!this._configuration.click) {\n      this._configuration.click = () => {};\n    }\n    this.toCam = {\n      x: this.camConfig.currentX || 0,\n      y: this.camConfig.currentY || 0,\n      zoom: this.camConfig.currentZoom || 1\n    };\n\n    this._clampLimits = {\n      _x1: -1,\n      _y1: -1,\n      _x2: 1,\n      _y2: 1,\n      _w: 2,\n      _h: 2\n    };\n\n    this._mousePos = [];\n  }\n\n  camEnable() {\n    this.camConfig.enabled = true;\n    return this;\n  }\n\n  camDisable() {\n    this.camConfig.enabled = false;\n    return this;\n  }\n\n  camReset() {\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n    return this;\n  }\n\n  camTween(tween) {\n    this.camConfig.tween = tween;\n    return this;\n  }\n\n  camAlternative(bool) {\n    this._mousePos = [];\n    this.camConfig.alternative = bool;\n    return this;\n  }\n\n  setClampLimit(x1, y1, x2, y2) {\n    this._clampLimits = {\n      _x1: x1,\n      _y1: y1,\n      _x2: x2,\n      _y2: y2,\n      _w: x2 - x1,\n      _h: y2 - y1\n    };\n    return this;\n  }\n\n  callInit(output, parameter, engine) {\n    if (this.camConfig.registerEvents) {\n      this._registerCamEvents(output.canvas[0]);\n    }\n    return super.callInit(output, parameter, engine);\n  }\n\n  destroy(output) {\n    if (this.camConfig.registerEvents) {\n      this._destroyCamEvents();\n    }\n    return super.destroy(output);\n  }\n\n  hasCamChanged() {\n    const t = this.camConfig.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this.cam.zoom) >= Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    if (this.camConfig.tween && this.hasCamChanged()) {\n      this.cam.x += (this.toCam.x - this.cam.x) / this.camConfig.tween;\n      this.cam.y += (this.toCam.y - this.cam.y) / this.camConfig.tween;\n      this.cam.zoom += (this.toCam.zoom - this.cam.zoom) / this.camConfig.tween;\n      if (lastCall) {\n        this._additionalModifier.cam = this.cam;\n        if (this.camConfig.callResize) {\n          super.resize(output);\n        } else {\n          this._transform = null;\n          this._transformInvert = null;\n        }\n      }\n    }\n    return super.fixedUpdate(output, timePassed, lastCall);\n  }\n\n  move(output, timePassed) {\n    const ret = super.move(output, timePassed);\n    if (!this.camConfig.tween && this.hasCamChanged()) {\n      this.cam = Object.assign({}, this.toCam);\n      if (this.camConfig.callResize) {\n        super.resize(output);\n      } else {\n        this._transform = null;\n        this._transformInvert = null;\n      }\n    }\n    return ret;\n  }\n\n  resize(output) {\n    super.resize(output);\n    this.clampView();\n  }\n\n  _registerCamEvents(element) {\n    this._events = [\n      [[\"touchstart\", \"mousedown\"], this._mouseDown],\n      [[\"touchend\", \"mouseup\"], this._mouseUp],\n      [[\"touchendoutside\", \"mouseout\"], this._mouseOut],\n      [[\"touchmove\", \"mousemove\"], this._mouseMove],\n      [[\"wheel\"], this._mouseWheel],\n      [[\"contextmenu\"], this._eventPrevent]\n    ]\n      .map(([events, func]) =>\n        events.map(e => ({\n          _node: element,\n          _event: e,\n          _function: func.bind(this)\n        }))\n      )\n      // workaround for .flat(1) for edge\n      .reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          acc.push.apply(acc, cur);\n        } else {\n          acc.push(cur);\n        }\n        return acc;\n      }, [])\n\n    this._events.forEach(v => {\n      v._node.addEventListener(v._event, v._function, true);\n    });\n  }\n\n  _destroyCamEvents() {\n    this._events.forEach(v => {\n      v._node.removeEventListener(v._event, v._function, true);\n    });\n    this._events = [];\n  }\n\n  _eventPrevent(e) {\n    e.preventDefault();\n  }\n\n  _getMousePosition(e) {\n    let touches;\n    if (e.touches && e.touches.length > 0) {\n      touches = e.targetTouches;\n    } else if (e.changedTouches && e.changedTouches.length > 0) {\n      touches = e.changedTouches;\n    }\n    if (touches) {\n      const rect = e.target.getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top\n      ];\n    }\n    if (e.offsetX === undefined) {\n      const rect = e.target.getBoundingClientRect();\n      return [e.clientX - rect.left, e.clientY - rect.top];\n    }\n    return [e.offsetX, e.offsetY];\n  }\n\n  _getMouseButton(e) {\n    return this.camConfig.alternative\n      ? e.which\n        ? e.which - 1\n        : e.button || 0\n      : 0;\n  }\n\n  _mouseDown(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const [mx, my] = this._getMousePosition(e);\n    const i = this._getMouseButton(e);\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e.touches && e.touches.length) || 1,\n      _distance: undefined,\n      _timestamp: Date.now()\n    });\n    if (this._configuration.mouseDown) {\n      const [x, y] = this.transformPoint(mx, my);\n      this._configuration.mouseDown({\n        event: e,\n        x,\n        y,\n        scene: this,\n        engine: this._engine,\n        imageManager: this._imageManager\n      });\n    }\n  }\n  _mouseUp(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const i = this._getMouseButton(e);\n    if (!this._mousePos[i]) {\n      this._mousePos[i] = {};\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e.changedTouches && e.changedTouches.length) || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    const [mx, my] = this._getMousePosition(e);\n    if (this._configuration.mouseUp) {\n      const [x, y] = this.transformPoint(mx, my);\n      this._configuration.mouseUp({\n        event: e,\n        x,\n        y,\n        scene: this,\n        engine: this._engine,\n        imageManager: this._imageManager\n      });\n    }\n\n    if (!down || numOfFingers > 1) {\n      return;\n    }\n\n    if (\n      Date.now() - this._mousePos[i]._timestamp < clickTime &&\n      Math.abs(this._mousePos[i].x - mx) < 5 &&\n      Math.abs(this._mousePos[i].y - my) < 5 &&\n      !i // i === 0\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      if (this._configuration.doubleClick) {\n        if (this._mousePos[i].doubleClickTimer) {\n          clearTimeout(this._mousePos[i].doubleClickTimer);\n          this._mousePos[i].doubleClickTimer = undefined;\n          this._configuration.doubleClick({\n            event: e,\n            x,\n            y,\n            scene: this,\n            engine: this._engine,\n            imageManager: this._imageManager\n          });\n        } else {\n          this._mousePos[i].doubleClickTimer = setTimeout(() => {\n            this._mousePos[i].doubleClickTimer = undefined;\n            this._configuration.click({\n              event: e,\n              x,\n              y,\n              scene: this,\n              engine: this._engine,\n              imageManager: this._imageManager\n            });\n          }, this.camConfig.doubleClickDetectInterval);\n        }\n      } else {\n        this._configuration.click({\n          event: e,\n          x,\n          y,\n          scene: this,\n          engine: this._engine,\n          imageManager: this._imageManager\n        });\n      }\n    } else if (this.camConfig.alternative && !i /* i === 0 */) {\n      const [x, y] = this.transformPoint(mx, my);\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.region &&\n        this._configuration.region({\n          event: e,\n          x1: Math.min(ox, x),\n          y1: Math.min(oy, y),\n          x2: Math.max(ox, x),\n          y2: Math.max(oy, y),\n          fromX: ox,\n          fromY: oy,\n          toX: x,\n          toY: y,\n          scene: this\n        });\n    }\n  }\n  _mouseOut(e) {\n    const i = this._getMouseButton(e);\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n    if (this._configuration.mouseOut) {\n      this._configuration.mouseOut({\n        event: e,\n        scene: this,\n        engine: this._engine,\n        imageManager: this._imageManager\n      });\n    }\n  }\n  _mouseMove(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const i = this._getMouseButton(e);\n    const [mx, my] = this._getMousePosition(e);\n    if (this._configuration.mouseMove) {\n      const [x, y] = this.transformPoint(mx, my);\n      this._configuration.mouseMove({\n        event: e,\n        x,\n        y,\n        scene: this,\n        engine: this._engine,\n        imageManager: this._imageManager\n      });\n    }\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      (e.which === 0 && !e.touches)\n    ) {\n      return;\n    }\n    const scale = this._additionalModifier.scaleCanvas;\n    if (this.camConfig.enabled) {\n      if (e.touches && e.touches.length >= 2) {\n        const t = e.touches;\n        // get distance of two finger\n        const distance = Math.sqrt(\n          (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n            (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n        );\n        if (this._mousePos[i]._distance === undefined) {\n          if (distance > 0) {\n            this._mousePos[i]._distance = distance;\n            this._mousePos[i]._czoom = this.toCam.zoom;\n          }\n        } else {\n          this.toCam.zoom = Math.max(\n            this.camConfig.zoomMin,\n            Math.min(\n              this.camConfig.zoomMax,\n              (this._mousePos[i]._czoom * distance) /\n                this._mousePos[i]._distance\n            )\n          );\n          if (this.camConfig.alternative) {\n            const viewMatrix = this._getViewportByCam(this.toCam).invert();\n            const [ox, oy] = viewMatrix.transformPoint(\n              this._mousePos[i].x * scale,\n              this._mousePos[i].y * scale\n            );\n            const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n            this.toCam.x = this._mousePos[i]._cx + ox - nx;\n            this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          }\n          this.clampView();\n        }\n        return;\n      } else {\n        this._mousePos[i]._distance = undefined;\n        if (!this.camConfig.alternative || i === 2) {\n          const viewMatrix = this._getViewportByCam(this.toCam).invert();\n          const [ox, oy] = viewMatrix.transformPoint(\n            this._mousePos[i].x * scale,\n            this._mousePos[i].y * scale\n          );\n          const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n          this.toCam.x = this._mousePos[i]._cx + ox - nx;\n          this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          this.clampView();\n        }\n      }\n    }\n    if (\n      this.camConfig.alternative &&\n      i === 0 &&\n      this._configuration.regionMove &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!e.touches || e.touches.length === 1)\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.regionMove({\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n        scene: this\n      });\n    }\n  }\n  _mouseWheel(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (this.camConfig.enabled) {\n      const scale = this._additionalModifier.scaleCanvas;\n      const [mx, my] = this._getMousePosition(e);\n      const [ox, oy] = this._getViewportByCam(this.toCam)\n        .invert()\n        .transformPoint(mx * scale, my * scale);\n      const wheelData = e.wheelDelta || e.deltaY * -1;\n      if (wheelData / 120 > 0) {\n        this.zoomIn();\n        const [nx, ny] = this._getViewportByCam(this.toCam)\n          .invert()\n          .transformPoint(mx * scale, my * scale);\n        this.toCam.x -= nx - ox;\n        this.toCam.y -= ny - oy;\n        this.clampView();\n      } else {\n        this.zoomOut();\n      }\n    }\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this.camConfig.zoomMax,\n      this.toCam.zoom * this.camConfig.zoomFactor\n    );\n    return this;\n  }\n  zoomOut() {\n    this.toCam.zoom = Math.max(\n      this.camConfig.zoomMin,\n      this.toCam.zoom / this.camConfig.zoomFactor\n    );\n    this.clampView();\n    return this;\n  }\n  zoomTo(x1, y1, x2, y2) {\n    const scale = this._additionalModifier.scaleCanvas;\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      this._engine.getWidth() * scale,\n      this._engine.getHeight() * scale\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    this.toCam.x = mx;\n    this.toCam.y = my;\n    this.toCam.zoom =\n      this.toCam.zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE);\n    return this;\n  }\n\n  clampView() {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      this._engine.getWidth(),\n      this._engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= this._clampLimits._w) {\n      if (x1 < this._clampLimits._x1) {\n        if (x2 <= this._clampLimits._x2) {\n          this.toCam.x += this._clampLimits._x1 - x1;\n        }\n      } else {\n        if (x2 > this._clampLimits._x2) {\n          this.toCam.x += this._clampLimits._x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > this._clampLimits._x1) {\n        this.toCam.x += this._clampLimits._x1 - x1;\n      } else {\n        if (x2 < this._clampLimits._x2) {\n          this.toCam.x += this._clampLimits._x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= this._clampLimits._h) {\n      if (y1 < this._clampLimits._y1) {\n        if (y2 <= this._clampLimits._y2) {\n          this.toCam.y += this._clampLimits._y1 - y1;\n        }\n      } else {\n        if (y2 > this._clampLimits._y2) {\n          this.toCam.y += this._clampLimits._y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > this._clampLimits._y1) {\n        this.toCam.y += this._clampLimits._y1 - y1;\n      } else {\n        if (y2 < this._clampLimits._y2) {\n          this.toCam.y += this._clampLimits._y2 - y2;\n        }\n      }\n    }\n    return this;\n  }\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\nimport _NormCamera from './Scenes/NormCamera.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n  NormCamera = (...args) => new _NormCamera(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio,\n  NormCamera\n};\n","import calc from \"../func/calc.mjs\";\n\nexport default class Wait {\n  constructor(duration) {\n    this.duration = calc(duration) - 0;\n  }\n\n  run(sprite, time) {\n    // return time left\n    return time - this.duration;\n  }\n}\n","import Wait from \"./Wait.mjs\";\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    \n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof command.run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command }\n              : command\n          )\n          .filter(command => typeof command.run === \"function\"),\n        label: sequence.reduce((arr, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (sequencePosition.label.hasOwnProperty(label)) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position] &&\n            sequencePosition.sequence[sequencePosition.position].reset &&\n            sequencePosition.sequence[sequencePosition.position].reset();\n        } else {\n          b |=\n            sequencePosition.sequence.find(seq => {\n              return seq.play && seq.play(label, timelapsed);\n            }) >= 0;\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    this._parseParameterList(this, this._getParameterList(), givenParameter);\n  }\n\n  _parseParameterList(obj, parameterList, givenParameter) {\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      obj[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, obj)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  _getBaseParameterList() {\n    return {\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result) ? new Sequence(result) : result;\n      },\n      // if it's rendering or not\n      enabled: true\n    };\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.rotationInRadian),\n            ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: (value, givenParameter) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value, givenParameter) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      // alpha\n      alpha: 1,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\"\n    });\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this._timePassed = 0;\n    this._deltaTime = 0;\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this._timePassed += timePassed;\n      this._deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this._timePassed, additionalParameter, this);\n    }\n    this._deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n    for (let i in this.sprite) {\n      this.sprite[i].play && this.sprite[i].play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {\n    for (let i in this.sprite) {\n      this.sprite[i].resize(output, additionalModifier);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this._currentGridSize = false;\n    this._drawFrame = 2;\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      canvasWidth: undefined,\n      canvasHeight: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        ),\n      isDrawFrame: (value, givenParameter, setParameter) => ifNull(value, true)\n    });\n  }\n\n  generateTempCanvas(additionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (this.canvasWidth && this.canvasHeight) {\n      this._temp_canvas.width = this.canvasWidth;\n      this._temp_canvas.height = this.canvasHeight;\n    } else if (this.gridSize) {\n      this._currentGridSize = this.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / this.scaleX);\n      this._temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\");\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm || this.x === undefined) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.norm || this.y === undefined) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.norm || this.width === undefined) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.norm || this.height === undefined) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output, additionalModifier) {\n    if (\n      this._temp_canvas &&\n      this._currentGridSize !== this.gridSize &&\n      !this.canvasWidth\n    ) {\n      const oldTempCanvas = this._temp_canvas;\n      this.generateTempCanvas(additionalModifier);\n      this._tctx.globalCompositeOperation = \"copy\";\n      this._tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx.globalCompositeOperation = \"source-over\";\n      this._drawFrame = 2;\n    }\n    this.normalizeFullScreen(additionalModifier);\n    super.resize(output, additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this._temp_canvas) {\n        this.generateTempCanvas(additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this._currentGridSize !== this.gridSize) {\n        this.resize(additionalModifier);\n      }\n      this._drawFrame = Math.max(\n        this._drawFrame - 1,\n        calc(this.isDrawFrame, context, additionalModifier)\n      );\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas.width,\n        th = this._temp_canvas.height;\n\n      if (this._drawFrame) {\n        this._tctx.textBaseline = \"middle\";\n        this._tctx.textAlign = \"center\";\n        this._tctx.globalAlpha = 1;\n        this._tctx.globalCompositeOperation = \"source-over\";\n        this._tctx.save();\n        // draw all sprites\n        const cam = additionalModifier.cam;\n        if (this.norm && cam) {\n          const scale = Math.max(tw, th) / 2;\n          this._tctx.translate(tw / 2, th / 2);\n          this._tctx.scale(scale, scale);\n          this._tctx.scale(cam.zoom, cam.zoom);\n          this._tctx.translate(-cam.x, -cam.y);\n        }\n        for (let i in this.sprite) {\n          this.sprite[i].draw(\n            this._tctx,\n            this.norm\n              ? Object.assign({}, additionalModifier, {\n                  alpha: 1,\n                  widthInPixel: tw,\n                  heightInPixel: th\n                })\n              : {\n                  alpha: 1,\n                  x: 0,\n                  y: 0,\n                  width: tw,\n                  height: th,\n                  widthInPixel: tw,\n                  heightInPixel: th,\n                  visibleScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  }\n                }\n          );\n        }\n        this._tctx.restore();\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(this._temp_canvas, 0, 0, tw, th, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      let parameter = {};\n      for (let index in givenParameter) {\n        if (![\"self\", \"class\", \"count\"].includes(index)) {\n          if (typeof givenParameter[index] === \"function\") {\n            parameter[index] = givenParameter[index].call(givenParameter, i);\n          } else {\n            parameter[index] = givenParameter[index];\n          }\n        }\n      } \n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this._currentGridSize = false;\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(additionalModifier) {\n    const w = additionalModifier.widthInPixel\n    const h = additionalModifier.heightInPixel\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this._currentGridSize = this.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / this.scaleX);\n      this._temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\");\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm || this.x === undefined) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.norm || this.y === undefined) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.norm || this.width === undefined) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.norm || this.height === undefined) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output, additionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this.generateTempCanvas(additionalModifier);\n      this._tctx.globalCompositeOperation = \"copy\";\n      this._tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this._temp_canvas) {\n        this.generateTempCanvas(additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this._currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this._temp_canvas.width,\n        targetH = this._temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx.globalCompositeOperation = \"copy\";\n        this._tctx.globalAlpha = 1;\n        this._tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this._tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this._tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        this.additionalBlur && this.additionalBlur(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this._temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      width: undefined,\n      height: undefined,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n    });\n  }\n\n  resize(output, additionalModifier) {\n    this._normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this._normScale) {\n        this._normScale = this.normToScreen ? (this.normCover\n          ? Math.max(\n              additionalModifier.fullScreen.width / frameWidth,\n              additionalModifier.fullScreen.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.fullScreen.width / frameWidth,\n              additionalModifier.fullScreen.height / frameHeight\n            )\n          : 1) : (this.normCover\n          ? Math.max(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1);\n      }\n      const sX = (this.width ? this.width : frameWidth) * this._normScale * this.scaleX,\n        sY = (this.height ? this.height : frameHeight) * this._normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      text: undefined,\n      font: '2em monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this._currentScaleX = undefined;\n    this._currentPixelSmoothing = false;\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      const length = 256 >> gradientResolution;\n      Particle._Gradient = Array.from({length}, a=>Array.from({length}, a=>Array.from({length})))\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  resize(output, additionalModifier) {\n    this._currentScaleX = undefined;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      if (this._currentScaleX !== this.scaleX) {\n        this._currentScaleX = this.scaleX;\n        this._currentPixelSmoothing =\n          (this.scaleX * additionalModifier.widthInPixel) /\n            additionalModifier.width >\n          gradientSize;\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled = this._currentPixelSmoothing;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      typeof from === 'string' ? pasition.path2shapes(from) : from,\n      typeof to === 'string' ? pasition.path2shapes(to) : to\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else if(this.path instanceof Path2D) {\n          this.path2D = this.path;\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = Number.EPSILON;\n        }\n        if (scaleY == 0) {\n          scaleY = Number.EPSILON;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\n\n// Sprite\n// Draw a Circle\nclass Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      color: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        ),\n      // relative position\n      position: Rect.CENTER\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm || this.width === undefined) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.norm || this.height === undefined) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n    if (this.norm || this.x === undefined) {\n      this.x = additionalModifier.visibleScreen.x;\n      if (this.position === Rect.CENTER) {\n        this.x += this.width / 2;\n      }\n    }\n    if (this.norm || this.y === undefined) {\n      this.y = additionalModifier.visibleScreen.y;\n      if (this.position === Rect.CENTER) {\n        this.y += this.height / 2;\n      }\n    }\n  }\n\n  resize(output, additionalModifier) {\n    // this.normalizeFullScreen(additionalModifier);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      this.normalizeFullScreen(additionalModifier);\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0 && this.position === Rect.LEFT_TOP) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else if (this.color) {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        if (this.position === Rect.LEFT_TOP) {\n          context.translate(this.x + hw, this.y + hh);\n        } else {\n          context.translate(this.x, this.y);\n        }\n        context.scale(this.scaleX, this.scaleY);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else if (this.color) {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\nRect.LEFT_TOP = 0;\nRect.CENTER = 1;\n\nexport default Rect;\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import FastBlur from \"./FastBlur.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst { imageDataRGBA } = stackblur.default || stackblur;\n\nexport default class StackBlur extends FastBlur {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this._currentGridSize = false;\n    this._currentRadiusPart = undefined;\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined,\n      radiusScale: true\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm && this.onCanvas) {\n      this.x = 0;\n      this.y = 0;\n      this.width = additionalModifier.widthInPixel;\n      this.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(output, additionalModifier) {\n    super.resize(output, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    const imageData = this._tctx.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius);\n    this._tctx.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (\n        this.radius === undefined ||\n        this._currentRadiusPart !== this.radiusPart\n      ) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this._currentRadiusPart = this.radiusPart;\n      }\n      const radius = Math.round(\n        this.radius * (this.radiusScale && ((additionalModifier.cam ? additionalModifier.cam.zoom : 1) / additionalModifier.scaleCanvas))\n      );\n      if (radius) {\n        if (this.onCanvas) {\n          if (this.width === undefined || this.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(this.x);\n          const y = Math.round(this.y);\n          const w = Math.round(this.width);\n          const h = Math.round(this.height);\n          this.imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(this.imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(this.imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this._centerX = undefined;\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true,\n      color: '#FFF' // here default color is white\n    });\n  }\n\n  init() {\n    this._centerX = this.width / 2 + this.x;\n    this._centerY = this.height / 2 + this.y;\n    this._scaleZ = Math.max(this.width, this.height) / 2;\n    this._starsX = [];\n    this._starsY = [];\n    this._starsZ = [];\n    this._starsOldX = [];\n    this._starsOldY = [];\n    this._starsNewX = [];\n    this._starsNewY = [];\n    this._starsEnabled = [];\n    this._starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this._starsX[i] = Math.random() * this.width - this.width / 2;\n      this._starsY[i] = Math.random() * this.height - this.height / 2;\n      this._starsZ[i] = Math.random() * this._scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this._starsX[i] + this.moveX * scaled_timepassed,\n      y = this._starsY[i] + this.moveY * scaled_timepassed,\n      z = this._starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this._centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(output, additionalModifier){}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this._centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] - (this._starsLineWidth[i] * this.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StackBlur from './Sprites/StackBlur.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StackBlur = (...args) => new _StackBlur(...args);\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nRect.LEFT_TOP = _Rect.LEFT_TOP\nRect.CENTER = _Rect.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Color from \"color\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite);\n}\n\n// to values of a object\nexport default class ChangeTo {\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? orgValue * degToRad : orgValue;\n      const isColor = k === \"color\" || k === \"borderColor\";\n      const isPath = k === \"path\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n          ? [\"rotation\"]\n          : [k];\n      for (const name of names) {\n        this.changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n          bezier: isBezier ? value : false,\n          isColor,\n          isPath,\n          isFunction: isFunction ? value : false,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n            ? movePath\n            : isBezier\n            ? moveBezier\n            : moveDefault\n        });\n      }\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, t => t);\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n            data.from,\n            data.to\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n          sprite[data.name],\n          data.to\n        );\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length;\n      let data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length;\n      let data;\n      const progress = this.ease(time / this.duration);\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.currentState.play && this.currentState.play(label, timelapsed);\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_STOP;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_STOP;\n    };\n}","import calc from '../func/calc.mjs';\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = ifNull(calc(duration), 0);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _StopDisabled from './Animations/StopDisabled.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Stop = (...args) => new _Stop(...args),\n  StopDisabled = (...args) => new _StopDisabled(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","params","apply","Engine","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","this","_output","context","width","height","ratio","_events","_scene","_isSceneInitialized","_lastTimestamp","_recalculateCanvasIntend","_referenceRequestAnimationFrame","Array","isArray","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","_this","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","offsetTimeTarget","offsetTimeDelta","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","_autoSize","map","e","_node","window","_event","_function","recalculateCanvas","bind","push","document","handleVisibilityChange","_recalculateCanvas","forEach","index","_canvasCount","length","_drawFrame","from","v","clickToPlayAudio","playAudioOfScene","_reduceFramerate","reduceFramerate","addEventListener","switchScene","scene","sceneParameter","visibilityState","getConfiguration","audioElement","play","_normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","getOutput","Math","round","_this2","style","resize","_newScene","_sceneParameter","_now","performance","now","Date","run","runParameter","_realLastTimestamp","_initializedStartTime","requestAnimationFrame","mainLoop","timestamp","_isOddFrame","i","max","_promiseSceneDestroying","Promise","resolve","destroy","then","destroyParameterForNewScene","_this3","callInit","undefined","currentTime","timePassed","clampTime","shiftTime","moveFrame","_moveOnce","drawFrame","isDrawFrame","nowAutoSize","move","draw","deltaTimestamp","targetTime","deltaFrame","delta","abs","min","callLoading","output","totalTimePassed","reset","cancelAnimationFrame","removeEventListener","ImageManager","Images","count","loaded","add","Callbacks","self","Image","onload","isLoaded","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","reject","Layer","canvasIds","_layer","_isFunction","_start","_nextFree","_canvasIds","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","id","nextFree","concat","k","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","isCanvasId","canvasId","includes","callback","l","isFunction","layer","label","timelapsed","clear","LayerManager","_layers","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","ifNull","value","alternative","Scene","configurationClassOrObject","_configuration","_layerManager","_totalTimePassed","_engine","_initDone","_additionalModifier","_imageManager","_tickChunk","tickChunk","_maxSkippedTickChunk","maxSkippedTickChunk","_tickChunkTolerance","tickChunkTolerance","maxTime","parameter","engine","images","init","imageManager","res","alpha","x","y","widthInPixel","heightInPixel","scaleCanvas","visibleScreen","fullScreen","layerManager","loadingScreen","progress","loading","loadedHeight","clearRect","fillStyle","fillRect","font","fillText","isNaN","parseFloat","random","args","fixedUpdate","lastCall","endTime","end","frames","floor","calcFrame","update","animate","layers","SceneAudio","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","currentAudioTime","ended","duration","controller","playbackState","MediaController","preload","load","readyState","HAVE_ENOUGH_DATA","playPromise","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","_transform","_transformInvert","cam","zoom","_getViewport","_getViewportByCam","hw","hh","x1","y1","transformInvert","sx1","sy1","save","setTransform","_Scene","restore","SceneNormAudio","_SceneAudio","SceneNormCamera","camConfig","zoomMax","zoomMin","zoomFactor","tween","registerEvents","preventDefault","callResize","doubleClickDetectInterval","click","toCam","currentX","currentY","currentZoom","_clampLimits","_x1","_y1","_x2","_y2","_w","_h","_mousePos","camEnable","camDisable","camReset","camTween","camAlternative","bool","setClampLimit","x2","y2","_registerCamEvents","_destroyCamEvents","hasCamChanged","t","Number","EPSILON","_SceneNorm","ret","clampView","_mouseDown","_mouseUp","_mouseOut","_mouseMove","_mouseWheel","_eventPrevent","func","reduce","acc","cur","_getMousePosition","touches","targetTouches","changedTouches","rect","target","getBoundingClientRect","sum","pageX","left","pageY","top","offsetX","clientX","clientY","offsetY","_getMouseButton","which","button","mx","my","_cx","_cy","_isDown","_numOfFingers","_distance","_timestamp","mouseDown","event","down","numCurrentFingers","numOfFingers","mouseUp","doubleClick","doubleClickTimer","clearTimeout","setTimeout","ox","oy","region","fromX","fromY","toX","toY","mouseOut","mouseMove","distance","sqrt","_czoom","viewMatrix","ny","regionMove","wheelDelta","deltaY","zoomIn","zoomOut","zoomTo","w","h","zoomX","zoomY","MIN_VALUE","NormCamera","_NormCamera","Default","_Default","Audio","_Audio","Norm","_Norm","NormAudio","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","position","command","filter","arr","keys","lastTimestamp","sequencePosition","b","hasOwnProperty","find","seq","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","Circle","givenParameter","_parseParameterList","_getParameterList","obj","parameterList","name","_getBaseParameterList","animation","rotation","rotationInRadian","rotationInDegree","scaleX","scaleY","compositeOperation","color","timepassed","additionalModifier","beginPath","arc","PI","fill","closePath","Callback","_timePassed","_deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","_currentGridSize","canvasWidth","canvasHeight","gridSize","norm","setParameter","generateTempCanvas","_temp_canvas","createElement","_tctx","normalizeFullScreen","oldTempCanvas","drawImage","_Group","wh","tw","th","Emitter","classToEmit","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","additionalBlur","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normCover","normToScreen","_normScale","sX","sY","LEFT_TOP","Text","givenParameters","text","borderColor","lineWidth","strokeStyle","strokeText","Particle","_currentScaleX","_currentPixelSmoothing","getGradientImage","r","g","cr","cg","cb","_Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","Scroller","characterList","class","imageDataRGBA","stackblur","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","radiusScale","_FastBlur","imageData","putImageData","StarField","_centerX","moveX","moveY","moveZ","highScale","_centerY","_scaleZ","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","lineTo","_Image","_Text","_Rect","_StarField","_Callback","_Canvas","_Circle","_Emitter","_Particle","_Path","_Scroller","_StackBlur","initialized","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","bezier","moveAlgorithm","End","EndDisabled","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","_ChangeTo","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","defaultState","delegateTo","currentStateName","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","WaitDisabled","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","Stop","_Stop","StopDisabled","_StopDisabled","_Wait","_WaitDisabled","_Engine"],"mappings":"yyBAAwBA,EAAKC,8BAAMC,mCAAAA,oBAClC,MAAqB,mBAAPD,EAAoBA,EAAEE,MAAM,KAAKD,GAAUD,MCCpDG,aACJ,WAAYC,cACNC,EAAeD,EACnB,GAA+B,iBAApBA,EACT,UAAUE,MAAM,0CAElB,GAAIF,EAAgBG,WAClBF,EAAe,CACbG,OAAQJ,YAEAA,EAAgBI,OAC1B,UAAUF,MAAM,0CAElB,IAAIG,EAAUC,OAAOC,OACnB,GACA,GASAN,GAkCF,GA/BAO,KAAKC,EAAU,CACbL,OAAQ,GACRM,QAAS,GACTC,MAAO,EACPC,OAAQ,EACRC,MAAO,GAITL,KAAKM,EAAU,GAGfN,KAAKO,EAAS,KAEdP,KAAKQ,GAAsB,EAM3BR,KAAKS,EAAiB,EACtBT,KAAKU,GAA2B,EAGhCV,KAAKW,EAAkC,KAGvCX,KAAKC,EAAQL,OAASgB,MAAMC,QAAQhB,EAAQD,QACxCC,EAAQD,OACR,CAACC,EAAQD,QAETC,EAAQiB,SAAU,CACpB,IAAMC,EAA0B,CAC9BC,SAAS,EACTC,cAAe,EACfC,cAAe,EACfC,YAAa,KACbC,eAAgB,kBAAMC,EAAKpB,EAAQL,OAAO,GAAG0B,aAC7CC,gBAAiB,kBAAMF,EAAKpB,EAAQL,OAAO,GAAG4B,cAC9CC,aAAc,EACdC,SAAU,IACVC,kBAAmB,EACnBC,kBAAmB,EACnBC,kBAAmB,IACnBC,oBAAqB,IACrBC,iBAAkB,GAClBC,gBAAiB,GACjBC,sBAAsB,EACtBC,0BAA0B,EAC1BC,gBAAgB,GAGhBnC,KAAKoC,EADyB,iBAArBvC,EAAQiB,SACAhB,OAAOC,OACtB,GACAgB,EACAlB,EAAQiB,UAGOC,EAEff,KAAKoC,EAAUH,uBACjBjC,KAAKM,EAAU,CAAC,SAAU,qBAAqB+B,IAAI,SAAAC,SAAM,CACvDC,EAAOC,OACPC,EAAQH,EACRI,EAAWrB,EAAKsB,kBAAkBC,KAAKvB,OAGvCrB,KAAKoC,EAAUF,0BACjBlC,KAAKM,EAAQuC,KAAK,CAChBN,EAAOO,SACPL,EAAQ,mBACRC,EAAW1C,KAAK+C,uBAAuBH,KAAK5C,QAGhDA,KAAKgD,SAELhD,KAAKC,EAAQE,MAAQH,KAAKC,EAAQL,OAAO,GAAGO,MAC5CH,KAAKC,EAAQG,OAASJ,KAAKC,EAAQL,OAAO,GAAGQ,OAC7CJ,KAAKC,EAAQI,MAAQL,KAAKC,EAAQE,MAAQH,KAAKC,EAAQG,OAEzDJ,KAAKC,EAAQL,OAAOqD,QAAQ,SAACrD,EAAQsD,GACnC7B,EAAKpB,EAAQC,QAAQgD,GAAStD,EAAOD,WAAW,QAElDK,KAAKmD,EAAenD,KAAKC,EAAQL,OAAOwD,OACxCpD,KAAKqD,EAAazC,MAAM0C,KAAK,CAAEF,OAAQpD,KAAKmD,GAAgB,SAAAI,cAExD1D,EAAQ2D,kBACVxD,KAAKM,EAAQuC,KAAK,CAChBN,EAAOvC,KAAKC,EAAQL,OAAO,GAC3B6C,EAAQ,QACRC,EAAW1C,KAAKyD,iBAAiBb,KAAK5C,QAI1CA,KAAK0D,EAAmB7D,EAAQ8D,gBAIhC3D,KAAKM,EAAQ2C,QAAQ,SAAAM,GACnBA,EAAEhB,EAAMqB,iBAAiBL,EAAEd,EAAQc,EAAEb,KAGvC1C,KAAK6D,YAAYhE,EAAQiE,MAAOjE,EAAQkE,gBAAkB,+BAG5DhB,uBAAA,WACE/C,KAAKoC,EAAUpB,UAAwC,UAA5B8B,SAASkB,oBAGtCP,iBAAA,WAEIzD,KAAKQ,GACLR,KAAKO,GACLP,KAAKO,EAAO0D,mBAAmBC,cAE/BlE,KAAKO,EAAO0D,mBAAmBC,aAAaC,UAIhDC,EAAA,SAAkBC,GAChBA,EAAIC,aAAe,SACnBD,EAAIE,UAAY,SAChBF,EAAIG,YAAc,EAClBH,EAAII,yBAA2B,iBAGjCC,SAAA,WACE,YAAYzE,EAAQE,SAGtBwE,UAAA,WACE,YAAY1E,EAAQG,UAGtBwE,SAAA,WACE,YAAY3E,EAAQI,SAGtBwE,UAAA,WACE,YAAY5E,KAGd0C,kBAAA,WAEE,OADA3C,KAAKU,GAA2B,UAIlCsC,EAAA,sBACE,GAAIhD,KAAKoC,EAAW,CAClB,IAAMjC,EAAQhB,EAAKa,KAAKoC,EAAUhB,gBAC5BhB,EAASjB,EAAKa,KAAKoC,EAAUb,iBACnC,GAAIpB,GAAS,GAAKC,GAAU,EAC1B,OAEFJ,KAAKC,EAAQL,OAAOqD,QAAQ,SAAArD,GAC1BA,EAAOO,MAAQ2E,KAAKC,MAAM5E,EAAQ6E,EAAK5C,EAAUX,cACjD7B,EAAOQ,OAAS0E,KAAKC,MAAM3E,EAAS4E,EAAK5C,EAAUX,cAC/CuD,EAAK5C,EAAUD,iBACjBvC,EAAOqF,MAAM9E,MAAWA,OACxBP,EAAOqF,MAAM7E,OAAYA,UAG7BJ,KAAKoC,EAAUT,kBAAoB,EACnC3B,KAAKoC,EAAUR,kBAAoB,EAGrC5B,KAAKC,EAAQE,MAAQH,KAAKC,EAAQL,OAAO,GAAGO,MAC5CH,KAAKC,EAAQG,OAASJ,KAAKC,EAAQL,OAAO,GAAGQ,OAC7CJ,KAAKC,EAAQI,MAAQL,KAAKC,EAAQE,MAAQH,KAAKC,EAAQG,OAEvDJ,KAAKkF,YAGPA,OAAA,WAIE,OAHIlF,KAAKO,GAAUP,KAAKO,EAAO2E,QAC7BlF,KAAKO,EAAO2E,OAAOlF,KAAKC,WAK5B4D,YAAA,SAAYC,EAAOC,GAKjB,OAJID,IACF9D,KAAKmF,EAAYrB,EACjB9D,KAAKoF,EAAkBrB,WAK3BsB,EAAA,WACE,OAAO7C,OAAO8C,YAAcA,YAAYC,MAAQC,KAAKD,SAEvDE,IAAA,SAAIC,GA8LF,OA7LAA,EAAeA,GAAgB,GAsL/B1F,KAAK2F,EAAqB3F,KAAK4F,GAAwB,EAGvD5F,KAAKW,EAAkC6B,OAAOqD,sBAvL9C,SAASC,EAASC,cAKhB,GAJA/F,KAAKW,EAAkC6B,OAAOqD,sBAC5CC,EAASlD,KAAK5C,QAIdA,KAAKU,GACHV,KAAK0D,GAAqB1D,KAAKgG,EAQjC,IAAK,IAAIC,EAAI,EAAGA,EAAIjG,KAAKmD,EAAc8C,IACrCjG,KAAKqD,EAAW4C,GAAKnB,KAAKoB,IAAIlG,KAAKqD,EAAW4C,GAAK,EAAG,OARxD,CACAjG,KAAKgD,IACLhD,KAAKU,GAA2B,EAChC,IAAK,IAAIuF,EAAI,EAAGA,EAAIjG,KAAKmD,EAAc8C,IACrCjG,KAAKqD,EAAW4C,GAAKnB,KAAKoB,IAAIlG,KAAKqD,EAAW4C,GAAK,EAAG,GAsC1D,GA9BKjG,KAAK2F,IACR3F,KAAK2F,EAAqBI,GAEvB/F,KAAK4F,IACR5F,KAAK4F,EAAwBG,GAG3B/F,KAAKmF,IAAcnF,KAAKmG,IAC1BnG,KAAKmG,EAA0BC,QAAQC,QACrCrG,KAAKO,EAASP,KAAKO,EAAO+F,QAAQtG,KAAKC,GAAW,IAEpDD,KAAKmG,EAAwBI,KAAK,SAAAC,GAChCC,EAAKtB,EAAUuB,SACbD,EAAKxG,EACL,CACEwF,IAAKC,EACL5B,MAAO2C,EAAKrB,EACZkB,QAASE,GAEXC,GAEFA,EAAKlG,EAASkG,EAAKtB,EACnBsB,EAAKtB,OAAYwB,EACjBF,EAAKN,OAA0BQ,EAC/BF,EAAKjG,GAAsB,EAC3BiG,EAAKhG,EAAiBgG,EAAKlG,EAAOqG,cAClCH,EAAKb,EAAwBG,KAI7B/F,KAAKO,IACHP,KAAK0D,IACP1D,KAAKgG,GAAehG,KAAKgG,IAGtBhG,KAAK0D,GAAoB1D,KAAKgG,GAAa,CAC9C,IAAIT,EAAMvF,KAAKO,EAAOqG,cAIlBC,EAAa7G,KAAKO,EAAOuG,UAAUvB,EAAMvF,KAAKS,GAE5CsG,EAAY/G,KAAKO,EAAOwG,UAAUF,GAIxC,GAHAA,GAA0BE,EAC1B/G,KAAKS,EAAiB8E,EAAMwB,EAExB/G,KAAKQ,EAAqB,CAC5B,IAAMwG,EAA2B,IAAfH,GAAoB7G,KAAKiH,EAC3CjH,KAAKiH,GAAY,EACjB,IAAMC,EAAYlH,KAAKO,EAAO4G,YAAYnH,KAAKC,EAAS4G,GACxD,GAAIjG,MAAMC,QAAQqG,GAChB,IAAK,IAAIjB,EAAI,EAAGA,EAAIjG,KAAKmD,EAAc8C,IACrCjG,KAAKqD,EAAW4C,GAAKnB,KAAKoB,IAAIlG,KAAKqD,EAAW4C,GAAIiB,EAAUjB,SAG9D,IAAK,IAAIA,EAAI,EAAGA,EAAIjG,KAAKmD,EAAc8C,IACrCjG,KAAKqD,EAAW4C,GAAKnB,KAAKoB,IAAIlG,KAAKqD,EAAW4C,GAAIiB,GAItD,IAAME,EAAcpH,KAAKqF,IAKzB,GAJI2B,GACFhH,KAAKO,EAAO8G,KAAKrH,KAAKC,EAAS4G,GAG7B7G,KAAKC,EAAQL,OAAO,GAAGO,MACzB,IAAK,IAAI+C,EAAQ,EAAGA,EAAQlD,KAAKmD,EAAcD,IACzClD,KAAKqD,EAAWH,KAClBlD,KAAKoE,EAAkBpE,KAAKC,EAAQC,QAAQgD,IAC5ClD,KAAKO,EAAO+G,KAAKtH,KAAKC,EAASiD,IAKrC,GAAIlD,KAAKoC,GAAapC,KAAKoC,EAAUpB,QAAS,CAC5C,IAAMuG,EAAiBxB,EAAY/F,KAAK2F,EAExC,GAAI3F,KAAKoC,EAAUT,kBAAoB3B,KAAKoC,EAAUV,SACpD1B,KAAKoC,EAAUT,mBAAqB4F,UAC3BP,EAAW,CACpB,IAAMQ,EACJxH,KAAKoC,EAAUL,kBACd/B,KAAK0D,EAAmB,EAAI,GACzB+D,EAAazH,KAAKqF,IAAS+B,EAC3BM,GACH5C,KAAK6C,IAAIJ,EAAiBC,GAC3B1C,KAAK6C,IAAIF,EAAaD,GAClBD,EACAE,GAAcD,EAChB1C,KAAK6C,IAAID,IAAU1H,KAAKoC,EAAUJ,gBACpChC,KAAKoC,EAAUR,kBACb5B,KAAKoC,EAAUR,mBAAqB,EAChCkD,KAAKoB,IACH,EACAlG,KAAKoC,EAAUR,kBACb5B,KAAKoC,EAAUJ,iBAEnB8C,KAAK8C,IACH,EACA5H,KAAKoC,EAAUR,kBACb5B,KAAKoC,EAAUJ,iBAIvB0F,EAAQ,GACR1H,KAAKoC,EAAUX,aAAezB,KAAKoC,EAAUnB,eAE7CjB,KAAKoC,EAAUR,mBAAqB8F,EAElC1H,KAAKoC,EAAUR,oBACd5B,KAAKoC,EAAUN,sBAEhB9B,KAAKoC,EAAUX,aAAeqD,KAAKoB,IACjClG,KAAKoC,EAAUnB,cACfjB,KAAKoC,EAAUX,aAAezB,KAAKoC,EAAUjB,aAE/CnB,KAAKU,GAA2B,IAGlCgH,EAAQ,GACR1H,KAAKoC,EAAUX,aAAezB,KAAKoC,EAAUlB,gBAE7ClB,KAAKoC,EAAUR,mBAAqB8F,EAElC1H,KAAKoC,EAAUR,mBACf5B,KAAKoC,EAAUP,oBAEf7B,KAAKoC,EAAUX,aAAeqD,KAAK8C,IACjC5H,KAAKoC,EAAUlB,cACflB,KAAKoC,EAAUX,aAAezB,KAAKoC,EAAUjB,aAE/CnB,KAAKU,GAA2B,UAMrC,CACL,IAAK,IAAIuF,EAAI,EAAGA,EAAIjG,KAAKmD,EAAc8C,IACrCjG,KAAKoE,EAAkBpE,KAAKC,EAAQC,QAAQ+F,IAE9CjG,KAAKQ,EAAsBR,KAAKO,EAAOsH,YAAY,CACjDC,OAAQ9H,KAAKC,EACb4G,WAAYd,EAAY/F,KAAK2F,EAC7BoC,gBAAiBhC,EAAY/F,KAAK4F,IAEhC5F,KAAKQ,IACPR,KAAKO,EAAOyH,QACZhI,KAAKS,EAAiBT,KAAKO,EAAOqG,cAClC5G,KAAKiH,GAAY,EACbjH,KAAKoC,IACPpC,KAAKoC,EAAUT,kBAAoB,KAM7C3B,KAAK2F,EAAqBI,GAOjBnD,KAAK5C,eAMlBsG,QAAA,WAUE,OATAtG,KAAKW,GACH6B,OAAOyF,qBAAqBjI,KAAKW,GACnCX,KAAKW,EAAkC,KACvCX,KAAKO,GAAUP,KAAKO,EAAO+F,QAAQtG,KAAKC,GACxCD,KAAKM,EAAQ2C,QAAQ,SAAAM,GACnBA,EAAEhB,EAAM2F,oBAAoB3E,EAAEd,EAAQc,EAAEb,KAE1C1C,KAAKM,EAAU,cCrab6H,aACJ,aACEnI,KAAKoI,OAAS,GACdpI,KAAKqI,MAAQ,EACbrI,KAAKsI,OAAS,WAGTC,IAAP,SAAWH,EAAQI,GACjB,IAAMC,EAAOzI,MAAQmI,aACVlC,GACT,GAAKwC,EAAKL,OAAOnC,GA2BXuC,GAAqC,mBAAjBA,EAAUvC,IAChCuC,EAAUvC,GAAGA,EAAGwC,EAAKL,OAAOnC,QA5BX,CAkBnB,GAjBAwC,EAAKL,OAAOnC,GAAK,IAAIzD,OAAOkG,MAC5BD,EAAKL,OAAOnC,GAAG0C,OAAS,WACtBF,EAAKH,SACDE,GAAkC,mBAAdA,EAClBC,EAAKG,YACPJ,IAEOA,GAAqC,mBAAjBA,EAAUvC,IACvCuC,EAAUvC,GAAGA,EAAGwC,EAAKL,OAAOnC,IAE1BwC,EAAKpC,SAAWoC,EAAKG,aACvBH,EAAKpC,UACLoC,EAAKpC,QAAU,OAKY,SAA3B+B,EAAOnC,GAAG4C,OAAO,EAAG,GAAe,CACrC,IAAMC,EAAStG,OAAOuG,KAAOvG,OAAOwG,WAAaxG,OAC3CyG,EAAM,IAAIzG,OAAO0G,KAAK,CAACd,EAAOnC,IAAK,CAAEkD,KAAM,kBACjDV,EAAKL,OAAOnC,GAAGmD,IAAMN,EAAOO,gBAAgBJ,QAE5CR,EAAKL,OAAOnC,GAAGmD,IAAMhB,EAAOnC,GAE9BwC,EAAKJ,UA1BT,IAAK,IAAMpC,KAAKmC,IAALnC,GAwCX,OAPIuC,GAAkC,mBAAdA,GAA4BC,EAAKG,YACvDJ,IAEEC,EAAKpC,SAAWoC,EAAKG,aACvBH,EAAKpC,UACLoC,EAAKpC,QAAU,MAEVoC,KAGFT,MAAP,WACE,IAAMS,EAAOzI,MAAQmI,EAIrB,OAHAM,EAAKL,OAAS,GACdK,EAAKJ,MAAQ,EACbI,EAAKH,OAAS,EACPG,KAGFa,UAAP,WACE,OAAQtJ,MAAQmI,GAAcG,UAGzBiB,SAAP,WACE,OAAQvJ,MAAQmI,GAAcE,SAGzBO,SAAP,WACE,IAAMH,EAAOzI,MAAQmI,EACrB,OAAOM,EAAKH,SAAWG,EAAKJ,SAGvBmB,SAAP,SAAgBC,GACd,MAA8B,iBAAhBA,EACVA,GACCzJ,MAAQmI,GAAcC,OAAOqB,MAG7BC,gBAAP,WACE,IAAMjB,EAAOzI,MAAQmI,EACrB,QAAOM,EAAKG,YAER,IAAIxC,QAAQ,SAACC,EAASsD,GACpBlB,EAAKpC,QAAUA,UAKzB8B,EAAaC,OAAS,GACtBD,EAAaE,MAAQ,EACrBF,EAAaG,OAAS,MC3FhBsB,aACJ,WAAYC,GACV7J,KAAK8J,EAAS,GACd9J,KAAK+J,EAAc,GACnB/J,KAAKgK,EAAS,EACdhK,KAAKiK,EAAY,EACjBjK,KAAKkK,OACWvD,IAAdkD,EACI,GACAjJ,MAAMC,QAAQgJ,GACdA,EACA,CAACA,8BAGTM,WAAA,SAAWC,GAET,OADApK,KAAKqK,gBAAgBD,GACdA,KAGTE,YAAA,SAAYC,GAEV,OADAvK,KAAKwK,kBAAkBD,GAChBA,KAGTF,gBAAA,SAAgBD,GACd,IAAIK,EAAMzK,KAAK8J,EAAO1G,OAClBsH,EAAK1K,KAAKiK,EACdjK,KAAK8J,EAAOY,GAAMN,EAClBpK,KAAK+J,EAAYW,GAAyB,mBAAZN,EAC1BK,IAAQC,GACVD,IAGF,IADA,IAAIE,EAAW3K,KAAKiK,EAAY,EACzBU,IAAaF,GAAOzK,KAAK8J,EAAOa,IACrCA,IAMF,OAJA3K,KAAKiK,EAAYU,EACb3K,KAAKgK,EAASU,IAChB1K,KAAKgK,EAASU,GAETA,KAGTF,kBAAA,SAAkBD,cACZE,EAAMzK,KAAK8J,EAAO1G,OAEtB,OAAIqH,IADKzK,KAAKiK,GAEZjK,KAAK8J,EAAS9J,KAAK8J,EAAOc,OAAOL,GACjCvK,KAAKiK,EAAYjK,KAAK8J,EAAO1G,OAC7BmH,EAAgBtH,QAAQ,SAACM,EAAGsH,GAC1BxJ,EAAK0I,EAAYU,EAAMI,GAAkB,mBAANtH,IAE9B3C,MAAM0C,KAAK,CAAEF,OAAQmH,EAAgBnH,QAAU,SAACG,EAAGsH,UAAMA,EAAIJ,KAE7DF,EAAgBlI,IAAI,SAAA+H,UAAW/I,EAAK8I,WAAWC,QAI1DU,QAAA,SAAQC,GACN,YAAYjB,EAAOiB,MAGrBC,eAAA,SAAeZ,GACb,YAAYN,EAAOmB,QAAQb,MAG7Bc,gBAAA,SAAgBd,GACd,IAAMW,EAAY/K,KAAKgL,eAAeZ,GAClCW,GAAa,GACf/K,KAAKmL,WAAWJ,MAIpBI,WAAA,SAAWJ,GACT,IAAIN,EAAMzK,KAAK8J,EAAO1G,OAAS,EAC/B,GAAIqH,EAAM,GAAKM,IAAcN,EAAK,CAEhC,IADAzK,KAAK8J,EAAOiB,GAAa,KAClBN,IAAQzK,KAAK8J,EAAOW,EAAM,IAC/BA,IAEFzK,KAAK8J,EAAO1G,OAASqH,EACrBzK,KAAK+J,EAAY3G,OAASqH,EAC1BzK,KAAKiK,EAAYnF,KAAK8C,IAAI5H,KAAKiK,EAAWQ,GAC1CzK,KAAKgK,EAASlF,KAAK8C,IAAI5H,KAAKgK,EAAQS,QAEpCzK,KAAK8J,EAAOiB,GAAa,KACzB/K,KAAKiK,EAAYnF,KAAK8C,IAAI5H,KAAKiK,EAAWc,GACtC/K,KAAKgK,IAAWe,IAClB/K,KAAKgK,EAASe,EAAY,MAKhCK,WAAA,SAAWC,GACT,YACe1E,IAAb0E,IACCrL,KAAKkK,EAAW9G,QACjBpD,KAAKkK,EAAWoB,SAASD,MAI7BpI,QAAA,SAAQsI,GACN,IAAIrI,EAAOkH,EACLoB,EAAIxL,KAAK8J,EAAO1G,OACtB,IAAKF,EAAQlD,KAAKgK,EAAQ9G,EAAQsI,EAAGtI,KACnCkH,EAAUpK,KAAK8J,EAAO5G,KAEpBqI,EAAS,CACPrI,MAAAA,EACAkH,QAAAA,EACAqB,WAAYzL,KAAK+J,EAAY7G,GAC7BwI,MAAO1L,UAMfmE,KAAA,SAAKwH,EAAYC,YAAZD,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GAC5B5L,KAAKiD,QACH,qBAAYwI,cAATrB,QACsBjG,KAAKwH,EAAOC,QAIzCvD,MAAA,WAGE,IAFA,IAAIA,EAAQ,EACNmD,EAAIxL,KAAK8J,EAAO1G,OACbF,EAAQlD,KAAKgK,EAAQ9G,EAAQsI,EAAGtI,IACnClD,KAAK8J,EAAO5G,IAAQmF,IAE1B,OAAOA,KAGTwD,MAAA,WACE7L,KAAK8J,EAAS,GACd9J,KAAK+J,EAAc,GACnB/J,KAAKgK,EAAS,EACdhK,KAAKiK,EAAY,QCvIf6B,aACJ,aACE9L,KAAK+L,EAAU,8BAGjBC,SAAA,SAASnC,GAEP,OADA7J,KAAK+L,EAAQ/L,KAAK+L,EAAQ3I,QAAU,IAAIwG,EAAMC,QAClCkC,EAAQ/L,KAAK+L,EAAQ3I,OAAS,MAG5C6I,UAAA,SAAUC,EAAmBrC,YAAnBqC,IAAAA,EAAgB,GACxB,IAAIC,EAAYvL,MAAM0C,KAAK,CAAEF,OAAQ8I,GAAiB,SAAA3I,cAASqG,EAAMC,KAErE,OADA7J,KAAK+L,EAAU/L,KAAK+L,EAAQnB,OAAOuB,GAC5BA,KAGTC,cAAA,SAAcvC,GAEZ,OADA7J,KAAK+L,EAAQ/L,KAAK+L,EAAQ3I,QAAU,IAAIwG,EAAMC,QAClCkC,EAAQ3I,OAAS,KAG/BiJ,gBAAA,SAAgBH,EAAmBrC,uBAAnBqC,IAAAA,EAAgB,GAC9B,IAAMI,EAAS1L,MAAM0C,KACnB,CAAEF,OAAQ8I,GACV,SAAC3I,EAAGsH,UAAMA,EAAIxJ,EAAK0K,EAAQ3I,SAK7B,OAHApD,KAAK+L,EAAU/L,KAAK+L,EAAQnB,OAC1BhK,MAAM0C,KAAK,CAAEF,OAAQ8I,GAAiB,SAAA3I,cAASqG,EAAMC,MAEhDyC,KAGTxB,QAAA,SAAQyB,GACN,YAAYR,EAAQQ,MAGtBtJ,QAAA,SAAQsI,EAAUF,GAChB,IAAIpF,EACEuF,EAAIxL,KAAK+L,EAAQ3I,OACvB,IAAK6C,EAAI,EAAGA,EAAIuF,EAAGvF,IACbjG,KAAK+L,EAAQ9F,GAAGmF,WAAWC,IAC7BrL,KAAK+L,EAAQ9F,GAAGhD,QAAQsI,MAK9BpH,KAAA,SAAKwH,EAAYC,YAAZD,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GAC5B5L,KAAKiD,QACH,qBAAYwI,cAATrB,QACsBjG,KAAKwH,EAAOC,QAIzCvD,MAAA,WACE,YAAY0D,EAAQ3I,UAGtByI,MAAA,WACE7L,KAAK+L,EAAU,kBC5DKS,EAAOC,EAAOC,GACrC,OAAQD,MAAAA,GAAmD,KAAVA,EAAeC,EAAcD,MCIzEE,aACJ,WAAYC,GAER5M,KAAK6M,EADmC,mBAA/BD,EACa,IAAIA,EAEJA,EAIxB5M,KAAK8M,EAAgB,IAAIhB,EAEzB9L,KAAK+M,EAAmB,EAExB/M,KAAKgN,EAAU,KACfhN,KAAKiN,GAAY,EACjBjN,KAAKkN,OAAsBvG,EAC3B3G,KAAKmN,EAAgBhF,EAErBnI,KAAKoN,EAAaZ,EAAOrN,EAAKa,KAAK6M,EAAeQ,WAAY,IAAM,GACpErN,KAAKsN,EAAuBd,EAC1BrN,EAAKa,KAAK6M,EAAeU,qBACzB,KAEFvN,KAAKwN,GAAsBhB,EACzBrN,EAAKa,KAAK6M,EAAeY,oBACzB,+BAIJ7G,YAAA,WACE,OAAOpE,OAAO8C,YAAcA,YAAYC,MAAQC,KAAKD,SAGvDuB,UAAA,SAAUD,GACR,IAAM6G,EAAU1N,KAAKoN,EACjBpN,KAAKoN,EAAapN,KAAKsN,EACvB,IACJ,OAAIzG,EAAa6G,EACRA,EAEF7G,KAGTE,UAAA,SAAUF,GACR,YAAYuG,GAAevG,EAAa7G,KAAKoN,EAAc,KAG7D1G,SAAA,SAASoB,EAAQ6F,EAAWC,cAC1B5N,KAAKgN,EAAUY,EACf5N,KAAKkF,OAAO4C,GACZ,IAAM+F,EAAS1O,EAAKa,KAAK6M,EAAegB,QACpCA,GACF7N,KAAKmN,EAAc5E,IAAIsF,GAEzBzH,QAAQC,QACNrG,KAAK6M,EAAeiB,MAClB9N,KAAK6M,EAAeiB,KAAK,CACvBF,OAAAA,EACA9F,OAAAA,EACAhE,MAAO9D,KACP2N,UAAAA,EACAI,aAAc/N,KAAKmN,KAEvB5G,KAAK,SAAAyH,UAAQ3M,EAAK4L,GAAY,OAGlC/H,OAAA,SAAO4C,cACL9H,KAAKkN,EAAsB,CACzBe,MAAO,EACPC,EAAG,EACHC,EAAG,EACHhO,MAAO2H,EAAO3H,MACdC,OAAQ0H,EAAO1H,OACfgO,aAActG,EAAO3H,MACrBkO,cAAevG,EAAO1H,OACtBkO,YAAa,EACbC,cAAe,CACbL,EAAG,EACHC,EAAG,EACHhO,MAAO2H,EAAO3H,MACdC,OAAQ0H,EAAO1H,QAEjBoO,WAAY,CACVN,EAAG,EACHC,EAAG,EACHhO,MAAO2H,EAAO3H,MACdC,OAAQ0H,EAAO1H,SAGnBJ,KAAK8M,EAAc7J,QAAQ,cAAmBwI,cAATrB,QAEzBlF,OAAO4C,EAAQ9C,EAAKkI,QAKlC5G,QAAA,SAAQwB,GACN,IAAM6F,EACJ3N,KAAK6M,EAAevG,SACpBtG,KAAK6M,EAAevG,QAAQ,CAC1BsH,OAAQ5N,KAAKgN,EACblJ,MAAO9D,KACP8H,OAAAA,EACA2G,aAAczO,KAAK8M,EACnBiB,aAAc/N,KAAKmN,IAGvB,OADAnN,KAAKiN,GAAY,EACVU,KAGT1J,iBAAA,WACE,YAAY4I,KAGd6B,cAAA,gBAAgB5G,IAAAA,OAAqC6G,IAAAA,SACnD,GAAI3O,KAAK6M,EAAe+B,QACtB,YAAY/B,EAAe+B,QAAQ,CACjChB,OAAQ5N,KAAKgN,EACblJ,MAAO9D,KACP8H,OAAAA,EACAjB,aANkBA,WAOlBkB,kBAP8BA,gBAQ9B4G,SAAAA,EACAZ,aAAc/N,KAAKmN,IAGvB,IAAM9I,EAAMyD,EAAO5H,QAAQ,GACrB2O,EACgB,iBAAbF,EACH7J,KAAKoB,IAAI,EAAGyI,EAAW7G,EAAO1H,QAC9B0H,EAAO1H,OACbiE,EAAII,yBAA2B,cAC/BJ,EAAIG,YAAc,EAClBH,EAAIyK,UAAU,EAAG,EAAGhH,EAAO3H,MAAO2H,EAAO1H,QACzCiE,EAAI0K,UAAY,OAChB1K,EAAI2K,SACF,EACAlH,EAAO1H,OAAS,EAAIyO,EAAe,EACnC/G,EAAO3H,MACP0O,GAEFxK,EAAI4K,KAAO,eACX5K,EAAI0K,UAAY,OAChB1K,EAAIE,UAAY,OAChBF,EAAIC,aAAe,SAEnBD,EAAI6K,SACFC,MAAMC,WAAWT,IACbA,EACA,WAAa7J,KAAKC,MAAM,IAAM4J,GAAY,IAC9C,GAAqB,EAAhB7J,KAAKuK,SACVvH,EAAO1H,OAAS,GAAqB,EAAhB0E,KAAKuK,aAI9BxH,YAAA,SAAYyH,GACV,SAAItP,KAAKmN,EAAcvE,aAAc5I,KAAKiN,KAG1CqC,EAAKX,SAAW3O,KAAKmN,EAAc5D,WAC/BvJ,KAAKmN,EAAc7D,YAActJ,KAAKmN,EAAc5D,WACpD,aAEJvJ,KAAK0O,cAAcY,UAIrBC,YAAA,SAAYzH,EAAQjB,EAAY2I,GAC1BxP,KAAK6M,EAAe0C,aACtBvP,KAAK6M,EAAe0C,YAAY,CAC9B3B,OAAQ5N,KAAKgN,EACblJ,MAAO9D,KACPyO,aAAczO,KAAK8M,EACnBhF,OAAAA,EACAjB,WAAAA,EACAkB,gBAAiB/H,KAAK+M,EACtBgB,aAAc/N,KAAKmN,EACnBqC,SAAAA,OAKNrI,YAAA,SAAYW,EAAQjB,GAClB,YAAYgG,EAAe1F,YACvBnH,KAAK6M,EAAe1F,YAAY,CAC9ByG,OAAQ5N,KAAKgN,EACblJ,MAAO9D,KACPyO,aAAczO,KAAK8M,EACnBhF,OAAAA,EACAjB,WAAAA,EACAkB,gBAAiB/H,KAAK+M,EACtBgB,aAAc/N,KAAKmN,IAEN,IAAftG,KAGNQ,KAAA,SAAKS,EAAQjB,GA6BX,GA3BA7G,KAAK+M,GAAoBlG,EAGrBA,EAAa,GAEfA,EAAa7G,KAAK+M,EAClB/M,KAAKgI,QACLhI,KAAK+M,EAAmBlG,GAExB7G,KAAK6M,EAAe4C,SACpBzP,KAAK6M,EAAe4C,SAAWzP,KAAK+M,IAGpClG,GAAc7G,KAAK+M,EAAmB/M,KAAK6M,EAAe4C,QAC1DzP,KAAK+M,EAAmB/M,KAAK6M,EAAe4C,QAE5CzP,KAAK6M,EAAe6C,KAClB1P,KAAK6M,EAAe6C,IAAI,CACtB9B,OAAQ5N,KAAKgN,EACblJ,MAAO9D,KACP8H,OAAAA,EACAjB,WAAAA,EACAkB,gBAAiB/H,KAAK+M,EACtBgB,aAAc/N,KAAKmN,KAIrBnN,KAAKoN,GACP,GAAIvG,GAAc7G,KAAKoN,EAAapN,KAAKwN,GASvC,IAPA,IAAMmC,EACJ7K,KAAK8C,IACH5H,KAAKsN,EACLxI,KAAK8K,OACF/I,EAAa7G,KAAKwN,IAAuBxN,KAAKoN,IAE/C,EACGyC,EAAY,EAAGA,GAAaF,EAAQE,IAC3C7P,KAAKuP,YAAYzH,EAAQ9H,KAAKoN,EAAYyC,IAAcF,QAI5D3P,KAAKuP,YAAYzH,EAAQjB,GAAY,GAGnC7G,KAAK6M,EAAeiD,QACtB9P,KAAK6M,EAAeiD,OAAO,CACzBlC,OAAQ5N,KAAKgN,EACblJ,MAAO9D,KACPyO,aAAczO,KAAK8M,EACnBhF,OAAAA,EACAjB,WAAAA,EACAkB,gBAAiB/H,KAAK+M,EACtBgB,aAAc/N,KAAKmN,IAIvBnN,KAAK8M,EAAc7J,QAAQ,gBAAwByI,IAAAA,MAAOxI,IAAAA,QAAnBuI,cAATrB,QAEd2F,QAAQlJ,IAClB6E,EAAMP,WAAWjI,QAMzBoE,KAAA,SAAKQ,EAAQuD,cACLnL,EAAU4H,EAAO5H,QAAQmL,GAC/BrL,KAAK8M,EAAc7J,QAAQ,gBAAGyI,IAAAA,MAAOtB,IAAAA,QAAqBlH,IAAAA,QAAZuI,WAGxCrB,EAAQ,CACNwD,OAAQnH,EAAKuG,EACblJ,MAAO2C,EACPgI,aAAchI,EAAKqG,EACnBpB,MAAAA,EACA5D,OAAAA,EACA5H,QAAAA,EACA6H,gBAAiBtB,EAAKsG,EACtBgB,aAActH,EAAK0G,KAGrBzB,EAAMP,WAAWjI,GAGnBkH,EAAQ9C,KAAKpH,EAASuG,EAAKyG,IAE5B7B,MAGLrD,MAAA,WACEhI,KAAK+M,EAAmB,EACxB,IAAIT,EAAStM,KAAK6M,EAAe7E,MAC7BhI,KAAK6M,EAAe7E,MAAM,CACxB4F,OAAQ5N,KAAKgN,EACblJ,MAAO9D,KACPyO,aAAczO,KAAK8M,EACnBhF,OAAQ9H,KAAKgN,EAAQnI,YACrBkJ,aAAc/N,KAAKmN,IAErB,IAAIrB,EAER,GAAIlL,MAAMC,QAAQyL,GAAS,CACzB,IAAM0D,EAAS1D,EACfA,EAAS,IAAIR,EACbkE,EAAO/M,QAAQ,SAAAM,GACb+I,EAAON,WAAW1B,YAAY/G,KAI9B+I,IACFtM,KAAK8M,EAAgBR,SCxTN2D,cACnB,WAAYrD,SAA4B,OACtCvL,cAAMuL,UACDsD,GAAkB,KACvB7O,EAAK8O,GAAiB,KACtB9O,EAAK+O,IAAqB,EAC1B/O,EAAKgP,GAAgBhP,EAAKwL,EAAe3I,iDAG3C0C,YAAA,WACE,IAAIA,cAAoBA,uBACxB,GAAI5G,KAAKqQ,GAAe,CACtB,IAAMC,EAGkC,KAFrCtQ,KAAKqQ,GAAcE,MAChBvQ,KAAKqQ,GAAcG,SACnBxQ,KAAKqQ,GAAczJ,aAEzB,GAAI5G,KAAKoQ,GAAoB,CAC3B,GAA6B,OAAzBpQ,KAAKkQ,GAGP,OAFAlQ,KAAKkQ,GAAkBtJ,EACvB5G,KAAKmQ,GAAiBG,EACfA,EAEP,GAAoD,YAAhDtQ,KAAKqQ,GAAcI,WAAWC,cAA6B,CAC7D,GAAIJ,IAAqBtQ,KAAKmQ,GAC5B,YACOA,GACLrL,KAAK8C,IAAI,IAAKhB,EAAc5G,KAAKkQ,OAGnCI,EAAmBtQ,KAAKmQ,GAAiB,KACzCG,EAAmBtQ,KAAKmQ,IACxBvJ,EAAc5G,KAAKkQ,GAAkB,IAKrC,OAHAlQ,KAAKkQ,GACHlQ,KAAKkQ,IAAmBI,EAAmBtQ,KAAKmQ,IAClDnQ,KAAKmQ,GAAiBG,OACVH,GAAiBvJ,EAAc5G,KAAKkQ,GAKpD,OAFAlQ,KAAKkQ,GAAkBtJ,EACvB5G,KAAKmQ,GAAiBG,OACVH,GAGd,OAAOG,EAGT,OAAO1J,KAIXE,UAAA,SAAUD,GACR,OAAOA,KAGTE,UAAA,SAAUF,GACR,YAGFH,SAAA,SAASoB,EAAQ6F,EAAWC,GAY1B,OAVI5N,KAAKqQ,KAEwB,mBAApBM,kBACT3Q,KAAKqQ,GAAcI,WAAa,IAAIE,gBACpC3Q,KAAKoQ,IAAqB,GAE5BpQ,KAAKqQ,GAAcO,QAAU,OAC7B5Q,KAAKqQ,GAAcQ,oBAGRnK,mBAASoB,EAAQ6F,EAAWC,MAG3C/F,YAAA,SAAYyH,GACV,IAAIhH,cAAeT,sBAAYyH,GAE/B,GAAIhH,GAAUtI,KAAKqQ,GAAe,CAChC,KACIrQ,KAAKqQ,GAAcS,YAAc9Q,KAAKqQ,GAAcU,kBAItD,OAFAzB,EAAKX,SAAW,oBAChB3O,KAAK0O,cAAcY,MAGnB,IAAI0B,EAAchR,KAAKqQ,GAAclM,OACjC6M,GACFA,QAAkB,SAAA1O,OAEftC,KAAK6M,EAAe4C,SAAWzP,KAAKqQ,GAAcG,SAAW,IAChExQ,KAAK6M,EAAe4C,QAAwC,IAA9BzP,KAAKqQ,GAAcG,UAGnDlB,EAAKX,SAAW,gBAChB3O,KAAK0O,cAAcY,GAIvB,OAAOhH,MAnG6BqE,GCsBxC,SAASsE,IACPjR,KAAKgI,QAGPiJ,EAAUC,UAAUlJ,MAAQ,WAE1B,OADAhI,KAAKmR,EAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,SAItBF,EAAUC,UAAUE,SAAW,SAASC,GACtC,IACIC,EAAMtR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAErDI,EAAMvR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GACrDK,EAAMxR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAErDM,EAAKzR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAChEO,EAAK1R,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAQpE,OANAnR,KAAKmR,EAAE,GATGnR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAAKnR,KAAKmR,EAAE,GAAKE,EAAOF,EAAE,GAUzDnR,KAAKmR,EAAE,GAAKG,EACZtR,KAAKmR,EAAE,GAAKI,EACZvR,KAAKmR,EAAE,GAAKK,EACZxR,KAAKmR,EAAE,GAAKM,EACZzR,KAAKmR,EAAE,GAAKO,QAIdT,EAAUC,UAAUS,OAAS,WAC3B,IAAIC,EAAI,GAAK5R,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,IAEpDU,GAAM7R,KAAKmR,EAAE,GAAKS,EAClBE,GAAM9R,KAAKmR,EAAE,GAAKS,EAClBG,EAAK/R,KAAKmR,EAAE,GAAKS,EACjBI,EAAKJ,GAAK5R,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,IACrDc,EAAKL,GAAK5R,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,IAOzD,OANAnR,KAAKmR,EAAE,GANEnR,KAAKmR,EAAE,GAAKS,EAOrB5R,KAAKmR,EAAE,GAAKU,EACZ7R,KAAKmR,EAAE,GAAKW,EACZ9R,KAAKmR,EAAE,GAAKY,EACZ/R,KAAKmR,EAAE,GAAKa,EACZhS,KAAKmR,EAAE,GAAKc,QAIdhB,EAAUC,UAAUgB,OAAS,SAASC,GACpC,IAAI/S,EAAI0F,KAAKsN,IAAID,GACbE,EAAIvN,KAAKwN,IAAIH,GAEbb,EAAMtR,KAAKmR,EAAE,GAAK/R,EAAIY,KAAKmR,EAAE,GAAKkB,EAClCd,EAAMvR,KAAKmR,EAAE,IAAMkB,EAAIrS,KAAKmR,EAAE,GAAK/R,EACnCoS,EAAMxR,KAAKmR,EAAE,IAAMkB,EAAIrS,KAAKmR,EAAE,GAAK/R,EAKvC,OAJAY,KAAKmR,EAAE,GAJGnR,KAAKmR,EAAE,GAAK/R,EAAIY,KAAKmR,EAAE,GAAKkB,EAKtCrS,KAAKmR,EAAE,GAAKG,EACZtR,KAAKmR,EAAE,GAAKI,EACZvR,KAAKmR,EAAE,GAAKK,QAIdP,EAAUC,UAAUqB,UAAY,SAASrE,EAAGC,GAG1C,OAFAnO,KAAKmR,EAAE,IAAMnR,KAAKmR,EAAE,GAAKjD,EAAIlO,KAAKmR,EAAE,GAAKhD,EACzCnO,KAAKmR,EAAE,IAAMnR,KAAKmR,EAAE,GAAKjD,EAAIlO,KAAKmR,EAAE,GAAKhD,QAI3C8C,EAAUC,UAAUsB,MAAQ,SAASC,EAAIC,GAKvC,OAJA1S,KAAKmR,EAAE,IAAMsB,EACbzS,KAAKmR,EAAE,IAAMsB,EACbzS,KAAKmR,EAAE,IAAMuB,EACb1S,KAAKmR,EAAE,IAAMuB,QAIfzB,EAAUC,UAAUyB,eAAiB,SAASC,EAAIC,GAChD,IAAI3E,EAAI0E,EAIR,MAAO,CAFPA,EAAK1E,EAAIlO,KAAKmR,EAAE,GADR0B,EACiB7S,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,GAC5C0B,EAAK3E,EAAIlO,KAAKmR,EAAE,GAFR0B,EAEiB7S,KAAKmR,EAAE,GAAKnR,KAAKmR,EAAE,KAI9CF,EAAUC,UAAU4B,MAAQ,WAC1B,IAAIC,EAAI,IAAI9B,EAEZ,OADA8B,EAAE5B,EAAInR,KAAKmR,EAAE6B,MAAM,GACZD,OCzGYE,cACnB,0CAAe3D,2BAAAA,kBAAM,OACnBjO,+BAASiO,WACJ4D,GAAa,KAClB7R,EAAK8R,GAAmB,KACxB9R,EAAK+R,IAAM,CACTC,KAAM,EACNnF,EAAG,EACHC,EAAG,uCAIPmF,GAAA,WACE,OAAKtT,KAAKgN,GAELhN,KAAKkT,KACRlT,KAAKkT,GAAalT,KAAKuT,GAAkBvT,KAAKoT,KAC9CpT,KAAKmT,GAAmB,WAEdD,QANkBjC,KAShCsC,GAAA,SAAkBH,GAChB,IAAMI,EAAKxT,KAAKgN,EAAQtI,WAAa,EAC/B+O,EAAKzT,KAAKgN,EAAQrI,YAAc,EAChC6N,EAAQxS,KAAKgN,EAAQpI,WAAa,EAAI4O,EAAKC,EACjD,WAAWxC,GACRsB,UAAUiB,EAAIC,GACdjB,MAAMA,EAAOA,GACbA,MAAMY,EAAIC,KAAMD,EAAIC,MACpBd,WAAWa,EAAIlF,GAAIkF,EAAIjF,MAG5BjJ,OAAA,SAAO4C,cACL9H,KAAKkT,GAAa,KAClBlT,KAAKmT,GAAmB,KACxBnT,KAAKkN,EAAsB,CACzBe,MAAO,EACPC,GAAI,EACJC,GAAI,EACJhO,MAAO,EACPC,OAAQ,EACRgO,aAActG,EAAO3H,MACrBkO,cAAevG,EAAO1H,OACtBkO,YAAaxG,EAAO3H,MAAQ2H,EAAOlI,OAAO,GAAG0B,aAXlC,MAaItB,KAAK2S,eAAe,EAAG,EAAG,GAApCe,OAAIC,SACM3T,KAAK2S,eAAe7K,EAAO3H,MAAO2H,EAAO1H,OAAQ,GAClEJ,KAAKkN,EAAoBqB,cAAgB,CACvCL,EAAGwF,EACHvF,EAAGwF,EACHxT,WAAYuT,EACZtT,YAAauT,GAEf,IAAMC,EAAkB5T,KAAKuT,GAAkB,CAAErF,EAAG,EAAGC,EAAG,EAAGkF,KAAM,IAAK1B,WACrDiC,EAAgBjB,eAAe,EAAG,EAAG,GAAjDkB,OAAKC,SACOF,EAAgBjB,eAAe7K,EAAO3H,MAAO2H,EAAO1H,OAAQ,GAC/EJ,KAAKkN,EAAoBsB,WAAa,CACpCN,EAAG2F,EACH1F,EAAG2F,EACH3T,WAAa0T,EACbzT,YAAc0T,GAEhB9T,KAAKkN,EAAoBkG,IAAMpT,KAAKoT,IACpCpT,KAAK8M,EAAc7J,QAAQ,cAAmBwI,cAATrB,QAEzBlF,OAAO4C,EAAQ9C,EAAKkI,QAKlCyF,eAAA,SAAezE,EAAGC,EAAGqE,GAMnB,gBANmBA,IAAAA,EAAQxS,KAAKkN,EAAoBoB,aAC/CtO,KAAKmT,KACRnT,KAAKmT,GAAmBnT,KAAKsT,KAC1BR,QACAnB,eAEOwB,GAAiBR,eAAezE,EAAIsE,EAAOrE,EAAIqE,MAG7DlL,KAAA,SAAKQ,EAAQuD,GACX,IAAMhH,EAAMyD,EAAO5H,QAAQmL,GAC3BhH,EAAI0P,OAEJ1P,EAAI2P,mBAAJ3P,EAAoBrE,KAAKsT,KAAenC,GAExC8C,YAAM3M,eAAKQ,EAAQuD,GACnBhH,EAAI6P,cAvF+BvH,GCDlBwH,cACnB,0CAAe7E,2BAAAA,kBAAM,OACnBjO,+BAASiO,WACJ4D,GAAa,KAClB7R,EAAK8R,GAAmB,yCAG1BG,GAAA,WACE,IAAKtT,KAAKgN,EAAS,WAAWiE,UAE9B,IAAKjR,KAAKkT,GAAY,CACpB,IAAMM,EAAKxT,KAAKgN,EAAQtI,WAAa,EAC/B+O,EAAKzT,KAAKgN,EAAQrI,YAAc,EAChC6N,EAAQxS,KAAKgN,EAAQpI,WAAa,EAAI4O,EAAKC,EAEjDzT,KAAKkT,IAAa,IAAIjC,WAAYsB,UAAUiB,EAAIC,GAAIjB,MAAMA,EAAOA,GACjExS,KAAKmT,GAAmB,KAE1B,YAAYD,MAGdhO,OAAA,SAAO4C,cACL9H,KAAKkT,GAAa,KAClBlT,KAAKmT,GAAmB,KACxBnT,KAAKkN,EAAsB,CACzBe,MAAO,EACPC,GAAI,EACJC,GAAI,EACJhO,MAAO,EACPC,OAAQ,EACRgO,aAActG,EAAO3H,MACrBkO,cAAevG,EAAO1H,OACtBkO,YAAaxG,EAAO3H,MAAQ2H,EAAOlI,OAAO,GAAG0B,aAXlC,MAaItB,KAAK2S,eAAe,EAAG,EAAG,GAApCe,OAAIC,SACM3T,KAAK2S,eAAe7K,EAAO3H,MAAO2H,EAAO1H,OAAQ,GAClEJ,KAAKkN,EAAoBsB,WAAaxO,KAAKkN,EAAoBqB,cAAgB,CAC7EL,EAAGwF,EACHvF,EAAGwF,EACHxT,WAAYuT,EACZtT,YAAauT,GAGf3T,KAAK8M,EAAc7J,QAAQ,cAAmBwI,cAATrB,QAEzBlF,OAAO4C,EAAQ9C,EAAKkI,QAKlCyF,eAAA,SAAezE,EAAGC,EAAGqE,GAMnB,gBANmBA,IAAAA,EAAQxS,KAAKkN,EAAoBoB,aAC/CtO,KAAKmT,KACRnT,KAAKmT,GAAmBnT,KAAKsT,KAC1BR,QACAnB,eAEOwB,GAAiBR,eAAezE,EAAIsE,EAAOrE,EAAIqE,MAG7DlL,KAAA,SAAKQ,EAAQuD,GACX,IAAMhH,EAAMyD,EAAO5H,QAAQmL,GAC3BhH,EAAI0P,OAEJ1P,EAAI2P,mBAAJ3P,EAAoBrE,KAAKsT,KAAenC,GAExCiD,YAAM9M,eAAKQ,EAAQuD,GACnBhH,EAAI6P,cAlEoCjE,GCGvBoE,cACnB,0CAAe/E,2BAAAA,kBAAM,OACnBjO,+BAASiO,WACJhP,EAAU,GACfe,EAAKiT,UAAYxU,OAAOC,OACtB,GACA,CACEwU,QAAS,GACTC,QAAS,GACTC,WAAY,IACZC,MAAO,EACPC,gBAAgB,EAChBC,gBAAgB,EAChB5T,SAAS,EACT6T,YAAY,EACZC,0BAA2B,IAC3BpI,aAAa,GAEfvN,EAAKkC,EAAKwL,EAAeuG,MAAQ,IAE9B/R,EAAKwL,EAAekI,QACvB1T,EAAKwL,EAAekI,MAAQ,cAE9B1T,EAAK2T,MAAQ,CACX9G,EAAG7M,EAAKiT,UAAUW,UAAY,EAC9B9G,EAAG9M,EAAKiT,UAAUY,UAAY,EAC9B7B,KAAMhS,EAAKiT,UAAUa,aAAe,GAGtC9T,EAAK+T,GAAe,CAClBC,IAAM,EACNC,IAAM,EACNC,GAAK,EACLC,GAAK,EACLC,GAAI,EACJC,GAAI,GAGNrU,EAAKsU,GAAY,uCAGnBC,UAAA,WAEE,OADA5V,KAAKsU,UAAUtT,SAAU,UAI3B6U,WAAA,WAEE,OADA7V,KAAKsU,UAAUtT,SAAU,UAI3B8U,SAAA,WAME,OALA9V,KAAKgV,MAAQ,CACX9G,EAAG,EACHC,EAAG,EACHkF,KAAM,WAKV0C,SAAA,SAASrB,GAEP,OADA1U,KAAKsU,UAAUI,MAAQA,UAIzBsB,eAAA,SAAeC,GAGb,OAFAjW,KAAK2V,GAAY,GACjB3V,KAAKsU,UAAU5H,YAAcuJ,UAI/BC,cAAA,SAAcxC,EAAIC,EAAIwC,EAAIC,GASxB,OARApW,KAAKoV,GAAe,CAClBC,GAAK3B,EACL4B,GAAK3B,EACL4B,GAAKY,EACLX,GAAKY,EACLX,GAAIU,EAAKzC,EACTgC,GAAIU,EAAKzC,WAKbjN,SAAA,SAASoB,EAAQ6F,EAAWC,GAI1B,OAHI5N,KAAKsU,UAAUK,gBACjB3U,KAAKqW,GAAmBvO,EAAOlI,OAAO,gBAE3B8G,mBAASoB,EAAQ6F,EAAWC,MAG3CtH,QAAA,SAAQwB,GAIN,OAHI9H,KAAKsU,UAAUK,gBACjB3U,KAAKsW,iBAEMhQ,kBAAQwB,MAGvByO,cAAA,WACE,IAAMC,EAAIxW,KAAKsU,UAAUI,OAAS,EAClC,OACE5P,KAAK6C,IAAI3H,KAAKgV,MAAM9G,EAAIlO,KAAKoT,IAAIlF,IAAMuI,OAAOC,QAAUF,GACxD1R,KAAK6C,IAAI3H,KAAKgV,MAAM7G,EAAInO,KAAKoT,IAAIjF,IAAMsI,OAAOC,QAAUF,GACxD1R,KAAK6C,IAAI3H,KAAKgV,MAAM3B,KAAOrT,KAAKoT,IAAIC,OAASoD,OAAOC,QAAUF,KAIlEjH,YAAA,SAAYzH,EAAQjB,EAAY2I,GAe9B,OAdIxP,KAAKsU,UAAUI,OAAS1U,KAAKuW,kBAC/BvW,KAAKoT,IAAIlF,IAAMlO,KAAKgV,MAAM9G,EAAIlO,KAAKoT,IAAIlF,GAAKlO,KAAKsU,UAAUI,MAC3D1U,KAAKoT,IAAIjF,IAAMnO,KAAKgV,MAAM7G,EAAInO,KAAKoT,IAAIjF,GAAKnO,KAAKsU,UAAUI,MAC3D1U,KAAKoT,IAAIC,OAASrT,KAAKgV,MAAM3B,KAAOrT,KAAKoT,IAAIC,MAAQrT,KAAKsU,UAAUI,MAChElF,IACFxP,KAAKkN,EAAoBkG,IAAMpT,KAAKoT,IAChCpT,KAAKsU,UAAUO,WACjB8B,YAAMzR,iBAAO4C,IAEb9H,KAAKkT,GAAa,KAClBlT,KAAKmT,GAAmB,oBAIjB5D,sBAAYzH,EAAQjB,EAAY2I,MAG/CnI,KAAA,SAAKS,EAAQjB,GACX,IAAM+P,cAAYvP,eAAKS,EAAQjB,GAU/B,OATK7G,KAAKsU,UAAUI,OAAS1U,KAAKuW,kBAChCvW,KAAKoT,IAAMtT,OAAOC,OAAO,GAAIC,KAAKgV,OAC9BhV,KAAKsU,UAAUO,WACjB8B,YAAMzR,iBAAO4C,IAEb9H,KAAKkT,GAAa,KAClBlT,KAAKmT,GAAmB,OAGrByD,KAGT1R,OAAA,SAAO4C,GACL6O,YAAMzR,iBAAO4C,GACb9H,KAAK6W,eAGPR,GAAA,SAAmBjM,cACjBpK,KAAKM,EAAU,CACb,CAAC,CAAC,aAAc,aAAcN,KAAK8W,IACnC,CAAC,CAAC,WAAY,WAAY9W,KAAK+W,IAC/B,CAAC,CAAC,kBAAmB,YAAa/W,KAAKgX,IACvC,CAAC,CAAC,YAAa,aAAchX,KAAKiX,IAClC,CAAC,CAAC,SAAUjX,KAAKkX,IACjB,CAAC,CAAC,eAAgBlX,KAAKmX,KAEtB9U,IAAI,gBAAU+U,mBACN/U,IAAI,SAAAC,SAAM,CACfC,EAAO6H,EACP3H,EAAQH,EACRI,EAAW0U,EAAKxU,KAAKoC,QAIxBqS,OAAO,SAACC,EAAKC,GAMZ,OALI3W,MAAMC,QAAQ0W,GAChBD,EAAIzU,KAAKvD,MAAMgY,EAAKC,GAEpBD,EAAIzU,KAAK0U,GAEJD,GACN,IAELtX,KAAKM,EAAQ2C,QAAQ,SAAAM,GACnBA,EAAEhB,EAAMqB,iBAAiBL,EAAEd,EAAQc,EAAEb,GAAW,QAIpD4T,GAAA,WACEtW,KAAKM,EAAQ2C,QAAQ,SAAAM,GACnBA,EAAEhB,EAAM2F,oBAAoB3E,EAAEd,EAAQc,EAAEb,GAAW,KAErD1C,KAAKM,EAAU,MAGjB6W,GAAA,SAAc7U,GACZA,EAAEsS,oBAGJ4C,GAAA,SAAkBlV,GAChB,IAAImV,EAMJ,GALInV,EAAEmV,SAAWnV,EAAEmV,QAAQrU,OAAS,EAClCqU,EAAUnV,EAAEoV,cACHpV,EAAEqV,gBAAkBrV,EAAEqV,eAAevU,OAAS,IACvDqU,EAAUnV,EAAEqV,gBAEVF,EAAS,CACX,IAAMG,EAAOtV,EAAEuV,OAAOC,wBAChB1U,EAASqU,EAAQrU,OAEvB,MAAO,EADPqU,EAAU7W,MAAM0C,KAAKmU,IAEXJ,OAAO,SAACU,EAAKxU,UAAMwU,EAAMxU,EAAEyU,OAAO,GAAK5U,EAASwU,EAAKK,KAC7DR,EAAQJ,OAAO,SAACU,EAAKxU,UAAMwU,EAAMxU,EAAE2U,OAAO,GAAK9U,EAASwU,EAAKO,KAGjE,QAAkBxR,IAAdrE,EAAE8V,QAAuB,CAC3B,IAAMR,EAAOtV,EAAEuV,OAAOC,wBACtB,MAAO,CAACxV,EAAE+V,QAAUT,EAAKK,KAAM3V,EAAEgW,QAAUV,EAAKO,KAElD,MAAO,CAAC7V,EAAE8V,QAAS9V,EAAEiW,YAGvBC,GAAA,SAAgBlW,GACd,YAAYgS,UAAU5H,YAClBpK,EAAEmW,MACAnW,EAAEmW,MAAQ,EACVnW,EAAEoW,QAAU,EACd,KAGN5B,GAAA,SAAWxU,GACLtC,KAAKsU,UAAUM,gBAAgBtS,EAAEsS,iBADzB,MAEK5U,KAAKwX,GAAkBlV,GAAjCqW,OAAIC,OACL3S,EAAIjG,KAAKwY,GAAgBlW,GAW/B,GAVAtC,KAAK2V,GAAU1P,GAAKnG,OAAOC,OAAO,GAAIC,KAAK2V,GAAU1P,GAAI,CACvDiI,EAAGyK,EACHxK,EAAGyK,EACHC,GAAK7Y,KAAKgV,MAAM9G,EAChB4K,GAAK9Y,KAAKgV,MAAM7G,EAChB4K,IAAS,EACTC,GAAgB1W,EAAEmV,SAAWnV,EAAEmV,QAAQrU,QAAW,EAClD6V,QAAWtS,EACXuS,GAAY1T,KAAKD,QAEfvF,KAAK6M,EAAesM,UAAW,OAClBnZ,KAAK2S,eAAegG,EAAIC,GACvC5Y,KAAK6M,EAAesM,UAAU,CAC5BC,MAAO9W,EACP4L,OACAC,OACArK,MAAO9D,KACP4N,OAAQ5N,KAAKgN,EACbe,aAAc/N,KAAKmN,QAIzB4J,GAAA,SAASzU,cACHtC,KAAKsU,UAAUM,gBAAgBtS,EAAEsS,iBACrC,IAAM3O,EAAIjG,KAAKwY,GAAgBlW,GAC1BtC,KAAK2V,GAAU1P,KAClBjG,KAAK2V,GAAU1P,GAAK,IAEtB,IAAMoT,EAAOrZ,KAAK2V,GAAU1P,GAAG8S,GACzBO,EACHhX,EAAEqV,gBAAkBrV,EAAEqV,eAAevU,QAAW,EAC7CmW,EAAezU,KAAKoB,IACxBlG,KAAK2V,GAAU1P,GAAG+S,GAClBM,GAEFtZ,KAAK2V,GAAU1P,GAAG8S,IAAU,EAC5B/Y,KAAK2V,GAAU1P,GAAG+S,IAAiBM,EAdzB,MAgBOtZ,KAAKwX,GAAkBlV,GAAjCqW,OAAIC,OACX,GAAI5Y,KAAK6M,EAAe2M,QAAS,OAChBxZ,KAAK2S,eAAegG,EAAIC,GACvC5Y,KAAK6M,EAAe2M,QAAQ,CAC1BJ,MAAO9W,EACP4L,OACAC,OACArK,MAAO9D,KACP4N,OAAQ5N,KAAKgN,EACbe,aAAc/N,KAAKmN,IAIvB,GAAKkM,KAAQE,EAAe,GAI5B,GACE/T,KAAKD,MAAQvF,KAAK2V,GAAU1P,GAAGiT,GAtRnB,KAuRZpU,KAAK6C,IAAI3H,KAAK2V,GAAU1P,GAAGiI,EAAIyK,GAAM,GACrC7T,KAAK6C,IAAI3H,KAAK2V,GAAU1P,GAAGkI,EAAIyK,GAAM,IACpC3S,EACD,OACejG,KAAK2S,eAAegG,EAAIC,GAAhC1K,OAAGC,OACNnO,KAAK6M,EAAe4M,YAClBzZ,KAAK2V,GAAU1P,GAAGyT,kBACpBC,aAAa3Z,KAAK2V,GAAU1P,GAAGyT,kBAC/B1Z,KAAK2V,GAAU1P,GAAGyT,sBAAmB/S,EACrC3G,KAAK6M,EAAe4M,YAAY,CAC9BL,MAAO9W,EACP4L,EAAAA,EACAC,EAAAA,EACArK,MAAO9D,KACP4N,OAAQ5N,KAAKgN,EACbe,aAAc/N,KAAKmN,KAGrBnN,KAAK2V,GAAU1P,GAAGyT,iBAAmBE,WAAW,WAC9CnT,EAAKkP,GAAU1P,GAAGyT,sBAAmB/S,EACrCF,EAAKoG,EAAekI,MAAM,CACxBqE,MAAO9W,EACP4L,EAAAA,EACAC,EAAAA,EACArK,MAAO2C,EACPmH,OAAQnH,EAAKuG,EACbe,aAActH,EAAK0G,KAEpBnN,KAAKsU,UAAUQ,2BAGpB9U,KAAK6M,EAAekI,MAAM,CACxBqE,MAAO9W,EACP4L,EAAAA,EACAC,EAAAA,EACArK,MAAO9D,KACP4N,OAAQ5N,KAAKgN,EACbe,aAAc/N,KAAKmN,YAGdnN,KAAKsU,UAAU5H,cAAgBzG,EAAiB,OAC1CjG,KAAK2S,eAAegG,EAAIC,GAAhC1K,OAAGC,SACOnO,KAAK2S,eACpB3S,KAAK2V,GAAU1P,GAAGiI,EAClBlO,KAAK2V,GAAU1P,GAAGkI,GAFb0L,OAAIC,OAIX9Z,KAAK6M,EAAekN,QAClB/Z,KAAK6M,EAAekN,OAAO,CACzBX,MAAO9W,EACPoR,GAAI5O,KAAK8C,IAAIiS,EAAI3L,GACjByF,GAAI7O,KAAK8C,IAAIkS,EAAI3L,GACjBgI,GAAIrR,KAAKoB,IAAI2T,EAAI3L,GACjBkI,GAAItR,KAAKoB,IAAI4T,EAAI3L,GACjB6L,MAAOH,EACPI,MAAOH,EACPI,IAAKhM,EACLiM,IAAKhM,EACLrK,MAAO9D,WAIfgX,GAAA,SAAU1U,GACR,IAAM2D,EAAIjG,KAAKwY,GAAgBlW,GAC3BtC,KAAK2V,GAAU1P,KAAIjG,KAAK2V,GAAU1P,GAAG8S,IAAU,GAC/C/Y,KAAK6M,EAAeuN,UACtBpa,KAAK6M,EAAeuN,SAAS,CAC3BhB,MAAO9W,EACPwB,MAAO9D,KACP4N,OAAQ5N,KAAKgN,EACbe,aAAc/N,KAAKmN,OAIzB8J,GAAA,SAAW3U,GACLtC,KAAKsU,UAAUM,gBAAgBtS,EAAEsS,iBACrC,IAAM3O,EAAIjG,KAAKwY,GAAgBlW,KACdtC,KAAKwX,GAAkBlV,GAAjCqW,OAAIC,OACX,GAAI5Y,KAAK6M,EAAewN,UAAW,OAClBra,KAAK2S,eAAegG,EAAIC,GACvC5Y,KAAK6M,EAAewN,UAAU,CAC5BjB,MAAO9W,EACP4L,OACAC,OACArK,MAAO9D,KACP4N,OAAQ5N,KAAKgN,EACbe,aAAc/N,KAAKmN,IAGvB,GACGnN,KAAK2V,GAAU1P,IACfjG,KAAK2V,GAAU1P,GAAG8S,KACN,IAAZzW,EAAEmW,OAAgBnW,EAAEmV,SAHvB,CAOA,IAAMjF,EAAQxS,KAAKkN,EAAoBoB,YACvC,GAAItO,KAAKsU,UAAUtT,QAAS,CAC1B,GAAIsB,EAAEmV,SAAWnV,EAAEmV,QAAQrU,QAAU,EAAG,CACtC,IAAMoT,EAAIlU,EAAEmV,QAEN6C,EAAWxV,KAAKyV,MACnB/D,EAAE,GAAGwB,MAAQxB,EAAE,GAAGwB,QAAUxB,EAAE,GAAGwB,MAAQxB,EAAE,GAAGwB,QAC5CxB,EAAE,GAAG0B,MAAQ1B,EAAE,GAAG0B,QAAU1B,EAAE,GAAG0B,MAAQ1B,EAAE,GAAG0B,QAEnD,QAAoCvR,IAAhC3G,KAAK2V,GAAU1P,GAAGgT,GAChBqB,EAAW,IACbta,KAAK2V,GAAU1P,GAAGgT,GAAYqB,EAC9Bta,KAAK2V,GAAU1P,GAAGuU,GAASxa,KAAKgV,MAAM3B,UAEnC,CASL,GARArT,KAAKgV,MAAM3B,KAAOvO,KAAKoB,IACrBlG,KAAKsU,UAAUE,QACf1P,KAAK8C,IACH5H,KAAKsU,UAAUC,QACdvU,KAAK2V,GAAU1P,GAAGuU,GAASF,EAC1Bta,KAAK2V,GAAU1P,GAAGgT,KAGpBjZ,KAAKsU,UAAU5H,YAAa,CAC9B,IAAM+N,EAAaza,KAAKuT,GAAkBvT,KAAKgV,OAAOrD,WACrC8I,EAAW9H,eAC1B3S,KAAK2V,GAAU1P,GAAGiI,EAAIsE,EACtBxS,KAAK2V,GAAU1P,GAAGkI,EAAIqE,GAFjBqH,OAAIC,SAIMW,EAAW9H,eAAegG,EAAKnG,EAAOoG,EAAKpG,GAAjDkI,OACX1a,KAAKgV,MAAM9G,EAAIlO,KAAK2V,GAAU1P,GAAG4S,GAAMgB,OACvC7Z,KAAKgV,MAAM7G,EAAInO,KAAK2V,GAAU1P,GAAG6S,GAAMgB,EAAKY,EAE9C1a,KAAK6W,YAEP,OAGA,GADA7W,KAAK2V,GAAU1P,GAAGgT,QAAYtS,GACzB3G,KAAKsU,UAAU5H,aAAqB,IAANzG,EAAS,CAC1C,IAAMwU,EAAaza,KAAKuT,GAAkBvT,KAAKgV,OAAOrD,WACrC8I,EAAW9H,eAC1B3S,KAAK2V,GAAU1P,GAAGiI,EAAIsE,EACtBxS,KAAK2V,GAAU1P,GAAGkI,EAAIqE,GAFjBqH,OAAIC,SAIMW,EAAW9H,eAAegG,EAAKnG,EAAOoG,EAAKpG,GAAjDkI,OACX1a,KAAKgV,MAAM9G,EAAIlO,KAAK2V,GAAU1P,GAAG4S,GAAMgB,OACvC7Z,KAAKgV,MAAM7G,EAAInO,KAAK2V,GAAU1P,GAAG6S,GAAMgB,EAAKY,EAC5C1a,KAAK6W,aAIX,GACE7W,KAAKsU,UAAU5H,aACT,IAANzG,GACAjG,KAAK6M,EAAe8N,cAElBnV,KAAKD,MAAQvF,KAAK2V,GAAU1P,GAAGiT,GA9arB,KA+aVpU,KAAK6C,IAAI3H,KAAK2V,GAAU1P,GAAGiI,EAAIyK,GAAM,GACrC7T,KAAK6C,IAAI3H,KAAK2V,GAAU1P,GAAGkI,EAAIyK,GAAM,MAErCtW,EAAEmV,SAAgC,IAArBnV,EAAEmV,QAAQrU,QACzB,OACepD,KAAK2S,eAAegG,EAAIC,GAAhC1K,OAAGC,SACOnO,KAAK2S,eACpB3S,KAAK2V,GAAU1P,GAAGiI,EAClBlO,KAAK2V,GAAU1P,GAAGkI,GAFb0L,OAAIC,OAIX9Z,KAAK6M,EAAe8N,WAAW,CAC7BvB,MAAO9W,EACPoR,GAAI5O,KAAK8C,IAAIiS,EAAI3L,GACjByF,GAAI7O,KAAK8C,IAAIkS,EAAI3L,GACjBgI,GAAIrR,KAAKoB,IAAI2T,EAAI3L,GACjBkI,GAAItR,KAAKoB,IAAI4T,EAAI3L,GACjB6L,MAAOH,EACPI,MAAOH,EACPI,IAAKhM,EACLiM,IAAKhM,EACLrK,MAAO9D,YAIbkX,GAAA,SAAY5U,GAEV,GADItC,KAAKsU,UAAUM,gBAAgBtS,EAAEsS,iBACjC5U,KAAKsU,UAAUtT,QAAS,CAC1B,IAAMwR,EAAQxS,KAAKkN,EAAoBoB,cACtBtO,KAAKwX,GAAkBlV,GAAjCqW,OAAIC,SACM5Y,KAAKuT,GAAkBvT,KAAKgV,OAC1CrD,SACAgB,eAAegG,EAAKnG,EAAOoG,EAAKpG,GAF5BqH,OAAIC,OAIX,IADkBxX,EAAEsY,aAA0B,EAAZtY,EAAEuY,QACpB,IAAM,EAAG,CACvB7a,KAAK8a,SADkB,MAEN9a,KAAKuT,GAAkBvT,KAAKgV,OAC1CrD,SACAgB,eAAegG,EAAKnG,EAAOoG,EAAKpG,GAFxBkI,OAGX1a,KAAKgV,MAAM9G,QAAU2L,EACrB7Z,KAAKgV,MAAM7G,GAAKuM,EAAKZ,EACrB9Z,KAAK6W,iBAEL7W,KAAK+a,cAIXD,OAAA,WAKE,OAJA9a,KAAKgV,MAAM3B,KAAOvO,KAAK8C,IACrB5H,KAAKsU,UAAUC,QACfvU,KAAKgV,MAAM3B,KAAOrT,KAAKsU,UAAUG,oBAIrCsG,QAAA,WAME,OALA/a,KAAKgV,MAAM3B,KAAOvO,KAAKoB,IACrBlG,KAAKsU,UAAUE,QACfxU,KAAKgV,MAAM3B,KAAOrT,KAAKsU,UAAUG,YAEnCzU,KAAK6W,oBAGPmE,OAAA,SAAOtH,EAAIC,EAAIwC,EAAIC,GACjB,IAAM5D,EAAQxS,KAAKkN,EAAoBoB,YACjCqD,EAAS3R,KAAKuT,GAAkBvT,KAAKgV,OAAOrD,WAC/BA,EAAOgB,eAAe,EAAG,GAArCkB,OAAKC,SACOnC,EAAOgB,eACxB3S,KAAKgN,EAAQtI,WAAa8N,EAC1BxS,KAAKgN,EAAQrI,YAAc6N,GAIvByI,EAAI9E,EAAKzC,EACTwH,EAAI9E,EAAKzC,EAETiF,EAAKjF,EAAKuH,EAAI,EACdC,QANWtH,GAMEoH,EACbG,QANWtH,GAMEoH,EAKnB,OAJAlb,KAAKgV,MAAM9G,EAJAwF,EAAKuH,EAAI,EAKpBjb,KAAKgV,MAAM7G,EAAIyK,EACf5Y,KAAKgV,MAAM3B,KACTrT,KAAKgV,MAAM3B,KAAOvO,KAAKoB,IAAIpB,KAAK8C,IAAIuT,EAAOC,GAAQ3E,OAAO4E,mBAI9DxE,UAAA,WACE,IAAMlF,EAAS3R,KAAKuT,GAAkBvT,KAAKgV,OAAOrD,WACjCA,EAAOgB,eAAe,EAAG,GAAnCe,OAAIC,SACMhC,EAAOgB,eACtB3S,KAAKgN,EAAQtI,WACb1E,KAAKgN,EAAQrI,aAFRwR,OAAIC,OAgDX,OAzCID,EAAKzC,GAAM1T,KAAKoV,GAAaK,GAC3B/B,EAAK1T,KAAKoV,GAAaC,GACrBc,GAAMnW,KAAKoV,GAAaG,KAC1BvV,KAAKgV,MAAM9G,GAAKlO,KAAKoV,GAAaC,GAAM3B,GAGtCyC,EAAKnW,KAAKoV,GAAaG,KACzBvV,KAAKgV,MAAM9G,GAAKlO,KAAKoV,GAAaG,GAAMY,GAIxCzC,EAAK1T,KAAKoV,GAAaC,GACzBrV,KAAKgV,MAAM9G,GAAKlO,KAAKoV,GAAaC,GAAM3B,EAEpCyC,EAAKnW,KAAKoV,GAAaG,KACzBvV,KAAKgV,MAAM9G,GAAKlO,KAAKoV,GAAaG,GAAMY,GAO1CC,EAAKzC,GAAM3T,KAAKoV,GAAaM,GAC3B/B,EAAK3T,KAAKoV,GAAaE,GACrBc,GAAMpW,KAAKoV,GAAaI,KAC1BxV,KAAKgV,MAAM7G,GAAKnO,KAAKoV,GAAaE,GAAM3B,GAGtCyC,EAAKpW,KAAKoV,GAAaI,KACzBxV,KAAKgV,MAAM7G,GAAKnO,KAAKoV,GAAaI,GAAMY,GAIxCzC,EAAK3T,KAAKoV,GAAaE,GACzBtV,KAAKgV,MAAM7G,GAAKnO,KAAKoV,GAAaE,GAAM3B,EAEpCyC,EAAKpW,KAAKoV,GAAaI,KACzBxV,KAAKgV,MAAM7G,GAAKnO,KAAKoV,GAAaI,GAAMY,YAhjBLnD,GCM3CqI,WAAa,sCAAIhM,2BAAAA,2BAAaiM,EAAejM,IAE/C,MAAe,CACbkM,QAPU,sCAAIlM,2BAAAA,2BAAamM,EAAYnM,IAQvCoM,MALQ,sCAAIpM,2BAAAA,2BAAaqM,EAAUrM,IAMnCsM,KARO,sCAAItM,2BAAAA,2BAAauM,EAASvM,IASjCwM,UARY,sCAAIxM,2BAAAA,2BAAayM,EAAczM,IAS3CgM,WAAAA,YChBmBU,aACnB,WAAYxL,GACVxQ,KAAKwQ,SAAWrR,EAAKqR,GAAY,qBAGnC/K,IAAA,SAAIwW,EAAQC,GAEV,OAAOA,EAAOlc,KAAKwQ,eCPjB2L,aACJ,aAA0B,IACxB,IAAIC,EAAW,qBADFC,2BAAAA,kBAEe,iBAAjBA,EAAU,KACnBD,EAAWC,EAAUC,SAIvBtc,KAAKqc,UAAYA,EAAUha,IAAI,SAAAka,GACxB3b,MAAMC,QAAQ0b,KACjBA,EAAW,CAACA,IAEd,IAAIC,EAAeJ,EAKnB,MAJ2B,iBAAhBG,EAAS,KAClBC,EAAeD,EAASD,SAGnB,CACLG,SAAU,EACV7Q,YAAa4Q,EACbD,SAAUA,EACPla,IAAI,SAAAqa,SACoB,mBAAhBA,EAAQjX,IACQ,iBAAZiX,EACL,IAAIV,EAAKU,GACT,CAAEjX,IAAKiX,GACTA,IAELC,OAAO,SAAAD,SAAkC,mBAAhBA,EAAQjX,MACpCkG,MAAO4Q,EAASlF,OAAO,SAACuF,EAAKF,EAASxZ,GAIpC,MAHuB,iBAAZwZ,IACTE,EAAIF,GAAWxZ,EAAQpD,OAAO+c,KAAKD,GAAKxZ,QAEnCwZ,GACN,IACH5b,SAAS,KAIbhB,KAAK8c,cAAgB,EACrB9c,KAAKgB,SAAU,6BAGjBgH,MAAA,SAAM4D,YAAAA,IAAAA,EAAa,GACjB5L,KAAKqc,UAAUpZ,QAAQ,SAAA8Z,GACrBA,EAAiB/b,SAAU,EAC3B+b,EAAiBN,SAAW,EAC5BM,EAAiBnR,WAAaA,EAC9BmR,EAAiBR,SAAS,IACxBQ,EAAiBR,SAAS,GAAGvU,OAC7B+U,EAAiBR,SAAS,GAAGvU,MAAM4D,KAEvC5L,KAAKgB,SAAU,KAGjBmD,KAAA,SAAKwH,EAAYC,GACf,YADGD,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GACxBD,EAAO,CACT,IAAMqR,EAAIhd,KAAKqc,UAAUhF,OAAO,SAAC2F,EAAGD,GAelC,OAdIA,EAAiBpR,MAAMsR,eAAetR,IACxCqR,GAAI,EACJD,EAAiBN,SAAWM,EAAiBpR,MAAMA,GACnDoR,EAAiB/b,SAAU,EAC3B+b,EAAiBnR,WAAaA,EAC9BmR,EAAiBR,SAASQ,EAAiBN,WACzCM,EAAiBR,SAASQ,EAAiBN,UAAUzU,OACrD+U,EAAiBR,SAASQ,EAAiBN,UAAUzU,SAEvDgV,GACED,EAAiBR,SAASW,KAAK,SAAAC,GAC7B,OAAOA,EAAIhZ,MAAQgZ,EAAIhZ,KAAKwH,EAAOC,MAC/B,EAEHoR,IACN,GAIH,OAHIA,IACFhd,KAAKgB,SAAU,GAEVgc,EAMP,OAJAhd,KAAKqc,UAAUpZ,QACb,SAAA8Z,UAAqBA,EAAiB/b,SAAU,IAElDhB,KAAKgB,SAAU,QAKnBoc,YAAA,SAAYnB,EAAQc,EAAkBlW,GAEpC,IADA,IAAIwW,EAAWxW,EAEbkW,EAAiBR,SAASQ,EAAiBN,WAC3CY,GAAY,GACZ,CAEA,GADAN,EAAiBnR,YAAcyR,EAC3BN,EAAiBnR,WAAa,EAChC,OAAQ,EAQV,IAAiB,KALjByR,EAAWN,EAAiBR,SAASQ,EAAiBN,UAAUhX,IAC9DwW,EACAc,EAAiBnR,aAIjByR,EAAW,WACW,IAAbA,EACT,OAAQ,KACCA,IAAalB,EAASmB,2BAG/B,OAFAP,EAAiB/b,SAAU,EAC3BhB,KAAKgB,SAAU,EACR6F,KACEwW,IAAalB,EAASoB,kBAE/B,OADAR,EAAiB/b,SAAU,EACpB6F,KACEwW,IAAalB,EAASqB,oBAC/B,SAGF,GAAIH,GAAY,IAEdN,EAAiBN,UACdM,EAAiBN,SAAW,GAAKM,EAAiBR,SAASnZ,OAC9D2Z,EAAiBR,SAASQ,EAAiBN,WACzCM,EAAiBR,SAASQ,EAAiBN,UAAUzU,OACrD+U,EAAiBR,SAASQ,EAAiBN,UAAUzU,QACvD+U,EAAiBnR,WAAa,EAGI,IAA9BmR,EAAiBN,UAEnB,OADAM,EAAiB/b,SAAU,EACpBqc,EAIb,OAAOA,KAIT5X,IAAA,SAAIwW,EAAQC,EAAMuB,GAEhB,IAAI5W,EAAaqV,EAKjB,GAJKuB,IACH5W,EAAaqV,EAAOlc,KAAK8c,cACzB9c,KAAK8c,cAAgBZ,IAElBlc,KAAKgB,QACR,OAAO6F,EAKT,IAHA,IAAMzD,EAASpD,KAAKqc,UAAUjZ,OAC1Bsa,EAAc,EACdC,EAAWC,SACN3X,EAAI,EAAGA,EAAI7C,EAAQ6C,IAC1B,GAAIjG,KAAKqc,UAAUpW,GAAGjF,QAAS,CAC7B,IAAMqc,EAAWrd,KAAKod,YACpBnB,EACAjc,KAAKqc,UAAUpW,GACfY,GAEF,IAAiB,IAAbwW,EACF,SAEFM,EAAW7Y,KAAK8C,IAAI+V,EAAUN,QAE9BK,IAGJ,OAAIA,IAAgBta,GAClBpD,KAAKgB,SAAU,EACR6F,GAEF8W,QAIXxB,EAASmB,2BAA6B,gBACtCnB,EAASoB,kBAAoB,OAC7BpB,EAASqB,oBAAsB,SC9K/B,IAIqBK,aACnB,WAAYC,GACV9d,KAAK+d,GAAoB/d,KAAMA,KAAKge,KAAqBF,8BAG3DC,GAAA,SAAoBE,EAAKC,EAAeJ,GACtChe,OAAO+c,KAAKqB,GAAejb,QAAQ,SAAAkb,GACjC,IAAMvM,EAAIsM,EAAcC,GACxBF,EAAIE,GACW,mBAANvM,EACHA,EAAEkM,EAAeK,GAAOL,EAAgBG,GACxCzR,EAAOrN,EAAK2e,EAAeK,IAAQvM,QAI7CwM,GAAA,WACE,MAAO,CAELC,UAAW,SAAC5R,EAAOqR,GACjB,IAAIxR,EAASnN,EAAKsN,GAClB,OAAO7L,MAAMC,QAAQyL,GAAU,IAAI6P,EAAS7P,GAAUA,GAGxDtL,SAAS,MAIbgd,GAAA,WACE,OAAOle,OAAOC,OAAO,GAAIC,KAAKoe,KAAyB,CAErDlQ,EAAG,EACHC,EAAG,EAEHmQ,SAAU,SAAC7R,EAAOqR,GAChB,OAAOtR,EACLrN,EAAKsN,GACLD,EACErN,EAAK2e,EAAeS,kBAzCf,oBA0CL/R,EAAOrN,EAAK2e,EAAeU,kBAAmB,MAKpDC,OAAQ,SAAChS,EAAOqR,GACd,OAAOtR,EAAOrN,EAAKsN,GAAQD,EAAOrN,EAAK2e,EAAetL,OAAQ,KAEhEkM,OAAQ,SAACjS,EAAOqR,GACd,OAAOtR,EAAOrN,EAAKsN,GAAQD,EAAOrN,EAAK2e,EAAetL,OAAQ,KAGhEvE,MAAO,EAEP0Q,mBAAoB,cAEpBC,MAAO,YAKX7O,QAAA,SAAQ8O,GACN,SAAI7e,KAAKqe,YAE4C,IAA/Cre,KAAKqe,UAAU5Y,IAAIzF,KAAM6e,GAAY,KAEvC7e,KAAKgB,SAAU,SAQrBmD,KAAA,SAAKwH,EAAYC,YAAZD,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GACxB5L,KAAKqe,WACPre,KAAKqe,UAAUla,MAAQnE,KAAKqe,UAAUla,KAAKwH,EAAOC,MAItD1G,OAAA,SAAO4C,EAAQgX,OAGfxX,KAAA,SAAKpH,EAAS4e,GACR9e,KAAKgB,UACPd,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAcxE,KAAKiO,MAAQ6Q,EAAmB7Q,MACtD/N,EAAQ6T,OACR7T,EAAQqS,UAAUvS,KAAKkO,EAAGlO,KAAKmO,GAC/BjO,EAAQsS,MAAMxS,KAAKye,OAAQze,KAAK0e,QAChCxe,EAAQ6e,YACR7e,EAAQ6O,UAAY/O,KAAK4e,MACzB1e,EAAQ8e,IACN,EACA,EACA,EACAla,KAAKma,GAAK,EAAIjf,KAAKse,SACT,IAAVxZ,KAAKma,GAAWjf,KAAKse,UACrB,GAEFpe,EAAQgf,OACRhf,EAAQif,YACRjf,EAAQgU,iBC1GOkL,cACnB,WAAYtB,SAAgB,MACI,mBAAnBA,IACTA,EAAiB,CAAEvS,SAAUuS,KAE/Bzc,cAAMyc,UAGDuB,GAAc,EACnBhe,EAAKie,GAAa,sCAGpBtB,GAAA,WACE,OAAOle,OAAOC,OAAO,GAAIC,KAAKoe,KAAyB,CACrD7S,SAAU,SAAAhI,eAAmBoD,WAANpD,EAAkB,aAAWA,QAIxDwM,QAAA,SAAQlJ,GAKN,OAJI7G,KAAKgB,UACPhB,KAAKqf,IAAexY,EACpB7G,KAAKsf,IAAczY,eAERkJ,kBAAQlJ,MAGvBS,KAAA,SAAKpH,EAASqf,GACRvf,KAAKgB,SACPhB,KAAKuL,SAASrL,EAASF,KAAKqf,GAAaE,EAAqBvf,MAEhEA,KAAKsf,GAAa,MA9BgBzB,GCAjB2B,cACnB,WAAY1B,sBACJA,2CAGRE,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAClD/B,OAAQ,QAKZlM,QAAA,SAAQ8O,GAEN,IAAIY,cAAiB1P,kBAAQ8O,GAC3Ba,GAAiB,EAEnB,GAAI1f,KAAKgB,QACP,IAAK,IAAIiF,UAAUgW,OACjByD,EAAiBA,IAAyD,IAAvC1f,KAAKic,OAAOhW,GAAG8J,QAAQ8O,GAI9D,OAAI7e,KAAKqe,UACAoB,GAEHC,IACF1f,KAAKgB,SAAU,GAEV0e,MAIXvb,KAAA,SAAKwH,EAAYC,GAIf,IAAK,IAAI3F,cAJN0F,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GACxB5L,KAAKqe,WACPre,KAAKqe,UAAUla,MAAQnE,KAAKqe,UAAUla,KAAKwH,EAAOC,QAEjCqQ,OACjBjc,KAAKic,OAAOhW,GAAG9B,MAAQnE,KAAKic,OAAOhW,GAAG9B,KAAKwH,EAAOC,MAItD1G,OAAA,SAAO4C,EAAQgX,GACb,IAAK,IAAI7Y,UAAUgW,OACjBjc,KAAKic,OAAOhW,GAAGf,OAAO4C,EAAQgX,MAKlCxX,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,QAAS,CAWhB,IAAK,IAAIiF,KAVLjG,KAAKiO,MAAQ,KACf6Q,EAAqBhf,OAAOC,OAAO,GAAI+e,IACpB7Q,OAASjO,KAAKiO,OAGnC/N,EAAQ6T,OACR7T,EAAQqS,UAAUvS,KAAKkO,EAAGlO,KAAKmO,GAC/BjO,EAAQsS,MAAMxS,KAAKye,OAAQze,KAAK0e,QAChCxe,EAAQgS,OAAOlS,KAAKse,eAEDrC,OACjBjc,KAAKic,OAAOhW,GAAGqB,KAAKpH,EAAS4e,GAE/B5e,EAAQgU,eAhEqB2J,GCEd8B,cACnB,WAAY7B,SAAgB,OAC1Bzc,cAAMyc,UACD8B,IAAmB,EACxBve,EAAKgC,EAAa,sCAGpB2a,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAElD9P,OAAGvH,EACHwH,OAAGxH,EACHxG,WAAOwG,EACPvG,YAAQuG,EACRkZ,iBAAalZ,EACbmZ,kBAAcnZ,EACdoZ,cAAUpZ,EACVqZ,KAAM,SAACvT,EAAOqR,EAAgBmC,UAC5BzT,EACErN,EAAKsN,QACc9F,IAAnBsZ,EAAa/R,QACQvH,IAAnBsZ,EAAa9R,QACUxH,IAAvBsZ,EAAa9f,YACWwG,IAAxBsZ,EAAa7f,SAEnB+G,YAAa,SAACsF,EAAOqR,EAAgBmC,UAAiBzT,EAAOC,GAAO,SAIxEyT,mBAAA,SAAmBpB,GACjB,IAAM7D,EAAI6D,EAAmB1Q,aACvB8M,EAAI4D,EAAmBzQ,cAC7BrO,KAAKmgB,GAAerd,SAASsd,cAAc,UACvCpgB,KAAK6f,aAAe7f,KAAK8f,cAC3B9f,KAAKmgB,GAAahgB,MAAQH,KAAK6f,YAC/B7f,KAAKmgB,GAAa/f,OAASJ,KAAK8f,cACvB9f,KAAK+f,UACd/f,KAAK4f,GAAmB5f,KAAK+f,SAC7B/f,KAAKmgB,GAAahgB,MAAQ2E,KAAKC,MAAM/E,KAAK4f,IAC1C5f,KAAKmgB,GAAa/f,OAAS0E,KAAKC,MAAM/E,KAAK4f,MAE3C5f,KAAKmgB,GAAahgB,MAAQ2E,KAAKC,MAAMkW,EAAIjb,KAAKye,QAC9Cze,KAAKmgB,GAAa/f,OAAS0E,KAAKC,MAAMmW,EAAIlb,KAAK0e,SAEjD1e,KAAKqgB,GAAQrgB,KAAKmgB,GAAaxgB,WAAW,SAG5C2gB,oBAAA,SAAoBxB,IACd9e,KAAKggB,WAAmBrZ,IAAX3G,KAAKkO,KACpBlO,KAAKkO,EAAI4Q,EAAmBvQ,cAAcL,IAExClO,KAAKggB,WAAmBrZ,IAAX3G,KAAKmO,KACpBnO,KAAKmO,EAAI2Q,EAAmBvQ,cAAcJ,IAExCnO,KAAKggB,WAAuBrZ,IAAf3G,KAAKG,SACpBH,KAAKG,MAAQ2e,EAAmBvQ,cAAcpO,QAE5CH,KAAKggB,WAAwBrZ,IAAhB3G,KAAKI,UACpBJ,KAAKI,OAAS0e,EAAmBvQ,cAAcnO,WAInD8E,OAAA,SAAO4C,EAAQgX,GACb,GACE9e,KAAKmgB,IACLngB,KAAK4f,KAAqB5f,KAAK+f,WAC9B/f,KAAK6f,YACN,CACA,IAAMU,EAAgBvgB,KAAKmgB,GAC3BngB,KAAKkgB,mBAAmBpB,GACxB9e,KAAKqgB,GAAM5b,yBAA2B,OACtCzE,KAAKqgB,GAAMG,UACTD,EACA,EACA,EACAA,EAAcpgB,MACdogB,EAAcngB,OACd,EACA,EACAJ,KAAKmgB,GAAahgB,MAClBH,KAAKmgB,GAAa/f,QAEpBJ,KAAKqgB,GAAM5b,yBAA2B,cACtCzE,KAAKqD,EAAa,EAEpBrD,KAAKsgB,oBAAoBxB,GACzB2B,YAAMvb,iBAAO4C,EAAQgX,MAIvBxX,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,QAAS,CACXhB,KAAKmgB,KACRngB,KAAKkgB,mBAAmBpB,GACxB9e,KAAKsgB,oBAAoBxB,IAEvB9e,KAAK+f,UAAY/f,KAAK4f,KAAqB5f,KAAK+f,UAClD/f,KAAKkF,OAAO4Z,GAEd9e,KAAKqD,EAAayB,KAAKoB,IACrBlG,KAAKqD,EAAa,EAClBlE,EAAKa,KAAKmH,YAAajH,EAAS4e,IAElC,IAAM7D,EAAIjb,KAAKG,MACb+a,EAAIlb,KAAKI,OACTsgB,EAAKzF,EAAI,EACTxH,EAAKyH,EAAI,EACTyF,EAAK3gB,KAAKmgB,GAAahgB,MACvBygB,EAAK5gB,KAAKmgB,GAAa/f,OAEzB,GAAIJ,KAAKqD,EAAY,CACnBrD,KAAKqgB,GAAM/b,aAAe,SAC1BtE,KAAKqgB,GAAM9b,UAAY,SACvBvE,KAAKqgB,GAAM7b,YAAc,EACzBxE,KAAKqgB,GAAM5b,yBAA2B,cACtCzE,KAAKqgB,GAAMtM,OAEX,IAAMX,EAAM0L,EAAmB1L,IAC/B,GAAIpT,KAAKggB,MAAQ5M,EAAK,CACpB,IAAMZ,EAAQ1N,KAAKoB,IAAIya,EAAIC,GAAM,EACjC5gB,KAAKqgB,GAAM9N,UAAUoO,EAAK,EAAGC,EAAK,GAClC5gB,KAAKqgB,GAAM7N,MAAMA,EAAOA,GACxBxS,KAAKqgB,GAAM7N,MAAMY,EAAIC,KAAMD,EAAIC,MAC/BrT,KAAKqgB,GAAM9N,WAAWa,EAAIlF,GAAIkF,EAAIjF,GAEpC,IAAK,IAAIlI,UAAUgW,OACjBjc,KAAKic,OAAOhW,GAAGqB,KACbtH,KAAKqgB,GACLrgB,KAAKggB,KACDlgB,OAAOC,OAAO,GAAI+e,EAAoB,CACpC7Q,MAAO,EACPG,aAAcuS,EACdtS,cAAeuS,IAEjB,CACE3S,MAAO,EACPC,EAAG,EACHC,EAAG,EACHhO,MAAOwgB,EACPvgB,OAAQwgB,EACRxS,aAAcuS,EACdtS,cAAeuS,EACfrS,cAAe,CACbL,EAAG,EACHC,EAAG,EACHhO,MAAOwgB,EACPvgB,OAAQwgB,KAKpB5gB,KAAKqgB,GAAMnM,UAGbhU,EAAQ6T,OACR7T,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAcxE,KAAKiO,MAAQ6Q,EAAmB7Q,MACtD/N,EAAQqS,UAAUvS,KAAKkO,EAAIwS,EAAI1gB,KAAKmO,EAAIsF,GACxCvT,EAAQsS,MAAMxS,KAAKye,OAAQze,KAAK0e,QAChCxe,EAAQgS,OAAOlS,KAAKse,UACpBpe,EAAQsgB,UAAUxgB,KAAKmgB,GAAc,EAAG,EAAGQ,EAAIC,GAAKF,GAAKjN,EAAIwH,EAAGC,GAChEhb,EAAQgU,eAjKsBsL,GCAfqB,cACnB,WAAY/C,SACVzc,cAAMyc,EAAerV,MAAQ,UAE7B,IAAIJ,EAAQmE,EAAOrN,EAAK2e,EAAezV,OAAQ,GAC/ChH,EAAK4a,OAAS,GAGd,IAFA,IAAM6E,EAAchD,QAEX7X,EAAI,EAAGA,EAAIoC,EAAOpC,IAAK,CAC9B,IAAI0H,EAAY,GAChB,IAAK,IAAIzK,KAAS4a,EACX,CAAC,OAAQ,QAAS,SAASxS,SAASpI,KAErCyK,EAAUzK,GADyB,mBAA1B4a,EAAe5a,GACL4a,EAAe5a,GAAO6d,KAAKjD,EAAgB7X,GAE3C6X,EAAe5a,IAIxC7B,EAAK4a,OAAOhW,GAAK,IAAI6a,EAAYnT,GAlBT,0BADO6R,GCAhBwB,cACnB,WAAYlD,SAAgB,OAC1Bzc,cAAMyc,UAED8B,IAAmB,sCAG1B5B,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAElD9P,OAAGvH,EACHwH,OAAGxH,EACHxG,WAAOwG,EACPvG,YAAQuG,EACRoZ,cAAUpZ,EACVsa,OAAQ,EACRC,OAAO,EACPrV,OAAO,EACPmU,KAAM,SAACvT,EAAOqR,EAAgBmC,UAC5BzT,EACErN,EAAKsN,QACc9F,IAAnBsZ,EAAa/R,QACQvH,IAAnBsZ,EAAa9R,QACUxH,IAAvBsZ,EAAa9f,YACWwG,IAAxBsZ,EAAa7f,cAKvB8f,mBAAA,SAAmBpB,GACjB,IAAM7D,EAAI6D,EAAmB1Q,aACvB8M,EAAI4D,EAAmBzQ,cAC7BrO,KAAKmgB,GAAerd,SAASsd,cAAc,UACvCpgB,KAAK+f,UACP/f,KAAK4f,GAAmB5f,KAAK+f,SAC7B/f,KAAKmgB,GAAahgB,MAAQ2E,KAAKC,MAAM/E,KAAK4f,IAC1C5f,KAAKmgB,GAAa/f,OAAS0E,KAAKC,MAAM/E,KAAK4f,MAE3C5f,KAAKmgB,GAAahgB,MAAQ2E,KAAKqc,KAAKlG,EAAIjb,KAAKye,QAC7Cze,KAAKmgB,GAAa/f,OAAS0E,KAAKqc,KAAKjG,EAAIlb,KAAK0e,SAEhD1e,KAAKqgB,GAAQrgB,KAAKmgB,GAAaxgB,WAAW,MAC1CK,KAAKqgB,GAAM5b,yBAA2B,cACtCzE,KAAKqgB,GAAM7b,YAAc,KAG3B8b,oBAAA,SAAoBxB,IACd9e,KAAKggB,WAAmBrZ,IAAX3G,KAAKkO,KACpBlO,KAAKkO,EAAI4Q,EAAmBvQ,cAAcL,IAExClO,KAAKggB,WAAmBrZ,IAAX3G,KAAKmO,KACpBnO,KAAKmO,EAAI2Q,EAAmBvQ,cAAcJ,IAExCnO,KAAKggB,WAAuBrZ,IAAf3G,KAAKG,SACpBH,KAAKG,MAAQ2e,EAAmBvQ,cAAcpO,QAE5CH,KAAKggB,WAAwBrZ,IAAhB3G,KAAKI,UACpBJ,KAAKI,OAAS0e,EAAmBvQ,cAAcnO,WAInD8E,OAAA,SAAO4C,EAAQgX,GACb,GAAI9e,KAAKmgB,IAAgBngB,KAAK4f,KAAqB5f,KAAK+f,SAAU,CAChE,IAAMQ,EAAgBvgB,KAAKmgB,GAC3BngB,KAAKkgB,mBAAmBpB,GACxB9e,KAAKqgB,GAAM5b,yBAA2B,OACtCzE,KAAKqgB,GAAMG,UACTD,EACA,EACA,EACAA,EAAcpgB,MACdogB,EAAcngB,OACd,EACA,EACAJ,KAAKmgB,GAAahgB,MAClBH,KAAKmgB,GAAa/f,QAEpBJ,KAAKqgB,GAAM5b,yBAA2B,cAExCzE,KAAKsgB,oBAAoBxB,MAI3BxX,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,QAAS,CACXhB,KAAKmgB,KACRngB,KAAKkgB,mBAAmBpB,GACxB9e,KAAKsgB,oBAAoBxB,IAEvB9e,KAAK+f,UAAY/f,KAAK4f,KAAqB5f,KAAK+f,UAClD/f,KAAKkF,OAAOhF,EAAS4e,GAGvB,IAAMsC,EAAIphB,KAAKiO,MAAQ6Q,EAAmB7Q,MACxCgN,EAAIjb,KAAKG,MACT+a,EAAIlb,KAAKI,OACTihB,EAAUrhB,KAAKmgB,GAAahgB,MAC5BmhB,EAAUthB,KAAKmgB,GAAa/f,OAE1BghB,EAAI,GAAKC,GAAWC,IACtBthB,KAAKqgB,GAAM5b,yBAA2B,OACtCzE,KAAKqgB,GAAM7b,YAAc,EACzBxE,KAAKqgB,GAAMG,UACTtgB,EAAQN,OACR,EACA,EACAM,EAAQN,OAAOO,MACfD,EAAQN,OAAOQ,OACf,EACA,EACAihB,EACAC,GAGEthB,KAAKihB,OAAS,IAChBjhB,KAAKqgB,GAAM5b,yBAA2BzE,KAAK6L,MACvC,cACA,cACJ7L,KAAKqgB,GAAMtR,UAAY,cAAgB/O,KAAKihB,OAAS,IACrDjhB,KAAKqgB,GAAMrR,SAAS,EAAG,EAAGqS,EAASC,IAGrCthB,KAAKuhB,gBAAkBvhB,KAAKuhB,eAAeF,EAASC,EAASxC,GAGzD9e,KAAK6L,OACP3L,EAAQ4O,UAAU9O,KAAKkO,EAAGlO,KAAKmO,EAAG8M,EAAGC,GAEvChb,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAc4c,EACtBlhB,EAAQshB,uBAAyBxhB,KAAKkhB,MACtChhB,EAAQsgB,UACNxgB,KAAKmgB,GACL,EACA,EACAkB,EACAC,EACAthB,KAAKkO,EACLlO,KAAKmO,EACL8M,EACAC,GAEFhb,EAAQshB,uBAAwB,QAI9BxhB,KAAK6L,QACF7L,KAAKkO,IACRlO,KAAKkO,EAAI4Q,EAAmB5Q,GAEzBlO,KAAKmO,IACRnO,KAAKmO,EAAI2Q,EAAmB3Q,GAEzBnO,KAAKG,QACRH,KAAKG,MAAQ2e,EAAmB3e,OAE7BH,KAAKI,SACRJ,KAAKI,OAAS0e,EAAmB1e,QAEnCF,EAAQ4O,UAAU9O,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKG,MAAOH,KAAKI,aA/JrByd,GCEhCnV,cACJ,WAAYoV,sBACJA,2CAGRE,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAElDyD,MAAO,SAAAle,UAAK4E,EAAaqB,SAASrK,EAAKoE,KAEvCkZ,SAAU/T,EAAMgZ,OAEhBC,OAAQ,EACRC,OAAQ,EACRC,WAAY,EACZC,YAAa,EACb3hB,WAAOwG,EACPvG,YAAQuG,EAERqZ,MAAM,EACN+B,WAAW,EACXC,cAAc,OAIlB9c,OAAA,SAAO4C,EAAQgX,GACb9e,KAAKiiB,QAAatb,KAIpBW,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,SAAWhB,KAAKyhB,MAAO,CAC9B,IAAMI,EAAa7hB,KAAK6hB,YAAc7hB,KAAKyhB,MAAMthB,MAC/C2hB,EAAc9hB,KAAK8hB,aAAe9hB,KAAKyhB,MAAMrhB,OAC1CJ,KAAKiiB,KACRjiB,KAAKiiB,GAAajiB,KAAKgiB,aAAgBhiB,KAAK+hB,UACxCjd,KAAKoB,IACH4Y,EAAmBtQ,WAAWrO,MAAQ0hB,EACtC/C,EAAmBtQ,WAAWpO,OAAS0hB,GAEzC9hB,KAAKggB,KACLlb,KAAK8C,IACHkX,EAAmBtQ,WAAWrO,MAAQ0hB,EACtC/C,EAAmBtQ,WAAWpO,OAAS0hB,GAEzC,EAAM9hB,KAAK+hB,UACXjd,KAAKoB,IACH4Y,EAAmB3e,MAAQ0hB,EAC3B/C,EAAmB1e,OAAS0hB,GAE9B9hB,KAAKggB,KACLlb,KAAK8C,IACHkX,EAAmB3e,MAAQ0hB,EAC3B/C,EAAmB1e,OAAS0hB,GAE9B,GAEN,IAAMI,GAAMliB,KAAKG,MAAQH,KAAKG,MAAQ0hB,GAAc7hB,KAAKiiB,GAAajiB,KAAKye,OACzE0D,GAAMniB,KAAKI,OAASJ,KAAKI,OAAS0hB,GAAe9hB,KAAKiiB,GAAajiB,KAAK0e,OAC1Exe,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAcxE,KAAKiO,MAAQ6Q,EAAmB7Q,MACjC,GAAjBjO,KAAKse,SACHte,KAAKyc,WAAa/T,EAAM0Z,SAC1BliB,EAAQsgB,UACNxgB,KAAKyhB,MACLzhB,KAAK2hB,OACL3hB,KAAK4hB,OACLC,EACAC,EACA9hB,KAAKkO,EACLlO,KAAKmO,EACL+T,EACAC,GAGFjiB,EAAQsgB,UACNxgB,KAAKyhB,MACLzhB,KAAK2hB,OACL3hB,KAAK4hB,OACLC,EACAC,EACA9hB,KAAKkO,EAAIgU,EAAK,EACdliB,KAAKmO,EAAIgU,EAAK,EACdD,EACAC,IAIJjiB,EAAQ6T,OACR7T,EAAQqS,UAAUvS,KAAKkO,EAAGlO,KAAKmO,GAC/BjO,EAAQgS,OAAOlS,KAAKse,UACpBpe,EAAQsgB,UACNxgB,KAAKyhB,MACLzhB,KAAK2hB,OACL3hB,KAAK4hB,OACLC,EACAC,GACCI,EAAK,GACLC,EAAK,EACND,EACAC,GAEFjiB,EAAQgU,gBAtGI2J,GA2GpBnV,EAAM0Z,SAAW,EACjB1Z,EAAMgZ,OAAS,MChHTW,cACJ,WAAYC,sBACJA,2CAGRtE,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAClDuE,UAAM5b,EACNsI,KAAM,gBACNwN,SAAU4F,EAAKX,OACf9C,WAAOjY,EACP6b,iBAAa7b,EACb8b,UAAW,OAKfnb,KAAA,SAAKpH,EAAS4e,GACR9e,KAAKgB,UACPd,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAcxE,KAAKiO,MAAQ6Q,EAAmB7Q,MACtD/N,EAAQ6T,OACH/T,KAAKyc,WACRvc,EAAQqE,UAAY,OACpBrE,EAAQoE,aAAe,OAEzBpE,EAAQqS,UAAUvS,KAAKkO,EAAGlO,KAAKmO,GAC/BjO,EAAQsS,MAAMxS,KAAKye,OAAQze,KAAK0e,QAChCxe,EAAQgS,OAAOlS,KAAKse,UACpBpe,EAAQ+O,KAAOjP,KAAKiP,KAEhBjP,KAAK4e,QACP1e,EAAQ6O,UAAY/O,KAAK4e,MACzB1e,EAAQgP,SAASlP,KAAKuiB,KAAM,EAAG,IAG7BviB,KAAKwiB,cACPtiB,EAAQwiB,YAAc1iB,KAAKwiB,YAC3BtiB,EAAQuiB,UAAYziB,KAAKyiB,UACzBviB,EAAQyiB,WAAW3iB,KAAKuiB,KAAM,EAAG,IAGnCriB,EAAQgU,eA1CK2J,GAgDnBwE,EAAKD,SAAW,EAChBC,EAAKX,OAAS,EChDd,IAIMkB,cACJ,WAAY9E,SAAgB,OAC1Bzc,cAAMyc,UACD+E,QAAiBlc,EACtBtF,EAAKyhB,IAAyB,aAGzBC,iBAAP,SAAwBC,EAAGC,EAAGjG,GAC5B,IAEEkG,EAAKF,GAbgB,EAcrBG,EAAKF,GAdgB,EAerBG,EAAKpG,GAfgB,EA4BvB,OAXK4F,EAASS,KAEZT,EAASS,GAAYziB,MAAM0C,KAAK,CAACF,OADlB,IAC2B,SAAAge,UAAGxgB,MAAM0C,KAAK,CAACF,OAD1C,IACmD,SAAAge,UAAGxgB,MAAM0C,KAAK,CAACF,OADlE,UAGZwf,EAASS,GAAUH,GAAIC,GAAIC,KAC9BR,EAASS,GAAUH,GAAIC,GAAIC,GAAMR,EAASU,sBACxCJ,EACAC,EACAC,IAGGR,EAASS,GAAUH,GAAIC,GAAIC,MAG7BE,sBAAP,SAA6BJ,EAAIC,EAAIC,GACnC,IAAIxjB,EAASkD,SAASsd,cAAc,UACpCxgB,EAAOO,MAAQP,EAAOQ,OAlCL,GAoCjB,IAAImjB,EAAO3jB,EAAOD,WAAW,MAC7B4jB,EAAK/e,YAAc,EACnB+e,EAAK9e,yBAA2B,cAChC8e,EAAKzU,UAAU,EAAG,EAvCD,GAAA,IAyCjB,IAAI0U,EAAOD,EAAKE,qBAvCKC,GAAAA,GA0CnB,EA1CmBA,GAAAA,GAAAA,IAiFrB,OAlCAF,EAAKG,aACH,EACA,aACIT,GAnDiB,GAmDuC,GAC1D,SACEC,GArDiB,GAqDuC,GAC1D,SACEC,GAvDiB,GAuDuC,GAC1D,OAEJI,EAAKG,aACH,GACA,aACIT,GA7DiB,GA6DuC,GAC1D,SACEC,GA/DiB,GA+DuC,GAC1D,SACEC,GAjEiB,GAiEuC,GAC1D,SAEJI,EAAKG,aACH,EACA,aACIT,GAvEiB,GAuEuC,GAC1D,SACEC,GAzEiB,GAyEuC,GAC1D,SACEC,GA3EiB,GA2EuC,GAC1D,OAGJG,EAAKxU,UAAYyU,EACjBD,EAAKvU,SAAS,EAAG,EAjFA,GAAA,IAmFVpP,8BAGTsF,OAAA,SAAO4C,EAAQgX,GACb9e,KAAK6iB,QAAiBlc,KAIxBW,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,QAAS,CAEXhB,KAAK4e,OAAU5e,KAAK4e,MAAMA,QAC7B5e,KAAK4e,MAAQgF,EAAM5jB,KAAK4e,OAAOiF,OAE7B7jB,KAAK6iB,KAAmB7iB,KAAKye,SAC/Bze,KAAK6iB,GAAiB7iB,KAAKye,OAC3Bze,KAAK8iB,GACF9iB,KAAKye,OAASK,EAAmB1Q,aAChC0Q,EAAmB3e,MArGV,IAwGf,IAAMye,EAAQ5e,KAAK4e,MAAMA,MACzB1e,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAcxE,KAAKiO,MAAQ6Q,EAAmB7Q,MACtD/N,EAAQshB,sBAAwBxhB,KAAK8iB,GACrC5iB,EAAQsgB,UACNoC,EAASG,iBAAiBnE,EAAM,GAAIA,EAAM,GAAIA,EAAM,IACpD,EACA,EA/Ga,GAAA,GAkHb5e,KAAKkO,EAAIlO,KAAKye,OAAS,EACvBze,KAAKmO,EAAInO,KAAK0e,OAAS,EACvB1e,KAAKye,OACLze,KAAK0e,QAEPxe,EAAQshB,uBAAwB,OAnHf3D,GCJFiG,cACnB,WAAYxB,SAKV,IAJAjhB,cAAMihB,UAEDyB,aAAUpd,EACftF,EAAK2iB,OAAS,IAAIC,OACd5iB,EAAK6iB,SACP,GAAsB,mBAAXD,OAAuB,CAChC,IAAIE,EAAOrhB,SAASshB,qBAAqB,QAAQ,GAC7CC,EAASvhB,SAASsd,cAAc,UACpCiE,EAAOlb,KAAO,kBACdkb,EAAOjb,IACL,qEACF+a,EAAKG,YAAYD,OACZ,CAEL,IAAIhgB,EAAMvB,SAASsd,cAAc,UAAUzgB,WAAW,MAEtD0E,EAAIkgB,OAAO,IAAIN,OAAO,WAElB5f,EAAImgB,aAAa,EAAG,EAAG,EAAG,GAAGC,KAAK,KACpCpjB,EAAK6iB,UAAW,GApBK,2CA0B7BlG,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAElD0G,UAAM/d,EACNiY,WAAOjY,EACP6b,iBAAa7b,EACb8b,UAAW,EACXkC,MAAM,EACNC,OAAO,EACPV,UAAU,OAKdW,iBAAA,SAAiBvhB,EAAMwhB,GACrB,OAAOC,EAASC,GACE,iBAAT1hB,EAAoByhB,EAASE,YAAY3hB,GAAQA,EAC1C,iBAAPwhB,EAAkBC,EAASE,YAAYH,GAAMA,MAGxDI,aAAA,SAAavW,EAAU8V,EAAMxI,GAC3B,OAAO8I,EAASI,GAAMV,EAAKW,SAAUX,EAAKY,OAAQ1W,MAIpDrH,KAAA,SAAKpH,EAAS4e,cACZ,GAAI9e,KAAKgB,QAAS,CAChB,IAAMogB,EAAIphB,KAAKiO,MAAQ6Q,EAAmB7Q,MACtCjO,KAAK+jB,UAAY/jB,KAAK0kB,OACpB1kB,KAAKkkB,UAAiC,sBAATQ,OAC/B1kB,KAAK0kB,KAAOK,EAASE,YAAYjlB,KAAK0kB,OAEpC9jB,MAAMC,QAAQb,KAAK0kB,OACrB1kB,KAAKgkB,OAAS,IAAIC,OAClBjkB,KAAK0kB,KAAKzhB,QAAQ,SAAAqiB,GAChBtgB,EAAKgf,OAAOuB,OAAOD,EAAM,GAAG,GAAIA,EAAM,GAAG,IACzCA,EAAMriB,QAAQ,SAAAuiB,GACZxgB,EAAKgf,OAAOyB,cACVD,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,MAGXxgB,EAAKgf,OAAO7E,eAGdnf,KAAKgkB,OADGhkB,KAAK0kB,gBAAgBT,OACfjkB,KAAK0kB,KAEL,IAAIT,OAAOjkB,KAAK0kB,MAEhC1kB,KAAK+jB,QAAU/jB,KAAK0kB,MAGtB,IAAIjG,EAASze,KAAKye,OAChBC,EAAS1e,KAAK0e,OAmChB,IAAK,IAAIzY,KAjCLjG,KAAK4kB,QACO,GAAVnG,IACFA,EAAShI,OAAOC,SAEJ,GAAVgI,IACFA,EAASjI,OAAOC,UAIpBxW,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAc4c,EACtBlhB,EAAQ6T,OACR7T,EAAQqS,UAAUvS,KAAKkO,EAAGlO,KAAKmO,GAC/BjO,EAAQsS,MAAMiM,EAAQC,GACtBxe,EAAQgS,OAAOlS,KAAKse,UAEhBte,KAAK4e,QACP1e,EAAQ6O,UAAY/O,KAAK4e,MACzB1e,EAAQgf,KAAKlf,KAAKgkB,SAGpB9jB,EAAQ6T,OAEJ/T,KAAK2kB,OACPzkB,EAAQykB,KAAK3kB,KAAKgkB,QACdhkB,KAAK4kB,QACP1kB,EAAQgS,QAAQlS,KAAKse,UACrBpe,EAAQsS,MAAM,EAAIiM,EAAQ,EAAIC,GAC9Bxe,EAAQqS,WAAWvS,KAAKkO,GAAIlO,KAAKmO,UAKlB8N,OACjBjc,KAAKic,OAAOhW,GAAGqB,KAAKpH,EAAS4e,GAG/B5e,EAAQgU,UAEJlU,KAAKwiB,cACPtiB,EAAQwiB,YAAc1iB,KAAKwiB,YAC3BtiB,EAAQuiB,UAAYziB,KAAKyiB,UACzBviB,EAAQqkB,OAAOvkB,KAAKgkB,SAGtB9jB,EAAQgU,eAnIoBsL,GCG5BkG,cACJ,WAAYpD,sBACJA,2CAGRtE,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAClD9P,OAAGvH,EACHwH,OAAGxH,EACHxG,WAAOwG,EACPvG,YAAQuG,EACR6b,iBAAa7b,EACbiY,WAAOjY,EACP8b,UAAW,EACX5W,OAAO,EACPmU,KAAM,SAACvT,EAAOqR,EAAgBmC,UAC5BzT,EACErN,EAAKsN,QACc9F,IAAnBsZ,EAAa/R,QACQvH,IAAnBsZ,EAAa9R,QACUxH,IAAvBsZ,EAAa9f,YACWwG,IAAxBsZ,EAAa7f,SAGnBqc,SAAUiJ,EAAKhE,YAInBpB,oBAAA,SAAoBxB,IACd9e,KAAKggB,WAAuBrZ,IAAf3G,KAAKG,SACpBH,KAAKG,MAAQ2e,EAAmBvQ,cAAcpO,QAE5CH,KAAKggB,WAAwBrZ,IAAhB3G,KAAKI,UACpBJ,KAAKI,OAAS0e,EAAmBvQ,cAAcnO,SAE7CJ,KAAKggB,WAAmBrZ,IAAX3G,KAAKkO,KACpBlO,KAAKkO,EAAI4Q,EAAmBvQ,cAAcL,EACtClO,KAAKyc,WAAaiJ,EAAKhE,SACzB1hB,KAAKkO,GAAKlO,KAAKG,MAAQ,KAGvBH,KAAKggB,WAAmBrZ,IAAX3G,KAAKmO,KACpBnO,KAAKmO,EAAI2Q,EAAmBvQ,cAAcJ,EACtCnO,KAAKyc,WAAaiJ,EAAKhE,SACzB1hB,KAAKmO,GAAKnO,KAAKI,OAAS,OAK9B8E,OAAA,SAAO4C,EAAQgX,OAKfxX,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,QAKP,GAJAhB,KAAKsgB,oBAAoBxB,GAEzB5e,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAcxE,KAAKiO,MAAQ6Q,EAAmB7Q,MAChC,IAAlBjO,KAAKse,UAAkBte,KAAKyc,WAAaiJ,EAAKtD,SAC5CpiB,KAAK6L,MACP3L,EAAQ4O,UAAU9O,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKG,MAAOH,KAAKI,QAC1CJ,KAAK4e,QACd1e,EAAQ6O,UAAY/O,KAAK4e,MACzB1e,EAAQ8O,SAAShP,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKG,MAAOH,KAAKI,SAEhDJ,KAAKwiB,cACPtiB,EAAQ6e,YACR7e,EAAQuiB,UAAYziB,KAAKyiB,UACzBviB,EAAQwiB,YAAc1iB,KAAKwiB,YAC3BtiB,EAAQ0X,KAAK5X,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKG,MAAOH,KAAKI,QAC9CF,EAAQqkB,cAEL,CACL,IAAI/Q,EAAKxT,KAAKG,MAAQ,EAClBsT,EAAKzT,KAAKI,OAAS,EACvBF,EAAQ6T,OACJ/T,KAAKyc,WAAaiJ,EAAKtD,SACzBliB,EAAQqS,UAAUvS,KAAKkO,EAAIsF,EAAIxT,KAAKmO,EAAIsF,GAExCvT,EAAQqS,UAAUvS,KAAKkO,EAAGlO,KAAKmO,GAEjCjO,EAAQsS,MAAMxS,KAAKye,OAAQze,KAAK0e,QAChCxe,EAAQgS,OAAOlS,KAAKse,UAChBte,KAAK6L,MACP3L,EAAQ4O,WAAW0E,GAAKC,EAAIzT,KAAKG,MAAOH,KAAKI,QACpCJ,KAAK4e,QACd1e,EAAQ6O,UAAY/O,KAAK4e,MACzB1e,EAAQ8O,UAAUwE,GAAKC,EAAIzT,KAAKG,MAAOH,KAAKI,SAE1CJ,KAAKwiB,cACPtiB,EAAQ6e,YACR7e,EAAQuiB,UAAYziB,KAAKyiB,UACzBviB,EAAQwiB,YAAc1iB,KAAKwiB,YAC3BtiB,EAAQ0X,MAAMpE,GAAKC,EAAIzT,KAAKG,MAAOH,KAAKI,QACxCF,EAAQqkB,UAEVrkB,EAAQgU,eAlGG2J,GAuGnB6H,EAAKtD,SAAW,EAChBsD,EAAKhE,OAAS,MC1GOiE,cACnB,WAAYrD,GACV,IAAIC,EAAOpjB,EAAKmjB,EAAgBC,MAC5BqD,EAAgBhlB,MAAMC,QAAQ0hB,GAAQA,YAAWA,GAF1B,mBAIzBziB,OAAOC,OAAO,GAAIuiB,EAAiB,CACjCuD,MAAOxD,EACPha,MAAOud,EAAcxiB,OACrBmf,KAAM,SAAArf,UAAS0iB,EAAc1iB,IAC7BlC,QAAS,SAAAkC,SACkB,MAAzB0iB,EAAc1iB,IAAkB/D,EAAKmjB,EAAgBthB,QAASkC,8BAVlC2d,GCF9BiF,GAAkBC,GAAqBA,GAAvCD,cAEaE,cACnB,WAAYlI,SAAgB,OAC1Bzc,cAAMyc,UAED8B,IAAmB,EACxBve,EAAK4kB,QAAqBtf,sCAG5BqX,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAElDkI,UAAU,EACVC,YAAQxf,EACRyf,gBAAYzf,EACZ0f,aAAa,OAIjB/F,oBAAA,SAAoBxB,GACd9e,KAAKggB,MAAQhgB,KAAKkmB,UACpBlmB,KAAKkO,EAAI,EACTlO,KAAKmO,EAAI,EACTnO,KAAKG,MAAQ2e,EAAmB1Q,aAChCpO,KAAKI,OAAS0e,EAAmBzQ,eAEjCiY,YAAMhG,8BAAoBxB,MAI9B5Z,OAAA,SAAO4C,EAAQgX,GACbwH,YAAMphB,iBAAO4C,EAAQgX,GACjB9e,KAAKomB,aACPpmB,KAAKmmB,YAASxf,MAIlB4a,eAAA,SAAeF,EAASC,EAASxC,GAC/B,IAAMyH,EAAYvmB,KAAKqgB,GAAMmE,aAAa,EAAG,EAAGnD,EAASC,GACzDwE,EAAcS,EAAW,EAAG,EAAGlF,EAASC,EAASxC,EAAmBqH,QACpEnmB,KAAKqgB,GAAMmG,aAAaD,EAAW,EAAG,MAIxCjf,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,QAAS,MAEE2F,IAAhB3G,KAAKmmB,QACLnmB,KAAKimB,KAAuBjmB,KAAKomB,aAEjCpmB,KAAKmmB,OAASrhB,KAAKC,OAChB+Z,EAAmB1Q,aAAe0Q,EAAmBzQ,eACpD,EACArO,KAAKomB,YAETpmB,KAAKimB,GAAqBjmB,KAAKomB,YAEjC,IAAMD,EAASrhB,KAAKC,MAClB/E,KAAKmmB,QAAUnmB,KAAKqmB,cAAiBvH,EAAmB1L,IAAM0L,EAAmB1L,IAAIC,KAAO,GAAKyL,EAAmBxQ,cAEtH,GAAI6X,EACF,GAAInmB,KAAKkmB,SAAU,MACEvf,IAAf3G,KAAKG,YAAuCwG,IAAhB3G,KAAKI,QACnCJ,KAAKsgB,oBAAoBxB,GAE3B,IAAM5Q,EAAIpJ,KAAKC,MAAM/E,KAAKkO,GACpBC,EAAIrJ,KAAKC,MAAM/E,KAAKmO,GACpB8M,EAAInW,KAAKC,MAAM/E,KAAKG,OACpB+a,EAAIpW,KAAKC,MAAM/E,KAAKI,QAC1BJ,KAAKumB,UAAYrmB,EAAQskB,aAAatW,EAAGC,EAAG8M,EAAGC,GAC/C4K,EAAc9lB,KAAKumB,UAAW,EAAG,EAAGtL,EAAI/M,EAAGgN,EAAI/M,EAAGgY,GAClDjmB,EAAQsmB,aAAaxmB,KAAKumB,UAAWrY,EAAGC,EAAG,EAAG,EAAG8M,EAAGC,QAEpD4D,EAAmBqH,OAASA,EAC5BG,YAAMhf,eAAKpH,EAAS4e,QAIxBwH,YAAMhf,eAAKpH,EAAS4e,OA7EakC,GCClByF,cACnB,WAAYnE,SAAiB,YAId3b,KAHbtF,cAAMihB,UAGCpU,QACMvH,IAAXtF,EAAK8M,GACL9M,EAAKlB,OACLkB,EAAKjB,QACLiB,EAAKohB,UAELphB,EAAKyM,OAELzM,EAAKqlB,QAAW/f,sCAIpBqX,GAAA,WACE,OAAOle,OAAOC,OAAO,eAAUie,cAAqB,CAElD3V,MAAO,GAEPse,MAAO,EACPC,MAAO,EACPC,MAAO,EACPpE,eAAW9b,EACXmgB,WAAW,EACXlI,MAAO,YAIX9Q,KAAA,WACE9N,KAAK0mB,GAAW1mB,KAAKG,MAAQ,EAAIH,KAAKkO,EACtClO,KAAK+mB,GAAW/mB,KAAKI,OAAS,EAAIJ,KAAKmO,EACvCnO,KAAKgnB,GAAUliB,KAAKoB,IAAIlG,KAAKG,MAAOH,KAAKI,QAAU,EACnDJ,KAAKinB,GAAU,GACfjnB,KAAKknB,GAAU,GACflnB,KAAKmnB,GAAU,GACfnnB,KAAKonB,GAAa,GAClBpnB,KAAKqnB,GAAa,GAClBrnB,KAAKsnB,GAAa,GAClBtnB,KAAKunB,GAAa,GAClBvnB,KAAKwnB,GAAgB,GACrBxnB,KAAKynB,GAAkB,GACvB,IAAK,IAAIxhB,EAAI,EAAGA,EAAIjG,KAAKqI,MAAOpC,IAC9BjG,KAAKinB,GAAQhhB,GAAKnB,KAAKuK,SAAWrP,KAAKG,MAAQH,KAAKG,MAAQ,EAC5DH,KAAKknB,GAAQjhB,GAAKnB,KAAKuK,SAAWrP,KAAKI,OAASJ,KAAKI,OAAS,EAC9DJ,KAAKmnB,GAAQlhB,GAAKnB,KAAKuK,SAAWrP,KAAKgnB,MAI3CU,SAAA,SAASzhB,EAAG0hB,EAAmBC,GACzBA,IACF5nB,KAAKwnB,GAAcvhB,IAAK,GAO1B,IALA,IAAMuN,EAAKxT,KAAKG,MAAQ,EAClBsT,EAAKzT,KAAKI,OAAS,EACrB8N,EAAIlO,KAAKinB,GAAQhhB,GAAKjG,KAAK2mB,MAAQgB,EACrCxZ,EAAInO,KAAKknB,GAAQjhB,GAAKjG,KAAK4mB,MAAQe,EACnCE,EAAI7nB,KAAKmnB,GAAQlhB,GAAKjG,KAAK6mB,MAAQc,EAC9BzZ,GAAKsF,GACVtF,GAAKlO,KAAKG,MACVgO,EAAIrJ,KAAKuK,SAAWrP,KAAKI,OAASqT,EAClCzT,KAAKwnB,GAAcvhB,IAAK,EAE1B,KAAOiI,EAAIsF,GACTtF,GAAKlO,KAAKG,MACVgO,EAAIrJ,KAAKuK,SAAWrP,KAAKI,OAASqT,EAClCzT,KAAKwnB,GAAcvhB,IAAK,EAG1B,KAAOkI,GAAKsF,GACVtF,GAAKnO,KAAKI,OACV8N,EAAIpJ,KAAKuK,SAAWrP,KAAKG,MAAQqT,EACjCxT,KAAKwnB,GAAcvhB,IAAK,EAE1B,KAAOkI,EAAIsF,GACTtF,GAAKnO,KAAKI,OACV8N,EAAIpJ,KAAKuK,SAAWrP,KAAKG,MAAQqT,EACjCxT,KAAKwnB,GAAcvhB,IAAK,EAG1B,KAAO4hB,GAAK,GACVA,GAAK7nB,KAAKgnB,GACV9Y,EAAIpJ,KAAKuK,SAAWrP,KAAKG,MAAQqT,EACjCrF,EAAIrJ,KAAKuK,SAAWrP,KAAKI,OAASqT,EAClCzT,KAAKwnB,GAAcvhB,IAAK,EAE1B,KAAO4hB,EAAI7nB,KAAKgnB,IACda,GAAK7nB,KAAKgnB,GACV9Y,EAAIpJ,KAAKuK,SAAWrP,KAAKG,MAAQqT,EACjCrF,EAAIrJ,KAAKuK,SAAWrP,KAAKI,OAASqT,EAClCzT,KAAKwnB,GAAcvhB,IAAK,EAG1B,IAAM6hB,EAAW9nB,KAAK0mB,GAAYxY,EAAI2Z,EAAKrU,EACrCuU,EAAW/nB,KAAK+mB,GAAY5Y,EAAI0Z,EAAKpU,EAO3C,GANAzT,KAAKwnB,GAAcvhB,GACjBjG,KAAKwnB,GAAcvhB,IACnB6hB,GAAY9nB,KAAKkO,GACjB6Z,GAAY/nB,KAAKmO,GACjB2Z,EAAW9nB,KAAKkO,EAAIlO,KAAKG,OACzB4nB,EAAW/nB,KAAKmO,EAAInO,KAAKI,OACvBwnB,EACF5nB,KAAKinB,GAAQhhB,GAAKiI,EAClBlO,KAAKknB,GAAQjhB,GAAKkI,EAClBnO,KAAKmnB,GAAQlhB,GAAK4hB,EAClB7nB,KAAKsnB,GAAWrhB,GAAK6hB,EACrB9nB,KAAKunB,GAAWthB,GAAK8hB,MAChB,CACL/nB,KAAKonB,GAAWnhB,GAAK6hB,EACrB9nB,KAAKqnB,GAAWphB,GAAK8hB,EACrB,IAAIC,EAA4C,GAAtC,EAAIhoB,KAAKmnB,GAAQlhB,GAAKjG,KAAKgnB,IAChChnB,KAAK8mB,YACRkB,EAAKljB,KAAKqc,KAAK6G,IAEjBhoB,KAAKynB,GAAgBxhB,GAAK+hB,MAI9BjY,QAAA,SAAQ8O,GACN,IAAIjI,cAAY7G,kBAAQ8O,GACxB,GAAI7e,KAAKgB,cAA6B2F,IAAlB3G,KAAK0mB,GAEvB,IADA,IAAIzgB,EAAIjG,KAAKqI,MACNpC,KACLjG,KAAK0nB,SAASzhB,EAAG4Y,EAAa,IAAI,GAC9B7e,KAAKwnB,GAAcvhB,IACrBjG,KAAK0nB,SAASzhB,GAAI,GAAG,GAI3B,OAAO2Q,KAGT1R,OAAA,SAAO4C,EAAQgX,OAGfxX,KAAA,SAAKpH,EAAS4e,GACZ,GAAI9e,KAAKgB,QAAS,CAChB,QAAsB2F,IAAlB3G,KAAK0mB,GAYP,OAXA1mB,KAAKG,MAAQH,KAAKG,OAAS2e,EAAmB3e,MAC9CH,KAAKI,OAASJ,KAAKI,QAAU0e,EAAmB1e,OAChDJ,KAAKkO,OAAevH,IAAX3G,KAAKkO,EAAkB4Q,EAAmB5Q,EAAIlO,KAAKkO,EAC5DlO,KAAKmO,OAAexH,IAAX3G,KAAKmO,EAAkB2Q,EAAmB3Q,EAAInO,KAAKmO,EAC5DnO,KAAKyiB,UACHziB,KAAKyiB,WACL3d,KAAK8C,IACHkX,EAAmB1e,OAAS0e,EAAmBzQ,cAC/CyQ,EAAmB3e,MAAQ2e,EAAmB1Q,cAC5C,OACNpO,KAAK8N,OAMP,GAHA5N,EAAQuE,yBAA2BzE,KAAK2e,mBACxCze,EAAQsE,YAAcxE,KAAKiO,MAAQ6Q,EAAmB7Q,MAEpC,GAAdjO,KAAK4mB,OAA4B,GAAd5mB,KAAK6mB,OAAc7mB,KAAK2mB,MAAQ,EAAG,CACxDzmB,EAAQ6O,UAAY/O,KAAK4e,MAEzB,IADA,IAAI3Y,EAAIjG,KAAKqI,MACNpC,KACDjG,KAAKwnB,GAAcvhB,IACrB/F,EAAQ8O,SACNhP,KAAKsnB,GAAWrhB,GAChBjG,KAAKunB,GAAWthB,GAAMjG,KAAKynB,GAAgBxhB,GAAKjG,KAAKyiB,UAAa,EAClEziB,KAAKonB,GAAWnhB,GAAKjG,KAAKsnB,GAAWrhB,GACrCjG,KAAKynB,GAAgBxhB,GAAKjG,KAAKyiB,gBAMrC,GADAviB,EAAQwiB,YAAc1iB,KAAK4e,MACvB5e,KAAK8mB,UAEP,IADA,IAAI7gB,EAAIjG,KAAKqI,MACNpC,KACDjG,KAAKwnB,GAAcvhB,KACrB/F,EAAQ6e,YACR7e,EAAQuiB,UAAYziB,KAAKynB,GAAgBxhB,GAAKjG,KAAKyiB,UACnDviB,EAAQqlB,OAAOvlB,KAAKonB,GAAWnhB,GAAIjG,KAAKqnB,GAAWphB,IACnD/F,EAAQ+nB,OAAOjoB,KAAKsnB,GAAWrhB,GAAIjG,KAAKunB,GAAWthB,IACnD/F,EAAQqkB,SACRrkB,EAAQif,kBAMZ,IAFA,IACElZ,EADE+hB,EAAK,IAEAA,GAAI,CAIX,IAHA9nB,EAAQ6e,YACR7e,EAAQuiB,UAAYuF,EAAKhoB,KAAKyiB,UAC9Bxc,EAAIjG,KAAKqI,MACFpC,KACDjG,KAAKwnB,GAAcvhB,IAAMjG,KAAKynB,GAAgBxhB,KAAO+hB,IACvD9nB,EAAQqlB,OAAOvlB,KAAKonB,GAAWnhB,GAAIjG,KAAKqnB,GAAWphB,IACnD/F,EAAQ+nB,OAAOjoB,KAAKsnB,GAAWrhB,GAAIjG,KAAKunB,GAAWthB,KAGvD/F,EAAQqkB,SACRrkB,EAAQif,kBArMmBuG,GCiBrChd,EAAQ,sCAAI4G,2BAAAA,2BAAa4Y,EAAU5Y,IACnC+S,EAAO,sCAAI/S,2BAAAA,2BAAa6Y,EAAS7Y,IAGjCoW,EAAO,sCAAIpW,2BAAAA,2BAAa8Y,EAAS9Y,IAGjCmX,UAAY,sCAAInX,2BAAAA,2BAAa+Y,EAAc/Y,IAE7C5G,EAAM0Z,SAAW8F,EAAO9F,SACxB1Z,EAAMgZ,OAASwG,EAAOxG,OACtBgE,EAAKtD,SAAWgG,EAAMhG,SACtBsD,EAAKhE,OAAS0G,EAAM1G,OACpBW,EAAKD,SAAW+F,EAAM/F,SACtBC,EAAKX,OAASyG,EAAMzG,OAEpB,MAAe,CACbtC,SAvBW,sCAAI9P,2BAAAA,2BAAagZ,EAAahZ,IAwBzCqQ,OAvBS,sCAAIrQ,2BAAAA,2BAAaiZ,EAAWjZ,IAwBrCuO,OAvBS,sCAAIvO,2BAAAA,2BAAakZ,EAAWlZ,IAwBrCuR,QAvBU,sCAAIvR,2BAAAA,2BAAamZ,EAAYnZ,IAwBvC0R,SAvBW,sCAAI1R,2BAAAA,2BAAagX,EAAahX,IAwBzCkQ,MAvBQ,sCAAIlQ,2BAAAA,2BAAamR,EAAUnR,IAwBnC5G,MAAAA,EACA2Z,KAAAA,EACAO,SAvBW,sCAAItT,2BAAAA,2BAAaoZ,EAAapZ,IAwBzCwU,KAvBO,sCAAIxU,2BAAAA,2BAAaqZ,EAASrZ,IAwBjCoW,KAAAA,EACAC,SAvBW,sCAAIrW,2BAAAA,2BAAasZ,EAAatZ,IAwBzC0W,UAvBY,sCAAI1W,2BAAAA,2BAAauZ,EAAcvZ,IAwB3CmX,UAAAA,WCjDmBrH,aAEjB,WAAY7T,EAAUiF,GACpBxQ,KAAKuL,SAAWA,EAChBvL,KAAKwQ,SAAWhE,EAAOrN,EAAKqR,QAAW7J,GACvC3G,KAAK8oB,aAAc,6BAGrB9gB,MAAA,WACEhI,KAAK8oB,aAAc,KAGrBrjB,IAAA,SAAIwW,EAAQC,GACV,IAAI5P,EAEJ,YAAsB3F,IAAlB3G,KAAKwQ,UACPxQ,KAAKuL,SAAS0Q,EAAQnX,KAAK8C,IAAIsU,EAAMlc,KAAKwQ,WAAYxQ,KAAK8oB,aAC3D9oB,KAAK8oB,aAAc,EACZ5M,EAAOlc,KAAKwQ,WAEnBlE,EAAStM,KAAKuL,SAAS0Q,EAAQC,GAAOlc,KAAK8oB,aAC3C9oB,KAAK8oB,aAAc,EACZxc,SCnBf,SAASyc,EAAYpa,EAAU8V,GAC7B,OAAOA,EAAKnhB,KAAOqL,EAAW8V,EAAK/c,MAGrC,SAASshB,EAAWra,EAAU8V,GAK5B,IAJA,IAEExe,EAFEgjB,YAAWxE,EAAKyE,QAClBC,EAAaF,EAAK7lB,OAGb+lB,EAAa,GAElB,IADAA,IACKljB,EAAI,EAAGA,EAAIkjB,EAAYljB,IAC1BgjB,EAAKhjB,GAAKgjB,EAAKhjB,GAAK0I,GAAYsa,EAAKhjB,EAAI,GAAKgjB,EAAKhjB,IAGvD,OAAOgjB,EAAK,GAGd,SAASG,EAAUza,EAAU8V,EAAMxI,GACjC,OAAOwI,EAAK4E,UAAUC,IAAI7E,EAAK8E,QAAS5a,GAAU6a,SAGpD,SAASC,EAAS9a,EAAU8V,EAAMxI,GAChC,OAAOA,EAAOiJ,aAAavW,EAAU8V,EAAMxI,OAIxByN,aACnB,WAAYC,EAAcnZ,EAAUoZ,GAGlC,IAAK,IAAI/e,KAFT7K,KAAK8oB,aAAc,EACnB9oB,KAAK2pB,aAAe,GACNA,EAaZ,IAZA,IAAME,EAAWF,EAAa9e,GACxB4B,EAAc,qBAAN5B,EAnCH,oBAmC8Bgf,EAAsBA,EACzDC,EAAgB,UAANjf,GAAuB,gBAANA,EAC3Bkf,EAAe,SAANlf,EACTY,EAA8B,mBAAVgB,EACpBud,GAAYF,GAAWlpB,MAAMC,QAAQ4L,SAEnC,UAAN5B,EACI,CAAC,SAAU,UACL,qBAANA,GAAkC,qBAANA,EAC5B,CAAC,YACD,CAACA,kBAEL7K,KAAK2pB,aAAa9mB,KAAK,CACrBsb,UACA2G,GAAIkF,EAAWvd,EAAMA,EAAMrJ,OAAS,GAAKjE,EAAKsN,EAAO,EAAG,IACxDwd,SAAQD,GAAWvd,EACnBqd,QAAAA,EACAC,OAAAA,EACAte,aAAYA,GAAagB,EACzByd,cAAeJ,EACXV,EACAW,EACAN,EACAO,EACAhB,EACAD,IAIV/oB,KAAKwQ,SAAWhE,EAAOrN,EAAKqR,GAAW,GACvCxQ,KAAK4pB,KAAOpd,EAAOod,EAAM,SAAApT,UAAKA,+BAGhCxO,MAAA,WACEhI,KAAK8oB,aAAc,KAGrBhb,KAAA,SAAKmO,EAAQC,GAGX,IAFA,IACEuI,EADEjZ,EAAIxL,KAAK2pB,aAAavmB,OAEnBoI,KAEL,IADAiZ,EAAOzkB,KAAK2pB,aAAane,IAChBC,WAGP,GAFAgZ,EAAKnhB,KAAO2Y,EAAOwI,EAAKtG,MACxBsG,EAAKK,GAAKL,EAAKhZ,WAAWgZ,EAAKnhB,MAC3BmhB,EAAKqF,QACPrF,EAAK4E,UAAYzF,EAAMa,EAAKnhB,MAC5BmhB,EAAK8E,QAAU3F,EAAMa,EAAKK,IAC1BL,EAAKyF,cAAgBd,UACZ3E,EAAKsF,OAAQ,OACS9N,EAAO4I,iBACpCJ,EAAKnhB,KACLmhB,EAAKK,IAFNL,EAAKW,cAAUX,EAAKY,YAIrBZ,EAAKyF,cAAgBT,OACZ7oB,MAAMC,QAAQ4jB,EAAKK,KAC5BL,EAAKyE,QAAUjN,EAAOwI,EAAKtG,cAAUsG,EAAKK,IAC1CL,EAAKyF,cAAgBlB,IAErBvE,EAAK/c,MAAQ+c,EAAKK,GAAKL,EAAKnhB,KAC5BmhB,EAAKyF,cAAgBnB,WAEdtE,EAAKqF,QACdrF,EAAK4E,UAAYzF,EAAM3H,EAAOwI,EAAKtG,OACnCsG,EAAK8E,QAAU3F,EAAMa,EAAKK,YACjBL,EAAKsF,OAAQ,OACS9N,EAAO4I,iBACpC5I,EAAOwI,EAAKtG,MACZsG,EAAKK,IAFNL,EAAKW,cAAUX,EAAKY,iBAIZZ,EAAKwF,OACdxF,EAAKyE,QAAUjN,EAAOwI,EAAKtG,cAAUsG,EAAKwF,SAE1CxF,EAAKnhB,KAAO2Y,EAAOwI,EAAKtG,MACxBsG,EAAK/c,MAAQ+c,EAAKK,GAAKL,EAAKnhB,SAKlCmC,IAAA,SAAIwW,EAAQC,GAOV,GANKlc,KAAK8oB,cACR9oB,KAAK8oB,aAAc,EACnB9oB,KAAK8N,KAAKmO,EAAQC,IAIhBlc,KAAKwQ,UAAY0L,EAKnB,IAJA,IACIuI,EADAjZ,EAAIxL,KAAK2pB,aAAavmB,OAInBoI,KAELyQ,GADAwI,EAAOzkB,KAAK2pB,aAAane,IACb2S,MAAQsG,EAAKK,QAO3B,IAJA,IACIL,EADAjZ,EAAIxL,KAAK2pB,aAAavmB,OAEpBuL,EAAW3O,KAAK4pB,KAAK1N,EAAOlc,KAAKwQ,UAEhChF,KAELyQ,GADAwI,EAAOzkB,KAAK2pB,aAAane,IACb2S,MAAQsG,EAAKyF,cAAcvb,EAAU8V,EAAMxI,GAG3D,OAAOC,EAAOlc,KAAKwQ,eC9IF2Z,aAEpB,iCAGA1kB,IAAA,SAAIwW,EAAQC,GACX,OAAOC,EAASmB,iCCNG8M,aAEjB,iCAGA3kB,IAAA,SAAIwW,EAAQC,GAER,OADAD,EAAOjb,SAAU,EACVmb,EAASmB,iCCPH+M,aACnB,wCAAeC,2BAAAA,kBACbtqB,KAAKsqB,UACHA,EAAU,aAAcnO,EACpBmO,EAAU,KACNnO,EAAYmO,8BAGxBtiB,MAAA,SAAM4D,YAAAA,IAAAA,EAAa,GACjB5L,KAAKsqB,UAAUtiB,OAAShI,KAAKsqB,UAAUtiB,MAAM4D,MAG/CzH,KAAA,SAAKwH,EAAYC,YAAZD,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GAC5B5L,KAAKsqB,UAAUnmB,MAAQnE,KAAKsqB,UAAUnmB,KAAKwH,EAAOC,MAGpDnG,IAAA,SAAIwW,EAAQC,EAAMqO,GAEhB,IADA,IAAI/T,EAAI0F,EACD1F,GAAK,GAAG,CAGb,GAFAA,EAAIxW,KAAKsqB,UAAU7kB,IAAIwW,EAAQzF,EAAG+T,GAClCA,GAAe,GACL,IAAN/T,EACF,SAEEA,GAAK,GACPxW,KAAKsqB,UAAUtiB,OAAShI,KAAKsqB,UAAUtiB,QAG3C,OAAOwO,QC3BUgU,aACnB,WAAYC,EAAYH,EAAWI,GACjC1qB,KAAKyqB,WAAaA,EAClBzqB,KAAKsqB,UAAYA,EACjBtqB,KAAK0qB,cAAgBle,EAAOke,EAAe,yCAG7CjlB,IAAA,SAAIwW,EAAQC,GACV,IAAMyO,EAAYxrB,EAAKa,KAAKyqB,YACxBzqB,KAAKsqB,UACLtqB,KAAK0qB,cACT,OAAOC,EAAUllB,IACbklB,EAAUllB,IAAIwW,EAAQC,GACtByO,EAAU1O,EAAQC,SCZLxT,cAEnB,WAAY+Y,EAAOmJ,GACjB5qB,KAAK8oB,aAAc,EACnB9oB,KAAKyhB,MAAQtiB,EAAKsiB,GAClBzhB,KAAK4qB,sBAAwBpe,EAAOrN,EAAKyrB,GAAwB,GAC7DhqB,MAAMC,QAAQb,KAAKyhB,OACrBzhB,KAAKqI,MAAQrI,KAAKyhB,MAAMre,QAExBpD,KAAKyhB,MAAQ,CAACzhB,KAAKyhB,OACnBzhB,KAAKqI,MAAQ,GAEfrI,KAAKwQ,SAAWxQ,KAAKqI,MAAQrI,KAAK4qB,iDAGpC5iB,MAAA,WACEhI,KAAK8oB,aAAc,KAGrBrjB,IAAA,SAAIwW,EAAQC,GAOV,GANKlc,KAAK8oB,cACR9oB,KAAK8oB,aAAc,EACnB9oB,KAAK6qB,SAAW,GAId3O,GAAQlc,KAAKwQ,SACfyL,EAAOwF,MAAQtZ,EAAaqB,SAASxJ,KAAKyhB,MAAMzhB,KAAKyhB,MAAMre,OAAS,QAC/D,CACL,IAAI0nB,EAAehmB,KAAK8K,MAAMsM,EAAOlc,KAAK4qB,uBACtCE,IAAiB9qB,KAAK6qB,UACxB7qB,KAAK6qB,QAAUC,EACf7O,EAAOwF,MAAQtZ,EAAaqB,SAASxJ,KAAKyhB,MAAMzhB,KAAK6qB,WAGzD,OAAO3O,EAAOlc,KAAKwQ,eCpCFua,cAEjB,WAAYC,EAAaC,EAAeL,GACpC5qB,KAAK8oB,aAAc,EACnB9oB,KAAKgrB,YAAc7rB,EAAK6rB,GACxBhrB,KAAKirB,cAAgBze,EAAOrN,EAAK8rB,IAAgB,GACjDjrB,KAAK4qB,sBAAwBpe,EAAOrN,EAAKyrB,GAAwB,GAC5DhqB,MAAMC,QAAQb,KAAKgrB,eACpBhrB,KAAKgrB,YAAc,CAAChrB,KAAKgrB,cAE7BhrB,KAAKwQ,SAAWxQ,KAAKgrB,YAAY5nB,OAASpD,KAAK4qB,yCAGnDnlB,IAAA,SAAIwW,EAAQC,GACR,IAAI4O,EAYJ,OAVIA,EADA5O,GAAQlc,KAAKwQ,SACExQ,KAAKgrB,YAAYhrB,KAAKgrB,YAAY5nB,OAAS,GAE3CpD,KAAKgrB,YAAYlmB,KAAK8K,MAAMsM,EAAOlc,KAAK4qB,wBAEvD5qB,KAAKirB,cACLhP,EAAO0F,OAAS1F,EAAO4F,WAAaiJ,EAEpC7O,EAAO2F,OAAS3F,EAAO6F,YAAcgJ,EAGlC5O,EAAOlc,KAAKwQ,eCzBN0a,cACnB,WAAYC,8BAAUb,mCAAAA,oBACpBtqB,KAAKsqB,UACHA,EAAU,aAAcnO,EACpBmO,EAAU,KACNnO,EAAYmO,GACtBtqB,KAAKmrB,MAAQnrB,KAAKorB,SAAW5e,EAAOrN,EAAKgsB,GAAQ,8BAGnDnjB,MAAA,SAAM4D,YAAAA,IAAAA,EAAa,GACjB5L,KAAKmrB,MAAQnrB,KAAKorB,SAClBprB,KAAKsqB,UAAUtiB,OAAShI,KAAKsqB,UAAUtiB,MAAM4D,MAG/CzH,KAAA,SAAKwH,EAAYC,YAAZD,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GAC5B5L,KAAKmrB,MAAQnrB,KAAKorB,SAClBprB,KAAKsqB,UAAUnmB,MAAQnE,KAAKsqB,UAAUnmB,KAAKwH,EAAOC,MAGpDnG,IAAA,SAAIwW,EAAQC,EAAMqO,GAEhB,IADA,IAAI/T,EAAI0F,EACD1F,GAAK,GAAKxW,KAAKmrB,MAAQ,GAAG,CAG/B,GAFA3U,EAAIxW,KAAKsqB,UAAU7kB,IAAIwW,EAAQzF,EAAG+T,GAClCA,GAAe,GACL,IAAN/T,EACF,SAEEA,GAAK,IACPxW,KAAKmrB,QACLnrB,KAAKsqB,UAAUtiB,OAAShI,KAAKsqB,UAAUtiB,SAG3C,OAAOwO,QC/BU6U,eACnB,WAAYnd,EAAGC,EAAGmd,EAAO1B,SAAM,OAC7BvoB,cAAM,CACJ6M,EAAAA,EACAC,EAAAA,GACC,EAAGyb,UACD0B,MAAQnsB,EAAKmsB,IAAU,8BAG9Bxd,KAAA,SAAKmO,EAAQC,GACX,GAAkB,GAAdlc,KAAKsrB,OAAetrB,KAAKurB,UAAYtP,EAAO/N,GAAKlO,KAAKwrB,UAAYvP,EAAO9N,EAC3EnO,KAAKwQ,SAAW,MAEb,CACH,IAAItC,EAAIlO,KAAK2pB,aAAa,GACxBxb,EAAInO,KAAK2pB,aAAa,GAExBzb,EAAE5K,KAAO2Y,EAAO/N,EAChBC,EAAE7K,KAAO2Y,EAAO9N,EAEhBD,EAAExG,MAAQwG,EAAE4W,GAAK5W,EAAE5K,KACnB6K,EAAEzG,MAAQyG,EAAE2W,GAAK3W,EAAE7K,KAEnB,IAAMmoB,EAAa3mB,KAAKyV,KAAKrM,EAAExG,MAAQwG,EAAExG,MAAQyG,EAAEzG,MAAQyG,EAAEzG,OAE7D1H,KAAKwQ,SA3Bc,GA2BHib,EAAgCzrB,KAAKsrB,MAGvDI,YAAM5d,eAAKmO,EAAQC,OA5BWwN,GCHbiC,cAEpB,iCAGAlmB,IAAA,SAAIwW,EAAQC,GACX,OAAOC,EAASqB,0BCLGoO,cACnB,WAAYtB,EAAWa,GACrBnrB,KAAKsqB,UAAYA,EACjBtqB,KAAKmrB,MAAQ3e,EAAOrN,EAAKgsB,GAAQ,sBAGnC1lB,IAAA,SAAIwW,EAAQC,GACV,GAAIlc,KAAKmrB,OAAS,EAChB,OAAOjP,EAGP,IAAI1F,EAAIxW,KAAKsqB,UAAU7kB,IAAIwW,EAAQC,GAInC,OAHI1F,GAAK,GACPxW,KAAKmrB,QAEA3U,QChBQqV,cAEnB,WAAYC,EAAWtb,GACrBxQ,KAAK8oB,aAAc,EACnB9oB,KAAKwQ,SAAWrR,EAAKqR,GACrBxQ,KAAK+rB,UAAY5sB,EAAK2sB,GACtB9rB,KAAKgsB,cAAgBhsB,KAAK+rB,UAAY,6BAGxC/jB,MAAA,WACEhI,KAAK8oB,aAAc,KAGrBrjB,IAAA,SAAIwW,EAAQC,GAiBV,OAhBKlc,KAAK8oB,cACR9oB,KAAK8oB,aAAc,EACnB9oB,KAAKkO,EAAI+N,EAAO/N,EAChBlO,KAAKmO,EAAI8N,EAAO9N,GAId+N,GAAQlc,KAAKwQ,UAEfyL,EAAO/N,EAAIlO,KAAKkO,EAChB+N,EAAO9N,EAAInO,KAAKmO,IAGhB8N,EAAO/N,EAAIlO,KAAKkO,EAAIpJ,KAAKuK,SAAWrP,KAAK+rB,UAAY/rB,KAAKgsB,cAC1D/P,EAAO9N,EAAInO,KAAKmO,EAAIrJ,KAAKuK,SAAWrP,KAAK+rB,UAAY/rB,KAAKgsB,eAErD9P,EAAOlc,KAAKwQ,eChCFyb,cAEjB,aACIjsB,KAAKksB,UAAW,qBAGpBzmB,IAAA,SAAIwW,EAAQC,GAGR,OAFAD,EAAOjb,QAAUib,EAAOjb,SAAWhB,KAAKksB,SACxClsB,KAAKksB,UAAW,UCNlBC,cACJ,sCAKI,SAJFC,WACAC,YAAAA,aAAc,iBACLC,kBAAe3lB,QACxB4lB,WAAAA,kBAAa5lB,IAGb3G,KAAKosB,kBANI,KAOTtsB,OAAO+c,KAAK7c,KAAKosB,QAAQnpB,QAAQ,SAAAgD,GAC3BrF,MAAMC,QAAQQ,EAAK+qB,OAAOnmB,MAC5B5E,EAAK+qB,OAAOnmB,GAAK,IAAIkW,EAAS9a,EAAK+qB,OAAOnmB,OAI9CjG,KAAKqsB,YAAcA,EAEnBrsB,KAAKusB,WAAaA,EAElBvsB,KAAKwsB,iBAAmBF,EACxBtsB,KAAKysB,aAAezsB,KAAKosB,OAAOE,GAChCtsB,KAAK0sB,gCAA6B/lB,6BAGpCgmB,SAAA,SAASxO,EAAMte,cACb,GAAIse,IAASne,KAAKwsB,iBAAkB,CAClCxsB,KAAK0sB,2BAA6BvO,EAClC,IAAMyO,KAAiBzO,EAAK0O,OAAO,GAAGC,cAAgB3O,EAAKnL,MAAM,GAM3D+Z,EAL0B,CAC3B/sB,KAAKwsB,sBAAqBI,EAC1B5sB,KAAKwsB,2BACHI,GAEwC1P,KAC7C,SAAAiB,UAAQnZ,EAAKqnB,YAAYlO,KAEvB4O,GACF/sB,KAAKwsB,iBAAmBxsB,KAAK0sB,2BAC7B1sB,KAAKysB,aAAezsB,KAAKqsB,YAAYU,GACrC/sB,KAAKysB,cAAgBzsB,KAAKysB,aAAazkB,OAAShI,KAAKysB,aAAazkB,UAElEhI,KAAKwsB,iBAAmBxsB,KAAK0sB,2BAC7B1sB,KAAKysB,aAAezsB,KAAKosB,OAAOpsB,KAAKwsB,kBACrCxsB,KAAKysB,cAAgBzsB,KAAKysB,aAAazkB,OAAShI,KAAKysB,aAAazkB,QAClEhI,KAAK0sB,gCAA6B/lB,OAOxCxC,KAAA,SAAKwH,EAAYC,YAAZD,IAAAA,EAAQ,aAAIC,IAAAA,EAAa,GAC5B5L,KAAKysB,aAAatoB,MAAQnE,KAAKysB,aAAatoB,KAAKwH,EAAOC,MAG1DnG,IAAA,SAAIwW,EAAQC,EAAMuB,GAChB,IAAIJ,EAAWnB,EACXqO,EAAe9M,EACnB,GAAIzd,KAAKysB,aAAc,CAErB,IAAiB,KADjBpP,EAAWrd,KAAKysB,aAAahnB,IAAIwW,EAAQoB,EAAUkN,IAEjD,SAEFA,GAAe,EAEjB,GAAIlN,GAAY,IAAMrd,KAAKysB,aACzB,GAAIzsB,KAAK0sB,4BAMP,GALA1sB,KAAKwsB,iBAAmBxsB,KAAK0sB,2BAC7B1sB,KAAKysB,aAAezsB,KAAKosB,OAAOpsB,KAAKwsB,kBACrCxsB,KAAKysB,cAAgBzsB,KAAKysB,aAAazkB,OAAShI,KAAKysB,aAAazkB,QAClEhI,KAAK0sB,gCAA6B/lB,GAEjB,KADjB0W,EAAWrd,KAAKysB,aAAahnB,IAAIwW,EAAQoB,EAAUkN,IAEjD,cAGFvqB,KAAKysB,kBAAe9lB,EAGxB,OAAQ,QC/ESwjB,cAEpB,iCAGA1kB,IAAA,SAAIwW,EAAQC,GACX,OAAOC,EAASoB,wBCNG6M,cAEjB,iCAGA3kB,IAAA,SAAIwW,EAAQC,GAER,OADAD,EAAOjb,SAAU,EACVmb,EAASoB,wBCNHyP,cAEnB,WAAYxc,GACVxQ,KAAKwQ,SAAWhE,EAAOrN,EAAKqR,GAAW,sBAGzC/K,IAAA,SAAIwW,EAAQC,GAGV,OADAD,EAAOjb,QAAWkb,GAAQlc,KAAKwQ,SACxB0L,EAAOlc,KAAKwQ,kBC+BR,CACb4O,SAtBW,sCAAI9P,2BAAAA,2BAAagZ,EAAahZ,IAuBzCoa,SAtBW,sCAAIpa,2BAAAA,2BAAaoc,EAAapc,IAuBzC6a,IAtBM,sCAAI7a,2BAAAA,2BAAa2d,EAAQ3d,IAuB/B8a,YAtBc,sCAAI9a,2BAAAA,2BAAa4d,EAAgB5d,IAuB/C+a,QAtBU,sCAAI/a,2BAAAA,2BAAa6d,EAAY7d,IAuBvCkb,GAtBK,sCAAIlb,2BAAAA,2BAAa8d,EAAO9d,IAuB7B5G,MAtBQ,sCAAI4G,2BAAAA,2BAAa4Y,GAAU5Y,IAuBnCyb,WAtBa,sCAAIzb,2BAAAA,2BAAa+d,GAAe/d,IAuB7C4b,KAtBO,sCAAI5b,2BAAAA,2BAAage,GAAShe,IAuBjC+b,KAtBO,sCAAI/b,2BAAAA,2BAAaie,GAASje,IAuBjCsc,KAtBO,sCAAItc,2BAAAA,2BAAake,GAASle,IAuBjCqc,OAtBS,sCAAIrc,2BAAAA,2BAAame,GAAWne,IAuBrC6M,SAtBW,sCAAI7M,2BAAAA,2BAAaoe,EAAape,IAuBzCuc,MAtBQ,sCAAIvc,2BAAAA,2BAAaqe,GAAUre,IAuBnC2c,SAtBW,sCAAI3c,2BAAAA,2BAAase,GAAate,IAuBzC6c,MAtBQ,sCAAI7c,2BAAAA,2BAAaue,GAAUve,IAuBnCwe,KAtBO,sCAAIxe,2BAAAA,2BAAaye,GAASze,IAuBjC0e,aAtBe,sCAAI1e,2BAAAA,2BAAa2e,GAAiB3e,IAuBjD0M,KAtBO,sCAAI1M,2BAAAA,2BAAa4e,EAAS5e,IAuBjC0d,aAtBe,sCAAI1d,2BAAAA,2BAAa6e,GAAiB7e,2DClCtC,sCAAIA,2BAAAA,2BAAa8e,EAAW9e"}