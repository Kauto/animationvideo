{"version":3,"file":"animationvideo.js","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes/NormCamera.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StackBlur.mjs","../Sprites/StackBlurCanvas.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Stop.mjs","../Animations/StopDisabled.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvas = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the output canvas\n    this._output.canvas = options.canvas;\n    if (\n      !(\n        typeof options.canvas === \"object\" &&\n        options.canvas !== null &&\n        options.canvas.getContext\n      )\n    ) {\n      throw new Error(\"Countn't create contect for canvas in Engine\");\n    }\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas.width;\n      this._output.height = this._output.canvas.height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n    this.switchScene(options.scene);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.audioElement) {\n      this._scene.audioElement.play();\n    }\n  }\n\n  _normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(width / this._autoSize.currentScale);\n      this._output.canvas.height = Math.round(height / this._autoSize.currentScale);\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas.width;\n    this._output.height = this._output.canvas.height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n    return this;\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (this._recalculateCanvas) {\n        this.recalculateCanvas();\n        this._recalculateCanvas = false;\n      }\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(this._timePassed);\n        this._timePassed = this._timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        this._normalizeContext(this._output.context);\n        if (this._isSceneInitialized) {\n          if (this._timePassed !== 0) {\n            if (this._autoSize && this._autoSize.enabled) {\n              now = window.performance ? performance.now() : Date.now();\n            }\n\n            this._scene.move(this._output, this._timePassed);\n\n            // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n            if (this._timePassed < 0) {\n              this._timePassed = this._scene.totalTimePassed;\n            }\n\n            this._scene.draw(this._output);\n\n            if (this._autoSize && this._autoSize.enabled) {\n              const delta =\n                (window.performance ? performance.now() : Date.now()) -\n                now -\n                this._autoSize.offsetTimeTarget;\n              if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n                this._autoSize.currentWaitedTime +=\n                  timestamp - this._realLastTimestamp;\n              } else {\n                if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                  this._autoSize.currentOffsetTime =\n                    this._autoSize.currentOffsetTime >= 0\n                      ? Math.max(\n                          0,\n                          this._autoSize.currentOffsetTime -\n                            this._autoSize.offsetTimeDelta\n                        )\n                      : Math.min(\n                          0,\n                          this._autoSize.currentOffsetTime +\n                            this._autoSize.offsetTimeDelta\n                        );\n                } else {\n                  if (\n                    delta < 0 &&\n                    this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime <=\n                      this._autoSize.offsetTimeLimitDown\n                    ) {\n                      this._autoSize.currentScale = Math.max(\n                        this._autoSize.scaleLimitMin,\n                        this._autoSize.currentScale / this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  } else if (\n                    delta > 0 &&\n                    this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime >=\n                      this._autoSize.offsetTimeLimitUp\n                    ) {\n                      this._autoSize.currentScale = Math.min(\n                        this._autoSize.scaleLimitMax,\n                        this._autoSize.currentScale * this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          this._isSceneInitialized = this._scene.callLoading(this._output);\n          if (this._isSceneInitialized) {\n            this._scene.reset(this._output);\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output)\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        if (Images[i].substr(0,4) === '<svg') {\n          const  DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], {type: 'image/svg+xml'});\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        }else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\nreturn self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded() ? true : new Promise((resolve, reject) => {\n      self.resolve = resolve\n    });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    this.layer[id] = element;\n    this.isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this.nextFree + 1;\n    while (nextFree !== len && layer[nextFree]) {\n      nextFree++;\n    }\n    this.nextFree = nextFree;\n    if (this.start > id) {\n      this.start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    if (len === id) {\n      this.layer = this.layer.concat(arrayOfElements);\n      this.nextFree = this.layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this.isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this.layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this.layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this.layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this.layer[elementId] = null;\n      while (len && !this.layer[len - 1]) {\n        len--;\n      }\n      this.layer.length = len;\n      this.isFunction.length = len;\n      this.nextFree = Math.min(this.nextFree, len);\n      this.start = Math.min(this.start, len);\n    } else {\n      this.layer[elementId] = null;\n      this.nextFree = Math.min(this.nextFree, elementId);\n      if (this.start === elementId) {\n        this.start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this.layer.length;\n    for (index = this.start; index < l; index++) {\n      element = this.layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this.isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    let count = 0;\n    const l = this.layer.length;\n    for (let index = this.start; index < l; index++) {\n      if (this.layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this.layers = [];\n  }\n\n  addLayer() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers[this.layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer());\n    this.layers = this.layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this.layers.length\n    );\n    this.layers = this.layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this.layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this.layers.length;\n    for (i = 0; i < l; i++) {\n      this.layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this.layers.length;\n  }\n\n  clear() {\n    this.layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this._configuration = new configurationClassOrObject();\n    } else {\n      this._configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = ifNull(calc(this._configuration.tickChunk), 100 / 6);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this._configuration.fixedUpdate) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this._configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this._configuration.init &&\n        this._configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: ImageManager\n        })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this._configuration.destroy &&\n      this._configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n    return parameter;\n  }\n\n  loadingScreen(output, progress) {\n    if (this._configuration.loading) {\n      return this._configuration.loading({\n        engine: this.engine,\n        scene: this,\n        output,\n        progress\n      });\n    }\n    const ctx = output.context;\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.h)\n        : output.h;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(output, value);\n    return false;\n  }\n\n  fixedUpdate(output, timePassed) {\n    if (this._configuration.fixedUpdate) {\n      this._configuration.fixedUpdate({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this.totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timePassed = this.totalTimePassed;\n    } else if (\n      this._configuration.endTime &&\n      this._configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this.totalTimePassed - this._configuration.endTime;\n      this.totalTimePassed = this._configuration.endTime;\n      // End Engine\n      this._configuration.end &&\n        this._configuration.end({\n          engine: this.engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this.totalTimePassed\n        });\n    }\n\n    if (this.tickChunk) {\n      if (timePassed >= this.tickChunk - this.tickChunkTolerance) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        for (\n          let calcFrame = 0,\n            frames = Math.min(\n              this.maxSkippedTickChunk,\n              Math.floor(timePassed / this.tickChunk)\n            );\n          calcFrame < frames;\n          calcFrame++\n        ) {\n          this.fixedUpdate(output, this.tickChunk, calcFrame === frames - 1);\n        }\n      }\n    } else {\n      this.fixedUpdate(output, timePassed, true);\n    }\n\n    if (this._configuration.update) {\n      this._configuration.update({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            totalTimePassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    let result = this._configuration.reset\n      ? this._configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = this._configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === \"playing\") {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return (\n                this.audioPosition * 1000 +\n                Math.min(260, currentTime - this.audioStartTime)\n              );\n            } else if (\n              this.audioElement.currentTime - this.audioPosition < 0.5 &&\n              this.audioElement.currentTime > this.audioPosition &&\n              currentTime - this.audioStartTime < 350\n            ) {\n              this.audioStartTime =\n                this.audioStartTime +\n                (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return (\n                this.audioPosition * 1000 + currentTime - this.audioStartTime\n              );\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition =\n            (this.audioElement.ended\n              ? this.audioElement.duration\n              : this.audioElement.currentTime) * 1000;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return (\n          (this.audioElement.ended\n            ? this.audioElement.duration\n            : this.audioElement.currentTime) * 1000\n        );\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.callInit(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (\n        !(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        this.loadingScreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        let playPromise = this.audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this._configuration.endTime) {\n          this._configuration.endTime = this.audioElement.duration * 1000;\n        }\n        this.loadingScreen(output, \"Click to play\");\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n    this.cam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      this.transform = this._getViewportByCam(this.cam);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  _getViewportByCam(cam) {\n    const hw = this.engine.getWidth() / 2;\n    const hh = this.engine.getHeight() / 2;\n    const scale = this.engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      const hw = this.engine.getWidth() / 2;\n      const hh = this.engine.getHeight() / 2;\n      const scale = this.engine.getRatio() > 1 ? hw : hh;\n\n      this.transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneNorm from \"./Norm.mjs\";\nimport calc from \"../func/calc.mjs\";\n\nexport default class SceneNormCamera extends SceneNorm {\n  constructor(...args) {\n    super(...args);\n    this.camConfig = Object.assign(\n      {},\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 4,\n        registerEvents: true,\n        enabled: true,\n        callResize: true,\n        doubleClickDetectInterval: 350\n      },\n      calc(this._configuration.cam) || {}\n    );\n    if (!this._configuration.click) {\n      this._configuration.click = () => {};\n    }\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n\n    this._mousePos = {\n      _isDown: false,\n      _timestamp: 0\n    };\n  }\n\n  camEnable() {\n    this.camConfig.enabled = true;\n  }\n\n  camDisable() {\n    this.camConfig.enabled = false;\n  }\n\n  camReset() {\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  }\n\n  callInit(output, parameter, engine) {\n    if (this.camConfig.registerEvents) {\n      this.registerCamEvents(output.canvas);\n    }\n    return super.callInit(output, parameter, engine);\n  }\n\n  destroy(output) {\n    if (this.camConfig.registerEvents) {\n      this.destroyCamEvents(output.canvas);\n    }\n    return super.destroy(output);\n  }\n\n  _hasCamChanged() {\n    return (\n      this.toCam.x !== this.cam.x ||\n      this.toCam.y !== this.cam.y ||\n      this.toCam.zoom !== this.cam.zoom\n    );\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    const ret = super.fixedUpdate(output, timePassed);\n    if (this.camConfig.tween && this._hasCamChanged()) {\n      this.cam.x += (this.toCam.x - this.cam.x) / this.camConfig.tween;\n      this.cam.y += (this.toCam.y - this.cam.y) / this.camConfig.tween;\n      this.cam.zoom += (this.toCam.zoom - this.cam.zoom) / this.camConfig.tween;\n      if (lastCall) {\n        if (this.camConfig.callResize) {\n          this.resize(output);\n        } else {\n          this.transform = null;\n          this.transformInvert = null;\n        }\n      }\n    }\n    return ret;\n  }\n\n  move(output, timePassed) {\n    const ret = super.move(output, timePassed);\n    if (!this.camConfig.tween && this._hasCamChanged()) {\n      this.cam = Object.assign({}, this.toCam);\n      if (this.camConfig.callResize) {\n        this.resize(output);\n      } else {\n        this.transform = null;\n        this.transformInvert = null;\n      }\n    }\n    return ret;\n  }\n\n  registerCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.addEventListener(eventName, this._mouseDown.bind(this), true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.addEventListener(eventName, this._mouseUp.bind(this), true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.addEventListener(eventName, this._mouseOut.bind(this), true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.addEventListener(eventName, this._mouseMove.bind(this), true);\n    }\n    element.addEventListener(\"mousewheel\", this._mouseWheel.bind(this), true);\n  }\n\n  destroyCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.removeEventListener(eventName, this._mouseDown, true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.removeEventListener(eventName, this._mouseUp, true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.removeEventListener(eventName, this._mouseOut, true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.removeEventListener(eventName, this._mouseMove, true);\n    }\n    element.removeEventListener(\"mousewheel\", this._mouseWheel, true);\n  }\n\n  _getMousePosition(e) {\n    if (e && e.touches && e.touches.length > 0) {\n      const rect = e.target.getBoundingClientRect();\n      return [\n        e.targetTouches[0].pageX - rect.left,\n        e.targetTouches[0].pageY - rect.top\n      ];\n    }\n    return [e.offsetX, e.offsetY];\n  }\n\n  _mouseDown(e) {\n    e.preventDefault();\n    const [mx, my] = this._getMousePosition(e);\n    this._mousePos.x = mx;\n    this._mousePos.y = my;\n    this._mousePos._cx = this.toCam.x;\n    this._mousePos._cy = this.toCam.y;\n    this._mousePos._isDown = true;\n    this._mousePos._distance = undefined;\n    this._mousePos._timestamp = Date.now();\n  }\n  _mouseUp(e) {\n    e.preventDefault();\n    this._mousePos._isDown = false;\n    const [mx, my] = this._getMousePosition(e);\n    if (\n      Date.now() - this._mousePos._timestamp < 150 &&\n      Math.abs(this._mousePos.x - mx) < 5 &&\n      Math.abs(this._mousePos.y - my) < 5\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      if (this._configuration.doubleClick) {\n        if (this._mousePos.doubleClickTimer) {\n          clearTimeout(this._mousePos.doubleClickTimer);\n          this._mousePos.doubleClickTimer = undefined;\n          this._configuration.doubleClick(e, x, y);\n        } else {\n          this._mousePos.doubleClickTimer = setTimeout(() => {\n            this._mousePos.doubleClickTimer = undefined;\n            this._configuration.click(e, x, y);\n          }, this._configuration.doubleClickDetectInterval);\n        }\n      } else {\n        this._configuration.click(e, x, y);\n      }\n    }\n  }\n  _mouseOut(e) {\n    this._mousePos._isDown = false;\n  }\n  _mouseMove(e) {\n    e.preventDefault();\n    if (this.camConfig.enabled && this._mousePos._isDown) {\n      if (e.touches && e.touches.length >= 2) {\n        const t = e.touches;\n        // get distance of two fingers\n        const distance = Math.sqrt(\n          (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n            (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n        );\n        if (this._mousePos._distance === undefined) {\n          if (this._mousePos._distance > 0) {\n            this._mousePos._distance = distance;\n            this._mousePos._czoom = this.toCam.zoom;\n          }\n        } else {\n          this.toCam.zoom = Math.max(\n            this.camConfig.zoomMin,\n            Math.min(\n              this.camConfig.zoomMax,\n              this._mousePos._czoom * distance / this._mousePos._distance\n            )\n          );\n          this.clampView();\n        }\n      } else {\n        this._mousePos._distance = undefined;\n        const [mx, my] = this._getMousePosition(e);\n        const viewMatrix = this._getViewportByCam(this.toCam).invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos.x,\n          this._mousePos.y\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx, my);\n        this.toCam.x = this._mousePos._cx + ox - nx;\n        this.toCam.y = this._mousePos._cy + oy - ny;\n        this.clampView();\n      }\n    }\n  }\n  _mouseWheel(e) {\n    e.preventDefault();\n    if (this.camConfig.enabled) {\n      const [mx, my] = this._getMousePosition(e);\n      const [ox, oy] = this._getViewportByCam(this.toCam)\n        .invert()\n        .transformPoint(mx, my);\n      const wheelData = e.wheelDelta || e.deltaY * -1;\n      if (wheelData / 120 > 0) {\n        this.zoomIn();\n        const [nx, ny] = this._getViewportByCam(this.toCam)\n          .invert()\n          .transformPoint(mx, my);\n        this.toCam.x -= nx - ox;\n        this.toCam.y -= ny - oy;\n        this.clampView();\n      } else {\n        this.zoomOut();\n      }\n    }\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this.camConfig.zoomMax,\n      this.toCam.zoom * this.camConfig.zoomFactor\n    );\n  }\n  zoomOut() {\n    this.toCam.zoom = Math.max(\n      this.camConfig.zoomMin,\n      this.toCam.zoom / this.camConfig.zoomFactor\n    );\n    this.clampView();\n  }\n\n  clampView = function() {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= 2) {\n      if (x1 < -1) {\n        if (x2 <= 1) {\n          this.toCam.x += -1 - x1;\n        }\n      } else {\n        if (x2 > 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    } else {\n      if (x1 > -1) {\n        this.toCam.x += -1 - x1;\n      } else {\n        if (x2 < 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= 2) {\n      if (y1 < -1) {\n        if (y2 <= 1) {\n          this.toCam.y += -1 - y1;\n        }\n      } else {\n        if (y2 > 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    } else {\n      if (y1 > -1) {\n        this.toCam.y += -1 - y1;\n      } else {\n        if (y2 < 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    }\n  };\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\nimport _NormCamera from './Scenes/NormCamera.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n  NormCamera = (...args) => new _NormCamera(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio,\n  NormCamera\n};\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import Wait from \"./Wait.mjs\";\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof command.run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command }\n              : command\n          )\n          .filter(command => typeof command.run === \"function\"),\n        label: sequence.reduce((arr, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (sequencePosition.label.hasOwnProperty(label)) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position] &&\n            sequencePosition.sequence[sequencePosition.position].reset &&\n            sequencePosition.sequence[sequencePosition.position].reset();\n        } else {\n          b |=\n            sequencePosition.sequence.find(seq => {\n              return seq.play && seq.play(label, timelapsed);\n            }) >= 0;\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    const parameterList = this.getParameterList();\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      this[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, this)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  getBaseParameterList () {\n    return {\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result)\n          ? new Sequence(result)\n          : typeof result === \"object\"\n          ? result\n          : undefined;\n      },\n      // if it's rendering or not\n      enabled: true\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          value,\n          ifNull(\n            givenParameter.rotationInRadian,\n            ifNull(givenParameter.rotationInDegree, 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: 1.,\n      scaleY: 1.,\n      // alpha\n      alpha: 1.,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\"\n    });\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this.timePassed = 0;\n    this.deltaTime = 0;\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this.timePassed += timePassed;\n      this.deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timePassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n    for (let i in this.sprite) {\n      this.sprite[i].play && this.sprite[i].play(label, timelapsed);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          alpha: 1,\n          x: 0,\n          y: 0,\n          width: tw,\n          height: th,\n          widthInPixel: tw,\n          heightInPixel: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            width: tw,\n            height: th\n          }\n        });\n      }\n\n      this.additionalBlur && this.additionalBlur(tw, th, additionalModifier);\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(\n        this.temp_canvas,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height,\n        -wh,\n        -hh,\n        w,\n        h\n      );\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n    let staticArray = {},\n      functionArray = {};\n\n    for (let i in givenParameter) {\n      if (![\"self\", \"class\", \"count\"].includes(i)) {\n        if (typeof givenParameter[i] === \"function\") {\n          functionArray[i] = givenParameter[i];\n        } else {\n          staticArray[i] = givenParameter[i];\n        }\n      }\n    }\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n\n    for (let i = 0; i < count; i++) {\n      const classToEmit = givenParameter.class;\n      let parameter = {};\n      for (let index in staticArray) {\n        parameter[index] = staticArray[index];\n      }\n      for (let index in functionArray) {\n        parameter[index] = functionArray[index].call(null, i);\n      }\n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        this.additionalBlur && this.additionalBlur(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      // autoscale to max\n      norm: false,\n      normCover: false\n    });\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this.normScale) {\n        this.normScale = this.normCover\n          ? Math.max(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1;\n      }\n      const sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      text: undefined,\n      font: '1em monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(\n            256 >> gradientResolution\n          );\n        }\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled =\n        (this.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n        gradientSize;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      typeof from === 'string' ? pasition.path2shapes(from) : from,\n      typeof to === 'string' ? pasition.path2shapes(to) : to\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n      ifNull(\n        calc(value),\n        setParameter.x === undefined &&\n          setParameter.y === undefined &&\n          setParameter.width === undefined &&\n          setParameter.height === undefined\n      )\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.width;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.height;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import FastBlur from \"./FastBlur.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur\n\nexport default class StackBlur extends FastBlur {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm && this.onCanvas) {\n      this.x = 0;\n      this.y = 0;\n      this.width = additionalModifier.widthInPixel;\n      this.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(this.imageData, 0, 0, targetW, targetH, additionalModifier.radius);\n    this.tctx.putImageData(this.imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.radius === undefined || this.currentRadiusPart !== this.radiusPart) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      const radius = Math.round(this.radius);\n      if (radius) {\n        if (this.onCanvas) {\n          if (this.width === undefined || this.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(this.x);\n          const y = Math.round(this.y);\n          const w = Math.round(this.width);\n          const h = Math.round(this.height);\n          this.imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(this.imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(this.imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import CanvasSprite from \"./Canvas.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur \n\nexport default class StackBlurCanvas extends CanvasSprite {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    if (additionalModifier.radius) {\n      this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n      imageDataRGBA(\n        this.imageData,\n        0,\n        0,\n        targetW,\n        targetH,\n        additionalModifier.radius\n      );\n      this.tctx.putImageData(this.imageData, 0, 0);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (\n        this.radius === undefined ||\n        this.currentRadiusPart !== this.radiusPart\n      ) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      additionalModifier.radius = Math.round(this.radius);\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true\n    });\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    const projectX = this.centerX + (x / z) * hw;\n    const projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n      let lw = (1 - this.starsZ[i] / this.scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this.starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - (this.starsLineWidth[i] * this.lineWidth) / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this.starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n                context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n                context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StackBlur from './Sprites/StackBlur.mjs';\nimport _StackBlurCanvas from './Sprites/StackBlurCanvas.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StackBlur = (...args) => new _StackBlur(...args);\n  StackBlurCanvas = (...args) => new _StackBlurCanvas(...args);\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StackBlurCanvas,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport Color from 'color';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite)\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ?  orgValue * degToRad : orgValue;\n      const name = k === \"rotationInRadian\" || k === \"rotationInDegree\" ? \"rotation\" : k;\n      const isColor = k === 'color';\n      const isPath = k === 'path';\n      const isFunction = typeof value === 'function';\n      const isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor,\n        isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(data.from, data.to);\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(sprite[data.name], data.to);\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.currentState.play && this.currentState.play(label, timelapsed);\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_STOP;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_STOP;\n    };\n}","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _StopDisabled from './Animations/StopDisabled.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Stop = (...args) => new _Stop(...args),\n  StopDisabled = (...args) => new _StopDisabled(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","params","apply","Engine","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","scene","autoSize","clickToPlayAudio","this","_output","context","width","height","ratio","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvas","_referenceRequestAnimationFrame","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","_this","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","offsetTimeTarget","offsetTimeDelta","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","_autoSize","window","addEventListener","recalculateCanvas","bind","document","handleVisibilityChange","playAudioOfScene","switchScene","visibilityState","audioElement","play","_normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","Math","round","style","resize","run","initParameter","requestAnimationFrame","mainLoop","timestamp","_realLastTimestamp","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","shiftTime","performance","Date","move","totalTimePassed","draw","delta","abs","max","min","callLoading","reset","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","count","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","layer","isFunction","start","nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","clear","LayerManager","layers","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","ifNull","value","alternative","Scene","configurationClassOrObject","_configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","fixedUpdate","output","parameter","images","init","imageManager","then","res","alpha","x","y","widthInPixel","heightInPixel","visibleScreen","_this2","loadingScreen","progress","loading","loadedHeight","h","clearRect","w","fillStyle","fillRect","font","text","isNaN","parseFloat","fillText","random","endTime","end","calcFrame","frames","floor","update","animate","_this3","isArray","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","controller","playbackState","ended","duration","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","playPromise","e","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","cam","zoom","_getViewport","_getViewportByCam","hw","hh","scaleCanvas","x1","y1","save","setTransform","_Scene","restore","SceneNormAudio","_SceneAudio","SceneNormCamera","clampView","toCam","x2","y2","camConfig","zoomMax","zoomMin","zoomFactor","tween","registerEvents","callResize","doubleClickDetectInterval","click","_mousePos","_isDown","_timestamp","camEnable","camDisable","camReset","registerCamEvents","destroyCamEvents","_hasCamChanged","lastCall","ret","_mouseDown","_mouseUp","_mouseOut","_mouseMove","_mouseWheel","_getMousePosition","touches","rect","target","getBoundingClientRect","targetTouches","pageX","left","pageY","top","offsetX","offsetY","preventDefault","my","_cx","_cy","_distance","mx","doubleClick","doubleClickTimer","clearTimeout","setTimeout","t","distance","sqrt","_czoom","viewMatrix","ox","oy","ny","wheelDelta","deltaY","zoomIn","zoomOut","NormCamera","_NormCamera","Default","_Default","Audio","_Audio","Norm","_Norm","NormAudio","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","position","timelapsed","command","filter","label","reduce","arr","keys","lastTimestamp","sequencePosition","b","hasOwnProperty","find","seq","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","Circle","givenParameter","parameterList","getParameterList","name","getBaseParameterList","animation","rotation","rotationInRadian","rotationInDegree","scaleX","scaleY","compositeOperation","color","timepassed","beginPath","arc","PI","fill","closePath","Callback","deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","currentGridSize","gridSize","norm","setParameter","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","additionalBlur","Emitter","staticArray","functionArray","includes","classToEmit","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normCover","normScale","sX","sY","LEFT_TOP","Text","givenParameters","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","Scroller","characterList","class","imageDataRGBA","stackblur","StackBlur","currentRadiusPart","onCanvas","radius","radiusPart","_FastBlur","imageData","putImageData","StackBlurCanvas","_CanvasSprite","CanvasSprite","StarField","centerX","moveX","moveY","moveZ","highScale","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","lineTo","_Image","_Text","_StackBlurCanvas","_StarField","_Callback","_Canvas","_Circle","_Emitter","_Group","_Particle","_Path","_Rect","_Scroller","_StackBlur","initialized","degToRad","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","push","bezier","moveAlgorithm","End","EndDisabled","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","_ChangeTo","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","defaultState","delegateTo","currentStateName","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","WaitDisabled","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","Stop","_Stop","StopDisabled","_StopDisabled","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}