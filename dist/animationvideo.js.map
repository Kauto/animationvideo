{"version":3,"file":"animationvideo.js","sources":["../src/lib/Engine.js","../src/lib/ImageManager.js","../src/lib/Scenes/Default.js","../src/lib/Scenes/Audio.js","../src/func/transform.js","../src/lib/Scenes/Norm.js","../src/lib/Scenes/NormAudio.js","../src/lib/Scenes.js","../src/func/ifnull.js","../src/func/calc.js","../src/lib/Sprites/Circle.js","../src/lib/Sprites/Callback.js","../src/lib/Sprites/Group.js","../src/lib/Sprites/Canvas.js","../src/lib/Sprites/Emitter.js","../src/lib/Sprites/FastBlur.js","../src/lib/Sprites/Image.js","../src/lib/Sprites/Text.js","../src/lib/Sprites/Particle.js","../src/lib/Sprites/Path.js","../src/lib/Sprites/Rect.js","../src/lib/Sprites/Scroller.js","../src/lib/Sprites/StarField.js","../src/lib/Sprites.js","../src/lib/Sequence.js","../src/lib/Animations/Callback.js","../src/lib/Animations/ChangeTo.js","../src/lib/Animations/End.js","../src/lib/Animations/EndDisabled.js","../src/lib/Animations/Image.js","../src/lib/Animations/ImageFrame.js","../src/lib/Animations/Move.js","../src/lib/Animations/Once.js","../src/lib/Animations/Play.js","../src/lib/Animations/Shake.js","../src/lib/Animations/ShowOnce.js","../src/lib/Animations/Stop.js","../src/lib/Animations/Wait.js","../src/lib/Animations/WaitDisabled.js","../src/lib/Animations.js","../src/animationvideo.js"],"sourcesContent":["'use strict';\n\nclass Engine {\n  constructor(canvas, scene, autoresize) {\n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n\n    // data about the _output canvas\n    this._output.canvas = canvas;\n    if (!(typeof(canvas) === \"object\" && canvas !== null && canvas.getContext)) {\n      throw 'No context';\n    }\n    this._output.context = canvas.getContext(\"2d\");\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    if (autoresize) {\n      window.addEventListener('resize', this.maximizeCanvas, false);\n      window.addEventListener('orientationchange', this.maximizeCanvas, false);\n      this.resize();\n\n      canvas.addEventListener('click', () => {\n        if (this._isSceneInitialized && this._scene.audioElement) {\n          this._scene.audioElement.play();\n        }\n      }, false);\n    }\n    this.changeScene(scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = 'source-over';\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  maximizeCanvas() {\n    let gameArea = self.output.canvas;\n    let newWidth = window.innerWidth;\n    let newHeight = window.innerHeight;\n    let newWidthToHeight = newWidth / newHeight;\n\n    if (newWidthToHeight > self.output.ratio) {\n      newWidth = newHeight * self.output.ratio;\n      gameArea.style.height = newHeight + 'px';\n      gameArea.style.width = newWidth + 'px';\n    } else {\n      newHeight = newWidth / self.output.ratio;\n      gameArea.style.width = newWidth + 'px';\n      gameArea.style.height = newHeight + 'px';\n    }\n\n    gameArea.style.marginTop = (-newHeight / 2) + 'px';\n    gameArea.style.marginLeft = (-newWidth / 2) + 'px';\n\n    $(self.output.canvas).css({\n      width: newWidth,\n      height: newHeight\n    });\n    $(self.output.canvas).siblings().css({\n      width: newWidth\n    });\n  };\n\n  changeScene(scene) {\n    this._newScene = scene;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = (this._isSceneInitialized ? this._scene.getPercentLoaded() : 0);\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'bottom';\n    ctx.fillText(\"Loading \" + percent + \"%\", 10 + Math.random() * 3, this._output.h - 10 + Math.random() * 3);\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n\n    initParameter = initParameter || {};\n\n    function mainLoop() {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(mainLoop.bind(this));\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = (this._scene ? this._scene.destroy(this._output) : initParameter);\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      let now = this._scene.currentTime();\n      this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n\n      this._lastTimestamp = now;\n\n      if (this._isSceneInitialized) {\n        if (this._timePassed !== 0) {\n          this._scene.move(this._output, this._timePassed);\n\n          // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n          if (this._timePassed < 0) {\n            this._timePassed = this._scene.totalTimePassed;\n          }\n\n          this._scene.draw(this._output);\n        }\n      } else {\n        this._isSceneInitialized = this._scene.callLoading(this._output);\n      }\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(mainLoop.bind(this));\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame && window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n        };\n        self.Images[i].src = Images[i];\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","'use strict';\nimport ImageManager from '../ImageManager';\n\nclass Scene {\n  constructor(endTime) {\n    // Layer consists of Sprites\n    this.layer = [];\n\n    // For precalculation if a layer is a function\n    this._cacheLayerIsFunction = [];\n\n    this.totalTimePassed = 0;\n\n    this.initCallback = null;\n    this.loadingCallback = null;\n    this.destroyCallback = null;\n    this.sceneCallback = null;\n    this.engine = null;\n    this.loadingShow = true;\n    this.endTime = endTime;\n    this.additionalModifier = undefined;\n  }\n\n  currentTime() {\n    return Date.now();\n  }\n\n  clampTime(timePassed) {\n    if (timePassed > 2000) {\n      return 2000;\n    }\n    return timePassed;\n  }\n\n  init(callbackOrImages) {\n    if (typeof callbackOrImages === 'function') {\n      this.initCallback = callbackOrImages;\n    } else {\n      ImageManager.add(callbackOrImages);\n    }\n    return this;\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.initCallback && this.initCallback(output, parameter);\n    this.resize(output)\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: 0,\n      y: 0,\n      w: output.w,\n      h: output.h,\n      orgW: output.w,\n      orgH: output.h\n    }\n  }\n\n  destroy(callback) {\n    this.destroyCallback = callback;\n    return this;\n  }\n\n  scene(callback) {\n    this.sceneCallback = callback;\n    return this;\n  }\n\n  callDestroy(output) {\n    if (this.destroyCallback) {\n      return this.destroyCallback(output);\n    } else {\n      return true;\n    }\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - (loadedHeight / 2), output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'bottom';\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(text, 10 + Math.random() * 3, output.h - 10 + Math.random() * 3);\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  loading(callbackOrBool) {\n    if (typeof callback === 'function') {\n      this.loadingCallback = callback;\n      this.loadingShow = true;\n    } else {\n      this.loadingCallback = null;\n      this.loadingShow = !!callbackOrBool;\n    }\n    return this;\n  }\n\n  callLoading(output) {\n    const imagePercentage = ImageManager.getCount() && ImageManager.getLoaded() < ImageManager.getCount() && ImageManager.getLoaded() / ImageManager.getCount();\n\n    if (this.loadingShow) {\n      if (this.loadingCallback) {\n        let result = this.loadingCallback(output, imagePercentage);\n        if (result === null) {\n          return false;\n        } else if (result !== true) {\n          this.loadingscreen(output, result ? result : (imagePercentage || 'Loading...'));\n          return false;\n        }\n      } else {\n        if (imagePercentage) {\n          this.loadingscreen(output, imagePercentage);\n        }\n      }\n    }\n\n    if (imagePercentage) {\n      return false;\n    }\n\n    this.reset(output);\n    return true;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (this.endTime && this.endTime <= this.totalTimePassed) {\n      // End Engine\n      this.engine.destroy();\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n    }\n\n    let l, i, lay, layif;\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (!layif[i] && lay[i] !== null) {\n          if (lay[i].animate(timepassed)) {\n            this.layer[l][i] = null;\n          }\n        }\n      }\n    }\n  }\n\n  draw(output) {\n    let l, i, lay, layif;\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (lay[i] !== null) {\n          if (layif[i]) {\n            if (lay[i](output.context, this.totalTimePassed)) {\n              this.layer[l][i] = null;\n            }\n          }\n          else {\n            this.layer[l][i].draw(output.context, this.additionalModifier);\n          }\n        }\n      }\n    }\n  }\n\n  calcLayerIsFunction() {\n    this._cacheLayerIsFunction = new Array(this.layer.length);\n    for (let l in this.layer) {\n      this._cacheLayerIsFunction[l] = new Array(this.layer[l].length);\n      for (let i in this.layer[l]) {\n        this._cacheLayerIsFunction[l][i] = (typeof this.layer[l][i] === \"function\");\n      }\n    }\n  }\n\n  reset(output) {\n    this.layer = this.sceneCallback(output, []).reverse();\n    this.calcLayerIsFunction();\n  }\n}\n\nexport default Scene;\n","'use strict';\nimport Scene from './Default';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","'use strict';\nimport Scene from './Default';\nimport Transform from '../../func/transform';\n\nexport default class SceneNorm extends Scene {\n  constructor(endTime) {\n    super(endTime);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        const hw = this.engine._output.w / 2\n        const hh = this.engine._output.h / 2\n        const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = (new Transform())\n        .translate(hw, hh)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  resize(output) {\n    this.transform = undefined;\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  transformPoint(x, y) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x, y);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","'use strict';\nimport SceneAudio from './Audio';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default';\nimport _Audio from './Scenes/Audio';\nimport _Norm from './Scenes/Norm';\nimport _NormAudio from './Scenes/NormAudio';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  changeAnimationStatus(ani) {\n    if (typeof this.animation === \"object\") {\n      this.animation.changeAnimationStatus(ani);\n    }\n  };\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) >= 0) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from './Circle';\n\nexport default class Callback extends Circle{\n    constructor(params) {\n        super(params);\n        // Callback\n\t\tthis.callback = params.callback;\n    }\n\n    draw(context, additionalParameter) {\n\t\tif (this.enabled) {\n\t\t\tthis.callback(context, additionalParameter, this);\n\t\t}\n    }\n}","import ifNull from '../../func/ifnull';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite changeAnimationStatus\n  changeAnimationStatus(ani) {\n    // call super\n    super.changeAnimationStatus(ani);\n    // changeAnimationStatus for all sprites\n    for (let i in this.sprite) {\n      this.sprite[i].changeAnimationStatus(ani);\n    }\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = true;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = this.sprite[i].animate(timepassed) && spriteFinished;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.a < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../../func/calc';\nimport Group from './Group';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.round(w / this.scaleX);\n    this.temp_canvas.height = Math.round(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, false);\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, this.temp_canvas.width, this.temp_canvas.height, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Group from './Group';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nexport default class FastBlur extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    // Darker\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.ceil(w / this.scaleX);\n    this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.x) {\n      this.x = additionalModifier.x;\n    }\n    if (!this.y) {\n      this.y = additionalModifier.y;\n    }\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let a = this.a * additionalModifier.a,\n        w = this.width,\n        h = this.height,\n        targetW = Math.round(w * additionalModifier.orgW / additionalModifier.w / this.scaleX),\n        targetH = Math.round(h * additionalModifier.orgH / additionalModifier.h / this.scaleY);\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(context.canvas, 0, 0, context.canvas.width, context.canvas.height, 0, 0, targetW, targetH);\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear ? \"source-atop\" : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(this.temp_canvas, 0, 0, targetW, targetH, this.x, this.y, w, h);\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.w;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.h;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport ImageManager from '../ImageManager';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height,\n        sX = frameWidth * this.scaleX,\n        sY = frameHeight * this.scaleY;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        }\n        else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      }\n      else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -(sX >> 1),\n          -(sY >> 1),\n          sX,\n          sY\n        );\n        context.restore();\n\n      }\n    }\n  };\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.imageSmoothingEnabled = this.scaleX * additionalModifier.orgW / additionalModifier.w > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX / 2), this.y - (this.scaleY / 2), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Group from './Group';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach((curve) => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach((points) => {\n              this.path2D.bezierCurveTo(points[2], points[3], points[4], points[5], points[6], points[7]);\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1/scaleX, 1/scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n      \n      context.restore();\n    }\n  };\n}\n","import ifNull from '../../func/ifnull';\nimport calc from '../../func/calc';\nimport Circle from './Circle';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.w;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.h;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n      \n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.arc * degToRad);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-hw, -hh, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../../func/calc';\nimport Emitter from './Emitter';\nimport Text from './Text';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from \"../../func/ifnull\";\nimport calc from \"../../func/calc\";\nimport Rect from \"./Rect\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(params) {\n    super(params);\n    this.count = ifNull(calc(params.count), 40);\n    this.moveX = ifNull(calc(params.moveX), 0);\n    this.moveY = ifNull(calc(params.moveY), 0);\n    this.moveZ = ifNull(calc(params.moveZ), 0);\n    this.lineWidth = calc(params.lineWidth);\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n\t\t\tthis.height &&\n\t\t\tthis.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n\t\t}\n\t\tconst hw = this.width / 2;\n\t\tconst hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw ) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n\t\tconst projectX = this.centerX + (x / z) * hw;\n\t\tconst projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n\t\t\tthis.starsLineWidth[i] = Math.floor((1 - this.starsZ[i] / this.scaleZ) * 4) + 1;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.w;\n        this.height = this.height || additionalModifier.h;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n\t\t\t\tthis.lineWidth = this.lineWidth || (additionalModifier.h / additionalModifier.orgH) / 4;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - this.starsLineWidth[i] * this.lineWidth / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        let lw = 5,\n          i;\n        while (--lw) {\n          context.beginPath();\n          context.lineWidth = lw * this.lineWidth;\n          i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n            }\n          }\n          context.stroke();\n          context.closePath();\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback';\nimport _Canvas from './Sprites/Canvas';\nimport _Circle from './Sprites/Circle';\nimport _Emitter from './Sprites/Emitter';\nimport _FastBlur from './Sprites/FastBlur';\nimport _Group from './Sprites/Group';\nimport _Image from './Sprites/Image';\nimport _Text from './Sprites/Text';\nimport _Particle from './Sprites/Particle';\nimport _Path from './Sprites/Path';\nimport _Rect from './Sprites/Rect';\nimport _Scroller from './Sprites/Scroller';\nimport _StarField from './Sprites/StarField';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = obj || {};\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      this.animationPosition[i] = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          else {\n            hide_vote++;\n          }\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\nimport Color from 'color';\nimport pasition from 'pasition';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorTo.mix(data.colorFrom, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return pasition._lerp(data.pathFrom, data.pathTo, progress);\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(data.from), pasition.path2shapes(data.to));\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(sprite[data.name]), pasition.path2shapes(data.to));\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequenz from '../Sequence';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\nimport ImageManager from '../ImageManager';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (Array.isArray(this.frameNumber)) {\n            this.count = this.frameNumber.length;\n        } else {\n            this.frameNumber = [this.frameNumber];\n            this.count = 1;\n        }\n        this.duration = this.count * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = Math.floor(time / this.durationBetweenFrames);\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from '../../func/calc';\nimport ChangeTo from './ChangeTo';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t > 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../../func/calc';\nimport ifNull from '../../func/ifnull';\n\nexport default class Play {\n\n  constructor(name, duration, loop) {\n    this.duration = ifNull(calc(duration),1);\n    this.name = calc(name);\n    this.loop = calc(ifNull(loop, 1));\n  }\n\n  run(sprite, time) {\n    // return time left\n    if (time >= this.duration) {\n      // Play animation from the start\n      sprite.changeAnimationStatus({\n        [this.name]: {\n          position: 0,\n          timelapsed: (time - this.duration),\n          loop: this.loop\n        }\n      });\n    }\n    return time - this.duration;\n  };\n}","import calc from '../../func/calc';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Animation from '../Sequence';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Animation.TIMELAPSE_TO_STOP;\n\t}\n}","import calc from '../../func/calc';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../../func/calc';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback';\nimport _ChangeTo from './Animations/ChangeTo';\nimport _End from './Animations/End';\nimport _EndDisabled from './Animations/EndDisabled';\nimport _Image from './Animations/Image';\nimport _ImageFrame from './Animations/ImageFrame';\nimport _Move from './Animations/Move';\nimport _Once from './Animations/Once';\nimport _Play from './Animations/Play';\nimport _Shake from './Animations/Shake';\nimport _ShowOnce from './Animations/ShowOnce';\nimport _Stop from './Animations/Stop';\nimport _Wait from './Animations/Wait';\nimport _WaitDisabled from './Animations/WaitDisabled';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Play = (...args) => new _Play(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  Stop = (...args) => new _Stop(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Image,\n  ImageFrame,\n  Move,\n  Once,\n  Play,\n  Shake,\n  ShowOnce,\n  Stop,\n  Wait,\n  WaitDisabled\n};\n","'use strict';\n\nimport _Engine from './lib/Engine';\nimport Scenes from './lib/Scenes';\nimport ImageManager from './lib/ImageManager';\nimport Sprites from './lib/Sprites';\nimport _Sequence from './lib/Sequence';\nimport Animations from './lib/Animations';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args),\n  Sequence = (...args) => new _Sequence(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Sequence,\n  Animations,\n  Easing\n};"],"names":["Engine","constructor","canvas","scene","autoresize","_output","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_referenceRequestAnimationFrame","getContext","context","w","this","width","h","height","ratio","window","addEventListener","maximizeCanvas","resize","audioElement","play","changeScene","normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","gameArea","self","output","newWidth","innerWidth","newHeight","innerHeight","style","marginTop","marginLeft","css","$","siblings","loadingscreen","fillStyle","fillRect","font","percent","getPercentLoaded","fillText","Math","random","run","initParameter","requestAnimationFrame","mainLoop","bind","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","move","totalTimePassed","draw","callLoading","cancelAnimationFrame","ImageManager","add","Images","Callbacks","i","Image","onload","loaded","isLoaded","src","count","let","reset","getLoaded","getCount","getImage","nameOrImage","Scene","endTime","layer","_cacheLayerIsFunction","initCallback","loadingCallback","destroyCallback","sceneCallback","engine","loadingShow","additionalModifier","undefined","Date","timePassed","init","callbackOrImages","parameter","orgW","orgH","callback","callDestroy","progress","loadedHeight","max","clearRect","text","isNaN","parseFloat","round","loading","callbackOrBool","imagePercentage","result","timepassed","l","lay","layif","length","animate","calcLayerIsFunction","Array","reverse","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","super","controller","playbackState","min","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","c","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","transform","transformInvert","_getViewport","hw","hh","a","save","setTransform","ref","restore","SceneNormAudio","_Default","args","_Audio","_Norm","_NormAudio","ifNull","value","alternative","calc","apply","params","const","Circle","arc","scaleX","scaleY","alphaMode","color","animation","enabled","changeAnimationStatus","ani","beginPath","fill","closePath","Callback","additionalParameter","Group","sprite","finished","spriteFinished","Object","assign","Canvas","generateTempCanvas","temp_canvas","document","createElement","tctx","wh","drawImage","Emitter","staticArray","functionArray","indexOf","classToEmit","class","index","call","FastBlur","darker","pixel","clear","ceil","targetW","targetH","imageSmoothingEnabled","image","position","CENTER","frameX","frameY","frameWidth","frameHeight","sX","sY","LEFT_TOP","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","isArray","forEach","curve","moveTo","points","bezierCurveTo","stroke","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","centerX","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","floor","ret","lw","lineTo","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Image","_Text","_Particle","_Path","_Rect","_Scroller","_StarField","Sequence","loop","timeWait","obj","animationPosition","setObject","last_timestamp","hide_vote","object","timelapsed","time","is_difference","current_animationPosition","timeleft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","animation_count","disable_vote","duration","initialized","moveDefault","data","from","delta","moveBezier","copy","values","copyLength","moveColor","colorTo","mix","colorFrom","string","movePath","pasition","_lerp","pathFrom","pathTo","ChangeTo","changeValues","ease","k","isColor","isPath","isFunction","push","isBezier","bezier","moveAlgorithm","t","name","to","_preprocessing","path2shapes","End","Sequenz","EndDisabled","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Move","speed","targetX","targetY","hypotenuse","sqrt","Once","Aniobject","times","Play","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","Animation","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_ImageFrame","_Move","_Once","_Play","_Shake","_ShowOnce","_Stop","_Wait","_WaitDisabled","_Engine","_Sequence"],"mappings":"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"}