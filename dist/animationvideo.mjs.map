{"version":3,"file":"animationvideo.mjs","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes/NormCamera.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StackBlur.mjs","../Sprites/StackBlurCanvas.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Stop.mjs","../Animations/StopDisabled.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        /* undefined is falsy - saves a few bytes\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false,\n        reduceFramerate: false\n        */\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the output canvas\n    this._output.canvas = options.canvas;\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas.width;\n      this._output.height = this._output.canvas.height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n\n    this._reduceFramerate = options.reduceFramerate;\n    // not needed because undefined is falsy\n    // this._isOddFrame = true\n\n    this.switchScene(options.scene);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.getConfiguration().audioElement) {\n      this._scene.getConfiguration().audioElement.play();\n    }\n  }\n\n  _normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(\n        width / this._autoSize.currentScale\n      );\n      this._output.canvas.height = Math.round(\n        height / this._autoSize.currentScale\n      );\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas.width;\n    this._output.height = this._output.canvas.height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      let drawFrame = false;\n      if (\n        this._recalculateCanvasIntend &&\n        (!this._reduceFramerate || !this._isOddFrame)\n      ) {\n        this._recalculateCanvas();\n        this._recalculateCanvasIntend = false;\n        drawFrame = true;\n      }\n\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n          this._lastTimestamp = this._scene.currentTime();\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        if (this._reduceFramerate) {\n          this._isOddFrame = !this._isOddFrame;\n        }\n\n        if (!this._reduceFramerate || this._isOddFrame) {\n          let now = this._scene.currentTime();\n\n          // modify time by scene\n          // first set a min/max\n          let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n          // then maybe shift to fit a framerate\n          const shiftTime = this._scene.shiftTime(timePassed);\n          timePassed = timePassed + shiftTime;\n          this._lastTimestamp = now + shiftTime;\n\n          this._normalizeContext(this._output.context);\n          if (this._isSceneInitialized) {\n            const moveFrame = timePassed !== 0;\n            if (!drawFrame) {\n              drawFrame = !this._scene.isFrameToSkip(\n                this._output,\n                timePassed\n              );\n            }\n\n            const nowAutoSize = this._now();\n            if (moveFrame) {\n              this._scene.move(this._output, timePassed);\n            }\n\n            if (drawFrame) {\n              this._scene.draw(this._output);\n            }\n\n            if (this._autoSize && this._autoSize.enabled) {\n              const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n              if (\n                this._autoSize.currentWaitedTime < this._autoSize.waitTime\n              ) {\n                this._autoSize.currentWaitedTime += deltaTimestamp;\n              } else if (drawFrame && moveFrame) {\n                const targetTime =\n                  this._autoSize.offsetTimeTarget *\n                  (this._reduceFramerate ? 2 : 1);\n                const deltaFrame = this._now() - nowAutoSize;\n                const delta =\n                  (Math.abs(deltaTimestamp - targetTime) >\n                  Math.abs(deltaFrame - targetTime)\n                    ? deltaTimestamp\n                    : deltaFrame) - targetTime;\n                if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                  this._autoSize.currentOffsetTime =\n                    this._autoSize.currentOffsetTime >= 0\n                      ? Math.max(\n                          0,\n                          this._autoSize.currentOffsetTime -\n                            this._autoSize.offsetTimeDelta\n                        )\n                      : Math.min(\n                          0,\n                          this._autoSize.currentOffsetTime +\n                            this._autoSize.offsetTimeDelta\n                        );\n                } else {\n                  if (\n                    delta < 0 &&\n                    this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime <=\n                      -this._autoSize.offsetTimeLimitDown\n                    ) {\n                      this._autoSize.currentScale = Math.max(\n                        this._autoSize.scaleLimitMin,\n                        this._autoSize.currentScale /\n                          this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvasIntend = true;\n                    }\n                  } else if (\n                    delta > 0 &&\n                    this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime >=\n                      this._autoSize.offsetTimeLimitUp\n                    ) {\n                      this._autoSize.currentScale = Math.min(\n                        this._autoSize.scaleLimitMax,\n                        this._autoSize.currentScale *\n                          this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvasIntend = true;\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            this._isSceneInitialized = this._scene.callLoading({\n              output: this._output, \n              timePassed: this._realLastTimestamp - timestamp, \n              totalTimePassed: timestamp\n            });\n            if (this._isSceneInitialized) {\n              this._scene.reset(this._output);\n              this._lastTimestamp = this._scene.currentTime();\n              if (this._autoSize) {\n                this._autoSize.currentWaitedTime = 0;\n              }\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output);\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (const i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof Callbacks[i] === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[i].crossOrigin = \"anonymous\";\n        if (Images[i].substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], { type: \"image/svg+xml\" });\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        } else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof Callbacks[i] === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return self.loaded === self.count;\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          self.resolve = resolve;\n        });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = null;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else {\n      this._layer[elementId] = null;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this._isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer());\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      this._layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this._configuration = new configurationClassOrObject();\n    } else {\n      this._configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n\n    this._totalTimePassed = 0;\n\n    this._engine = null;\n    this._initDone = false;\n    this._additionalModifier = undefined;\n\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 100 / 6);\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  callInit(output, parameter, engine) {\n    this._engine = engine;\n    this.resize(output);\n    const images = calc(this._configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this._configuration.init &&\n        this._configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: ImageManager\n        })\n    ).then(res => (this._initDone = true));\n  }\n\n  resize(output) {\n    this._additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      },\n      fullScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this._additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this._configuration.destroy &&\n      this._configuration.destroy({\n        engine: this._engine,\n        scene: this,\n        output\n      });\n    this._initDone = false;\n    return parameter;\n  }\n\n  getConfiguration() {\n    return this._configuration;\n  }\n\n  loadingScreen({ output, progress }) {\n    if (this._configuration.loading) {\n      return this._configuration.loading({\n        engine: this._engine,\n        scene: this,\n        output,\n        progress\n      });\n    }\n    const ctx = output.context;\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNaN(parseFloat(progress))\n        ? progress\n        : \"Loading \" + Math.round(100 * progress) + \"%\",\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n\n  callLoading(args) {\n    if (ImageManager.isLoaded() && this._initDone) {\n      return true;\n    }\n    args.progress = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(args);\n    return false;\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    if (this._configuration.fixedUpdate) {\n      this._configuration.fixedUpdate({\n        engine: this._engine,\n        scene: this,\n        layerManager: this._layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this._totalTimePassed,\n        lastCall\n      });\n    }\n  }\n\n  isFrameToSkip(output, timePassed) {\n    return this._configuration.isFrameToSkip\n      ? this._configuration.isFrameToSkip({\n          engine: this._engine,\n          scene: this,\n          layerManager: this._layerManager,\n          output,\n          timePassed,\n          totalTimePassed: this._totalTimePassed\n        })\n      : timePassed === 0;\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset(output);\n      this._totalTimePassed = timePassed;\n    } else if (\n      this._configuration.endTime &&\n      this._configuration.endTime <= this._totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._configuration.endTime;\n      this._totalTimePassed = this._configuration.endTime;\n      // End Engine\n      this._configuration.end &&\n        this._configuration.end({\n          engine: this._engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this._totalTimePassed\n        });\n    }\n\n    if (this._tickChunk) {\n      if (timePassed >= this._tickChunk - this._tickChunkTolerance) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames =\n          Math.min(\n            this._maxSkippedTickChunk,\n            Math.floor(\n              (timePassed + this._tickChunkTolerance) / this._tickChunk\n            )\n          ) - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(output, this._tickChunk, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(output, timePassed, true);\n    }\n\n    if (this._configuration.update) {\n      this._configuration.update({\n        engine: this._engine,\n        scene: this,\n        layerManager: this._layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this._totalTimePassed\n      });\n    }\n\n    this._layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output) {\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this._engine,\n            scene: this,\n            layerManager: this._layerManager,\n            layer,\n            output,\n            totalTimePassed: this._totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this._additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    this._totalTimePassed = 0;\n    let result = this._configuration.reset\n      ? this._configuration.reset({\n          engine: this._engine,\n          scene: this,\n          layerManager: this._layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this._audioStartTime = null;\n    this._audioPosition = null;\n    this._enableAndroidHack = false;\n    this._audioElement = this._configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      const currentAudioTime =\n        (this._audioElement.ended\n          ? this._audioElement.duration\n          : this._audioElement.currentTime) * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === null) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition < 500 &&\n              currentAudioTime > this._audioPosition &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(args) {\n    // init audio\n    if (this._audioElement) {\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      this._audioElement.load();\n    }\n\n    return super.callInit(args);\n  }\n\n  callLoading(args) {\n    let loaded = super.callLoading(args);\n\n    if (loaded && this._audioElement) {\n      if (\n        !(this._audioElement.readyState >= this._audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        args.progress = \"Waiting for Audio\";\n        this.loadingScreen(args);\n        return false;\n      } else {\n        let playPromise = this._audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this._configuration.endTime && this._audioElement.duration > 0) {\n          this._configuration.endTime = this._audioElement.duration * 1000;\n        }\n\n        args.progress = \"Click to play\";\n        this.loadingScreen(args);\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this._transform = null;\n    this._transformInvert = null;\n    this.cam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };\n  }\n\n  _getViewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this._getViewportByCam(this.cam);\n      this._transformInvert = null;\n    }\n    return this._transform;\n  }\n\n  _getViewportByCam(cam) {\n    const hw = this._engine.getWidth() / 2;\n    const hh = this._engine.getHeight() / 2;\n    const scale = this._engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  resize(output) {\n    this._transform = null;\n    this._transformInvert = null;\n    this._additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this._additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    const transform = this._getViewportByCam({ x: 0, y: 0, zoom: 1 }).invert();\n    const [sx1, sy1] = transform.transformPoint(0, 0, 1);\n    const [sx2, sy2] = transform.transformPoint(output.width, output.height, 1);\n    this._additionalModifier.fullScreen = {\n      x: sx1,\n      y: sy1,\n      width: sx2 - sx1,\n      height: sy2 - sy1\n    };\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this._additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this._additionalModifier.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this._transform = null;\n    this._transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      const hw = this._engine.getWidth() / 2;\n      const hh = this._engine.getHeight() / 2;\n      const scale = this._engine.getRatio() > 1 ? hw : hh;\n\n      this._transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this._transformInvert = null;\n    }\n    return this._transform;\n  }\n\n  resize(output) {\n    this._transform = null;\n    this._transformInvert = null;\n    this._additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this._additionalModifier.fullScreen = this._additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n\n    this._layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this._additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this._additionalModifier.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneNorm from \"./Norm.mjs\";\nimport calc from \"../func/calc.mjs\";\n\nconst clickTime = 300;\n\nexport default class SceneNormCamera extends SceneNorm {\n  constructor(...args) {\n    super(...args);\n    this.camConfig = Object.assign(\n      {},\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        registerEvents: true,\n        preventDefault: true,\n        enabled: true,\n        callResize: true,\n        doubleClickDetectInterval: 350,\n        alternative: false\n      },\n      calc(this._configuration.cam) || {}\n    );\n    if (!this._configuration.click) {\n      this._configuration.click = () => {};\n    }\n    this.toCam = {\n      x: this.camConfig.currentX || 0,\n      y: this.camConfig.currentY || 0,\n      zoom: this.camConfig.currentZoom || 1\n    };\n\n    this._clampLimits = {\n      _x1: -1,\n      _y1: -1,\n      _x2: 1,\n      _y2: 1,\n      _w: 2,\n      _h: 2\n    };\n\n    this._mousePos = [];\n  }\n\n  camEnable() {\n    this.camConfig.enabled = true;\n    return this;\n  }\n\n  camDisable() {\n    this.camConfig.enabled = false;\n    return this;\n  }\n\n  camReset() {\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n    return this;\n  }\n\n  camTween(tween) {\n    this.camConfig.tween = tween;\n    return this;\n  }\n\n  camAlternative(bool) {\n    this._mousePos = [];\n    this.camConfig.alternative = bool;\n    return this;\n  }\n\n  setClampLimit(x1, y1, x2, y2) {\n    this._clampLimits = {\n      _x1: x1,\n      _y1: y1,\n      _x2: x2,\n      _y2: y2,\n      _w: x2 - x1,\n      _h: y2 - y1\n    };\n    return this;\n  }\n\n  callInit(output, parameter, engine) {\n    if (this.camConfig.registerEvents) {\n      this._registerCamEvents(output.canvas);\n    }\n    return super.callInit(output, parameter, engine);\n  }\n\n  destroy(output) {\n    if (this.camConfig.registerEvents) {\n      this._destroyCamEvents(output.canvas);\n    }\n    return super.destroy(output);\n  }\n\n  hasCamChanged() {\n    const t = this.camConfig.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this.cam.zoom) >= Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    if (this.camConfig.tween && this.hasCamChanged()) {\n      this.cam.x += (this.toCam.x - this.cam.x) / this.camConfig.tween;\n      this.cam.y += (this.toCam.y - this.cam.y) / this.camConfig.tween;\n      this.cam.zoom += (this.toCam.zoom - this.cam.zoom) / this.camConfig.tween;\n      if (lastCall) {\n        if (this.camConfig.callResize) {\n          this.resize(output);\n        } else {\n          this._transform = null;\n          this._transformInvert = null;\n        }\n      }\n    }\n    return super.fixedUpdate(output, timePassed, lastCall);\n  }\n\n  move(output, timePassed) {\n    const ret = super.move(output, timePassed);\n    if (!this.camConfig.tween && this.hasCamChanged()) {\n      this.cam = Object.assign({}, this.toCam);\n      if (this.camConfig.callResize) {\n        this.resize(output);\n      } else {\n        this._transform = null;\n        this._transformInvert = null;\n      }\n    }\n    return ret;\n  }\n\n  _registerCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.addEventListener(eventName, this._mouseDown.bind(this), true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.addEventListener(eventName, this._mouseUp.bind(this), true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.addEventListener(eventName, this._mouseOut.bind(this), true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.addEventListener(eventName, this._mouseMove.bind(this), true);\n    }\n    element.addEventListener(\"wheel\", this._mouseWheel.bind(this), true);\n    element.addEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  _destroyCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.removeEventListener(eventName, this._mouseDown, true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.removeEventListener(eventName, this._mouseUp, true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.removeEventListener(eventName, this._mouseOut, true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.removeEventListener(eventName, this._mouseMove, true);\n    }\n    element.removeEventListener(\"wheel\", this._mouseWheel, true);\n    element.removeEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  _eventPrevent(e) {\n    e.preventDefault();\n  }\n\n  _getMousePosition(e) {\n    let touches;\n    if (e.touches && e.touches.length > 0) {\n      touches = e.targetTouches;\n    } else if (e.changedTouches && e.changedTouches.length > 0) {\n      touches = e.changedTouches;\n    }\n    if (touches) {\n      const rect = e.target.getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top\n      ];\n    }\n    return [e.offsetX, e.offsetY];\n  }\n\n  _getMouseButton(e) {\n    return this.camConfig.alternative\n      ? e.which\n        ? e.which - 1\n        : e.button || 0\n      : 0;\n  }\n\n  _mouseDown(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const [mx, my] = this._getMousePosition(e);\n    const i = this._getMouseButton(e);\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e.touches && e.touches.length) || 1,\n      _distance: undefined,\n      _timestamp: Date.now()\n    });\n  }\n  _mouseUp(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const i = this._getMouseButton(e);\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e.changedTouches && e.changedTouches.length) || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n    if (!down || numOfFingers > 1) {\n      return;\n    }\n    const [mx, my] = this._getMousePosition(e);\n    if (\n      Date.now() - this._mousePos[i]._timestamp < clickTime &&\n      Math.abs(this._mousePos[i].x - mx) < 5 &&\n      Math.abs(this._mousePos[i].y - my) < 5 &&\n      !i // i === 0\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      if (this._configuration.doubleClick) {\n        if (this._mousePos[i].doubleClickTimer) {\n          clearTimeout(this._mousePos[i].doubleClickTimer);\n          this._mousePos[i].doubleClickTimer = undefined;\n          this._configuration.doubleClick({ event: e, x, y, scene: this });\n        } else {\n          this._mousePos[i].doubleClickTimer = setTimeout(() => {\n            this._mousePos[i].doubleClickTimer = undefined;\n            this._configuration.click({ event: e, x, y, scene: this });\n          }, this.camConfig.doubleClickDetectInterval);\n        }\n      } else {\n        this._configuration.click({ event: e, x, y, scene: this });\n      }\n    } else if (this.camConfig.alternative && !i /* i === 0 */) {\n      const [x, y] = this.transformPoint(mx, my);\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.region &&\n        this._configuration.region({\n          event: e,\n          x1: Math.min(ox, x),\n          y1: Math.min(oy, y),\n          x2: Math.max(ox, x),\n          y2: Math.max(oy, y),\n          fromX: ox,\n          fromY: oy,\n          toX: x,\n          toY: y,\n          scene: this\n        });\n    }\n  }\n  _mouseOut(e) {\n    const i = this._getMouseButton(e);\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n  _mouseMove(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const i = this._getMouseButton(e);\n    const [mx, my] = this._getMousePosition(e);\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      (e.which === 0 && !e.touches)\n    ) {\n      return;\n    }\n    if (this.camConfig.enabled) {\n      if (e.touches && e.touches.length >= 2) {\n        const t = e.touches;\n        // get distance of two finger\n        const distance = Math.sqrt(\n          (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n            (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n        );\n        if (this._mousePos[i]._distance === undefined) {\n          if (distance > 0) {\n            this._mousePos[i]._distance = distance;\n            this._mousePos[i]._czoom = this.toCam.zoom;\n          }\n        } else {\n          this.toCam.zoom = Math.max(\n            this.camConfig.zoomMin,\n            Math.min(\n              this.camConfig.zoomMax,\n              (this._mousePos[i]._czoom * distance) /\n                this._mousePos[i]._distance\n            )\n          );\n          if (this.camConfig.alternative) {\n            const viewMatrix = this._getViewportByCam(this.toCam).invert();\n            const [ox, oy] = viewMatrix.transformPoint(\n              this._mousePos[i].x,\n              this._mousePos[i].y\n            );\n            const [nx, ny] = viewMatrix.transformPoint(mx, my);\n            this.toCam.x = this._mousePos[i]._cx + ox - nx;\n            this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          }\n          this.clampView();\n        }\n      } else {\n        this._mousePos[i]._distance = undefined;\n        if (!this.camConfig.alternative || i === 2) {\n          const viewMatrix = this._getViewportByCam(this.toCam).invert();\n          const [ox, oy] = viewMatrix.transformPoint(\n            this._mousePos[i].x,\n            this._mousePos[i].y\n          );\n          const [nx, ny] = viewMatrix.transformPoint(mx, my);\n          this.toCam.x = this._mousePos[i]._cx + ox - nx;\n          this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          this.clampView();\n        }\n      }\n    }\n    if (\n      this.camConfig.alternative &&\n      i === 0 &&\n      this._configuration.regionMove &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!e.touches || e.touches.length === 1)\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.regionMove({\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n        scene: this\n      });\n    }\n  }\n  _mouseWheel(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (this.camConfig.enabled) {\n      const [mx, my] = this._getMousePosition(e);\n      const [ox, oy] = this._getViewportByCam(this.toCam)\n        .invert()\n        .transformPoint(mx, my);\n      const wheelData = e.wheelDelta || e.deltaY * -1;\n      if (wheelData / 120 > 0) {\n        this.zoomIn();\n        const [nx, ny] = this._getViewportByCam(this.toCam)\n          .invert()\n          .transformPoint(mx, my);\n        this.toCam.x -= nx - ox;\n        this.toCam.y -= ny - oy;\n        this.clampView();\n      } else {\n        this.zoomOut();\n      }\n    }\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this.camConfig.zoomMax,\n      this.toCam.zoom * this.camConfig.zoomFactor\n    );\n    return this;\n  }\n  zoomOut() {\n    this.toCam.zoom = Math.max(\n      this.camConfig.zoomMin,\n      this.toCam.zoom / this.camConfig.zoomFactor\n    );\n    this.clampView();\n    return this;\n  }\n  zoomTo(x1, y1, x2, y2) {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      this._engine.getWidth(),\n      this._engine.getHeight()\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    this.toCam.x = mx;\n    this.toCam.y = my;\n    this.toCam.zoom =\n      this.toCam.zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE);\n    return this;\n  }\n\n  clampView() {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      this._engine.getWidth(),\n      this._engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= this._clampLimits._w) {\n      if (x1 < this._clampLimits._x1) {\n        if (x2 <= this._clampLimits._x2) {\n          this.toCam.x += this._clampLimits._x1 - x1;\n        }\n      } else {\n        if (x2 > this._clampLimits._x2) {\n          this.toCam.x += this._clampLimits._x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > this._clampLimits._x1) {\n        this.toCam.x += this._clampLimits._x1 - x1;\n      } else {\n        if (x2 < this._clampLimits._x2) {\n          this.toCam.x += this._clampLimits._x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= this._clampLimits._h) {\n      if (y1 < this._clampLimits._y1) {\n        if (y2 <= this._clampLimits._y2) {\n          this.toCam.y += this._clampLimits._y1 - y1;\n        }\n      } else {\n        if (y2 > this._clampLimits._y2) {\n          this.toCam.y += this._clampLimits._y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > this._clampLimits._y1) {\n        this.toCam.y += this._clampLimits._y1 - y1;\n      } else {\n        if (y2 < this._clampLimits._y2) {\n          this.toCam.y += this._clampLimits._y2 - y2;\n        }\n      }\n    }\n    return this;\n  }\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\nimport _NormCamera from './Scenes/NormCamera.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n  NormCamera = (...args) => new _NormCamera(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio,\n  NormCamera\n};\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import Wait from \"./Wait.mjs\";\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    \n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof command.run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command }\n              : command\n          )\n          .filter(command => typeof command.run === \"function\"),\n        label: sequence.reduce((arr, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (sequencePosition.label.hasOwnProperty(label)) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position] &&\n            sequencePosition.sequence[sequencePosition.position].reset &&\n            sequencePosition.sequence[sequencePosition.position].reset();\n        } else {\n          b |=\n            sequencePosition.sequence.find(seq => {\n              return seq.play && seq.play(label, timelapsed);\n            }) >= 0;\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    const parameterList = this.getParameterList();\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      this[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, this)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  getBaseParameterList () {\n    return {\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result)\n          ? new Sequence(result)\n          : result;\n      },\n      // if it's rendering or not\n      enabled: true\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.rotationInRadian),\n            ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      scaleY: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      // alpha\n      alpha: 1.,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\"\n    });\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this._timePassed = 0;\n    this._deltaTime = 0;\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this._timePassed += timePassed;\n      this._deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this._timePassed, additionalParameter, this);\n    }\n    this._deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n    for (let i in this.sprite) {\n      this.sprite[i].play && this.sprite[i].play(label, timelapsed);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this._currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this._currentGridSize = this.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / this.scaleX);\n      this._temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\");\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this._tctx.globalCompositeOperation = \"copy\";\n      this._tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this._temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this._currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas.width,\n        th = this._temp_canvas.height;\n\n      this._tctx.textBaseline = \"middle\";\n      this._tctx.textAlign = \"center\";\n      this._tctx.globalAlpha = 1;\n      this._tctx.globalCompositeOperation = \"source-over\";\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this._tctx, {\n          alpha: 1,\n          x: 0,\n          y: 0,\n          width: tw,\n          height: th,\n          widthInPixel: tw,\n          heightInPixel: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            width: tw,\n            height: th\n          }\n        });\n      }\n\n      this.additionalBlur && this.additionalBlur(tw, th, additionalModifier);\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(\n        this._temp_canvas,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height,\n        -wh,\n        -hh,\n        w,\n        h\n      );\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      let parameter = {};\n      for (let index in givenParameter) {\n        if (![\"self\", \"class\", \"count\"].includes(index)) {\n          if (typeof givenParameter[index] === \"function\") {\n            parameter[index] = givenParameter[index].call(givenParameter, i);\n          } else {\n            parameter[index] = givenParameter[index];\n          }\n        }\n      } \n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this._currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this._currentGridSize = this.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / this.scaleX);\n      this._temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\");\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this._tctx.globalCompositeOperation = \"copy\";\n      this._tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this._temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this._currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this._temp_canvas.width,\n        targetH = this._temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx.globalCompositeOperation = \"copy\";\n        this._tctx.globalAlpha = 1;\n        this._tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this._tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this._tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        this.additionalBlur && this.additionalBlur(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this._temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n    });\n  }\n\n  resize() {\n    this._normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this._normScale) {\n        this._normScale = this.normToScreen ? (this.normCover\n          ? Math.max(\n              additionalModifier.fullScreen.width / frameWidth,\n              additionalModifier.fullScreen.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.fullScreen.width / frameWidth,\n              additionalModifier.fullScreen.height / frameHeight\n            )\n          : 1) : (this.normCover\n          ? Math.max(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1);\n      }\n      const sX = frameWidth * this._normScale * this.scaleX,\n        sY = frameHeight * this._normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      text: undefined,\n      font: '2em monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      Particle._Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle._Gradient.length; rIndex++) {\n        Particle._Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle._Gradient[rIndex].length; gIndex++) {\n          Particle._Gradient[rIndex][gIndex] = new Array(\n            256 >> gradientResolution\n          );\n        }\n      }\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled =\n        (this.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n        gradientSize;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      typeof from === 'string' ? pasition.path2shapes(from) : from,\n      typeof to === 'string' ? pasition.path2shapes(to) : to\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n      ifNull(\n        calc(value),\n        setParameter.x === undefined &&\n          setParameter.y === undefined &&\n          setParameter.width === undefined &&\n          setParameter.height === undefined\n      )\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.width === undefined) {\n        this.width = additionalModifier.width;\n      }\n      if (this.height === undefined) {\n        this.height = additionalModifier.height;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import FastBlur from \"./FastBlur.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur\n\nexport default class StackBlur extends FastBlur {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this._currentGridSize = false;\n    this._currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm && this.onCanvas) {\n      this.x = 0;\n      this.y = 0;\n      this.width = additionalModifier.widthInPixel;\n      this.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    const imageData = this._tctx.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius);\n    this._tctx.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.radius === undefined || this._currentRadiusPart !== this.radiusPart) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this._currentRadiusPart = this.radiusPart;\n      }\n      const radius = Math.round(this.radius);\n      if (radius) {\n        if (this.onCanvas) {\n          if (this.width === undefined || this.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(this.x);\n          const y = Math.round(this.y);\n          const w = Math.round(this.width);\n          const h = Math.round(this.height);\n          this.imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(this.imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(this.imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import CanvasSprite from \"./Canvas.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur \n\nexport default class StackBlurCanvas extends CanvasSprite {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this._currentGridSize = false;\n    this._currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    if (additionalModifier.radius) {\n      const imageData = this._tctx.getImageData(0, 0, targetW, targetH);\n      imageDataRGBA(\n        imageData,\n        0,\n        0,\n        targetW,\n        targetH,\n        additionalModifier.radius\n      );\n      this._tctx.putImageData(imageData, 0, 0);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (\n        this.radius === undefined ||\n        this._currentRadiusPart !== this.radiusPart\n      ) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this._currentRadiusPart = this.radiusPart;\n      }\n      additionalModifier.radius = Math.round(this.radius);\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this._centerX = undefined;\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true\n    });\n  }\n\n  init() {\n    this._centerX = this.width / 2 + this.x;\n    this._centerY = this.height / 2 + this.y;\n    this._scaleZ = Math.max(this.width, this.height) / 2;\n    this._starsX = [];\n    this._starsY = [];\n    this._starsZ = [];\n    this._starsOldX = [];\n    this._starsOldY = [];\n    this._starsNewX = [];\n    this._starsNewY = [];\n    this._starsEnabled = [];\n    this._starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this._starsX[i] = Math.random() * this.width - this.width / 2;\n      this._starsY[i] = Math.random() * this.height - this.height / 2;\n      this._starsZ[i] = Math.random() * this._scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this._starsX[i] + this.moveX * scaled_timepassed,\n      y = this._starsY[i] + this.moveY * scaled_timepassed,\n      z = this._starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this._centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(context, additionalModifier){}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this._centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] - (this._starsLineWidth[i] * this.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StackBlur from './Sprites/StackBlur.mjs';\nimport _StackBlurCanvas from './Sprites/StackBlurCanvas.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StackBlur = (...args) => new _StackBlur(...args);\n  StackBlurCanvas = (...args) => new _StackBlurCanvas(...args);\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StackBlurCanvas,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Color from \"color\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite);\n}\n\n// to values of a object\nexport default class ChangeTo {\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? orgValue * degToRad : orgValue;\n      const isColor = k === \"color\";\n      const isPath = k === \"path\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n          ? [\"rotation\"]\n          : [k];\n      for (const name of names) {\n        this.changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n          bezier: isBezier ? value : false,\n          isColor,\n          isPath,\n          isFunction: isFunction ? value : false,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n            ? movePath\n            : isBezier\n            ? moveBezier\n            : moveDefault\n        });\n      }\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, t => t);\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n            data.from,\n            data.to\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n          sprite[data.name],\n          data.to\n        );\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.currentState.play && this.currentState.play(label, timelapsed);\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_STOP;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_STOP;\n    };\n}","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _StopDisabled from './Animations/StopDisabled.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Stop = (...args) => new _Stop(...args),\n  StopDisabled = (...args) => new _StopDisabled(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","params","apply","Engine","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","this","_output","context","width","height","ratio","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_recalculateCanvasIntend","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","_this","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","offsetTimeTarget","offsetTimeDelta","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","_autoSize","window","addEventListener","recalculateCanvas","bind","document","handleVisibilityChange","clickToPlayAudio","playAudioOfScene","_reduceFramerate","reduceFramerate","switchScene","scene","visibilityState","getConfiguration","audioElement","play","_normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","_recalculateCanvas","Math","round","style","resize","_now","performance","now","Date","run","initParameter","requestAnimationFrame","mainLoop","timestamp","drawFrame","_isOddFrame","_realLastTimestamp","parameterForNewScene","destroy","callInit","currentTime","timePassed","clampTime","shiftTime","moveFrame","isFrameToSkip","nowAutoSize","move","draw","deltaTimestamp","targetTime","deltaFrame","delta","abs","max","min","callLoading","output","totalTimePassed","reset","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","count","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","_layer","_isFunction","_start","_nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","nextFree","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","isFunction","layer","clear","LayerManager","_layers","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","ifNull","value","alternative","Scene","configurationClassOrObject","_configuration","_layerManager","_totalTimePassed","_engine","_initDone","_additionalModifier","undefined","_tickChunk","tickChunk","_maxSkippedTickChunk","maxSkippedTickChunk","_tickChunkTolerance","tickChunkTolerance","maxTime","parameter","engine","images","init","imageManager","then","res","alpha","x","y","widthInPixel","heightInPixel","visibleScreen","fullScreen","_this2","loadingScreen","progress","loading","loadedHeight","clearRect","fillStyle","fillRect","font","fillText","isNaN","parseFloat","random","args","fixedUpdate","lastCall","layerManager","endTime","end","frames","floor","calcFrame","update","animate","_this3","isArray","layers","SceneAudio","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","currentAudioTime","ended","duration","controller","playbackState","MediaController","preload","load","readyState","HAVE_ENOUGH_DATA","playPromise","e","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","_transform","_transformInvert","cam","zoom","_getViewport","_getViewportByCam","hw","hh","scaleCanvas","x1","y1","transform","sx1","sy1","save","setTransform","_Scene","restore","SceneNormAudio","_SceneAudio","SceneNormCamera","camConfig","zoomMax","zoomMin","zoomFactor","tween","registerEvents","preventDefault","callResize","doubleClickDetectInterval","click","toCam","currentX","currentY","currentZoom","_clampLimits","_x1","_y1","_x2","_y2","_w","_h","_mousePos","camEnable","camDisable","camReset","camTween","camAlternative","bool","setClampLimit","x2","y2","_registerCamEvents","_destroyCamEvents","hasCamChanged","t","Number","EPSILON","ret","_mouseDown","_mouseUp","_mouseOut","_mouseMove","_mouseWheel","_eventPrevent","_getMousePosition","touches","targetTouches","changedTouches","rect","target","getBoundingClientRect","reduce","sum","pageX","left","pageY","top","offsetX","offsetY","_getMouseButton","which","button","mx","my","_cx","_cy","_isDown","_numOfFingers","_distance","_timestamp","down","numCurrentFingers","numOfFingers","doubleClick","doubleClickTimer","clearTimeout","event","setTimeout","ox","oy","region","fromX","fromY","toX","toY","distance","sqrt","_czoom","viewMatrix","ny","clampView","regionMove","wheelDelta","deltaY","zoomIn","zoomOut","zoomTo","w","h","zoomX","zoomY","MIN_VALUE","NormCamera","_NormCamera","Default","_Default","Audio","_Audio","Norm","_Norm","NormAudio","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","position","timelapsed","command","filter","label","arr","keys","lastTimestamp","sequencePosition","b","hasOwnProperty","find","seq","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","Circle","givenParameter","parameterList","getParameterList","name","getBaseParameterList","animation","rotation","rotationInRadian","rotationInDegree","scaleX","scaleY","compositeOperation","color","timepassed","additionalModifier","beginPath","arc","PI","fill","closePath","Callback","_timePassed","_deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","_currentGridSize","gridSize","norm","setParameter","generateTempCanvas","_temp_canvas","createElement","_tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","additionalBlur","Emitter","classToEmit","includes","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normCover","normToScreen","_normScale","sX","sY","LEFT_TOP","Text","givenParameters","text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","rIndex","gIndex","cr","cg","cb","_Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","Scroller","characterList","class","imageDataRGBA","stackblur","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","_FastBlur","imageData","putImageData","StackBlurCanvas","_CanvasSprite","CanvasSprite","StarField","_centerX","moveX","moveY","moveZ","highScale","_centerY","_scaleZ","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","lineTo","_Image","_Text","_StackBlurCanvas","_StarField","_Callback","_Canvas","_Circle","_Emitter","_Group","_Particle","_Path","_Rect","_Scroller","_StackBlur","initialized","degToRad","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","push","bezier","moveAlgorithm","End","EndDisabled","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","_ChangeTo","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","defaultState","delegateTo","currentStateName","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","WaitDisabled","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","Stop","_Stop","StopDisabled","_StopDisabled","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}