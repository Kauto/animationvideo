{"version":3,"file":"animationvideo.mjs","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvas = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the _output canvas\n    this._output.canvas = options.canvas;\n    if (\n      !(\n        typeof options.canvas === \"object\" &&\n        options.canvas !== null &&\n        options.canvas.getContext\n      )\n    ) {\n      throw new Error(\"Countn't create contect for canvas in Engine\");\n    }\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas.width;\n      this._output.height = this._output.canvas.height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n    this.switchScene(options.scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.audioElement) {\n      this._scene.audioElement.play();\n    }\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(width / this._autoSize.currentScale);\n      this._output.canvas.height = Math.round(height / this._autoSize.currentScale);\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas.width;\n    this._output.height = this._output.canvas.height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n    return this;\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (this._recalculateCanvas) {\n        this.recalculateCanvas();\n        this._recalculateCanvas = false;\n      }\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(this._timePassed);\n        this._timePassed = this._timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          if (this._timePassed !== 0) {\n            if (this._autoSize && this._autoSize.enabled) {\n              now = window.performance ? performance.now() : Date.now();\n            }\n\n            this._scene.move(this._output, this._timePassed);\n\n            // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n            if (this._timePassed < 0) {\n              this._timePassed = this._scene.totalTimePassed;\n            }\n\n            this._scene.draw(this._output);\n\n            if (this._autoSize && this._autoSize.enabled) {\n              const delta =\n                (window.performance ? performance.now() : Date.now()) -\n                now -\n                this._autoSize.offsetTimeTarget;\n              if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n                this._autoSize.currentWaitedTime +=\n                  timestamp - this._realLastTimestamp;\n              } else {\n                if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                  this._autoSize.currentOffsetTime =\n                    this._autoSize.currentOffsetTime >= 0\n                      ? Math.max(\n                          0,\n                          this._autoSize.currentOffsetTime -\n                            this._autoSize.offsetTimeDelta\n                        )\n                      : Math.min(\n                          0,\n                          this._autoSize.currentOffsetTime +\n                            this._autoSize.offsetTimeDelta\n                        );\n                } else {\n                  if (\n                    delta < 0 &&\n                    this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime <=\n                      this._autoSize.offsetTimeLimitDown\n                    ) {\n                      this._autoSize.currentScale = Math.max(\n                        this._autoSize.scaleLimitMin,\n                        this._autoSize.currentScale / this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  } else if (\n                    delta > 0 &&\n                    this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime >=\n                      this._autoSize.offsetTimeLimitUp\n                    ) {\n                      this._autoSize.currentScale = Math.min(\n                        this._autoSize.scaleLimitMax,\n                        this._autoSize.currentScale * this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          this._isSceneInitialized = this._scene.callLoading(this._output);\n          if (this._isSceneInitialized) {\n            this._scene.reset(this._output);\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output)\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        if (Images[i].substr(0,4) === '<svg') {\n          const  DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], {type: 'image/svg+xml'});\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        }else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\nreturn self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded() ? true : new Promise((resolve, reject) => {\n      self.resolve = resolve\n    });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    this.layer[id] = element;\n    this.isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this.nextFree + 1;\n    while (nextFree !== len && layer[nextFree]) {\n      nextFree++;\n    }\n    this.nextFree = nextFree;\n    if (this.start > id) {\n      this.start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    if (len === id) {\n      this.layer = this.layer.concat(arrayOfElements);\n      this.nextFree = this.layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this.isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this.layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this.layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this.layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this.layer[elementId] = null;\n      while (len && !this.layer[len - 1]) {\n        len--;\n      }\n      this.layer.length = len;\n      this.isFunction.length = len;\n      this.nextFree = Math.min(this.nextFree, len);\n      this.start = Math.min(this.start, len);\n    } else {\n      this.layer[elementId] = null;\n      this.nextFree = Math.min(this.nextFree, elementId);\n      if (this.start === elementId) {\n        this.start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this.layer.length;\n    for (index = this.start; index < l; index++) {\n      element = this.layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this.isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    let count = 0;\n    const l = this.layer.length;\n    for (let index = this.start; index < l; index++) {\n      if (this.layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this.layers = [];\n  }\n\n  addLayer() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers[this.layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer());\n    this.layers = this.layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this.layers.length\n    );\n    this.layers = this.layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this.layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this.layers.length;\n    for (i = 0; i < l; i++) {\n      this.layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this.layers.length;\n  }\n\n  clear() {\n    this.layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this.configuration = new configurationClassOrObject();\n    } else {\n      this.configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = ifNull(calc(this.configuration.tickChunk), 100 / 6);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this.configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this.configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this.configuration.fixedUpdate) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this.configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this.configuration.init &&\n        this.configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: ImageManager\n        })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this.configuration.destroy &&\n      this.configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n    return parameter;\n  }\n\n  loadingScreen(output, progress) {\n    if (this.configuration.loading) {\n      return this.configuration.loading({\n        engine: this.engine,\n        scene: this,\n        output,\n        progress\n      });\n    }\n    const ctx = output.context;\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.h)\n        : output.h;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.height / 2 - loadedHeight / 2, output.width, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(output, value);\n    return false;\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this.totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timePassed = this.totalTimePassed;\n    } else if (\n      this.configuration.endTime &&\n      this.configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this.totalTimePassed - this.configuration.endTime;\n      this.totalTimePassed = this.configuration.endTime;\n      // End Engine\n      this.configuration.end &&\n        this.configuration.end({\n          engine: this.engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this.totalTimePassed\n        });\n    }\n\n    if (this.configuration.fixedUpdate) {\n      if (this.tickChunk) {\n        if (timePassed >= this.tickChunk - this.tickChunkTolerance) {\n          // how many frames should be skipped. Maximum is a skip of 2 frames\n          for (\n            let calcFrame = 0,\n              frames = Math.min(\n                this.maxSkippedTickChunk,\n                Math.floor(timePassed / this.tickChunk)\n              );\n            calcFrame < frames;\n            calcFrame++\n          ) {\n            this.configuration.fixedUpdate({\n              engine: this.engine,\n              scene: this,\n              layerManager: this.layerManager,\n              output,\n              timePassed,\n              totalTimePassed: this.totalTimePassed\n            });\n          }\n        }\n      } else {\n        this.configuration.fixedUpdate({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output,\n          timePassed,\n          totalTimePassed: this.totalTimePassed\n        });\n      }\n    }\n\n    if (this.configuration.update) {\n      this.configuration.update({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            totalTimePassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    let result = this.configuration.reset\n      ? this.configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = this.configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === \"playing\") {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return (\n                this.audioPosition * 1000 +\n                Math.min(260, currentTime - this.audioStartTime)\n              );\n            } else if (\n              this.audioElement.currentTime - this.audioPosition < 0.5 &&\n              this.audioElement.currentTime > this.audioPosition &&\n              currentTime - this.audioStartTime < 350\n            ) {\n              this.audioStartTime =\n                this.audioStartTime +\n                (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return (\n                this.audioPosition * 1000 + currentTime - this.audioStartTime\n              );\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition =\n            (this.audioElement.ended\n              ? this.audioElement.duration\n              : this.audioElement.currentTime) * 1000;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return (\n          (this.audioElement.ended\n            ? this.audioElement.duration\n            : this.audioElement.currentTime) * 1000\n        );\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.callInit(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (\n        !(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        this.loadingScreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        let playPromise = this.audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this.configuration.endTime) {\n          this.configuration.endTime = this.audioElement.duration * 1000;\n        }\n        this.loadingScreen(output, \"Click to play\");\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      const hw = this.engine._output.width / 2;\n      const hh = this.engine._output.height / 2;\n      const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform;\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      const hw = this.engine._output.width / 2;\n      const hh = this.engine._output.height / 2;\n      const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import Wait from './Wait.mjs';\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence.map(command =>\n          typeof command.run !== \"function\" ? (command.run === \"number\" ? new Wait(command) : { run: command }) : command\n        ).filter(command => typeof command.run === 'function'),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    const parameterList = this.getParameterList();\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      this[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, this)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  getParameterList() {\n    return {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          value,\n          ifNull(\n            givenParameter.rotationInRadian,\n            ifNull(givenParameter.rotationInDegree, 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: 1.,\n      scaleY: 1.,\n      // alpha\n      alpha: 1.,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\",\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result)\n          ? new Sequence(result)\n          : typeof result === \"object\"\n          ? result\n          : undefined;\n      },\n      // if it's rendering or not\n      enabled: true\n    };\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this.timePassed = 0;\n    this.deltaTime = 0;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this.timePassed += timePassed;\n      this.deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timePassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          alpha: 1,\n          x: 0,\n          y: 0,\n          width: tw,\n          height: th,\n          widthInPixel: tw,\n          heightInPixel: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            width: tw,\n            height: th\n          }\n        });\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(\n        this.temp_canvas,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height,\n        -wh,\n        -hh,\n        w,\n        h\n      );\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n    let staticArray = {},\n      functionArray = {};\n\n    for (let i in givenParameter) {\n      if (![\"self\", \"class\", \"count\"].includes(i)) {\n        if (typeof givenParameter[i] === \"function\") {\n          functionArray[i] = givenParameter[i];\n        } else {\n          staticArray[i] = givenParameter[i];\n        }\n      }\n    }\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n\n    for (let i = 0; i < count; i++) {\n      const classToEmit = givenParameter.class;\n      let parameter = {};\n      for (let index in staticArray) {\n        parameter[index] = staticArray[index];\n      }\n      for (let index in functionArray) {\n        parameter[index] = functionArray[index].call(null, i);\n      }\n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      // autoscale to max\n      norm: false\n    });\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this.normScale) {\n        this.normScale = this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1;\n      }\n      const sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      text: undefined,\n      font: '26px monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(\n            256 >> gradientResolution\n          );\n        }\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled =\n        (this.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n        gradientSize;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      pasition.path2shapes(from),\n      pasition.path2shapes(to)\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clear: false\n    });\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.width;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.height;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true\n    });\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    const projectX = this.centerX + (x / z) * hw;\n    const projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n      let lw = (1 - this.starsZ[i] / this.scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this.starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - (this.starsLineWidth[i] * this.lineWidth) / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this.starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n                context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n                context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport Color from 'color';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite)\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ?  orgValue * degToRad : orgValue;\n      const name = k === \"rotationInRadian\" || k === \"rotationInDegree\" ? \"rotation\" : k;\n      const isColor = k === 'color';\n      const isPath = k === 'path';\n      const isFunction = typeof value === 'function';\n      const isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor,\n        isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(data.from, data.to);\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(sprite[data.name], data.to);\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","apply","params","Engine","constructor","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","_output","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvas","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","this","clientWidth","clientHeight","offsetTimeTarget","_autoSize","registerResizeEvents","window","addEventListener","recalculateCanvas","bind","registerVisibilityEvents","document","handleVisibilityChange","width","height","ratio","context","clickToPlayAudio","playAudioOfScene","switchScene","scene","normalizeContext","enabled","visibilityState","audioElement","play","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","referenceWidth","referenceHeight","Math","round","currentScale","setCanvasStyle","style","currentWaitedTime","currentOffsetTime","resize","run","initParameter","requestAnimationFrame","mainLoop","timestamp","_realLastTimestamp","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","shiftTime","performance","Date","move","totalTimePassed","draw","delta","waitTime","abs","offsetTimeDelta","max","min","scaleLimitMin","offsetTimeLimitDown","scaleFactor","scaleLimitMax","offsetTimeLimitUp","callLoading","reset","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","substr","DOMURL","URL","webkitURL","svg","Blob","src","createObjectURL","count","let","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","layer","isFunction","start","nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","clear","LayerManager","layers","ifNull","value","alternative","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","Scene","configurationClassOrObject","configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","fixedUpdate","output","parameter","images","init","then","res","widthInPixel","heightInPixel","visibleScreen","ref","loadingScreen","progress","loading","loadedHeight","h","clearRect","w","fillStyle","fillRect","font","text","isNaN","parseFloat","fillText","random","endTime","end","calcFrame","frames","floor","update","animate","isArray","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","super","controller","playbackState","ended","duration","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","playPromise","catch","e","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","_getViewport","hw","hh","alpha","scaleCanvas","x1","y1","save","setTransform","restore","SceneNormAudio","_Default","_Audio","_Norm","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","command","filter","lastTimestamp","timelapsed","sequencePosition","position","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","const","Circle","givenParameter","parameterList","getParameterList","keys","name","rotation","rotationInRadian","rotationInDegree","animation","timepassed","compositeOperation","scaleX","scaleY","beginPath","color","arc","PI","fill","closePath","Callback","deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","currentGridSize","gridSize","norm","setParameter","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","Emitter","staticArray","functionArray","includes","classToEmit","class","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normScale","sX","sY","LEFT_TOP","Text","givenParameters","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","type","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","rect","Scroller","characterList","StarField","centerX","moveX","moveY","moveZ","highScale","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","ret","lineTo","_Image","_Text","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Particle","_Path","_Rect","_Scroller","_StarField","initialized","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","push","bezier","moveAlgorithm","t","End","EndDisabled","Sequenz","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","sqrt","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","delegateTo","currentStateName","defaultState","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","find","WaitDisabled","_ChangeTo","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}