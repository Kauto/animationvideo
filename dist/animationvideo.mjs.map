{"version":3,"file":"animationvideo.mjs","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes/NormCamera.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StackBlur.mjs","../Sprites/StackBlurCanvas.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Stop.mjs","../Animations/StopDisabled.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        /* undefined is falsy - saves a few bytes\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false,\n        reduceFramerate: false\n        */\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvas = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the output canvas\n    this._output.canvas = options.canvas;\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas.width;\n      this._output.height = this._output.canvas.height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n\n    this._reduceFramerate = options.reduceFramerate;\n    // not needed because undefined is falsy\n    // this._isOddFrame = true\n\n    this.switchScene(options.scene);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.audioElement) {\n      this._scene.audioElement.play();\n    }\n  }\n\n  _normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(\n        width / this._autoSize.currentScale\n      );\n      this._output.canvas.height = Math.round(\n        height / this._autoSize.currentScale\n      );\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas.width;\n    this._output.height = this._output.canvas.height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n    return this;\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        if (this._reduceFramerate) {\n          this._isOddFrame = !this._isOddFrame;\n        }\n\n        if (!this._reduceFramerate || this._isOddFrame) {\n          let now = this._scene.currentTime();\n\n          // modify time by scene\n          // first set a min/max\n          this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n          // then maybe shift to fit a framerate\n          const shiftTime = this._scene.shiftTime(this._timePassed);\n          this._timePassed = this._timePassed + shiftTime;\n          this._lastTimestamp = now + shiftTime;\n\n          this._normalizeContext(this._output.context);\n          if (this._isSceneInitialized) {\n            if (this._timePassed !== 0) {\n              const drawFrame = !this._scene.isFrameToSkip(this._output, this._timePassed);\n              if (this._recalculateCanvas && drawFrame) {\n                this.recalculateCanvas();\n                this._recalculateCanvas = false;\n              }\n\n              const nowAutoSize = this._now();\n              this._scene.move(this._output, this._timePassed);\n\n              // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n              if (this._timePassed < 0) {\n                this._timePassed = this._scene.totalTimePassed;\n              }\n\n              drawFrame && this._scene.draw(this._output);\n\n              if (this._autoSize && this._autoSize.enabled) {\n                const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n                if (\n                  this._autoSize.currentWaitedTime < this._autoSize.waitTime\n                ) {\n                  this._autoSize.currentWaitedTime += deltaTimestamp;\n                } else if (drawFrame) {\n                  const targetTime =\n                    this._autoSize.offsetTimeTarget *\n                    (this._reduceFramerate ? 2 : 1);\n                  const deltaFrame = this._now() - nowAutoSize;\n                  const delta =\n                    (Math.abs(deltaTimestamp - targetTime) >\n                    Math.abs(deltaFrame - targetTime)\n                      ? deltaTimestamp\n                      : deltaFrame) - targetTime;\n                  if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                    this._autoSize.currentOffsetTime =\n                      this._autoSize.currentOffsetTime >= 0\n                        ? Math.max(\n                            0,\n                            this._autoSize.currentOffsetTime -\n                              this._autoSize.offsetTimeDelta\n                          )\n                        : Math.min(\n                            0,\n                            this._autoSize.currentOffsetTime +\n                              this._autoSize.offsetTimeDelta\n                          );\n                  } else {\n                    if (\n                      delta < 0 &&\n                      this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime <=\n                        -this._autoSize.offsetTimeLimitDown\n                      ) {\n                        this._autoSize.currentScale = Math.max(\n                          this._autoSize.scaleLimitMin,\n                          this._autoSize.currentScale /\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvas = true;\n                      }\n                    } else if (\n                      delta > 0 &&\n                      this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime >=\n                        this._autoSize.offsetTimeLimitUp\n                      ) {\n                        this._autoSize.currentScale = Math.min(\n                          this._autoSize.scaleLimitMax,\n                          this._autoSize.currentScale *\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvas = true;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            this._isSceneInitialized = this._scene.callLoading(this._output);\n            if (this._isSceneInitialized) {\n              this._scene.reset(this._output);\n              if (this._autoSize) {\n                this._autoSize.currentWaitedTime = 0;\n              }\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output);\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        if (Images[i].substr(0,4) === '<svg') {\n          const  DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], {type: 'image/svg+xml'});\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        }else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\nreturn self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded() ? true : new Promise((resolve, reject) => {\n      self.resolve = resolve\n    });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = null;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else {\n      this._layer[elementId] = null;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this._isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer());\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId() {\n    this._layers[this._layers.length] = new Layer();\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      this._layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this._configuration = new configurationClassOrObject();\n    } else {\n      this._configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = ifNull(calc(this._configuration.tickChunk), 100 / 6);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this._configuration.fixedUpdate) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this._configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this._configuration.init &&\n        this._configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: ImageManager\n        })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this._configuration.destroy &&\n      this._configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n    return parameter;\n  }\n\n  getConfiguration() {\n    return this._configuration;\n  }\n\n  loadingScreen(output, progress) {\n    if (this._configuration.loading) {\n      return this._configuration.loading({\n        engine: this.engine,\n        scene: this,\n        output,\n        progress\n      });\n    }\n    const ctx = output.context;\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.h)\n        : output.h;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(output, value);\n    return false;\n  }\n\n  fixedUpdate(output, timePassed) {\n    if (this._configuration.fixedUpdate) {\n      this._configuration.fixedUpdate({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n  }\n\n  isFrameToSkip(output, timePassed) {\n    return this._configuration.isFrameToSkip && this._configuration.isFrameToSkip({\n      engine: this.engine,\n      scene: this,\n      layerManager: this.layerManager,\n      output,\n      timePassed,\n      totalTimePassed: this.totalTimePassed\n    });\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this.totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this.totalTimePassed;\n      this.reset(output);\n      this.totalTimePassed = timePassed;\n    } else if (\n      this._configuration.endTime &&\n      this._configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this.totalTimePassed - this._configuration.endTime;\n      this.totalTimePassed = this._configuration.endTime;\n      // End Engine\n      this._configuration.end &&\n        this._configuration.end({\n          engine: this.engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this.totalTimePassed\n        });\n    }\n\n    if (this.tickChunk) {\n      if (timePassed >= this.tickChunk - this.tickChunkTolerance) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        for (\n          let calcFrame = 0,\n            frames = Math.min(\n              this.maxSkippedTickChunk,\n              Math.floor(timePassed / this.tickChunk)\n            );\n          calcFrame < frames;\n          calcFrame++\n        ) {\n          this.fixedUpdate(output, this.tickChunk, calcFrame === frames - 1);\n        }\n      }\n    } else {\n      this.fixedUpdate(output, timePassed, true);\n    }\n\n    if (this._configuration.update) {\n      this._configuration.update({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            totalTimePassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    this.totalTimePassed = 0;\n    let result = this._configuration.reset\n      ? this._configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = this._configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === \"playing\") {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return (\n                this.audioPosition * 1000 +\n                Math.min(260, currentTime - this.audioStartTime)\n              );\n            } else if (\n              this.audioElement.currentTime - this.audioPosition < 0.5 &&\n              this.audioElement.currentTime > this.audioPosition &&\n              currentTime - this.audioStartTime < 350\n            ) {\n              this.audioStartTime =\n                this.audioStartTime +\n                (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return (\n                this.audioPosition * 1000 + currentTime - this.audioStartTime\n              );\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition =\n            (this.audioElement.ended\n              ? this.audioElement.duration\n              : this.audioElement.currentTime) * 1000;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return (\n          (this.audioElement.ended\n            ? this.audioElement.duration\n            : this.audioElement.currentTime) * 1000\n        );\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.callInit(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (\n        !(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        this.loadingScreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        let playPromise = this.audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this._configuration.endTime) {\n          this._configuration.endTime = this.audioElement.duration * 1000;\n        }\n        this.loadingScreen(output, \"Click to play\");\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n    this.cam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      this.transform = this._getViewportByCam(this.cam);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  _getViewportByCam(cam) {\n    const hw = this.engine.getWidth() / 2;\n    const hh = this.engine.getHeight() / 2;\n    const scale = this.engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      const hw = this.engine.getWidth() / 2;\n      const hh = this.engine.getHeight() / 2;\n      const scale = this.engine.getRatio() > 1 ? hw : hh;\n\n      this.transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneNorm from \"./Norm.mjs\";\nimport calc from \"../func/calc.mjs\";\n\nexport default class SceneNormCamera extends SceneNorm {\n  constructor(...args) {\n    super(...args);\n    this.camConfig = Object.assign(\n      {},\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        registerEvents: true,\n        preventDefault: true,\n        enabled: true,\n        callResize: true,\n        doubleClickDetectInterval: 350,\n        alternative: false\n      },\n      calc(this._configuration.cam) || {}\n    );\n    if (!this._configuration.click) {\n      this._configuration.click = () => {};\n    }\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n\n    this._mousePos = [];\n  }\n\n  camEnable() {\n    this.camConfig.enabled = true;\n  }\n\n  camDisable() {\n    this.camConfig.enabled = false;\n  }\n\n  camReset() {\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  }\n\n  camTween(tween) {\n    this.camConfig.tween = tween;\n  }\n\n  camAlternative(bool) {\n    this._mousePos = [];\n    this.camConfig.alternative = bool;\n  }\n\n  callInit(output, parameter, engine) {\n    if (this.camConfig.registerEvents) {\n      this.registerCamEvents(output.canvas);\n    }\n    return super.callInit(output, parameter, engine);\n  }\n\n  destroy(output) {\n    if (this.camConfig.registerEvents) {\n      this.destroyCamEvents(output.canvas);\n    }\n    return super.destroy(output);\n  }\n\n  hasCamChanged() {\n    return (\n      Math.abs(this.toCam.x - this.cam.x) >= Number.EPSILON ||\n      Math.abs(this.toCam.y - this.cam.y) >= Number.EPSILON ||\n      Math.abs(this.toCam.zoom - this.cam.zoom) >= Number.EPSILON\n    );\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    const ret = super.fixedUpdate(output, timePassed);\n    if (this.camConfig.tween && this._hasCamChanged()) {\n      this.cam.x += (this.toCam.x - this.cam.x) / this.camConfig.tween;\n      this.cam.y += (this.toCam.y - this.cam.y) / this.camConfig.tween;\n      this.cam.zoom += (this.toCam.zoom - this.cam.zoom) / this.camConfig.tween;\n      if (lastCall) {\n        if (this.camConfig.callResize) {\n          this.resize(output);\n        } else {\n          this.transform = null;\n          this.transformInvert = null;\n        }\n      }\n    }\n    return ret;\n  }\n\n  move(output, timePassed) {\n    const ret = super.move(output, timePassed);\n    if (!this.camConfig.tween && this._hasCamChanged()) {\n      this.cam = Object.assign({}, this.toCam);\n      if (this.camConfig.callResize) {\n        this.resize(output);\n      } else {\n        this.transform = null;\n        this.transformInvert = null;\n      }\n    }\n    return ret;\n  }\n\n  registerCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.addEventListener(eventName, this._mouseDown.bind(this), true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.addEventListener(eventName, this._mouseUp.bind(this), true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.addEventListener(eventName, this._mouseOut.bind(this), true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.addEventListener(eventName, this._mouseMove.bind(this), true);\n    }\n    element.addEventListener(\"mousewheel\", this._mouseWheel.bind(this), true);\n    element.addEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  destroyCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.removeEventListener(eventName, this._mouseDown, true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.removeEventListener(eventName, this._mouseUp, true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.removeEventListener(eventName, this._mouseOut, true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.removeEventListener(eventName, this._mouseMove, true);\n    }\n    element.removeEventListener(\"mousewheel\", this._mouseWheel, true);\n    element.removeEventListener(\"contextmenu\", this._eventPrevent, true);\n  }\n\n  _eventPrevent(e) {\n    e.preventDefault();\n  }\n\n  _getMousePosition(e) {\n    let touches;\n    if (e.touches && e.touches.length > 0) {\n      touches = e.targetTouches;\n    } else if (e.changedTouches && e.changedTouches.length > 0) {\n      touches = e.changedTouches;\n    }\n    if (touches) {\n      const rect = e.target.getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top\n      ];\n    }\n    return [e.offsetX, e.offsetY];\n  }\n\n  _getMouseButton(e) {\n    return this.camConfig.alternative\n      ? e.which\n        ? e.which - 1\n        : e.button || 0\n      : 0;\n  }\n\n  _mouseDown(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const [mx, my] = this._getMousePosition(e);\n    const i = this._getMouseButton(e);\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e.touches && e.touches.length) || 1,\n      _distance: undefined,\n      _timestamp: Date.now()\n    });\n  }\n  _mouseUp(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    const i = this._getMouseButton(e);\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers = (e.changedTouches && e.changedTouches.length) || 1;\n    const numOfFingers = Math.max(this._mousePos[i]._numOfFingers, numCurrentFingers);\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n    if (!down || numOfFingers > 1) {\n      return;\n    }\n    const [mx, my] = this._getMousePosition(e);\n    if (\n      Date.now() - this._mousePos[i]._timestamp < 150 &&\n      Math.abs(this._mousePos[i].x - mx) < 5 &&\n      Math.abs(this._mousePos[i].y - my) < 5 &&\n      !i // i === 0\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      if (this._configuration.doubleClick) {\n        if (this._mousePos[i].doubleClickTimer) {\n          clearTimeout(this._mousePos[i].doubleClickTimer);\n          this._mousePos[i].doubleClickTimer = undefined;\n          this._configuration.doubleClick({ event: e, x, y, scene: this });\n        } else {\n          this._mousePos[i].doubleClickTimer = setTimeout(() => {\n            this._mousePos[i].doubleClickTimer = undefined;\n            this._configuration.click({ event: e, x, y, scene: this });\n          }, this.camConfig.doubleClickDetectInterval);\n        }\n      } else {\n        this._configuration.click({ event: e, x, y, scene: this });\n      }\n    } else if (this.camConfig.alternative && !i /* i === 0 */) {\n      const [x, y] = this.transformPoint(mx, my);\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.region &&\n        this._configuration.region({\n          event: e,\n          x1: Math.min(ox, x),\n          y1: Math.min(oy, y),\n          x2: Math.max(ox, x),\n          y2: Math.max(oy, y),\n          fromX: ox,\n          fromY: oy,\n          toX: x,\n          toY: y,\n          scene: this\n        });\n    }\n  }\n  _mouseOut(e) {\n    const i = this._getMouseButton(e);\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n  _mouseMove(e) {\n    const i = this._getMouseButton(e);\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      (e.which === 0 && !e.touches)\n    ) {\n      return;\n    }\n    if (this.camConfig.enabled) {\n      if (e.touches && e.touches.length >= 2) {\n        const t = e.touches;\n        // get distance of two finger\n        const distance = Math.sqrt(\n          (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n            (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n        );\n        if (this._mousePos[i]._distance === undefined) {\n          if (distance > 0) {\n            this._mousePos[i]._distance = distance;\n            this._mousePos[i]._czoom = this.toCam.zoom;\n          }\n        } else {\n          this.toCam.zoom = Math.max(\n            this.camConfig.zoomMin,\n            Math.min(\n              this.camConfig.zoomMax,\n              (this._mousePos[i]._czoom * distance) /\n                this._mousePos[i]._distance\n            )\n          );\n          if (this.camConfig.alternative) {\n            const viewMatrix = this._getViewportByCam(this.toCam).invert();\n            const [ox, oy] = viewMatrix.transformPoint(\n              this._mousePos[i].x,\n              this._mousePos[i].y\n            );\n            const [nx, ny] = viewMatrix.transformPoint(\n              ...this._getMousePosition(e)\n            );\n            this.toCam.x = this._mousePos[i]._cx + ox - nx;\n            this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          }\n          this.clampView();\n        }\n      } else {\n        this._mousePos[i]._distance = undefined;\n        if (!this.camConfig.alternative || i === 2) {\n          const viewMatrix = this._getViewportByCam(this.toCam).invert();\n          const [ox, oy] = viewMatrix.transformPoint(\n            this._mousePos[i].x,\n            this._mousePos[i].y\n          );\n          const [nx, ny] = viewMatrix.transformPoint(\n            ...this._getMousePosition(e)\n          );\n          this.toCam.x = this._mousePos[i]._cx + ox - nx;\n          this.toCam.y = this._mousePos[i]._cy + oy - ny;\n          this.clampView();\n        }\n      }\n    }\n    if (\n      this.camConfig.alternative &&\n      i === 0 &&\n      this._configuration.regionMove &&\n      Date.now() - this._mousePos[i]._timestamp >= 150 &&\n      (!e.touches || e.touches.length === 1)\n    ) {\n      const [x, y] = this.transformPoint(...this._getMousePosition(e));\n      const [ox, oy] = this.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      this._configuration.regionMove({\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n        scene: this\n      });\n    }\n  }\n  _mouseWheel(e) {\n    if (this.camConfig.preventDefault) e.preventDefault();\n    if (this.camConfig.enabled) {\n      const [mx, my] = this._getMousePosition(e);\n      const [ox, oy] = this._getViewportByCam(this.toCam)\n        .invert()\n        .transformPoint(mx, my);\n      const wheelData = e.wheelDelta || e.deltaY * -1;\n      if (wheelData / 120 > 0) {\n        this.zoomIn();\n        const [nx, ny] = this._getViewportByCam(this.toCam)\n          .invert()\n          .transformPoint(mx, my);\n        this.toCam.x -= nx - ox;\n        this.toCam.y -= ny - oy;\n        this.clampView();\n      } else {\n        this.zoomOut();\n      }\n    }\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this.camConfig.zoomMax,\n      this.toCam.zoom * this.camConfig.zoomFactor\n    );\n  }\n  zoomOut() {\n    this.toCam.zoom = Math.max(\n      this.camConfig.zoomMin,\n      this.toCam.zoom / this.camConfig.zoomFactor\n    );\n    this.clampView();\n  }\n  zoomTo(x1, y1, x2, y2) {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    this.toCam.x = mx;\n    this.toCam.y = my;\n    this.toCam.zoom =\n      this.toCam.zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE);\n  }\n\n  clampView = function() {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= 2) {\n      if (x1 < -1) {\n        if (x2 <= 1) {\n          this.toCam.x += -1 - x1;\n        }\n      } else {\n        if (x2 > 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    } else {\n      if (x1 > -1) {\n        this.toCam.x += -1 - x1;\n      } else {\n        if (x2 < 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= 2) {\n      if (y1 < -1) {\n        if (y2 <= 1) {\n          this.toCam.y += -1 - y1;\n        }\n      } else {\n        if (y2 > 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    } else {\n      if (y1 > -1) {\n        this.toCam.y += -1 - y1;\n      } else {\n        if (y2 < 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    }\n  };\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\nimport _NormCamera from './Scenes/NormCamera.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n  NormCamera = (...args) => new _NormCamera(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio,\n  NormCamera\n};\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import Wait from \"./Wait.mjs\";\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    \n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof command.run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command }\n              : command\n          )\n          .filter(command => typeof command.run === \"function\"),\n        label: sequence.reduce((arr, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (sequencePosition.label.hasOwnProperty(label)) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position] &&\n            sequencePosition.sequence[sequencePosition.position].reset &&\n            sequencePosition.sequence[sequencePosition.position].reset();\n        } else {\n          b |=\n            sequencePosition.sequence.find(seq => {\n              return seq.play && seq.play(label, timelapsed);\n            }) >= 0;\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    const parameterList = this.getParameterList();\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      this[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, this)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  getBaseParameterList () {\n    return {\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result)\n          ? new Sequence(result)\n          : result;\n      },\n      // if it's rendering or not\n      enabled: true\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.rotationInRadian),\n            ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      scaleY: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      // alpha\n      alpha: 1.,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\"\n    });\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this.timePassed = 0;\n    this.deltaTime = 0;\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this.timePassed += timePassed;\n      this.deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timePassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n    for (let i in this.sprite) {\n      this.sprite[i].play && this.sprite[i].play(label, timelapsed);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      this.tctx.textBaseline = \"middle\";\n      this.tctx.textAlign = \"center\";\n      this.tctx.globalAlpha = 1;\n      this.tctx.globalCompositeOperation = \"source-over\";\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          alpha: 1,\n          x: 0,\n          y: 0,\n          width: tw,\n          height: th,\n          widthInPixel: tw,\n          heightInPixel: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            width: tw,\n            height: th\n          }\n        });\n      }\n\n      this.additionalBlur && this.additionalBlur(tw, th, additionalModifier);\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(\n        this.temp_canvas,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height,\n        -wh,\n        -hh,\n        w,\n        h\n      );\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      let parameter = {};\n      for (let index in givenParameter) {\n        if (![\"self\", \"class\", \"count\"].includes(index)) {\n          if (typeof givenParameter[index] === \"function\") {\n            parameter[index] = givenParameter[index].call(givenParameter, i);\n          } else {\n            parameter[index] = givenParameter[index];\n          }\n        }\n      } \n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        this.additionalBlur && this.additionalBlur(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      // autoscale to max\n      norm: false,\n      normCover: false\n    });\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this.normScale) {\n        this.normScale = this.normCover\n          ? Math.max(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1;\n      }\n      const sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      text: undefined,\n      font: '2em monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(\n            256 >> gradientResolution\n          );\n        }\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled =\n        (this.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n        gradientSize;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      typeof from === 'string' ? pasition.path2shapes(from) : from,\n      typeof to === 'string' ? pasition.path2shapes(to) : to\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n      ifNull(\n        calc(value),\n        setParameter.x === undefined &&\n          setParameter.y === undefined &&\n          setParameter.width === undefined &&\n          setParameter.height === undefined\n      )\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.width === undefined) {\n        this.width = additionalModifier.width;\n      }\n      if (this.height === undefined) {\n        this.height = additionalModifier.height;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import FastBlur from \"./FastBlur.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur\n\nexport default class StackBlur extends FastBlur {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm && this.onCanvas) {\n      this.x = 0;\n      this.y = 0;\n      this.width = additionalModifier.widthInPixel;\n      this.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(this.imageData, 0, 0, targetW, targetH, additionalModifier.radius);\n    this.tctx.putImageData(this.imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.radius === undefined || this.currentRadiusPart !== this.radiusPart) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      const radius = Math.round(this.radius);\n      if (radius) {\n        if (this.onCanvas) {\n          if (this.width === undefined || this.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(this.x);\n          const y = Math.round(this.y);\n          const w = Math.round(this.width);\n          const h = Math.round(this.height);\n          this.imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(this.imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(this.imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import CanvasSprite from \"./Canvas.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur \n\nexport default class StackBlurCanvas extends CanvasSprite {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    if (additionalModifier.radius) {\n      this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n      imageDataRGBA(\n        this.imageData,\n        0,\n        0,\n        targetW,\n        targetH,\n        additionalModifier.radius\n      );\n      this.tctx.putImageData(this.imageData, 0, 0);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (\n        this.radius === undefined ||\n        this.currentRadiusPart !== this.radiusPart\n      ) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      additionalModifier.radius = Math.round(this.radius);\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this._centerX = undefined;\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true\n    });\n  }\n\n  init() {\n    this._centerX = this.width / 2 + this.x;\n    this._centerY = this.height / 2 + this.y;\n    this._scaleZ = Math.max(this.width, this.height) / 2;\n    this._starsX = [];\n    this._starsY = [];\n    this._starsZ = [];\n    this._starsOldX = [];\n    this._starsOldY = [];\n    this._starsNewX = [];\n    this._starsNewY = [];\n    this._starsEnabled = [];\n    this._starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this._starsX[i] = Math.random() * this.width - this.width / 2;\n      this._starsY[i] = Math.random() * this.height - this.height / 2;\n      this._starsZ[i] = Math.random() * this._scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this._starsX[i] + this.moveX * scaled_timepassed,\n      y = this._starsY[i] + this.moveY * scaled_timepassed,\n      z = this._starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this._centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(context, additionalModifier){}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this._centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] - (this._starsLineWidth[i] * this.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StackBlur from './Sprites/StackBlur.mjs';\nimport _StackBlurCanvas from './Sprites/StackBlurCanvas.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StackBlur = (...args) => new _StackBlur(...args);\n  StackBlurCanvas = (...args) => new _StackBlurCanvas(...args);\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StackBlurCanvas,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Color from \"color\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite);\n}\n\n// to values of a object\nexport default class ChangeTo {\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? orgValue * degToRad : orgValue;\n      const isColor = k === \"color\";\n      const isPath = k === \"path\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n          ? [\"rotation\"]\n          : [k];\n      for (const name of names) {\n        this.changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n          bezier: isBezier ? value : false,\n          isColor,\n          isPath,\n          isFunction: isFunction ? value : false,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n            ? movePath\n            : isBezier\n            ? moveBezier\n            : moveDefault\n        });\n      }\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, t => t);\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n            data.from,\n            data.to\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n          sprite[data.name],\n          data.to\n        );\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.currentState.play && this.currentState.play(label, timelapsed);\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_STOP;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_STOP;\n    };\n}","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _StopDisabled from './Animations/StopDisabled.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Stop = (...args) => new _Stop(...args),\n  StopDisabled = (...args) => new _StopDisabled(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","params","apply","Engine","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","this","_output","context","width","height","ratio","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvas","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","_this","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","offsetTimeTarget","offsetTimeDelta","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","_autoSize","window","addEventListener","recalculateCanvas","bind","document","handleVisibilityChange","clickToPlayAudio","playAudioOfScene","_reduceFramerate","reduceFramerate","switchScene","scene","visibilityState","audioElement","play","_normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","Math","round","style","resize","_now","performance","now","Date","run","initParameter","requestAnimationFrame","mainLoop","timestamp","_realLastTimestamp","parameterForNewScene","destroy","callInit","_isOddFrame","currentTime","clampTime","shiftTime","drawFrame","isFrameToSkip","nowAutoSize","move","totalTimePassed","draw","deltaTimestamp","targetTime","deltaFrame","delta","abs","max","min","callLoading","reset","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","count","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","_layer","_isFunction","_start","_nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","nextFree","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","isFunction","layer","clear","LayerManager","_layers","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","ifNull","value","alternative","Scene","configurationClassOrObject","_configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","fixedUpdate","output","parameter","images","init","imageManager","then","res","alpha","x","y","widthInPixel","heightInPixel","visibleScreen","_this2","getConfiguration","loadingScreen","progress","loading","loadedHeight","h","clearRect","w","fillStyle","fillRect","font","text","isNaN","parseFloat","fillText","random","endTime","end","calcFrame","frames","floor","update","animate","_this3","isArray","layers","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","controller","playbackState","ended","duration","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","playPromise","e","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","cam","zoom","_getViewport","_getViewportByCam","hw","hh","scaleCanvas","x1","y1","save","setTransform","_Scene","restore","SceneNormAudio","_SceneAudio","SceneNormCamera","clampView","toCam","x2","y2","camConfig","zoomMax","zoomMin","zoomFactor","tween","registerEvents","preventDefault","callResize","doubleClickDetectInterval","click","_mousePos","camEnable","camDisable","camReset","camTween","camAlternative","bool","registerCamEvents","destroyCamEvents","hasCamChanged","Number","EPSILON","lastCall","ret","_hasCamChanged","_mouseDown","_mouseUp","_mouseOut","_mouseMove","_mouseWheel","_eventPrevent","_getMousePosition","touches","targetTouches","changedTouches","rect","target","getBoundingClientRect","reduce","sum","pageX","left","pageY","top","offsetX","offsetY","_getMouseButton","which","button","mx","my","_cx","_cy","_isDown","_numOfFingers","_distance","_timestamp","down","numCurrentFingers","numOfFingers","doubleClick","doubleClickTimer","clearTimeout","event","setTimeout","ox","oy","region","fromX","fromY","toX","toY","t","distance","sqrt","_czoom","viewMatrix","ny","regionMove","wheelDelta","deltaY","zoomIn","zoomOut","zoomTo","sx1","sy1","zoomX","zoomY","MIN_VALUE","NormCamera","_NormCamera","Default","_Default","Audio","_Audio","Norm","_Norm","NormAudio","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","position","timelapsed","command","filter","label","arr","keys","lastTimestamp","sequencePosition","b","hasOwnProperty","find","seq","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","Circle","givenParameter","parameterList","getParameterList","name","getBaseParameterList","animation","rotation","rotationInRadian","rotationInDegree","scaleX","scaleY","compositeOperation","color","timepassed","beginPath","arc","PI","fill","closePath","Callback","deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","currentGridSize","gridSize","norm","setParameter","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","additionalBlur","Emitter","classToEmit","includes","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normCover","normScale","sX","sY","LEFT_TOP","Text","givenParameters","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","Scroller","characterList","class","imageDataRGBA","stackblur","StackBlur","currentRadiusPart","onCanvas","radius","radiusPart","_FastBlur","imageData","putImageData","StackBlurCanvas","_CanvasSprite","CanvasSprite","StarField","_centerX","moveX","moveY","moveZ","highScale","_centerY","_scaleZ","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","lineTo","_Image","_Text","_StackBlurCanvas","_StarField","_Callback","_Canvas","_Circle","_Emitter","_Group","_Particle","_Path","_Rect","_Scroller","_StackBlur","initialized","degToRad","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","push","bezier","moveAlgorithm","End","EndDisabled","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","_ChangeTo","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","defaultState","delegateTo","currentStateName","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","WaitDisabled","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","Stop","_Stop","StopDisabled","_StopDisabled","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}