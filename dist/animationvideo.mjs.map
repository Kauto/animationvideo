{"version":3,"file":"animationvideo.mjs","sources":["../src/lib/Engine.mjs","../src/lib/ImageManager.mjs","../src/func/calc.mjs","../src/lib/Scenes/Default.mjs","../src/lib/Scenes/Audio.mjs","../src/func/transform.mjs","../src/lib/Scenes/Norm.mjs","../src/lib/Scenes/NormAudio.mjs","../src/lib/Scenes.mjs","../src/func/ifnull.mjs","../src/lib/Sprites/Circle.mjs","../src/lib/Sprites/Callback.mjs","../src/lib/Sprites/Group.mjs","../src/lib/Sprites/Canvas.mjs","../src/lib/Sprites/Emitter.mjs","../src/lib/Sprites/FastBlur.mjs","../src/lib/Sprites/Image.mjs","../src/lib/Sprites/Text.mjs","../src/lib/Sprites/Particle.mjs","../src/lib/Sprites/Path.mjs","../src/lib/Sprites/Rect.mjs","../src/lib/Sprites/Scroller.mjs","../src/lib/Sprites/StarField.mjs","../src/lib/Sprites.mjs","../src/lib/Sequence.mjs","../src/lib/Animations/Callback.mjs","../src/lib/Animations/ChangeTo.mjs","../src/lib/Animations/End.mjs","../src/lib/Animations/EndDisabled.mjs","../src/lib/Animations/Image.mjs","../src/lib/Animations/ImageFrame.mjs","../src/lib/Animations/Move.mjs","../src/lib/Animations/Once.mjs","../src/lib/Animations/Play.mjs","../src/lib/Animations/Shake.mjs","../src/lib/Animations/ShowOnce.mjs","../src/lib/Animations/Stop.mjs","../src/lib/Animations/Wait.mjs","../src/lib/Animations/WaitDisabled.mjs","../src/lib/Animations.mjs","../src/animationvideo.mjs"],"sourcesContent":["class Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.tagName) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign({},\n      {\n        scene: null,\n        canvas: null,\n        autoresize: false\n      },\n      givenOptions\n    );\n    \n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the _output canvas\n    this._output.canvas = options.canvas;\n    if (!(typeof options.canvas === \"object\" && options.canvas !== null && options.canvas.getContext)) {\n      throw new Error(\"Countn't create contect for canvas in Engine\");\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    if (options.autoresize) {\n      window.addEventListener(\"resize\", this.maximizeCanvas, false);\n      window.addEventListener(\"orientationchange\", this.maximizeCanvas, false);\n      this.resize();\n\n      options.canvas.addEventListener(\n        \"click\",\n        () => {\n          if (this._isSceneInitialized && this._scene.audioElement) {\n            this._scene.audioElement.play();\n          }\n        },\n        false\n      );\n    }\n    this.switchScene(options.scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  maximizeCanvas() {\n    let gameArea = self.output.canvas;\n    let newWidth = window.innerWidth;\n    let newHeight = window.innerHeight;\n    let newWidthToHeight = newWidth / newHeight;\n\n    if (newWidthToHeight > self.output.ratio) {\n      newWidth = newHeight * self.output.ratio;\n      gameArea.style.height = newHeight + \"px\";\n      gameArea.style.width = newWidth + \"px\";\n    } else {\n      newHeight = newWidth / self.output.ratio;\n      gameArea.style.width = newWidth + \"px\";\n      gameArea.style.height = newHeight + \"px\";\n    }\n\n    gameArea.style.marginTop = -newHeight / 2 + \"px\";\n    gameArea.style.marginLeft = -newWidth / 2 + \"px\";\n\n    $(self.output.canvas).css({\n      width: newWidth,\n      height: newHeight\n    });\n    $(self.output.canvas)\n      .siblings()\n      .css({\n        width: newWidth\n      });\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = this._isSceneInitialized ? this._scene.getPercentLoaded() : 0;\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(\n      \"Loading \" + percent + \"%\",\n      10 + Math.random() * 3,\n      this._output.h - 10 + Math.random() * 3\n    );\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop() {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene) {\n        let now = this._scene.currentTime();\n        this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n\n        this._lastTimestamp = now;\n\n        if (this._isSceneInitialized) {\n          if (this._timePassed !== 0) {\n            this._scene.move(this._output, this._timePassed);\n\n            // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n            if (this._timePassed < 0) {\n              this._timePassed = this._scene.totalTimePassed;\n            }\n\n            this._scene.draw(this._output);\n          }\n        } else {\n          this._isSceneInitialized = this._scene.callLoading(this._output);\n        }\n      }\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n        };\n        self.Images[i].src = Images[i];\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import ImageManager from \"../ImageManager.mjs\";\nimport calc from \"../../func/calc.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this.configuration = new configurationClassOrObject();\n    } else {\n      this.configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layer = [];\n\n    // For precalculation if a layer is a function\n    this._cacheLayerIsFunction = [];\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n  }\n\n  currentTime() {\n    return Date.now();\n  }\n\n  clampTime(timePassed) {\n    if (timePassed > 2000) {\n      return 2000;\n    }\n    return timePassed;\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this.configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this.configuration.init &&\n        this.configuration.init({ engine, output, scene: this, parameter })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: 0,\n      y: 0,\n      w: output.w,\n      h: output.h,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  callDestroy(output) {\n    this.configuration.destroy &&\n      this.configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - loadedHeight / 2, output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.h - 10 + Math.random() * 3\n    );\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      this.reset(output);\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.configuration.loading\n      ? this.configuration.loading({\n          engine: this.engine,\n          scene: this,\n          output,\n          value\n        })\n      : this.loadingscreen(output, value);\n    return false;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (\n      this.configuration.endTime &&\n      this.configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n      // End Engine\n      this.configuration.end &&\n        this.configuration.end({ engine: this.engine, scene: this, output });\n    }\n\n    let l, i, lay, layif;\n\n    if (this.configuration.beforeMove) {\n      this.layer = this.configuration.beforeMove({\n        engine: this.engine,\n        scene: this,\n        layer: this.layer,\n        output,\n        timepassed\n      });\n    }\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (!layif[i]) {\n          if (lay[i].animate(timepassed)) {\n            this.layer[l].splice(i, 1);\n          }\n        }\n      }\n    }\n\n    if (this.configuration.afterMove) {\n      this.layer = this.configuration.afterMove({\n        engine: this.engine,\n        scene: this,\n        layer: this.layer,\n        output,\n        timepassed\n      });\n    }\n  }\n\n  draw(output) {\n    let l, i, lay, layif;\n\n    l = this.layer.length;\n    while (l--) {\n      lay = this.layer[l];\n      layif = this._cacheLayerIsFunction[l];\n      i = lay.length;\n      while (i--) {\n        if (layif[i]) {\n          if (\n            lay[i]({\n              engine: this.engine,\n              scene: this,\n              layer: this.layer,\n              output,\n              timepassed: this.totalTimePassed\n            })\n          ) {\n            this.layer[l].splice(i, 1);\n          }\n        } else {\n          this.layer[l][i].draw(output.context, this.additionalModifier);\n        }\n      }\n    }\n  }\n\n  calcLayerIsFunction() {\n    this._cacheLayerIsFunction = new Array(this.layer.length);\n    for (let l in this.layer) {\n      this._cacheLayerIsFunction[l] = new Array(this.layer[l].length);\n      for (let i in this.layer[l]) {\n        this._cacheLayerIsFunction[l][i] =\n          typeof this.layer[l][i] === \"function\";\n      }\n    }\n  }\n\n  reset(output) {\n    this.layer = this.configuration.reset\n      ? this.configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layer: [],\n          output\n        })\n      : [];\n    this.calcLayerIsFunction();\n  }\n}\n\nexport default Scene;\n","import Scene from './Default.mjs';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from './Default.mjs';\nimport Transform from '../../func/transform.mjs';\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        const hw = this.engine._output.w / 2\n        const hh = this.engine._output.h / 2\n        const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = (new Transform())\n        .translate(hw, hh)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  resize(output) {\n    this.transform = undefined;\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  transformPoint(x, y) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x, y);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import SceneAudio from './Audio.mjs';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  changeAnimationStatus(ani) {\n    if (typeof this.animation === \"object\") {\n      this.animation.changeAnimationStatus(ani);\n    }\n  };\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) >= 0) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from './Circle.mjs';\n\nexport default class Callback extends Circle{\n    constructor(params) {\n        super(params);\n        // Callback\n\t\tthis.callback = params.callback;\n    }\n\n    draw(context, additionalParameter) {\n\t\tif (this.enabled) {\n\t\t\tthis.callback(context, additionalParameter, this);\n\t\t}\n    }\n}","import ifNull from '../../func/ifnull.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite changeAnimationStatus\n  changeAnimationStatus(ani) {\n    // call super\n    super.changeAnimationStatus(ani);\n    // changeAnimationStatus for all sprites\n    for (let i in this.sprite) {\n      this.sprite[i].changeAnimationStatus(ani);\n    }\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = true;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = this.sprite[i].animate(timepassed) && spriteFinished;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.a < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.round(w / this.scaleX);\n    this.temp_canvas.height = Math.round(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, false);\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, this.temp_canvas.width, this.temp_canvas.height, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nexport default class FastBlur extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    // Darker\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.ceil(w / this.scaleX);\n    this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.x) {\n      this.x = additionalModifier.x;\n    }\n    if (!this.y) {\n      this.y = additionalModifier.y;\n    }\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let a = this.a * additionalModifier.a,\n        w = this.width,\n        h = this.height,\n        targetW = Math.round(w * additionalModifier.orgW / additionalModifier.w / this.scaleX),\n        targetH = Math.round(h * additionalModifier.orgH / additionalModifier.h / this.scaleY);\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(context.canvas, 0, 0, context.canvas.width, context.canvas.height, 0, 0, targetW, targetH);\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear ? \"source-atop\" : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(this.temp_canvas, 0, 0, targetW, targetH, this.x, this.y, w, h);\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.w;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.h;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport ImageManager from '../ImageManager.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height,\n        sX = frameWidth * this.scaleX,\n        sY = frameHeight * this.scaleY;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        }\n        else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      }\n      else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -(sX >> 1),\n          -(sY >> 1),\n          sX,\n          sY\n        );\n        context.restore();\n\n      }\n    }\n  };\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle.mjs';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.imageSmoothingEnabled = this.scaleX * additionalModifier.orgW / additionalModifier.w > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX / 2), this.y - (this.scaleY / 2), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach((curve) => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach((points) => {\n              this.path2D.bezierCurveTo(points[2], points[3], points[4], points[5], points[6], points[7]);\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1/scaleX, 1/scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n      \n      context.restore();\n    }\n  };\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.w;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.h;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n      \n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.arc * degToRad);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-hw, -hh, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport Emitter from './Emitter.mjs';\nimport Text from './Text.mjs';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from \"../../func/ifnull.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(params) {\n    super(params);\n    this.count = ifNull(calc(params.count), 40);\n    this.moveX = ifNull(calc(params.moveX), 0);\n    this.moveY = ifNull(calc(params.moveY), 0);\n    this.moveZ = ifNull(calc(params.moveZ), 0);\n    this.lineWidth = calc(params.lineWidth);\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n\t\t\tthis.height &&\n\t\t\tthis.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n\t\t}\n\t\tconst hw = this.width / 2;\n\t\tconst hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw ) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n\t\tconst projectX = this.centerX + (x / z) * hw;\n\t\tconst projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n\t\t\tthis.starsLineWidth[i] = Math.floor((1 - this.starsZ[i] / this.scaleZ) * 4) + 1;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.w;\n        this.height = this.height || additionalModifier.h;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n\t\t\t\tthis.lineWidth = this.lineWidth || (additionalModifier.h / additionalModifier.orgH) / 4;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - this.starsLineWidth[i] * this.lineWidth / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        let lw = 5,\n          i;\n        while (--lw) {\n          context.beginPath();\n          context.lineWidth = lw * this.lineWidth;\n          i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n            }\n          }\n          context.stroke();\n          context.closePath();\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = obj || {};\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      this.animationPosition[i] = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          else {\n            hide_vote++;\n          }\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport Color from 'color';\nimport pasition from 'pasition';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorTo.mix(data.colorFrom, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return pasition._lerp(data.pathFrom, data.pathTo, progress);\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(data.from), pasition.path2shapes(data.to));\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(sprite[data.name]), pasition.path2shapes(data.to));\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequenz from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (Array.isArray(this.frameNumber)) {\n            this.count = this.frameNumber.length;\n        } else {\n            this.frameNumber = [this.frameNumber];\n            this.count = 1;\n        }\n        this.duration = this.count * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = Math.floor(time / this.durationBetweenFrames);\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from '../../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t > 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Play {\n\n  constructor(name, duration, loop) {\n    this.duration = ifNull(calc(duration),1);\n    this.name = calc(name);\n    this.loop = calc(ifNull(loop, 1));\n  }\n\n  run(sprite, time) {\n    // return time left\n    if (time >= this.duration) {\n      // Play animation from the start\n      sprite.changeAnimationStatus({\n        [this.name]: {\n          position: 0,\n          timelapsed: (time - this.duration),\n          loop: this.loop\n        }\n      });\n    }\n    return time - this.duration;\n  };\n}","import calc from '../../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Animation from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Animation.TIMELAPSE_TO_STOP;\n\t}\n}","import calc from '../../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Play from './Animations/Play.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Play = (...args) => new _Play(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  Stop = (...args) => new _Stop(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Image,\n  ImageFrame,\n  Move,\n  Once,\n  Play,\n  Shake,\n  ShowOnce,\n  Stop,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './lib/Engine.mjs';\nimport Scenes from './lib/Scenes.mjs';\nimport ImageManager from './lib/ImageManager.mjs';\nimport Sprites from './lib/Sprites.mjs';\nimport _Sequence from './lib/Sequence.mjs';\nimport Animations from './lib/Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args),\n  Sequence = (...args) => new _Sequence(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Sequence,\n  Animations,\n  Easing\n};"],"names":["Engine","constructor","canvasOrOptions","givenOptions","Error","tagName","canvas","options","Object","assign","_output","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_referenceRequestAnimationFrame","getContext","context","w","this","width","h","height","ratio","autoresize","window","addEventListener","maximizeCanvas","resize","audioElement","play","switchScene","scene","normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","gameArea","self","output","newWidth","innerWidth","newHeight","innerHeight","style","marginTop","marginLeft","css","$","siblings","loadingscreen","fillStyle","fillRect","font","percent","getPercentLoaded","fillText","Math","random","run","initParameter","requestAnimationFrame","mainLoop","bind","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","move","totalTimePassed","draw","callLoading","cancelAnimationFrame","ImageManager","calc","c","apply","params","add","Images","Callbacks","i","Image","onload","loaded","isLoaded","src","count","let","reset","getLoaded","getCount","getImage","nameOrImage","Scene","configurationClassOrObject","configuration","layer","_cacheLayerIsFunction","engine","initDone","additionalModifier","undefined","Date","timePassed","parameter","images","Promise","resolve","init","then","res","orgW","orgH","callDestroy","progress","loadedHeight","max","clearRect","text","isNaN","parseFloat","round","value","loading","timepassed","l","lay","layif","endTime","end","beforeMove","length","animate","splice","afterMove","calcLayerIsFunction","Array","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","super","controller","playbackState","min","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","_getViewport","hw","hh","a","save","setTransform","ref","restore","SceneNormAudio","_Default","_Audio","_Norm","_NormAudio","ifNull","alternative","const","Circle","arc","scaleX","scaleY","alphaMode","color","animation","enabled","changeAnimationStatus","ani","beginPath","fill","closePath","Callback","callback","additionalParameter","Group","sprite","finished","spriteFinished","Canvas","generateTempCanvas","temp_canvas","document","createElement","tctx","wh","drawImage","Emitter","staticArray","functionArray","indexOf","classToEmit","class","index","call","FastBlur","darker","pixel","clear","ceil","targetW","targetH","imageSmoothingEnabled","image","position","CENTER","frameX","frameY","frameWidth","frameHeight","sX","sY","LEFT_TOP","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","isArray","forEach","curve","moveTo","points","bezierCurveTo","stroke","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","centerX","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","floor","ret","lw","lineTo","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Image","_Text","_Particle","_Path","_Rect","_Scroller","_StarField","Sequence","loop","timeWait","obj","animationPosition","setObject","last_timestamp","hide_vote","object","timelapsed","time","is_difference","current_animationPosition","timeleft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","animation_count","disable_vote","duration","initialized","moveDefault","data","from","delta","moveBezier","copy","values","copyLength","moveColor","colorTo","mix","colorFrom","string","movePath","pasition","_lerp","pathFrom","pathTo","result","ChangeTo","changeValues","ease","k","isColor","isPath","isFunction","push","isBezier","bezier","moveAlgorithm","t","name","to","_preprocessing","path2shapes","End","Sequenz","EndDisabled","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Move","speed","targetX","targetY","hypotenuse","sqrt","Once","Aniobject","times","Play","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","Animation","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_ImageFrame","_Move","_Once","_Play","_Shake","_ShowOnce","_Stop","_Wait","_WaitDisabled","_Engine","_Sequence"],"mappings":"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"}