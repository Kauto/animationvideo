{"version":3,"file":"animationvideo.mjs","sources":["../src/lib/Engine.mjs","../src/lib/ImageManager.mjs","../src/lib/Layer.mjs","../src/lib/LayerManager.mjs","../src/func/calc.mjs","../src/lib/Scenes/Default.mjs","../src/lib/Scenes/Audio.mjs","../src/func/transform.mjs","../src/lib/Scenes/Norm.mjs","../src/lib/Scenes/NormAudio.mjs","../src/lib/Scenes.mjs","../src/func/ifnull.mjs","../src/lib/Sprites/Circle.mjs","../src/lib/Sprites/Callback.mjs","../src/lib/Sprites/Group.mjs","../src/lib/Sprites/Canvas.mjs","../src/lib/Sprites/Emitter.mjs","../src/lib/Sprites/FastBlur.mjs","../src/lib/Sprites/Image.mjs","../src/lib/Sprites/Text.mjs","../src/lib/Sprites/Particle.mjs","../src/lib/Sprites/Path.mjs","../src/lib/Sprites/Rect.mjs","../src/lib/Sprites/Scroller.mjs","../src/lib/Sprites/StarField.mjs","../src/lib/Sprites.mjs","../src/lib/Sequence.mjs","../src/lib/State.mjs","../src/lib/Animations/Callback.mjs","../src/lib/Animations/ChangeTo.mjs","../src/lib/Animations/End.mjs","../src/lib/Animations/EndDisabled.mjs","../src/lib/Animations/Image.mjs","../src/lib/Animations/ImageFrame.mjs","../src/lib/Animations/Move.mjs","../src/lib/Animations/Once.mjs","../src/lib/Animations/Play.mjs","../src/lib/Animations/Shake.mjs","../src/lib/Animations/ShowOnce.mjs","../src/lib/Animations/Stop.mjs","../src/lib/Animations/Wait.mjs","../src/lib/Animations/WaitDisabled.mjs","../src/lib/Animations.mjs","../src/animationvideo.mjs"],"sourcesContent":["class Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign({},\n      {\n        scene: null,\n        canvas: null,\n        autoresize: false\n      },\n      givenOptions\n    );\n    \n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the _output canvas\n    this._output.canvas = options.canvas;\n    if (!(typeof options.canvas === \"object\" && options.canvas !== null && options.canvas.getContext)) {\n      throw new Error(\"Countn't create contect for canvas in Engine\");\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    if (options.autoresize) {\n      window.addEventListener(\"resize\", this.maximizeCanvas, false);\n      window.addEventListener(\"orientationchange\", this.maximizeCanvas, false);\n      this.resize();\n\n      options.canvas.addEventListener(\n        \"click\",\n        () => {\n          if (this._isSceneInitialized && this._scene.audioElement) {\n            this._scene.audioElement.play();\n          }\n        },\n        false\n      );\n    }\n    this.switchScene(options.scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  maximizeCanvas() {\n    let gameArea = self.output.canvas;\n    let newWidth = window.innerWidth;\n    let newHeight = window.innerHeight;\n    let newWidthToHeight = newWidth / newHeight;\n\n    if (newWidthToHeight > self.output.ratio) {\n      newWidth = newHeight * self.output.ratio;\n      gameArea.style.height = newHeight + \"px\";\n      gameArea.style.width = newWidth + \"px\";\n    } else {\n      newHeight = newWidth / self.output.ratio;\n      gameArea.style.width = newWidth + \"px\";\n      gameArea.style.height = newHeight + \"px\";\n    }\n\n    gameArea.style.marginTop = -newHeight / 2 + \"px\";\n    gameArea.style.marginLeft = -newWidth / 2 + \"px\";\n\n    $(self.output.canvas).css({\n      width: newWidth,\n      height: newHeight\n    });\n    $(self.output.canvas)\n      .siblings()\n      .css({\n        width: newWidth\n      });\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = this._isSceneInitialized ? this._scene.getPercentLoaded() : 0;\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(\n      \"Loading \" + percent + \"%\",\n      10 + Math.random() * 3,\n      this._output.h - 10 + Math.random() * 3\n    );\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop() {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene) {\n        let now = this._scene.currentTime();\n        this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n\n        this._lastTimestamp = now;\n\n        if (this._isSceneInitialized) {\n          if (this._timePassed !== 0) {\n            this._scene.move(this._output, this._timePassed);\n\n            // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n            if (this._timePassed < 0) {\n              this._timePassed = this._scene.totalTimePassed;\n            }\n\n            this._scene.draw(this._output);\n          }\n        } else {\n          this._isSceneInitialized = this._scene.callLoading(this._output);\n        }\n      }\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n        };\n        self.Images[i].src = Images[i];\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    this.layer[id] = element;\n    this.isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this.nextFree + 1;\n    while (nextFree !== len && layer[nextFree]) {\n      nextFree++;\n    }\n    this.nextFree = nextFree;\n    if (this.start > id) {\n      this.start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    if (len === id) {\n      this.layer = this.layer.concat(arrayOfElements);\n      this.nextFree = this.layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this.isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this.layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this.layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this.layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this.layer[elementId] = null;\n      while (len && !this.layer[len - 1]) {\n        len--;\n      }\n      this.layer.length = len;\n      this.isFunction.length = len;\n      this.nextFree = Math.min(this.nextFree, len);\n      this.start = Math.min(this.start, len);\n    } else {\n      this.layer[elementId] = null;\n      this.nextFree = Math.min(this.nextFree, elementId);\n      if (this.start === elementId) {\n        this.start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this.layer.length;\n    for (index = this.start; index < l; index++) {\n      element = this.layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this.isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    return this.layer.length;\n  }\n\n  clear() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this.layers = [];\n  }\n\n  addLayer() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers[this.layers.length - 1];\n  }\n\n  addLayerForId() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this.layers.length\n    );\n    this.layers = this.layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this.layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this.layers.length;\n    for (i = 0; i < l; i++) {\n      this.layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this.layers.length;\n  }\n\n  clear() {\n    this.layers = [];\n  }\n}\n\nexport default LayerManager;","export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../../func/calc.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this.configuration = new configurationClassOrObject();\n    } else {\n      this.configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = calc(this.configuration.tickChunk);\n  }\n\n  currentTime() {\n    return Date.now();\n  }\n\n  clampTime(timePassed) {\n    if (timePassed > 2000) {\n      return 2000;\n    }\n    return timePassed;\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this.configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this.configuration.init &&\n        this.configuration.init({ engine, output, scene: this, parameter })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: 0,\n      y: 0,\n      w: output.w,\n      h: output.h,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  callDestroy(output) {\n    this.configuration.destroy &&\n      this.configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - loadedHeight / 2, output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.h - 10 + Math.random() * 3\n    );\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      this.reset(output);\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.configuration.loading\n      ? this.configuration.loading({\n          engine: this.engine,\n          scene: this,\n          output,\n          value\n        })\n      : this.loadingscreen(output, value);\n    return false;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (\n      this.configuration.endTime &&\n      this.configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n      // End Engine\n      this.configuration.end &&\n        this.configuration.end({ engine: this.engine, scene: this, output });\n    }\n\n    if (this.configuration.beforeMove) {\n      if (this.tickChunk) {\n        this.configuration.beforeMove({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output,\n          timepassed\n        });\n      } else {\n        this.configuration.beforeMove({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output,\n          timepassed\n        });\n      }\n    }\n\n    this.layerManager.forEach(({element, isFunction, layer, index}) => {\n      if (!isFunction) {\n        if (element.animate(timepassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n\n    if (this.configuration.afterMove) {\n      this.configuration.afterMove({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timepassed\n      });\n    }\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({layer, element, isFunction, index}) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            timepassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    let result = this.configuration.reset\n      ? this.configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from './Default.mjs';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from './Default.mjs';\nimport Transform from '../../func/transform.mjs';\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        const hw = this.engine._output.w / 2\n        const hh = this.engine._output.h / 2\n        const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = (new Transform())\n        .translate(hw, hh)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  resize(output) {\n    this.transform = undefined;\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  transformPoint(x, y) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x, y);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import SceneAudio from './Audio.mjs';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  changeAnimationStatus(ani) {\n    if (typeof this.animation === \"object\") {\n      this.animation.changeAnimationStatus(ani);\n    }\n  };\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) >= 0) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from './Circle.mjs';\n\nexport default class Callback extends Circle{\n    constructor(params) {\n        super(params);\n        // Callback\n\t\tthis.callback = params.callback;\n    }\n\n    draw(context, additionalParameter) {\n\t\tif (this.enabled) {\n\t\t\tthis.callback(context, additionalParameter, this);\n\t\t}\n    }\n}","import ifNull from '../../func/ifnull.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite changeAnimationStatus\n  changeAnimationStatus(ani) {\n    // call super\n    super.changeAnimationStatus(ani);\n    // changeAnimationStatus for all sprites\n    for (let i in this.sprite) {\n      this.sprite[i].changeAnimationStatus(ani);\n    }\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = true;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = this.sprite[i].animate(timepassed) && spriteFinished;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.a < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.round(w / this.scaleX);\n    this.temp_canvas.height = Math.round(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, false);\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, this.temp_canvas.width, this.temp_canvas.height, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nexport default class FastBlur extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    // Darker\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = context.canvas.width,\n      h = context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    this.temp_canvas.width = Math.ceil(w / this.scaleX);\n    this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n    if (!this.x) {\n      this.x = additionalModifier.x;\n    }\n    if (!this.y) {\n      this.y = additionalModifier.y;\n    }\n    if (!this.width) {\n      this.width = additionalModifier.w;\n    }\n    if (!this.height) {\n      this.height = additionalModifier.h;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n      }\n\n      let a = this.a * additionalModifier.a,\n        w = this.width,\n        h = this.height,\n        targetW = Math.round(w * additionalModifier.orgW / additionalModifier.w / this.scaleX),\n        targetH = Math.round(h * additionalModifier.orgH / additionalModifier.h / this.scaleY);\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(context.canvas, 0, 0, context.canvas.width, context.canvas.height, 0, 0, targetW, targetH);\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear ? \"source-atop\" : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(this.temp_canvas, 0, 0, targetW, targetH, this.x, this.y, w, h);\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.w;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.h;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport ImageManager from '../ImageManager.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height,\n        sX = frameWidth * this.scaleX,\n        sY = frameHeight * this.scaleY;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        }\n        else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      }\n      else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -(sX >> 1),\n          -(sY >> 1),\n          sX,\n          sY\n        );\n        context.restore();\n\n      }\n    }\n  };\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle.mjs';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.imageSmoothingEnabled = this.scaleX * additionalModifier.orgW / additionalModifier.w > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX / 2), this.y - (this.scaleY / 2), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach((curve) => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach((points) => {\n              this.path2D.bezierCurveTo(points[2], points[3], points[4], points[5], points[6], points[7]);\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1/scaleX, 1/scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n      \n      context.restore();\n    }\n  };\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.w;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.h;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n      \n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.arc * degToRad);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-hw, -hh, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport Emitter from './Emitter.mjs';\nimport Text from './Text.mjs';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from \"../../func/ifnull.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(params) {\n    super(params);\n    this.count = ifNull(calc(params.count), 40);\n    this.moveX = ifNull(calc(params.moveX), 0);\n    this.moveY = ifNull(calc(params.moveY), 0);\n    this.moveZ = ifNull(calc(params.moveZ), 0);\n    this.lineWidth = calc(params.lineWidth);\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n\t\t\tthis.height &&\n\t\t\tthis.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n\t\t}\n\t\tconst hw = this.width / 2;\n\t\tconst hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw ) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n\t\tconst projectX = this.centerX + (x / z) * hw;\n\t\tconst projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n\t\t\tthis.starsLineWidth[i] = Math.floor((1 - this.starsZ[i] / this.scaleZ) * 4) + 1;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.w;\n        this.height = this.height || additionalModifier.h;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n\t\t\t\tthis.lineWidth = this.lineWidth || (additionalModifier.h / additionalModifier.orgH) / 4;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - this.starsLineWidth[i] * this.lineWidth / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        let lw = 5,\n          i;\n        while (--lw) {\n          context.beginPath();\n          context.lineWidth = lw * this.lineWidth;\n          i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n            }\n          }\n          context.stroke();\n          context.closePath();\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = Array.isArray(obj) && !Array.isArray(obj[0]) ? [obj] : (obj || {});\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      this.animationPosition[i] = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n        orgLoop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        orgEnabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  reset(timelapsed = 0) {\n    for (let i in this.animation) {\n      const animationPosition = this.animationPosition[i];\n      animationPosition.position = 0;\n      animationPosition.timelapsed = timelapsed;\n      animationPosition.loop = animationPosition.orgLoop;\n      animationPosition.enabled = animationPosition.orgEnabled;\n      this.setObject(i);\n    }\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          else {\n            hide_vote++;\n          }\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","class State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      console.log(name);\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport Color from 'color';\nimport pasition from 'pasition';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorTo.mix(data.colorFrom, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return pasition._lerp(data.pathFrom, data.pathTo, progress);\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(data.from), pasition.path2shapes(data.to));\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(sprite[data.name]), pasition.path2shapes(data.to));\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequenz from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (Array.isArray(this.frameNumber)) {\n            this.count = this.frameNumber.length;\n        } else {\n            this.frameNumber = [this.frameNumber];\n            this.count = 1;\n        }\n        this.duration = this.count * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = Math.floor(time / this.durationBetweenFrames);\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from '../../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t > 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Play {\n\n  constructor(name, duration, loop) {\n    this.duration = ifNull(calc(duration),1);\n    this.name = calc(name);\n    this.loop = calc(ifNull(loop, 1));\n  }\n\n  run(sprite, time) {\n    // return time left\n    if (time >= this.duration) {\n      // Play animation from the start\n      sprite.changeAnimationStatus({\n        [this.name]: {\n          position: 0,\n          timelapsed: (time - this.duration),\n          loop: this.loop\n        }\n      });\n    }\n    return time - this.duration;\n  };\n}","import calc from '../../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Animation from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Animation.TIMELAPSE_TO_STOP;\n\t}\n}","import calc from '../../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Play from './Animations/Play.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Play = (...args) => new _Play(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  Stop = (...args) => new _Stop(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Image,\n  ImageFrame,\n  Move,\n  Once,\n  Play,\n  Shake,\n  ShowOnce,\n  Stop,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './lib/Engine.mjs';\nimport Scenes from './lib/Scenes.mjs';\nimport ImageManager from './lib/ImageManager.mjs';\nimport Sprites from './lib/Sprites.mjs';\nimport _Sequence from './lib/Sequence.mjs';\nimport _State from './lib/State.mjs';\nimport Animations from './lib/Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  State = (...args) => new _State(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Sequence,\n  State,\n  Animations,\n  Easing\n};"],"names":["Engine","constructor","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","_output","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_referenceRequestAnimationFrame","context","w","this","width","h","height","ratio","autoresize","window","addEventListener","maximizeCanvas","resize","audioElement","play","switchScene","scene","normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","gameArea","self","output","newWidth","innerWidth","newHeight","innerHeight","style","marginTop","marginLeft","css","$","siblings","loadingscreen","fillStyle","fillRect","font","percent","getPercentLoaded","fillText","Math","random","run","initParameter","requestAnimationFrame","mainLoop","bind","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","move","totalTimePassed","draw","callLoading","cancelAnimationFrame","ImageManager","add","Images","Callbacks","i","Image","onload","loaded","isLoaded","src","count","let","reset","getLoaded","getCount","getImage","nameOrImage","Layer","layer","isFunction","start","nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","min","callback","index","l","clear","LayerManager","layers","calc","c","apply","params","addLayer","addLayerForId","addLayersForIds","numberOfLayer","result","layerId","Scene","configurationClassOrObject","configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","Date","timePassed","parameter","images","Promise","resolve","init","then","res","orgW","orgH","callDestroy","progress","loadedHeight","max","clearRect","text","isNaN","parseFloat","round","value","loading","timepassed","endTime","end","beforeMove","ref","animate","afterMove","isArray","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","super","controller","playbackState","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","_getViewport","hw","hh","a","save","setTransform","restore","SceneNormAudio","_Default","_Audio","_Norm","_NormAudio","ifNull","alternative","const","Circle","arc","scaleX","scaleY","alphaMode","color","animation","enabled","changeAnimationStatus","ani","beginPath","fill","closePath","Callback","additionalParameter","Group","sprite","finished","spriteFinished","Canvas","generateTempCanvas","temp_canvas","document","createElement","tctx","wh","drawImage","Emitter","staticArray","functionArray","classToEmit","class","call","FastBlur","darker","pixel","ceil","targetW","targetH","imageSmoothingEnabled","image","position","CENTER","frameX","frameY","frameWidth","frameHeight","sX","sY","LEFT_TOP","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","curve","moveTo","points","bezierCurveTo","stroke","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","centerX","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","floor","ret","lw","lineTo","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Image","_Text","_Particle","_Path","_Rect","_Scroller","_StarField","Sequence","loop","timeWait","obj","animationPosition","orgLoop","setObject","last_timestamp","hide_vote","timelapsed","orgEnabled","object","time","is_difference","current_animationPosition","timeleft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","animation_count","disable_vote","State","states","transitions","delegateTo","currentStateName","defaultState","currentState","isTransitioningToStateName","setState","name","console","log","UCFirstName","charAt","toUpperCase","transitionName","find","timeLeft","isDifference","duration","initialized","moveDefault","data","delta","moveBezier","copy","values","copyLength","moveColor","colorTo","mix","colorFrom","string","movePath","pasition","_lerp","pathFrom","pathTo","ChangeTo","changeValues","ease","isColor","isPath","push","isBezier","bezier","moveAlgorithm","t","to","_preprocessing","path2shapes","End","Sequenz","EndDisabled","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Move","speed","targetX","targetY","hypotenuse","sqrt","Once","Aniobject","times","Play","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","Animation","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_ImageFrame","_Move","_Once","_Play","_Shake","_ShowOnce","_Stop","_Wait","_WaitDisabled","_Engine","_Sequence","_State"],"mappings":"uGAAA,IAAMA,EACJC,SAAYC,cACNC,EAAeD,KACY,iBAApBA,QACH,IAAIE,MAAM,6CAEdF,EAAgBG,WAClBF,EAAe,QACLD,QAEL,IAAKA,EAAgBI,aACpB,IAAIF,MAAM,8CAEdG,EAAUC,OAAOC,OAAO,GAC1B,OACS,YACC,iBACI,GAEdN,WAGGO,QAAU,QACL,aACC,OACN,IACA,QACI,QAIJC,OAAS,UAETC,qBAAsB,OAEtBC,UAAY,UAGZC,eAAiB,OACjBC,YAAc,OAGdC,gCAAkC,UAGlCN,QAAQJ,OAASC,EAAQD,OACE,iBAAnBC,EAAQD,QAA0C,OAAnBC,EAAQD,SAAmBC,EAAQD,OAAOD,iBAC9E,IAAID,MAAM,qDAEbM,QAAQO,QAAUV,EAAQD,OAAOD,WAAW,WAC5CK,QAAQQ,EAAIC,KAAKT,QAAQJ,OAAOc,WAChCV,QAAQW,EAAIF,KAAKT,QAAQJ,OAAOgB,YAChCZ,QAAQa,MAAQJ,KAAKT,QAAQQ,EAAIC,KAAKT,QAAQW,EAE/Cd,EAAQiB,aACVC,OAAOC,iBAAiB,SAAUP,KAAKQ,gBAAgB,GACvDF,OAAOC,iBAAiB,oBAAqBP,KAAKQ,gBAAgB,QAC7DC,WAEGtB,OAAOoB,iBACb,mBAEMP,EAAKP,qBAAuBO,EAAKR,OAAOkB,gBACrClB,OAAOkB,aAAaC,SAG7B,SAGCC,YAAYxB,EAAQyB,YACpBC,iBAAiBd,KAAKT,QAAQO,UAGrCgB,YAAAA,0BAAiBC,GACfA,EAAIC,aAAe,SACnBD,EAAIE,UAAY,SAChBF,EAAIG,YAAc,EAClBH,EAAII,yBAA2B,eAGjCC,YAAAA,2BACSpB,KAAKT,QAAQQ,GAGtBsB,YAAAA,4BACSrB,KAAKT,QAAQW,GAGtBM,YAAAA,8BACMc,EAAWC,KAAKC,OAAOrC,OACvBsC,EAAWnB,OAAOoB,WAClBC,EAAYrB,OAAOsB,YACAH,EAAWE,EAEXJ,KAAKC,OAAOpB,SACtBuB,EAAYJ,KAAKC,OAAOpB,QAC1ByB,MAAM1B,OAASwB,EAAY,OAC3BE,MAAM5B,MAAQwB,EAAW,SAEtBA,EAAWF,KAAKC,OAAOpB,QAC1ByB,MAAM5B,MAAQwB,EAAW,OACzBI,MAAM1B,OAASwB,EAAY,MAGtCL,EAASO,MAAMC,WAAaH,EAAY,EAAI,KAC5CL,EAASO,MAAME,YAAcN,EAAW,EAAI,OAE1CF,KAAKC,OAAOrC,QAAQ6C,IAAI,OACjBP,SACCE,IAEVM,EAAEV,KAAKC,OAAOrC,QACX+C,WACAF,IAAI,OACIP,KAIbb,YAAAA,qBAAYC,UACNA,SACGnB,UAAYmB,GAEZb,MAGTmC,YAAAA,6BACMpB,EAAMf,KAAKT,QAAQO,QACvBiB,EAAII,yBAA2B,cAC/BJ,EAAIG,YAAc,EAElBH,EAAIqB,UAAY,oBACZC,SAAS,EAAG,EAAGrC,KAAKT,QAAQQ,EAAGC,KAAKT,QAAQW,GAEhDa,EAAIuB,KAAO,eACXvB,EAAIqB,UAAY,WACZG,EAAUvC,KAAKP,oBAAsBO,KAAKR,OAAOgD,mBAAqB,EAC1EzB,EAAIE,UAAY,OAChBF,EAAIC,aAAe,SACnBD,EAAI0B,SACF,WAAaF,EAAU,IACvB,GAAqB,EAAhBG,KAAKC,SACV3C,KAAKT,QAAQW,EAAI,GAAqB,EAAhBwC,KAAKC,eAGxB7B,iBAAiBC,IAGxB6B,YAAAA,aAAIC,GACFA,EAAgBA,GAAiB,QA2C5BhD,gCAAkCS,OAAOwC,+BAzCrCC,YACFlD,gCAAkCS,OAAOwC,sBAC5CC,EAASC,KAAKhD,OAGO,OAAnBA,KAAKN,UAAoB,KACvBuD,EAAuBjD,KAAKR,OAC5BQ,KAAKR,OAAO0D,QAAQlD,KAAKT,SACzBsD,EACAI,SACGvD,UAAUyD,SAASnD,KAAKT,QAAS0D,EAAsBjD,WACvDR,OAASQ,KAAKN,eACdA,UAAY,UACZD,qBAAsB,MAI3BO,KAAKR,OAAQ,KACX4D,EAAMpD,KAAKR,OAAO6D,mBACjBzD,YAAcI,KAAKR,OAAO8D,UAAUF,EAAMpD,KAAKL,qBAE/CA,eAAiByD,EAElBpD,KAAKP,oBACkB,IAArBO,KAAKJ,mBACFJ,OAAO+D,KAAKvD,KAAKT,QAASS,KAAKJ,aAGhCI,KAAKJ,YAAc,SAChBA,YAAcI,KAAKR,OAAOgE,sBAG5BhE,OAAOiE,KAAKzD,KAAKT,eAGnBE,oBAAsBO,KAAKR,OAAOkE,YAAY1D,KAAKT,WAOnDyD,KAAKhD,QAIlBkD,YAAAA,wBACOrD,iCACHS,OAAOqD,qBAAqB3D,KAAKH,sCAC9BA,gCAAkC,MCvM3C,IAAM+D,iBAEGC,aAAIC,EAAQC,OACXxC,EAAOvB,MAAQ4D,gBAEdrC,EAAKuC,OAAOE,GAeXD,GAAsC,mBAAlBA,EAAUC,IAChCD,EAAUC,GAAGA,EAAGzC,EAAKuC,OAAOE,KAf9BzC,EAAKuC,OAAOE,GAAK,IAAI1D,OAAO2D,QACvBH,OAAOE,GAAGE,OAAS,WACtB3C,EAAK4C,SACDJ,GAAmC,mBAAfA,EAClBxC,EAAK6C,gBAGAL,GAAsC,mBAAlBA,EAAUC,IACvCD,EAAUC,GAAGA,EAAGzC,EAAKuC,OAAOE,KAGhCzC,EAAKuC,OAAOE,GAAGK,IAAMP,EAAOE,GAC5BzC,EAAK+C,cAdJC,IAAIP,KAAKF,cAqBVC,GAAmC,mBAAfA,GAA6BxC,EAAK6C,gBAGnD7C,GAGTqC,EAAOY,qBACCjD,EAAOvB,MAAQ4D,SACrBrC,EAAKuC,OAAS,GACdvC,EAAK+C,MAAQ,EACb/C,EAAK4C,OAAS,EACP5C,GAGTqC,EAAOa,4BACGzE,MAAQ4D,GAAcO,QAGhCP,EAAOc,2BACG1E,MAAQ4D,GAAcU,OAGhCV,EAAOQ,wBACC7C,EAAOvB,MAAQ4D,SACbrC,EAAK4C,SAAW5C,EAAK+C,SAGxBK,kBAASC,SACgB,iBAAhBA,EAA2BA,GAAe5E,MAAQ4D,GAAcE,OAAOc,IAIzFhB,EAAaE,OAAS,GACtBF,EAAaU,MAAQ,EACrBV,EAAaO,OAAS,EC3DtB,IAAMU,EACJ/F,gBACOgG,MAAQ,QACRC,WAAa,QACbC,MAAQ,OACRC,SAAW,GAGlBC,YAAAA,oBAAWC,eACJC,gBAAgBD,GACdA,GAGTE,YAAAA,qBAAYC,eACLC,kBAAkBD,GAChBA,GAGTF,YAAAA,yBAAgBD,OACVK,EAAMxF,KAAK8E,MAAMW,OACjBC,EAAK1F,KAAKiF,cACTH,MAAMY,GAAMP,OACZJ,WAAWW,GAAyB,mBAAZP,EACzBK,IAAQE,eAGRT,EAAWjF,KAAKiF,SAAW,EACxBA,IAAaO,GAAOV,MAAMG,oBAG5BA,SAAWA,EACZjF,KAAKgF,MAAQU,SACVV,MAAQU,GAERA,GAGTH,YAAAA,2BAAkBD,cACZE,EAAMxF,KAAK8E,MAAMW,cAEjBD,IADKxF,KAAKiF,eAEPH,MAAQ9E,KAAK8E,MAAMa,OAAOL,QAC1BL,SAAWjF,KAAK8E,MAAMW,SACXG,iBAASC,EAAGC,KACrBf,WAAWS,EAAMM,GAAkB,mBAAND,IAE7BE,MAAMC,KAAK,CAAEP,OAAQH,EAAgBG,iBAAWI,EAAGC,UAAMA,EAAIN,KAE7DF,EAAgBW,aAAId,UAAWnF,EAAKkF,WAAWC,MAI1De,YAAAA,iBAAQC,UACCnG,KAAK8E,MAAMqB,IAGpBC,YAAAA,wBAAejB,UACNnF,KAAK8E,MAAMuB,QAAQlB,IAG5BmB,YAAAA,yBAAgBnB,OACRgB,EAAYnG,KAAKoG,eAAejB,GAClCgB,GAAa,QACVI,WAAWJ,IAIpBI,YAAAA,oBAAWJ,OACLX,EAAMxF,KAAK8E,MAAMW,OAAS,KAC1BD,EAAM,GAAKW,IAAcX,EAAK,UAC3BV,MAAMqB,GAAa,KACjBX,IAAQxF,KAAK8E,MAAMU,EAAM,aAG3BV,MAAMW,OAASD,OACfT,WAAWU,OAASD,OACpBP,SAAWvC,KAAK8D,IAAIxG,KAAKiF,SAAUO,QACnCR,MAAQtC,KAAK8D,IAAIxG,KAAKgF,MAAOQ,aAE7BV,MAAMqB,GAAa,UACnBlB,SAAWvC,KAAK8D,IAAIxG,KAAKiF,SAAUkB,GACpCnG,KAAKgF,QAAUmB,SACZnB,MAAQmB,EAAY,IAK/BP,YAAAA,iBAAQa,OACFC,EAAOvB,EACLwB,EAAI3G,KAAK8E,MAAMW,WAChBiB,EAAQ1G,KAAKgF,MAAO0B,EAAQC,EAAGD,OACxB1G,KAAK8E,MAAM4B,KAEnBD,EAAS,OACPC,UACAvB,EACAJ,WAAY/E,KAAK+E,WAAW2B,SACrB1G,QAMfsE,YAAAA,wBACStE,KAAK8E,MAAMW,QAGpBmB,YAAAA,sBACO9B,MAAQ,QACRC,WAAa,QACbC,MAAQ,OACRC,SAAW,GC7GpB,IAAM4B,EACJ/H,gBACOgI,OAAS,ICJH,SAASC,EAAKC,uEACP,mBAAPA,EAAoBA,EAAEC,MAAM,KAAKC,GAAUF,EDMxDG,YAAAA,gCACOL,OAAO9G,KAAK8G,OAAOrB,QAAU,IAAIZ,EAC/B7E,KAAK8G,OAAO9G,KAAK8G,OAAOrB,OAAS,IAG1C2B,YAAAA,qCACON,OAAO9G,KAAK8G,OAAOrB,QAAU,IAAIZ,EAC/B7E,KAAK8G,OAAOrB,OAAS,GAG9B4B,YAAAA,yBAAgBC,6BAAgB,OACxBC,EAASxB,MAAMC,KACnB,QAAUsB,YACTzB,EAAGC,UAAMA,EAAI9F,EAAK8G,OAAOrB,qBAEvBqB,OAAS9G,KAAK8G,OAAOnB,OACxBI,MAAMC,KAAK,QAAUsB,YAAiBzB,UAAK,IAAIhB,KAE1C0C,GAGTrB,YAAAA,iBAAQsB,UACCxH,KAAK8G,OAAOU,IAGrB5B,YAAAA,iBAAQa,OACFzC,EACE2C,EAAI3G,KAAK8G,OAAOrB,WACjBzB,EAAI,EAAGA,EAAI2C,EAAG3C,SACZ8C,OAAO9C,GAAG4B,QAAQa,IAI3BnC,YAAAA,wBACStE,KAAK8G,OAAOrB,QAGrBmB,YAAAA,sBACOE,OAAS,IEzClB,IAAMW,EACJ3I,SAAY4I,QAEHC,cADmC,mBAA/BD,EACY,IAAIA,EAEJA,OAIlBE,aAAe,IAAIf,OAEnBrD,gBAAkB,OAElBqE,OAAS,UACTC,UAAW,OACXC,wBAAqBC,OAErBC,UAAYlB,EAAK/G,KAAK2H,cAAcM,YAG3C5E,YAAAA,8BACS6E,KAAK9E,OAGdE,YAAAA,mBAAU6E,UACJA,EAAa,IACR,IAEFA,GAGThF,YAAAA,kBAAS3B,EAAQ4G,EAAWP,mBACrBA,OAASA,OACTpH,OAAOe,OACN6G,EAAStB,EAAK/G,KAAK2H,cAAcU,QACnCA,GACFzE,EAAaC,IAAIwE,GAEnBC,QAAQC,QACNvI,KAAK2H,cAAca,MACjBxI,KAAK2H,cAAca,KAAK,QAAEX,SAAQrG,QAAexB,eAAMoI,KACzDK,cAAKC,UAAQ1I,EAAK8H,UAAW,KAGjCrH,YAAAA,gBAAOe,QACAuG,mBAAqB,GACrB,IACA,IACA,EACHhI,EAAGyB,EAAOzB,EACVG,EAAGsB,EAAOtB,EACVyI,KAAMnH,EAAOzB,EACb6I,KAAMpH,EAAOtB,IAIjB2I,YAAAA,qBAAYrH,QACLmG,cAAczE,SACjBlD,KAAK2H,cAAczE,QAAQ,CAAE2E,OAAQ7H,KAAK6H,aAAe7H,YAAMwB,SAC5DsG,UAAW,GAGlB3F,YAAAA,uBAAcX,EAAQsH,OACd/H,EAAMS,EAAO1B,QACjBiJ,EAAerG,KAAKsG,IAAI,EAAGF,EAAWtH,EAAOtB,GAC/Ca,EAAII,yBAA2B,cAC/BJ,EAAIG,YAAc,EAClBH,EAAIkI,UAAU,EAAG,EAAGzH,EAAOzB,EAAGyB,EAAOtB,GACrCa,EAAIqB,UAAY,SACZC,SAAS,EAAGb,EAAOtB,EAAI,EAAI6I,EAAe,EAAGvH,EAAOzB,EAAGgJ,GAC3DhI,EAAIuB,KAAO,eACXvB,EAAIqB,UAAY,OAChBrB,EAAIE,UAAY,OAChBF,EAAIC,aAAe,aACfkI,EAAOJ,EAGNK,MAAMC,WAAWN,KAAeK,MAAML,EAAW,KACpDI,EAAO,WAAaxG,KAAK2G,MAAM,IAAMP,GAAY,KAEnD/H,EAAI0B,SACFyG,EACA,GAAqB,EAAhBxG,KAAKC,SACVnB,EAAOtB,EAAI,GAAqB,EAAhBwC,KAAKC,eAGlBkF,QAAU7H,KAAK6H,OAAO/G,iBAAiBC,IAG9C2C,YAAAA,qBAAYlC,MACNoC,EAAaQ,YAAcpE,KAAK8H,qBAC7BtD,MAAMhD,IACJ,MAEH8H,EAAQ1F,EAAac,WACvBd,EAAaa,YAAcb,EAAac,WACxC,yBAECiD,cAAc4B,QACfvJ,KAAK2H,cAAc4B,QAAQ,CACzB1B,OAAQ7H,KAAK6H,aACN7H,YACPwB,QACA8H,IAEFtJ,KAAKmC,cAAcX,EAAQ8H,IACxB,GAGT/F,YAAAA,cAAK/B,EAAQgI,QAENhG,iBAAmBgG,EAGpBA,EAAa,QAEVhF,MAAMhD,GACXgI,EAAaxJ,KAAKwD,iBAElBxD,KAAK2H,cAAc8B,SACnBzJ,KAAK2H,cAAc8B,SAAWzJ,KAAKwD,qBAGrBxD,KAAKwD,gBAAkBxD,KAAKyJ,aACrCjG,gBAAkBxD,KAAKyJ,aAEvB9B,cAAc+B,KACjB1J,KAAK2H,cAAc+B,IAAI,CAAE7B,OAAQ7H,KAAK6H,aAAe7H,YAAMwB,KAG3DxB,KAAK2H,cAAcgC,iBAEdhC,cAAcgC,WAAW,CAC5B9B,OAAQ7H,KAAK6H,aACN7H,KACP4H,aAAc5H,KAAK4H,oBACnBpG,aACAgI,SAaD5B,aAAahC,iBAASgE,mDAEXC,QAAQL,IAClB1E,EAAMyB,WAAWG,KAKnB1G,KAAK2H,cAAcmC,gBAChBnC,cAAcmC,UAAU,CAC3BjC,OAAQ7H,KAAK6H,aACN7H,KACP4H,aAAc5H,KAAK4H,oBACnBpG,aACAgI,KAKN/F,YAAAA,cAAKjC,mBACEoG,aAAahC,iBAASgE,oDAGrBzE,EAAQ,CACN0C,OAAQ7H,EAAK6H,aACN7H,EACP4H,aAAc5H,EAAK4H,mBACnB9C,SACAtD,EACAgI,WAAYxJ,EAAKwD,mBAGnBsB,EAAMyB,WAAWG,GAGnBvB,EAAQ1B,KAAKjC,EAAO1B,QAASE,EAAK+H,uBAKxCvD,YAAAA,eAAMhD,OACA+F,EAASvH,KAAK2H,cAAcnD,MAC5BxE,KAAK2H,cAAcnD,MAAM,CACvBqD,OAAQ7H,KAAK6H,aACN7H,KACP4H,aAAc5H,KAAK4H,oBACnBpG,IAEF,IAAIqF,KAEJd,MAAMgE,QAAQxC,GAAS,KACnBT,EAASS,EACfA,EAAS,IAAIV,EACbC,EAAOlB,iBAAQC,KACNsB,WAAW9B,YAAYQ,KAI9B0B,SACGK,aAAeL,ICnN1B,IAAqByC,cACnBlL,WAAY4B,qBAELuJ,eAAiB,UACjBC,cAAgB,UAChBC,mBAAoB,OACpBzJ,aAAeA,kGAGtB2C,2BACMA,EAAc+G,YAAM/G,0BACpBrD,KAAKU,aAAc,IAEjBV,KAAKmK,kBAAmB,IACE,OAAxBnK,KAAKiK,2BACFA,eAAiB5G,OACjB6G,cAAgBlK,KAAKU,aAAa2C,YACA,IAAhCrD,KAAKU,aAAa2C,eAE0B,YAA/CrD,KAAKU,aAAa2J,WAAWC,cAA6B,IACxDtK,KAAKU,aAAa2C,cAAgBrD,KAAKkK,qBACb,IAArBlK,KAAKkK,cAAuBxH,KAAK8D,IAAI,IAAKnD,EAAcrD,KAAKiK,gBAC/D,GAAKjK,KAAKU,aAAa2C,YAAcrD,KAAKkK,cAAiB,IAAQlK,KAAKU,aAAa2C,YAAcrD,KAAKkK,eAAkB7G,EAAcrD,KAAKiK,eAAiB,gBAC9JA,eAAiBjK,KAAKiK,eAAwE,KAAtDjK,KAAKU,aAAa2C,YAAcrD,KAAKkK,oBAC7EA,cAAgBlK,KAAKU,aAAa2C,YACX,IAArBrD,KAAKkK,cAAuB7G,EAAcrD,KAAKiK,2BAGrDA,eAAiB5G,OACjB6G,cAAgBlK,KAAKU,aAAa2C,YACX,IAArBrD,KAAKkK,qBAGyB,IAAhClK,KAAKU,aAAa2C,mBAIpBA,eAIXC,mBAAU6E,UACDA,eAGTK,8EAEMxI,KAAKU,eACWV,KAAKU,aAAa6J,YAAY,aAChCC,MAAM,mBAIU,mBAArBC,uBACJ/J,aAAa2J,WAAa,IAAII,qBAC9BN,mBAAoB,QAEtBzJ,aAAagK,QAAU,YACvBhK,aAAaiK,QAGbP,YAAM5B,WAAKxI,KAAG4K,gBAGvBlH,qBAAYlC,OACN2C,EAASiG,YAAM1G,sBAAYlC,MAE3B2C,GAAUnE,KAAKU,aAAc,MACzBV,KAAKU,aAAamK,YAAc7K,KAAKU,aAAaoK,8BAEjD3I,cAAcX,EAAQ,sBACpB,OAEFd,aAAaC,YACbwB,cAAcX,EAAQ,wBAI1B2C,MA9E+BsD,GCsBxC,SAASsD,SACFvG,QAGPuG,EAAUC,UAAUxG,MAAQ,uBACrByG,EAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACbjL,MAGT+K,EAAUC,UAAUE,SAAW,SAASC,OAElCC,EAAMpL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAErDI,EAAMrL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GACrDK,EAAMtL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAErDM,EAAKvL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,GAChEO,EAAKxL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,eAE/DA,EAAE,GATGjL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,GAAKjL,KAAKiL,EAAE,GAAKE,EAAOF,EAAE,QAUpDA,EAAE,GAAKG,OACPH,EAAE,GAAKI,OACPJ,EAAE,GAAKK,OACPL,EAAE,GAAKM,OACPN,EAAE,GAAKO,EACLxL,MAGT+K,EAAUC,UAAUS,OAAS,eACvBC,EAAI,GAAK1L,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,IAEpDU,GAAM3L,KAAKiL,EAAE,GAAKS,EAClBE,GAAM5L,KAAKiL,EAAE,GAAKS,EAClBG,EAAK7L,KAAKiL,EAAE,GAAKS,EACjBI,EAAKJ,GAAK1L,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,IACrDc,EAAKL,GAAK1L,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,gBACpDA,EAAE,GANEjL,KAAKiL,EAAE,GAAKS,OAOhBT,EAAE,GAAKU,OACPV,EAAE,GAAKW,OACPX,EAAE,GAAKY,OACPZ,EAAE,GAAKa,OACPb,EAAE,GAAKc,EACL/L,MAGT+K,EAAUC,UAAUgB,OAAS,SAASC,OAChCjF,EAAItE,KAAKwJ,IAAID,GACbE,EAAIzJ,KAAK0J,IAAIH,GAEbb,EAAMpL,KAAKiL,EAAE,GAAKjE,EAAIhH,KAAKiL,EAAE,GAAKkB,EAClCd,EAAMrL,KAAKiL,EAAE,IAAMkB,EAAInM,KAAKiL,EAAE,GAAKjE,EACnCsE,EAAMtL,KAAKiL,EAAE,IAAMkB,EAAInM,KAAKiL,EAAE,GAAKjE,cAClCiE,EAAE,GAJGjL,KAAKiL,EAAE,GAAKjE,EAAIhH,KAAKiL,EAAE,GAAKkB,OAKjClB,EAAE,GAAKG,OACPH,EAAE,GAAKI,OACPJ,EAAE,GAAKK,EACLtL,MAGT+K,EAAUC,UAAUqB,UAAY,SAASC,EAAGC,eACrCtB,EAAE,IAAMjL,KAAKiL,EAAE,GAAKqB,EAAItM,KAAKiL,EAAE,GAAKsB,OACpCtB,EAAE,IAAMjL,KAAKiL,EAAE,GAAKqB,EAAItM,KAAKiL,EAAE,GAAKsB,EAClCvM,MAGT+K,EAAUC,UAAUwB,MAAQ,SAASC,EAAIC,eAClCzB,EAAE,IAAMwB,OACRxB,EAAE,IAAMwB,OACRxB,EAAE,IAAMyB,OACRzB,EAAE,IAAMyB,EACN1M,MAGT+K,EAAUC,UAAU2B,eAAiB,SAASC,EAAIC,OAC5CP,EAAIM,QAID,CAFPA,EAAKN,EAAItM,KAAKiL,EAAE,GADR4B,EACiB7M,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,GAC5C4B,EAAKP,EAAItM,KAAKiL,EAAE,GAFR4B,EAEiB7M,KAAKiL,EAAE,GAAKjL,KAAKiL,EAAE,KAI9CF,EAAUC,UAAU8B,MAAQ,eACtBC,EAAI,IAAIhC,SACZgC,EAAE9B,EAAIjL,KAAKiL,EAAE+B,MAAM,GACZD,GCzGT,IAAqBE,cACnBnO,4EACQkB,KAAGkN,QACJC,UAAY,UACZC,gBAAkB,qGAGzBC,4BACOrN,KAAK6H,OAAQ,OAAO,IAAIkD,MAExB/K,KAAKmN,UAAW,KACXG,EAAKtN,KAAK6H,OAAOtI,QAAQQ,EAAI,EAC7BwN,EAAKvN,KAAK6H,OAAOtI,QAAQW,EAAI,EAC7BsM,EAAQxM,KAAK6H,OAAOtI,QAAQa,MAAQ,EAAIkN,EAAKC,OAEhDJ,WAAa,IAAIpC,GACnBsB,UAAUiB,EAAIC,GACdf,MAAMA,EAAOA,QACXY,gBAAkB,YAOlBpN,KAAKmN,uBAGd1M,gBAAOe,QACA2L,eAAYnF,OACZD,mBAAqB,CACxByF,EAAG,EACHlB,GAAI,EACJC,GAAI,EACJxM,EAAG,EACHG,EAAG,EACHyI,KAAMnH,EAAOzB,EACb6I,KAAMpH,EAAOtB,gBAIjByM,wBAAeL,EAAGC,UACXvM,KAAKoN,uBACHA,gBAAkBpN,KAAKqN,eAAeP,QAAQrB,UAE9CzL,KAAKoN,gBAAgBT,eAAeL,EAAGC,gBAGhD9I,cAAKjC,SACHA,EAAO1B,QAAQ2N,UAEfjM,EAAO1B,SAAQ4N,mBAAa9D,EAAG5J,KAAKqN,eAAepC,eAE7CxH,eAAKjC,GACXA,EAAO1B,QAAQ6N,cAtDoBlG,GCDlBmG,cACnB9O,WAAY4B,eACJA,mGAGRD,gBAAOe,QACAuG,mBAAqB,CACxByF,EAAG,EACHlB,GAAI,EACJC,GAAI,EACJxM,EAAG,EACHG,EAAG,EACHyI,KAAMnH,EAAOzB,EACb6I,KAAMpH,EAAOtB,gBAIjBuD,cAAKjC,GACHA,EAAO1B,QAAQ2N,OACfjM,EAAO1B,QAAQuM,UAAU7K,EAAOzB,EAAI,EAAGyB,EAAOtB,EAAI,GAClDsB,EAAO1B,QAAQ0M,MAAMhL,EAAOzB,EAAGyB,EAAOtB,GAKtCsB,EAAO1B,QAAQuM,WAAW,IAAK,gBAEzB5I,eAAKjC,GACXA,EAAO1B,QAAQ6N,cA5ByB3D,KCS7B,kFALU,kCAAI6D,gBAAYX,qFAGlB,kCAAIY,gBAAUZ,oFAFf,kCAAIa,gBAASb,yFACR,kCAAIc,gBAAcd,OCR9B,SAASe,EAAO3E,EAAO4E,UAC7B,MAAO5E,GAAsD,KAAVA,EAAe4E,EAAc5E,ECEzF6E,IAIqBC,EAEnBtP,SAAYoI,QAELoF,EAAI2B,EAAOlH,EAAKG,EAAOoF,GAAI,QAC3BC,EAAI0B,EAAOlH,EAAKG,EAAOqF,GAAI,QAE3B8B,IAAMJ,EAAOlH,EAAKG,EAAOmH,KAAM,QAE/BC,OAASL,EAAOlH,EAAKG,EAAOoH,QAAS,QACrCC,OAASN,EAAOlH,EAAKG,EAAOqH,QAAS,QAErCf,EAAIS,EAAOlH,EAAKG,EAAOsG,GAAI,QAE3BgB,UAAYP,EAAOlH,EAAKG,EAAOsH,WAAY,oBAE3CC,MAAQR,EAAOlH,EAAKG,EAAOuH,OAAQ,aAEnCC,UAAY3H,EAAKG,EAAOwH,gBAExBC,QAAUV,EAAOlH,EAAKG,EAAOyH,UAAU,IAG9CC,YAAAA,+BAAsBC,GACU,iBAAnB7O,KAAK0O,gBACTA,UAAUE,sBAAsBC,IAKzChF,YAAAA,iBAAQL,SACyB,iBAApBxJ,KAAK0O,WAEV1O,KAAK0O,UAAU9L,IAAI5C,KAAMwJ,GAAY,IAAS,SAE3CmF,SAAU,GACR,IAQblL,YAAAA,cAAK3D,EAASiI,GACR/H,KAAK2O,UACP7O,EAAQqB,yBAA2BnB,KAAKwO,YAChCtN,YAAclB,KAAKwN,EAAIzF,EAAmByF,EAClD1N,EAAQ2N,OACR3N,EAAQuM,UAAUrM,KAAKsM,EAAGtM,KAAKuM,GAC/BzM,EAAQ0M,MAAMxM,KAAKsO,OAAQtO,KAAKuO,QAChCzO,EAAQgP,YACRhP,EAAQsC,UAAYpC,KAAKyO,MACzB3O,EAAQuO,IAAI,EAAG,EAAG,EAzDP,qBAyDW,GAAKrO,KAAKqO,KAzDrB,qBAyDuC,IAAMrO,KAAKqO,MAAiB,GAC9EvO,EAAQiP,OACRjP,EAAQkP,YACRlP,EAAQ6N,YC7Dd,IAAqBsB,cACjBnQ,WAAYoI,eACFA,QAEPT,SAAWS,EAAOT,yGAGrBhD,cAAK3D,EAASoP,GACZlP,KAAK2O,cACHlI,SAAS3G,EAASoP,EAAqBlP,UATToO,GCGjBe,cACnBrQ,WAAYoI,eACJA,QAEDkI,OAASnB,EAAO/G,EAAOkI,OAAQ,oGAItCR,+BAAsBC,OAIftK,IAAIP,iBAFH4K,gCAAsBC,GAEd7O,KAAKoP,YACZA,OAAOpL,GAAG4K,sBAAsBC,gBAKzChF,iBAAQL,OAEF6F,EAAWjF,YAAMP,kBAAQL,GAC3B8F,GAAiB,KAEftP,KAAK2O,YACFpK,IAAIP,KAAKhE,KAAKoP,OACjBE,EAAiBtP,KAAKoP,OAAOpL,GAAG6F,QAAQL,IAAe8F,SAIvDtP,KAAK0O,UACAW,GAEHC,SACGX,SAAU,GAEVW,gBAKX7L,cAAK3D,EAASiI,MACR/H,KAAK2O,QAAS,KAWXpK,IAAIP,KAVLhE,KAAKwN,EAAI,KACXzF,EAAqB1I,OAAOC,OAAO,GAAIyI,IACpByF,GAAKxN,KAAKwN,GAG/B1N,EAAQ2N,OACR3N,EAAQuM,UAAUrM,KAAKsM,EAAGtM,KAAKuM,GAC/BzM,EAAQ0M,MAAMxM,KAAKsO,OAAQtO,KAAKuO,QAChCzO,EAAQkM,OApDG,oBAoDIhM,KAAKqO,KAENrO,KAAKoP,YACZA,OAAOpL,GAAGP,KAAK3D,EAASiI,GAE/BjI,EAAQ6N,eAvDqBS,GCAdmB,cAEnBzQ,WAAYoI,eACJA,QAEDjH,MAAQ8G,EAAKG,EAAOjH,YACpBE,OAAS4G,EAAKG,EAAO/G,wGAG5BqP,4BAAmB1P,EAASiI,OACtBhI,EAAID,EAAQX,OAAOc,MACrBC,EAAIJ,EAAQX,OAAOgB,YAChBsP,YAAcC,SAASC,cAAc,eACrCF,YAAYxP,MAAQyC,KAAK2G,MAAMtJ,EAAIC,KAAKsO,aACxCmB,YAAYtP,OAASuC,KAAK2G,MAAMnJ,EAAIF,KAAKuO,aACzCqB,KAAO5P,KAAKyP,YAAYvQ,WAAW,WACnC0Q,KAAKzO,yBAA2B,mBAChCyO,KAAK1O,YAAc,EACnBlB,KAAKC,aACHA,MAAQ8H,EAAmBhI,GAE7BC,KAAKG,cACHA,OAAS4H,EAAmB7H,gBAKrCuD,cAAK3D,EAASiI,MACR/H,KAAK2O,QAAS,CACX3O,KAAKyP,kBACHD,mBAAmB1P,EAASiI,OAG/BhI,EAAIC,KAAKC,MACXC,EAAIF,KAAKG,OACT0P,EAAK9P,EAAI,EACTwN,EAAKrN,EAAI,MAGNqE,IAAIP,KAAKhE,KAAKoP,YACZA,OAAOpL,GAAGP,KAAKzD,KAAK4P,MAAM,GAGjC9P,EAAQ2N,OACR3N,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAclB,KAAKwN,EAAIzF,EAAmByF,EAClD1N,EAAQuM,UAAUrM,KAAKsM,EAAIuD,EAAI7P,KAAKuM,EAAIgB,GACxCzN,EAAQ0M,MAAMxM,KAAKsO,OAAQtO,KAAKuO,QAChCzO,EAAQkM,OAlDG,oBAkDIhM,KAAKqO,KACpBvO,EAAQgQ,UAAU9P,KAAKyP,YAAa,EAAG,EAAGzP,KAAKyP,YAAYxP,MAAOD,KAAKyP,YAAYtP,QAAS0P,GAAKtC,EAAIxN,EAAGG,GACxGJ,EAAQ6N,eAlDsBwB,GCDfY,cACjBjR,WAAYoI,eACFA,EAAO3F,MAAQ,QACjByO,EAAc,GAChBC,EAAgB,OAEd1L,IAAIP,KAAKkD,GACsC,IAA3C,CAAC,OAAQ,QAAS,SAASb,QAAQrC,KACT,mBAAfkD,EAAOlD,GAChBiM,EAAcjM,GAAKkD,EAAOlD,GAE1BgM,EAAYhM,GAAKkD,EAAOlD,QAM9BM,EAAQ2J,EAAOlH,EAAKG,EAAO5C,OAAQ,QAClC8K,OAAS,OAEV7K,IAAIP,EAAI,EAAGA,EAAIM,EAAON,IAAK,KACvBkM,EAAchJ,EAAOiJ,MACrB/H,EAAY,OACZ7D,IAAImC,KAASsJ,EACf5H,EAAU1B,GAASsJ,EAAYtJ,OAE7BnC,IAAImC,KAASuJ,EACf7H,EAAU1B,GAASuJ,EAAcvJ,GAAO0J,KAAK,KAAMpM,QAEhDoL,OAAOpL,GAAK,IAAIkM,EAAY9H,2FA7BR+G,GCAhBkB,cAEnBvR,WAAYoI,eACJA,QAEDjH,MAAQ8G,EAAKG,EAAOjH,YACpBE,OAAS4G,EAAKG,EAAO/G,aAErBmQ,OAASrC,EAAOlH,EAAKG,EAAOoJ,QAAS,QACrCC,MAAQtC,EAAOlH,EAAKG,EAAOqJ,QAAQ,QACnC3J,MAAQqH,EAAOlH,EAAKG,EAAON,QAAQ,mGAG1C4I,4BAAmB1P,EAASiI,OACtBhI,EAAID,EAAQX,OAAOc,MACrBC,EAAIJ,EAAQX,OAAOgB,YAChBsP,YAAcC,SAASC,cAAc,eACrCF,YAAYxP,MAAQyC,KAAK8N,KAAKzQ,EAAIC,KAAKsO,aACvCmB,YAAYtP,OAASuC,KAAK8N,KAAKtQ,EAAIF,KAAKuO,aACxCqB,KAAO5P,KAAKyP,YAAYvQ,WAAW,WACnC0Q,KAAKzO,yBAA2B,mBAChCyO,KAAK1O,YAAc,EACnBlB,KAAKsM,SACHA,EAAIvE,EAAmBuE,GAEzBtM,KAAKuM,SACHA,EAAIxE,EAAmBwE,GAEzBvM,KAAKC,aACHA,MAAQ8H,EAAmBhI,GAE7BC,KAAKG,cACHA,OAAS4H,EAAmB7H,gBAKrCuD,cAAK3D,EAASiI,MACR/H,KAAK2O,QAAS,CACX3O,KAAKyP,kBACHD,mBAAmB1P,EAASiI,OAG/ByF,EAAIxN,KAAKwN,EAAIzF,EAAmByF,EAClCzN,EAAIC,KAAKC,MACTC,EAAIF,KAAKG,OACTsQ,EAAU/N,KAAK2G,MAAMtJ,EAAIgI,EAAmBY,KAAOZ,EAAmBhI,EAAIC,KAAKsO,QAC/EoC,EAAUhO,KAAK2G,MAAMnJ,EAAI6H,EAAmBa,KAAOb,EAAmB7H,EAAIF,KAAKuO,QAE7Ef,EAAI,GAAKiD,GAAWC,SACjBd,KAAKzO,yBAA2B,YAChCyO,KAAK1O,YAAc,OACnB0O,KAAKE,UAAUhQ,EAAQX,OAAQ,EAAG,EAAGW,EAAQX,OAAOc,MAAOH,EAAQX,OAAOgB,OAAQ,EAAG,EAAGsQ,EAASC,GAElG1Q,KAAKsQ,OAAS,SACXV,KAAKzO,yBAA2BnB,KAAK4G,MAAQ,cAAgB,mBAC7DgJ,KAAKxN,UAAY,cAAgBpC,KAAKsQ,OAAS,SAC/CV,KAAKvN,SAAS,EAAG,EAAGoO,EAASC,IAIhC1Q,KAAK4G,OACP9G,EAAQmJ,UAAUjJ,KAAKsM,EAAGtM,KAAKuM,EAAGxM,EAAGG,GAEvCJ,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAcsM,EACtB1N,EAAQ6Q,uBAAyB3Q,KAAKuQ,MACtCzQ,EAAQgQ,UAAU9P,KAAKyP,YAAa,EAAG,EAAGgB,EAASC,EAAS1Q,KAAKsM,EAAGtM,KAAKuM,EAAGxM,EAAGG,GAC/EJ,EAAQ6Q,uBAAwB,QAI9B3Q,KAAK4G,QACF5G,KAAKsM,SACHA,EAAIvE,EAAmBuE,GAEzBtM,KAAKuM,SACHA,EAAIxE,EAAmBwE,GAEzBvM,KAAKC,aACHA,MAAQ8H,EAAmBhI,GAE7BC,KAAKG,cACHA,OAAS4H,EAAmB7H,GAEnCJ,EAAQmJ,UAAUjJ,KAAKsM,EAAGtM,KAAKuM,EAAGvM,KAAKC,MAAOD,KAAKG,aArFrBiO,GCKhCnK,cACJnF,WAAYoI,eACJA,QAED0J,MAAQhN,EAAae,SAASoC,EAAKG,EAAO0J,aAE1CC,SAAW5C,EAAOlH,EAAKG,EAAO2J,UAAW5M,EAAM6M,aAC/CC,OAAS9C,EAAOlH,EAAKG,EAAO6J,QAAS,QACrCC,OAAS/C,EAAOlH,EAAKG,EAAO8J,QAAS,QACrCC,WAAahD,EAAOlH,EAAKG,EAAO+J,YAAa,QAC7CC,YAAcjD,EAAOlH,EAAKG,EAAOgK,aAAc,mGAItDzN,cAAK3D,EAASiI,MACR/H,KAAK2O,QAAS,KACZsC,EAAajR,KAAKiR,YAAcjR,KAAK4Q,MAAM3Q,MAC7CiR,EAAclR,KAAKkR,aAAelR,KAAK4Q,MAAMzQ,OAC7CgR,EAAKF,EAAajR,KAAKsO,OACvB8C,EAAKF,EAAclR,KAAKuO,OAC1BzO,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAclB,KAAKwN,EAAIzF,EAAmByF,EAClC,GAAZxN,KAAKqO,IACHrO,KAAK6Q,WAAa5M,EAAMoN,SAC1BvR,EAAQgQ,UACN9P,KAAK4Q,MACL5Q,KAAK+Q,OACL/Q,KAAKgR,OACLC,EACAC,EACAlR,KAAKsM,EACLtM,KAAKuM,EACL4E,EACAC,GAIFtR,EAAQgQ,UACN9P,KAAK4Q,MACL5Q,KAAK+Q,OACL/Q,KAAKgR,OACLC,EACAC,EACAlR,KAAKsM,EAAI6E,EAAK,EACdnR,KAAKuM,EAAI6E,EAAK,EACdD,EACAC,IAKJtR,EAAQ2N,OACR3N,EAAQuM,UAAUrM,KAAKsM,EAAGtM,KAAKuM,GAC/BzM,EAAQkM,OAzDC,oBAyDMhM,KAAKqO,KACpBvO,EAAQgQ,UACN9P,KAAK4Q,MACL5Q,KAAK+Q,OACL/Q,KAAKgR,OACLC,EACAC,IACEC,GAAM,KACNC,GAAM,GACRD,EACAC,GAEFtR,EAAQ6N,gBAjEIS,GAuEpBnK,EAAMoN,SAAW,EACjBpN,EAAM6M,OAAS,EC7Ef3C,IAEMmD,cACJxS,WAAYoI,eACJA,QAEDgC,KAAOnC,EAAKG,EAAOgC,WAEnB5G,KAAO2L,EAAOlH,EAAKG,EAAO5E,MAAO,uBAEjCuO,SAAW5C,EAAOlH,EAAKG,EAAO2J,UAAWS,EAAKR,aAE9CrC,MAAQ1H,EAAKG,EAAOuH,YACpB8C,YAAcxK,EAAKG,EAAOqK,kBAC1BC,UAAYvD,EAAOlH,EAAKG,EAAOsK,WAAY,mGAIlD/N,cAAK3D,EAASiI,GACR/H,KAAK2O,UACP7O,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAclB,KAAKwN,EAAIzF,EAAmByF,EAClD1N,EAAQ2N,OACJ6D,EAAKD,WACPvR,EAAQmB,UAAY,OACpBnB,EAAQkB,aAAe,OAEzBlB,EAAQuM,UAAUrM,KAAKsM,EAAGtM,KAAKuM,GAC/BzM,EAAQ0M,MAAMxM,KAAKsO,OAAQtO,KAAKuO,QAChCzO,EAAQkM,OA7BG,oBA6BIhM,KAAKqO,KACpBvO,EAAQwC,KAAOtC,KAAKsC,KAEhBtC,KAAKyO,QACP3O,EAAQsC,UAAYpC,KAAKyO,MACzB3O,EAAQ2C,SAASzC,KAAKkJ,KAAM,EAAG,IAG7BlJ,KAAKuR,cACPzR,EAAQ2R,YAAczR,KAAKuR,YAC3BzR,EAAQ0R,UAAYxR,KAAKwR,UACzB1R,EAAQ4R,WAAW1R,KAAKkJ,KAAM,EAAG,IAGnCpJ,EAAQ6N,eAzCKS,GA+CnBkD,EAAKD,SAAW,EAChBC,EAAKR,OAAS,ECnDd3C,IAIMwD,cAGJ7S,WAAYoI,eACJA,yFAGD0K,0BAAiBC,EAAGC,EAAGC,OACxBC,EAAQC,EAAQC,EAAKL,GAXF,EAW2BM,EAAKL,GAXhC,EAWyDM,EAAKL,GAX9D,MAalBJ,EAASU,aACZV,EAASU,SAAW,IAAItM,MAAM,IACzBiM,EAAS,EAAGA,EAASL,EAASU,SAAS5M,OAAQuM,QAClDL,EAASU,SAASL,GAAU,IAAIjM,MAAM,IACjCkM,EAAS,EAAGA,EAASN,EAASU,SAASL,GAAQvM,OAAQwM,IAC1DN,EAASU,SAASL,GAAQC,GAAU,IAAIlM,MAAM,WAK/C4L,EAASU,SAASH,GAAIC,GAAIC,KAC7BT,EAASU,SAASH,GAAIC,GAAIC,GAAMT,EAASW,sBAAsBJ,EAAIC,EAAIC,IAElET,EAASU,SAASH,GAAIC,GAAIC,MAG5BE,+BAAsBJ,EAAIC,EAAIC,OAC/BjT,EAASuQ,SAASC,cAAc,UACpCxQ,EAAOc,MAAQd,EAAOgB,OAhCL,OAkCboS,EAAOpT,EAAOD,WAAW,MAC7BqT,EAAKrR,YAAc,EACnBqR,EAAKpR,yBAA2B,cAChCoR,EAAKtJ,UAAU,EAAG,EArCD,GAAA,QAuCbuJ,EAAOD,EAAKE,qBArCKC,GAAAA,GAqCoD,EArCpDA,GAAAA,GAAAA,WAsCrBF,EAAKG,aAAa,EAAG,aAAYT,GAvCV,GAuCkE,GAAK,SAAQC,GAvC/E,GAuCuI,GAAK,SAAQC,GAvCpJ,GAuC4M,GAAK,OACxOI,EAAKG,aAAa,GAAK,aAAYT,GAxCZ,GAwCoE,GAAK,SAAQC,GAxCjF,GAwCyI,GAAK,SAAQC,GAxCtJ,GAwC8M,GAAK,SAC1OI,EAAKG,aAAa,EAAG,aAAYT,GAzCV,GAyCkE,GAAK,SAAQC,GAzC/E,GAyCuI,GAAK,SAAQC,GAzCpJ,GAyC4M,GAAK,OAExOG,EAAKnQ,UAAYoQ,EACjBD,EAAKlQ,SAAS,EAAG,EA7CA,GAAA,IA+CVlD,eAITsE,cAAK3D,EAASiI,MACR/H,KAAK2O,QAAS,CAEX3O,KAAKyO,OAAUzO,KAAKyO,MAAMA,aACxBA,MAAQmE,EAAM5S,KAAKyO,OAAOoE,WAE3BpE,EAAQzO,KAAKyO,MAAMA,MACzB3O,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAclB,KAAKwN,EAAIzF,EAAmByF,EAClD1N,EAAQ6Q,sBAAwB3Q,KAAKsO,OAASvG,EAAmBY,KAAOZ,EAAmBhI,EA5D5E,GA6DfD,EAAQgQ,UAAU6B,EAASC,iBAAiBnD,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAK,EAAG,EA7D/D,GAAA,GA6D8FzO,KAAKsM,EAAKtM,KAAKsO,OAAS,EAAItO,KAAKuM,EAAKvM,KAAKuO,OAAS,EAAIvO,KAAKsO,OAAQtO,KAAKuO,QACvLzO,EAAQ6Q,uBAAwB,OA1DfvC,GA+DvBuD,EAASU,SAAW,KClEpBlE,IAEqB2E,cACnBhU,WAAYoI,eACJA,QAED6L,aAAU/K,OACVgL,KAAOjM,EAAKG,EAAO8L,WACnBC,OAAS,IAAIC,YAEbzE,MAAQ1H,EAAKG,EAAOuH,YACpB8C,YAAcxK,EAAKG,EAAOqK,kBAC1BC,UAAYvD,EAAOlH,EAAKG,EAAOsK,WAAY,QAC3C2B,KAAOlF,EAAOlH,EAAKG,EAAOiM,OAAO,QACjCC,MAAQnF,EAAOlH,EAAKG,EAAOkM,QAAQ,mGAI1C3P,cAAK3D,EAASiI,iBACR/H,KAAK2O,QAAS,KACZnB,EAAIxN,KAAKwN,EACTxN,KAAK+S,UAAY/S,KAAKgT,OACpBjN,MAAMgE,QAAQ/J,KAAKgT,YAChBC,OAAS,IAAIC,YACbF,KAAKpN,iBAASyN,KACZJ,OAAOK,OAAOD,EAAM,GAAG,GAAIA,EAAM,GAAG,IACzCA,EAAMzN,iBAAS2N,KACRN,OAAOO,cAAcD,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,QAErFN,OAAOjE,oBAGTiE,OAAS,IAAIC,OAAOlT,KAAKgT,WAE3BD,QAAU/S,KAAKgT,MAElBjL,IACFyF,GAAKzF,EAAmByF,OAGtBc,EAAStO,KAAKsO,OAChBC,EAASvO,KAAKuO,WAmCXhK,IAAIP,KAjCLhE,KAAKoT,QACO,GAAV9E,IACFA,EAAS,OAEG,GAAVC,IACFA,EAAS,QAIbzO,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAcsM,EACtB1N,EAAQ2N,OACR3N,EAAQuM,UAAUrM,KAAKsM,EAAGtM,KAAKuM,GAC/BzM,EAAQ0M,MAAM8B,EAAQC,GACtBzO,EAAQkM,OAzDG,oBAyDIhM,KAAKqO,KAEhBrO,KAAKyO,QACP3O,EAAQsC,UAAYpC,KAAKyO,MACzB3O,EAAQiP,KAAK/O,KAAKiT,SAGpBnT,EAAQ2N,OAEJzN,KAAKmT,OACPrT,EAAQqT,KAAKnT,KAAKiT,QACdjT,KAAKoT,QACPtT,EAAQkM,OArED,qBAqEShM,KAAKqO,KACrBvO,EAAQ0M,MAAM,EAAE8B,EAAQ,EAAEC,GAC1BzO,EAAQuM,WAAWrM,KAAKsM,GAAItM,KAAKuM,KAKvBvM,KAAKoP,YACZA,OAAOpL,GAAGP,KAAK3D,EAASiI,GAG/BjI,EAAQ6N,UAEJ3N,KAAKuR,cACPzR,EAAQ2R,YAAczR,KAAKuR,YAC3BzR,EAAQ0R,UAAYxR,KAAKwR,UACzB1R,EAAQ2T,OAAOzT,KAAKiT,SAGtBnT,EAAQ6N,eAtFoBwB,GCEbuE,cAEnB5U,WAAYoI,eACJA,QAEDjH,MAAQ8G,EAAKG,EAAOjH,YACpBE,OAAS4G,EAAKG,EAAO/G,aACrBmM,EAAIvF,EAAKG,EAAOoF,QAChBC,EAAIxF,EAAKG,EAAOqF,QAEhBgF,YAAcxK,EAAKG,EAAOqK,kBAC1BC,UAAYvD,EAAOlH,EAAKG,EAAOsK,WAAY,QAC3C5K,MAAQqH,EAAOlH,EAAKG,EAAON,QAAQ,mGAI1CnD,cAAK3D,EAASiI,MACR/H,KAAK2O,WACF3O,KAAKC,aACHA,MAAQ8H,EAAmBhI,GAE7BC,KAAKG,cACHA,OAAS4H,EAAmB7H,QAEpB8H,IAAXhI,KAAKsM,SACFA,EAAIvE,EAAmBuE,QAEftE,IAAXhI,KAAKuM,SACFA,EAAIxE,EAAmBwE,GAG9BzM,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAclB,KAAKwN,EAAIzF,EAAmByF,EACjC,IAAbxN,KAAKqO,IACHrO,KAAK4G,MACP9G,EAAQmJ,UAAUjJ,KAAKsM,EAAGtM,KAAKuM,EAAGvM,KAAKC,MAAOD,KAAKG,SAEnDL,EAAQsC,UAAYpC,KAAKyO,MACzB3O,EAAQuC,SAASrC,KAAKsM,EAAGtM,KAAKuM,EAAGvM,KAAKC,MAAOD,KAAKG,SAEhDH,KAAKuR,cACLzR,EAAQgP,YACRhP,EAAQ0R,UAAYxR,KAAKwR,UACzB1R,EAAQ2R,YAAczR,KAAKuR,YAC3BzR,EAAQ6T,KAAK3T,KAAKsM,EAAGtM,KAAKuM,EAAGvM,KAAKC,MAAOD,KAAKG,QAC9CL,EAAQ2T,cAEP,KACDnG,EAAKtN,KAAKC,MAAQ,EAClBsN,EAAKvN,KAAKG,OAAS,EACvBL,EAAQ2N,OACR3N,EAAQuM,UAAUrM,KAAKsM,EAAIgB,EAAItN,KAAKuM,EAAIgB,GACxCzN,EAAQkM,OAxDC,oBAwDMhM,KAAKqO,KAChBrO,KAAK4G,MACP9G,EAAQmJ,WAAWqE,GAAKC,EAAIvN,KAAKC,MAAOD,KAAKG,SAE7CL,EAAQsC,UAAYpC,KAAKyO,MACzB3O,EAAQuC,UAAUiL,GAAKC,EAAIvN,KAAKC,MAAOD,KAAKG,SAE1CH,KAAKuR,cACLzR,EAAQgP,YACRhP,EAAQ0R,UAAYxR,KAAKwR,UACzB1R,EAAQ2R,YAAczR,KAAKuR,YAC3BzR,EAAQ6T,MAAMrG,GAAKC,EAAIvN,KAAKC,MAAOD,KAAKG,QACxCL,EAAQ2T,UAEZ3T,EAAQ6N,eAlEkBS,GCJbwF,cACnB9U,WAAYoI,OACNgC,EAAOnC,EAAKG,EAAOgC,MACrB2K,EAAgB9N,MAAMgE,QAAQb,GAAQA,EAAO,UAAIA,eAC7C7J,OAAOC,OAAO,GAAI4H,EAAQ,CAC9BiJ,MAAOmB,EACPhN,MAAOuP,EAAcpO,OACrByD,cAAOxC,UAAUmN,EAAcnN,IAC/BiI,iBAAUjI,SAAmC,MAAzBmN,EAAcnN,IAAkBK,EAAKG,EAAOyH,QAASjI,8FARzCqJ,GCCjB+D,cACnBhV,WAAYoI,eACJA,QACD5C,MAAQ2J,EAAOlH,EAAKG,EAAO5C,OAAQ,SACnCyP,MAAQ9F,EAAOlH,EAAKG,EAAO6M,OAAQ,QACnCC,MAAQ/F,EAAOlH,EAAKG,EAAO8M,OAAQ,QACnCC,MAAQhG,EAAOlH,EAAKG,EAAO+M,OAAQ,QACnCzC,UAAYzK,EAAKG,EAAOsK,gBAEhBxJ,IAAXhI,KAAKsM,QACMtE,IAAXhI,KAAKuM,GACLvM,KAAKC,OACRD,KAAKG,QACLH,KAAKwR,eAEGhJ,YAEA0L,aAAUlM,kGAInBQ,qBACO0L,QAAUlU,KAAKC,MAAQ,EAAID,KAAKsM,OAChC6H,QAAUnU,KAAKG,OAAS,EAAIH,KAAKuM,OACjC6H,OAAS1R,KAAKsG,IAAIhJ,KAAKC,MAAOD,KAAKG,QAAU,OAC7CkU,OAAS,QACTC,OAAS,QACTC,OAAS,QACTC,UAAY,QACZC,UAAY,QACZC,UAAY,QACZC,UAAY,QACZC,aAAe,QACfC,eAAiB,OACjBtQ,IAAIP,EAAI,EAAGA,EAAIhE,KAAKsE,MAAON,SACzBqQ,OAAOrQ,GAAKtB,KAAKC,SAAW3C,KAAKC,MAAQD,KAAKC,MAAQ,OACtDqU,OAAOtQ,GAAKtB,KAAKC,SAAW3C,KAAKG,OAASH,KAAKG,OAAS,OACxDoU,OAAOvQ,GAAKtB,KAAKC,SAAW3C,KAAKoU,oBAI1CU,kBAAS9Q,EAAG+Q,EAAmBC,GACzBA,SACGJ,aAAa5Q,IAAK,WAErBsJ,EAAKtN,KAAKC,MAAQ,EAClBsN,EAAKvN,KAAKG,OAAS,EACnBmM,EAAItM,KAAKqU,OAAOrQ,GAAKhE,KAAK+T,MAAQgB,EACpCxI,EAAIvM,KAAKsU,OAAOtQ,GAAKhE,KAAKgU,MAAQe,EAClCE,EAAIjV,KAAKuU,OAAOvQ,GAAKhE,KAAKiU,MAAQc,EAC7BzI,GAAKgB,GACVhB,GAAKtM,KAAKC,MACVsM,EAAI7J,KAAKC,SAAW3C,KAAKG,OAASoN,OAC7BqH,aAAa5Q,IAAK,OAElBsI,EAAIgB,GACThB,GAAKtM,KAAKC,MACVsM,EAAI7J,KAAKC,SAAW3C,KAAKG,OAASoN,OAC7BqH,aAAa5Q,IAAK,OAGlBuI,GAAKgB,GACVhB,GAAKvM,KAAKG,OACVmM,EAAI5J,KAAKC,SAAW3C,KAAKC,MAAQqN,OAC5BsH,aAAa5Q,IAAK,OAElBuI,EAAIgB,GACThB,GAAKvM,KAAKG,OACVmM,EAAI5J,KAAKC,SAAW3C,KAAKC,MAAQqN,OAC5BsH,aAAa5Q,IAAK,OAGlBiR,GAAK,GACVA,GAAKjV,KAAKoU,OACV9H,EAAI5J,KAAKC,SAAW3C,KAAKC,MAAQqN,EACjCf,EAAI7J,KAAKC,SAAW3C,KAAKG,OAASoN,OAC7BqH,aAAa5Q,IAAK,OAElBiR,EAAIjV,KAAKoU,QACda,GAAKjV,KAAKoU,OACV9H,EAAI5J,KAAKC,SAAW3C,KAAKC,MAAQqN,EACjCf,EAAI7J,KAAKC,SAAW3C,KAAKG,OAASoN,OAC7BqH,aAAa5Q,IAAK,MAGrBkR,EAAWlV,KAAKkU,QAAW5H,EAAI2I,EAAK3H,EACpC6H,EAAWnV,KAAKmU,QAAW5H,EAAI0I,EAAK1H,OACnCqH,aAAa5Q,GAChBhE,KAAK4U,aAAa5Q,IAClBkR,GAAYlV,KAAKsM,GACjB6I,GAAYnV,KAAKuM,GACjB2I,EAAWlV,KAAKsM,EAAItM,KAAKC,OACzBkV,EAAWnV,KAAKuM,EAAIvM,KAAKG,OACvB6U,QACGX,OAAOrQ,GAAKsI,OACZgI,OAAOtQ,GAAKuI,OACZgI,OAAOvQ,GAAKiR,OACZP,UAAU1Q,GAAKkR,OACfP,UAAU3Q,GAAKmR,SAEfX,UAAUxQ,GAAKkR,OACfT,UAAUzQ,GAAKmR,OAClBN,eAAe7Q,GAAKtB,KAAK0S,MAA2C,GAApC,EAAIpV,KAAKuU,OAAOvQ,GAAKhE,KAAKoU,SAAe,gBAI/EvK,iBAAQL,OACF6L,EAAMjL,YAAMP,kBAAQL,MACpBxJ,KAAK2O,cAA4B3G,IAAjBhI,KAAKkU,gBACnBlQ,EAAIhE,KAAKsE,MACNN,UACA8Q,SAAS9Q,EAAGwF,EAAa,IAAI,GAC9BxJ,KAAK4U,aAAa5Q,SACf8Q,SAAS9Q,GAAI,GAAG,UAIpBqR,eAIT5R,cAAK3D,EAASiI,MACR/H,KAAK2O,QAAS,SACK3G,IAAjBhI,KAAKkU,oBACFjU,MAAQD,KAAKC,OAAS8H,EAAmBhI,OACzCI,OAASH,KAAKG,QAAU4H,EAAmB7H,OAC3CoM,OAAetE,IAAXhI,KAAKsM,EAAkBvE,EAAmBuE,EAAItM,KAAKsM,OACvDC,OAAevE,IAAXhI,KAAKuM,EAAkBxE,EAAmBwE,EAAIvM,KAAKuM,OAC3DiF,UAAYxR,KAAKwR,WAAczJ,EAAmB7H,EAAI6H,EAAmBa,KAAQ,YAC7EJ,UAGP1I,EAAQqB,yBAA2BnB,KAAKwO,UACxC1O,EAAQoB,YAAclB,KAAKwN,EAAIzF,EAAmByF,EAChC,GAAdxN,KAAKgU,OAA4B,GAAdhU,KAAKiU,OAAcjU,KAAK+T,MAAQ,EAAG,CACxDjU,EAAQsC,UAAYpC,KAAKyO,cACrBzK,EAAIhE,KAAKsE,MACNN,KACDhE,KAAK4U,aAAa5Q,IACpBlE,EAAQuC,SACNrC,KAAK0U,UAAU1Q,GACfhE,KAAK2U,UAAU3Q,GAAKhE,KAAK6U,eAAe7Q,GAAKhE,KAAKwR,UAAY,EAC9DxR,KAAKwU,UAAUxQ,GAAKhE,KAAK0U,UAAU1Q,GACnChE,KAAK6U,eAAe7Q,GAAKhE,KAAKwR,eAI/B,CACL1R,EAAQ2R,YAAczR,KAAKyO,cAEzBzK,EADEsR,EAAK,IAEAA,GAAI,KACXxV,EAAQgP,YACRhP,EAAQ0R,UAAY8D,EAAKtV,KAAKwR,UAC9BxN,EAAIhE,KAAKsE,MACFN,KACDhE,KAAK4U,aAAa5Q,IAAMhE,KAAK6U,eAAe7Q,KAAOsR,IACrDxV,EAAQwT,OAAOtT,KAAKwU,UAAUxQ,GAAIhE,KAAKyU,UAAUzQ,IACjDlE,EAAQyV,OAAOvV,KAAK0U,UAAU1Q,GAAIhE,KAAK2U,UAAU3Q,KAGrDlE,EAAQ2T,SACR3T,EAAQkP,mBAlKqB0E,KCwBxB,mFAdW,kCAAI8B,gBAAatI,sFACnB,kCAAIuI,gBAAWvI,sFACf,kCAAIwI,gBAAWxI,uFACd,kCAAIyI,gBAAYzI,wFACf,kCAAI0I,gBAAa1I,qFACpB,kCAAI2I,gBAAU3I,qFACd,kCAAI4I,gBAAU5I,oFACf,kCAAI6I,gBAAS7I,wFACT,kCAAI8I,gBAAa9I,oFACrB,kCAAI+I,gBAAS/I,oFACb,kCAAIgJ,gBAAShJ,wFACT,kCAAIiJ,gBAAajJ,yFAChB,kCAAIkJ,gBAAclJ,OCxBvCmJ,EACJvX,SAAYwX,EAAMC,EAAUC,OAQrBjS,IAAIP,UAPJsS,KAAOA,OAEPC,SAAWtI,EAAOsI,EAAU,QAE5B7H,UAAY3I,MAAMgE,QAAQyM,KAASzQ,MAAMgE,QAAQyM,EAAI,IAAM,CAACA,GAAQA,GAAO,QAE3EC,kBAAoB,GACXzW,KAAK0O,eACZ+H,kBAAkBzS,GAAK,UAChB,cACG+C,EAAK/G,KAAKuW,iBACf,KACRD,KAAmCvP,EAAZ,iBAATuP,EAA0BA,EAAKtS,GAAWsS,aAC5B,iBAATA,IAAuC,IAAlBvP,EAAKuP,EAAKtS,MAAiC,IAAf+C,EAAKuP,IACzEI,QAAsC3P,EAAZ,iBAATuP,EAA0BA,EAAKtS,GAAWsS,gBAC5B,iBAATA,IAAuC,IAAlBvP,EAAKuP,EAAKtS,MAAiC,IAAf+C,EAAKuP,UAEzEK,UAAU3S,QAGZ4S,eAAiB,OACjBC,WAAY,GAGnBrS,YAAAA,eAAMsS,OACCvS,IAAIP,oBADQ,GACHhE,KAAK0O,UAAW,KACtB+H,EAAoBzW,KAAKyW,kBAAkBzS,GACjDyS,EAAkB5F,SAAW,EAC7B4F,EAAkBK,WAAaA,EAC/BL,EAAkBH,KAAOG,EAAkBC,QAC3CD,EAAkB9H,QAAU8H,EAAkBM,gBACzCJ,UAAU3S,KAInB2S,YAAAA,mBAAU3S,GAENhE,KAAKyW,kBAAkBzS,GAAG6M,SAAW7Q,KAAK0O,UAAU1K,GAAGyB,QACM,OAA1DzF,KAAK0O,UAAU1K,GAAGhE,KAAKyW,kBAAkBzS,GAAG6M,gBAE1C4F,kBAAkBzS,GAAGgT,OAAShX,KAAK0O,UAAU1K,GAAGhE,KAAKyW,kBAAkBzS,GAAG6M,UAEzB,mBAA3C7Q,KAAKyW,kBAAkBzS,GAAGgT,OAAOxS,YACrCiS,kBAAkBzS,GAAGgT,OAAOxS,QAIiB,mBAAzCxE,KAAKyW,kBAAkBzS,GAAGgT,OAAOpU,WACrC6T,kBAAkBzS,GAAGgT,OAAS,KAAMhX,KAAKyW,kBAAkBzS,GAAGgT,eAKhEP,kBAAkBzS,GAAGgT,OAAS,MAIvCpI,YAAAA,+BAAsBC,OAChB7K,MAECA,KAAK6K,EACiC,iBAA9B7O,KAAKyW,kBAAkBzS,KACR,OAApB6K,EAAI7K,GAAG6M,gBACJ4F,kBAAkBzS,GAAG6M,SAAWhC,EAAI7K,GAAG6M,UAE1B,OAAhBhC,EAAI7K,GAAGsS,YACJG,kBAAkBzS,GAAGsS,KAAOzH,EAAI7K,GAAGsS,UACnCG,kBAAkBzS,GAAG2K,WAA4B,IAAhBE,EAAI7K,GAAGsS,OAErB,OAAtBzH,EAAI7K,GAAG8S,kBACJL,kBAAkBzS,GAAG8S,WAAajI,EAAI7K,GAAG8S,iBAE3CH,UAAU3S,QAIdA,KAAKhE,KAAK0O,UAC4B,iBAA9B1O,KAAKyW,kBAAkBzS,IAAmBhE,KAAKyW,kBAAkBzS,GAAGgT,kBAAkBX,QAC1FI,kBAAkBzS,GAAGgT,OAAOpI,sBAAsBC,IAM7DjM,YAAAA,aAAIwM,EAAQ6H,EAAMC,OAEZ1N,EAAayN,IAEA,IACH,IACM,IAEP,IACiB,SAKzB1S,IAAIP,KAJJkT,IACH1N,EAAayN,EAAOjX,KAAK4W,oBACpBA,eAAiBK,GAEVjX,KAAK0O,kBAGyB,OADd1O,KAAKyW,kBAAkBzS,IACrB2K,aACjBnF,EAE8B,OAArC2N,EAA0BH,iBAGjB,UAGPI,EAAW,OACNA,EAAW,MAEhBD,EAA0BL,YAAcM,EAEpCD,EAA0BL,YAAc,EAAG,KAI5B,KAFjBM,EAAWD,EAA0BH,OAAOpU,IAAIwM,EAAQ+H,EAA0BL,iBAGrE,GAETM,IAAaf,EAASgB,kCACjB7N,EACE4N,IAAaf,EAASiB,mBAE/BH,EAA0BL,WAAa,OAElCH,UAAU3S,GAEfmT,EAA0BH,OAAS,OAExB,IACW,IAAbI,GAAsBA,GAAY,IAE3CD,EAA0BtG,WAEtBsG,EAA0BtG,UAAY7Q,KAAK0O,UAAU1K,GAAGyB,UACnB,IAAnC0R,EAA0Bb,MAC5Ba,EAA0Bb,OAExBa,EAA0Bb,KAC5Ba,EAA0BtG,SAAWsG,EAA0BtG,SAAW7Q,KAAK0O,UAAU1K,GAAGyB,OAG5F0R,EAA0BxI,SAAU,GAIxCwI,EAA0BL,WAAa,OAElCH,UAAU3S,GACVmT,EAA0BxI,UAC7BwI,EAA0BH,OAAS,KACnCG,EAA0BxI,SAAU,GAEG,OAArCwI,EAA0BH,eAEjB,WAKJ,kBAWnBO,EAAkB,EAAG,IAEnBC,IAAiBD,SAEZ/N,EAGL4F,EAAOT,SAAWkI,IAAcU,GAElCnI,EAAOT,SAAU,OACZkI,WAAY,GAEV7W,KAAK6W,WAAaA,IAAcU,SAClCV,WAAY,EACjBzH,EAAOT,SAAU,UAGb,GAIZ0H,EAASgB,2BAA6B,gBACtChB,EAASiB,kBAAoB,OCzM7B,IAAMG,EACJ3Y,SAAY8K,kBAKR,kCAJO,uCACK,wCACU5B,0CACXA,QAGR0P,OAASA,OAETC,YAAcA,OAEdC,WAAaA,OAEbC,iBAAmBC,OACnBC,aAAe/X,KAAK0X,OAAOI,QAC3BE,gCAA6BhQ,GAGpCiQ,YAAAA,kBAASC,EAAM9Y,iBACT8Y,IAASlY,KAAK6X,iBAAkB,CAClCM,QAAQC,IAAIF,QACPF,2BAA6BE,MAC5BG,EAAe,GAAEH,EAAKI,OAAO,GAAGC,cAAgBL,EAAKlL,MAAM,GAM3DwL,EAL0B,CAC3BxY,2BAA0BqY,EAC1BrY,gCACEqY,GAEwCI,cAC7CP,UAAQlY,EAAK2X,YAAYO,KAEvBM,QACGX,iBAAmB7X,KAAKgY,gCACxBD,aAAe/X,KAAK2X,YAAYa,QAChCT,cAAgB/X,KAAK+X,aAAavT,OAASxE,KAAK+X,aAAavT,eAE7DqT,iBAAmB7X,KAAKgY,gCACxBD,aAAe/X,KAAK0X,OAAO1X,KAAK6X,uBAChCE,cAAgB/X,KAAK+X,aAAavT,OAASxE,KAAK+X,aAAavT,aAC7DwT,gCAA6BhQ,KAOxCpF,YAAAA,aAAIwM,EAAQ6H,EAAMC,OACZwB,EAAWzB,EACX0B,EAAezB,SACflX,KAAK+X,eACPW,EAAW1Y,KAAK+X,aAAanV,IAAIwM,EAAQsJ,EAAUC,MACpC,IAEbD,GAAY,IAAM1Y,KAAK+X,gBACrB/X,KAAKgY,iCACFH,iBAAmB7X,KAAKgY,gCACxBD,aAAe/X,KAAK0X,OAAO1X,KAAK6X,uBAChCE,cAAgB/X,KAAK+X,aAAavT,OAASxE,KAAK+X,aAAavT,aAC7DwT,gCAA6BhQ,EAClC0Q,EAAW1Y,KAAK+X,aAAanV,IAAIwM,EAAQsJ,EAAUC,SAE9CZ,kBAAe/P,IAGhB,GC9DZ,IAAqBiH,EAEjBnQ,SAAY2H,EAAUmS,QACfnS,SAAWA,OACXmS,SAAW3K,EAAOlH,EAAK6R,QAAW5Q,QAClC6Q,aAAc,GCHzB,SAASC,EAAYhQ,EAAUiQ,UACtBA,EAAK/S,KAAO8C,EAAWiQ,EAAKC,MAGrC,SAASC,EAAWnQ,EAAUiQ,WAG1B/U,EAFEkV,EAAO,UAAIH,EAAKI,QAClBC,EAAaF,EAAKzT,OAGb2T,EAAa,OAClBA,IACKpV,EAAI,EAAGA,EAAIoV,EAAYpV,IAC1BkV,EAAKlV,GAAKkV,EAAKlV,GAAK8E,GAAYoQ,EAAKlV,EAAI,GAAKkV,EAAKlV,WAGhDkV,EAAK,GAGd,SAASG,EAAUvQ,EAAUiQ,EAAM3J,UAC1B2J,EAAKO,QAAQC,IAAIR,EAAKS,UAAW1Q,GAAU2Q,SAGpD,SAASC,EAAS5Q,EAAUiQ,EAAM3J,UACzBuK,EAASC,MAAMb,EAAKc,SAAUd,EAAKe,OAAQhR,GDjBhDtE,YAAAA,sBACOqU,aAAc,GAGrBjW,YAAAA,aAAIwM,EAAQ6H,OACN1P,cAEkBS,IAAlBhI,KAAK4Y,eACFnS,SAAS2I,EAAQ1M,KAAK8D,IAAIyQ,EAAMjX,KAAK4Y,WAAY5Y,KAAK6Y,kBACtDA,aAAc,EACZ5B,EAAOjX,KAAK4Y,WAEnBrR,EAASvH,KAAKyG,SAAS2I,EAAQ6H,GAAOjX,KAAK6Y,kBACtCA,aAAc,EACZtR,ICOf,IAAqBwS,EAEnBjb,SAAYkb,EAAcpB,EAAUqB,OAG7B1V,IAAIuB,UAFJ+S,aAAc,OACdmB,aAAe,GACNA,EAAc,KACtB1Q,EAAQ0Q,EAAalU,GACvBoU,EAAgB,UAANpU,EACVqU,EAAe,SAANrU,EACTf,EAA8B,mBAAVuE,KACR4Q,GAAWnU,MAAMgE,QAAQT,QAClC0Q,aAAaI,KAAK,MACftU,KACFuU,EAAW/Q,EAAMA,EAAM7D,OAAS,GAAKsB,EAAKuC,EAAO,EAAG,IACxDgR,SAAQD,GAAW/Q,UACV4Q,SACDC,EACRpV,aAAYA,GAAauE,EACzBiR,cAAeL,EAAUb,EAAYc,EAAST,EAAWW,EAAWpB,EAAaH,SAGhFF,SAAW3K,EAAOlH,EAAK6R,GAAW,QAClCqB,KAAOhM,EAAOgM,WAAOO,UAAIA,KAGhChW,YAAAA,sBACOqU,aAAc,GAGrBrQ,YAAAA,cAAK4G,EAAQ6H,eAET8B,EADEpS,EAAI3G,KAAKga,aAAavU,OAEnBkB,QACE3G,KAAKga,aAAarT,IAChB5B,cACFiB,KAAOoJ,EAAO2J,EAAKb,MACxBa,EAAK0B,GAAK1B,EAAKhU,WAAWgU,EAAK/S,MAC3B+S,EAAKmB,WACFV,UAAY5G,EAAMmG,EAAK/S,QACvBsT,QAAU1G,EAAMmG,EAAK0B,IAC1B1B,EAAKwB,cAAgBlB,GACZN,EAAKoB,UACiBR,EAASe,eAAef,EAASgB,YAAY5B,EAAK/S,MAAO2T,EAASgB,YAAY5B,EAAK0B,KAAjH1B,EAAKc,cAAUd,EAAKe,YACrBf,EAAKwB,cAAgBb,GAEd3T,MAAMgE,QAAQgP,EAAK0B,KAC1B1B,EAAKI,OAAS,CAAC/J,EAAO2J,EAAKb,cAAUa,EAAK0B,IAC1C1B,EAAKwB,cAAgBtB,MAEhBD,MAAQD,EAAK0B,GAAK1B,EAAK/S,KAC5B+S,EAAKwB,cAAgBzB,IAEdC,EAAKmB,SACdnB,EAAKS,UAAY5G,EAAMxD,EAAO2J,EAAKb,SAC9BoB,QAAU1G,EAAMmG,EAAK0B,KACjB1B,EAAKoB,UACiBR,EAASe,eAAef,EAASgB,YAAYvL,EAAO2J,EAAKb,OAAQyB,EAASgB,YAAY5B,EAAK0B,KAAzH1B,EAAKc,cAAUd,EAAKe,aACZf,EAAKuB,OACdvB,EAAKI,OAAS,CAAC/J,EAAO2J,EAAKb,cAAUa,EAAKuB,WAErCtU,KAAOoJ,EAAO2J,EAAKb,QACnBc,MAAQD,EAAK0B,GAAK1B,EAAK/S,OAKlCpD,YAAAA,aAAIwM,EAAQ6H,MACLjX,KAAK6Y,mBACHA,aAAc,OACdrQ,KAAK4G,EAAQ6H,IAIhBjX,KAAK4Y,UAAY3B,UAEjB8B,EADEpS,EAAI3G,KAAKga,aAAavU,OAInBkB,UACE3G,KAAKga,aAAarT,IACbuR,MAAQa,EAAK0B,gBAKzB1B,EAFEpS,EAAI3G,KAAKga,aAAavU,SACbzF,KAAKia,KAAKhD,EAAOjX,KAAK4Y,UAG5BjS,KAELyI,KADOpP,KAAKga,aAAarT,IACbuR,MAAQa,EAAKwB,cAAczR,EAAUiQ,EAAM3J,UAGpD6H,EAAOjX,KAAK4Y,UC1HR,IAAMgC,EAEpB9b,aAGA8D,YAAAA,aAAIwM,EAAQ6H,UACJ4D,EAAQxD,4BCNF,IAAMyD,EAEjBhc,aAGA8D,YAAAA,aAAIwM,EAAQ6H,UACR7H,EAAOT,SAAU,EACVkM,EAAQxD,4BCLvB,IAAqBpT,EAEnBnF,SAAY8R,EAAOmK,QACZlC,aAAc,OACdjI,MAAQ7J,EAAK6J,QACbmK,sBAAwB9M,EAAOlH,EAAKgU,GAAwB,GAC7DhV,MAAMgE,QAAQ/J,KAAK4Q,YAChBtM,MAAQtE,KAAK4Q,MAAMnL,aAEnBmL,MAAQ,CAAC5Q,KAAK4Q,YACdtM,MAAQ,QAEVsU,SAAW5Y,KAAKsE,MAAQtE,KAAK+a,uBAGpCvW,YAAAA,sBACOqU,aAAc,GAGrBjW,YAAAA,aAAIwM,EAAQ6H,MACLjX,KAAK6Y,mBACHA,aAAc,OACdmC,SAAW,GAId/D,GAAQjX,KAAK4Y,WACRhI,MAAQhN,EAAae,SAAS3E,KAAK4Q,MAAM5Q,KAAK4Q,MAAMnL,OAAS,QAC/D,KACDwV,EAAevY,KAAK0S,MAAM6B,EAAOjX,KAAK+a,uBACtCE,IAAiBjb,KAAKgb,eACnBA,QAAUC,EACf7L,EAAOwB,MAAQhN,EAAae,SAAS3E,KAAK4Q,MAAM5Q,KAAKgb,kBAGlD/D,EAAOjX,KAAK4Y,UCpCvB,IAAqBsC,EAEjBpc,SAAYqc,EAAaC,EAAeL,QAC/BlC,aAAc,OACdsC,YAAcpU,EAAKoU,QACnBC,cAAgBnN,EAAOlH,EAAKqU,IAAgB,QAC5CL,sBAAwB9M,EAAOlH,EAAKgU,GAAwB,GAC7DhV,MAAMgE,QAAQ/J,KAAKmb,kBACd7W,MAAQtE,KAAKmb,YAAY1V,aAEzB0V,YAAc,CAACnb,KAAKmb,kBACpB7W,MAAQ,QAEZsU,SAAW5Y,KAAKsE,MAAQtE,KAAK+a,uBAGtCnY,YAAAA,aAAIwM,EAAQ6H,OACJgE,SAEAA,EADAhE,GAAQjX,KAAK4Y,SACE5Y,KAAKmb,YAAYnb,KAAKmb,YAAY1V,OAAS,GAE3C/C,KAAK0S,MAAM6B,EAAOjX,KAAK+a,uBAEtC/a,KAAKob,gBACErK,OAAS3B,EAAO6B,WAAagK,IAE7BjK,OAAS5B,EAAO8B,YAAc+J,EAGlChE,EAAOjX,KAAK4Y,UC7B3BzK,IAEqBkN,cACnBvc,WAAYwN,EAAGC,EAAG+O,EAAOrB,eACjB,GACJ3N,IACAC,GACC,EAAG0N,QACDqB,MAAQvU,EAAKuU,IAAU,kGAG9B9S,cAAK4G,EAAQ6H,MACO,GAAdjX,KAAKsb,OAAetb,KAAKub,UAAYnM,EAAO9C,GAAKtM,KAAKwb,UAAYpM,EAAO7C,OACtEqM,SAAW,MAEb,KACCtM,EAAItM,KAAKga,aAAa,GACxBzN,EAAIvM,KAAKga,aAAa,GAExB1N,EAAEtG,KAAOoJ,EAAO9C,EAChBC,EAAEvG,KAAOoJ,EAAO7C,EAEhBD,EAAE0M,MAAQ1M,EAAEmO,GAAKnO,EAAEtG,KACnBuG,EAAEyM,MAAQzM,EAAEkO,GAAKlO,EAAEvG,SAEbyV,EAAa/Y,KAAKgZ,KAAKpP,EAAE0M,MAAQ1M,EAAE0M,MAAQzM,EAAEyM,MAAQzM,EAAEyM,YAExDJ,SA3Bc,GA2BH6C,EAAgCzb,KAAKsb,kBAGjD9S,eAAK4G,EAAQ6H,OA5BW8C,GCFb4B,EACnB7c,SAAY8c,EAAWC,QAChBD,UAAYA,OACZC,MAAQ5N,EAAOlH,EAAK8U,GAAQ,IAGnCjZ,YAAAA,aAAIwM,EAAQ6H,MACNjX,KAAK6b,OAAS,SACT5E,MAGHuD,EAAIxa,KAAK4b,UAAUhZ,IAAIwM,EAAQ6H,UAC/BuD,EAAI,QACDqB,QAEArB,GCfb,IAAqBsB,EAEnBhd,SAAYoZ,EAAMU,EAAUtC,QACrBsC,SAAW3K,EAAOlH,EAAK6R,GAAU,QACjCV,KAAOnR,EAAKmR,QACZ5B,KAAOvP,EAAKkH,EAAOqI,EAAM,KAGhC1T,YAAAA,aAAIwM,EAAQ6H,gBAENA,GAAQjX,KAAK4Y,YAERhK,0BAAsB,IAC1B5O,KAAKkY,MAAO,UACD,EACVpB,WAAaG,EAAOjX,KAAK4Y,SACzBtC,KAAMtW,KAAKsW,UAIVW,EAAOjX,KAAK4Y,UCrBvB,IAAqBmD,EAEnBjd,SAAYkd,EAAWpD,QAChBC,aAAc,OACdD,SAAW7R,EAAK6R,QAChBqD,UAAYlV,EAAKiV,QACjBE,cAAgBlc,KAAKic,UAAY,GAGxCzX,YAAAA,sBACOqU,aAAc,GAGrBjW,YAAAA,aAAIwM,EAAQ6H,UACLjX,KAAK6Y,mBACHA,aAAc,OACdvM,EAAI8C,EAAO9C,OACXC,EAAI6C,EAAO7C,GAId0K,GAAQjX,KAAK4Y,UAEfxJ,EAAO9C,EAAItM,KAAKsM,EAChB8C,EAAO7C,EAAIvM,KAAKuM,MAGTD,EAAItM,KAAKsM,EAAI5J,KAAKC,SAAW3C,KAAKic,UAAYjc,KAAKkc,gBACnD3P,EAAIvM,KAAKuM,EAAI7J,KAAKC,SAAW3C,KAAKic,UAAYjc,KAAKkc,eAErDjF,EAAOjX,KAAK4Y,UChCR,IAAMuD,EAEjBrd,gBACSsd,UAAW,GAGpBxZ,YAAAA,aAAIwM,EAAQ6H,YACDtI,QAAUS,EAAOT,SAAW3O,KAAKoc,cACnCA,UAAW,EACT,GCPA,IAAMxB,EAEpB9b,aAGA8D,YAAAA,aAAIwM,EAAQ6H,UACJoF,EAAU/E,mBCNJ,IAAMgF,EAEjBxd,SAAY8Z,QACHA,SAAW7R,EAAK6R,IAGzBhW,YAAAA,aAAIwM,EAAQ6H,UAEDjX,KAAK4Y,SAAW3B,EAAOjX,KAAK4Y,UAAY,GCRxC,IAAM2D,EAEnBzd,SAAY8Z,QACLA,SAAW7R,EAAK6R,IAGvBhW,YAAAA,aAAIwM,EAAQ6H,YAEHtI,QAAWsI,GAAQjX,KAAK4Y,SACxB3B,EAAOjX,KAAK4Y,UCIvBzK,MAgBe,mFAfW,kCAAIqH,gBAAatI,wFACjB,kCAAIsP,gBAAatP,mFACtB,kCAAIuP,gBAAQvP,2FACJ,kCAAIwP,gBAAgBxP,qFAC1B,kCAAI4I,gBAAU5I,0FACT,kCAAIyP,gBAAezP,oFACzB,kCAAI0P,gBAAS1P,oFACb,kCAAI2P,gBAAS3P,oFACb,kCAAI4P,gBAAS5P,qFACZ,kCAAI6P,gBAAU7P,wFACX,kCAAI8P,gBAAa9P,oFACrB,kCAAI+P,gBAAS/P,oFACb,kCAAIgQ,gBAAShQ,4FACL,kCAAIiQ,gBAAiBjQ,OCpB/CrO,2EAAsB,kCAAIue,gBAAWlQ,MACvCmJ,2EAAwB,kCAAIgH,gBAAanQ,MACzCuK,2EAAqB,kCAAI6F,gBAAUpQ"}