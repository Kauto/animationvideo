{"version":3,"file":"animationvideo.mjs","sources":["../src/func/calc.mjs","../src/lib/Engine.mjs","../src/lib/ImageManager.mjs","../src/lib/Layer.mjs","../src/lib/LayerManager.mjs","../src/func/ifnull.mjs","../src/lib/Scenes/Default.mjs","../src/lib/Scenes/Audio.mjs","../src/func/transform.mjs","../src/lib/Scenes/Norm.mjs","../src/lib/Scenes/NormAudio.mjs","../src/lib/Scenes.mjs","../src/lib/Sprites/Circle.mjs","../src/lib/Sprites/Callback.mjs","../src/lib/Sprites/Group.mjs","../src/lib/Sprites/Canvas.mjs","../src/lib/Sprites/Emitter.mjs","../src/lib/Sprites/FastBlur.mjs","../src/lib/Sprites/Image.mjs","../src/lib/Sprites/Text.mjs","../src/lib/Sprites/Particle.mjs","../src/lib/Sprites/Path.mjs","../src/lib/Sprites/Rect.mjs","../src/lib/Sprites/Scroller.mjs","../src/lib/Sprites/StarField.mjs","../src/lib/Sprites.mjs","../src/lib/Sequence.mjs","../src/lib/State.mjs","../src/lib/Animations/Callback.mjs","../src/lib/Animations/ChangeTo.mjs","../src/lib/Animations/End.mjs","../src/lib/Animations/EndDisabled.mjs","../src/lib/Animations/Image.mjs","../src/lib/Animations/ImageFrame.mjs","../src/lib/Animations/Move.mjs","../src/lib/Animations/Once.mjs","../src/lib/Animations/Play.mjs","../src/lib/Animations/Shake.mjs","../src/lib/Animations/ShowOnce.mjs","../src/lib/Animations/Stop.mjs","../src/lib/Animations/Wait.mjs","../src/lib/Animations/WaitDisabled.mjs","../src/lib/Animations.mjs","../src/animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"../func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      {\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false\n      },\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      w: 0,\n      h: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvas = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the _output canvas\n    this._output.canvas = options.canvas;\n    if (\n      !(\n        typeof options.canvas === \"object\" &&\n        options.canvas !== null &&\n        options.canvas.getContext\n      )\n    ) {\n      throw new Error(\"Countn't create contect for canvas in Engine\");\n    }\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.w = this._output.canvas.width;\n      this._output.h = this._output.canvas.height;\n      this._output.ratio = this._output.w / this._output.h;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n    this.switchScene(options.scene);\n    this.normalizeContext(this._output.context);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.audioElement) {\n      this._scene.audioElement.play();\n    }\n  }\n\n  normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.w;\n  }\n\n  getHeight() {\n    return this._output.h;\n  }\n\n  recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(width / this._autoSize.currentScale);\n      this._output.canvas.height = Math.round(height / this._autoSize.currentScale);\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.w = this._output.canvas.width;\n    this._output.h = this._output.canvas.height;\n    this._output.ratio = this._output.w / this._output.h;\n\n    this.resize();\n    return this;\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  loadingscreen() {\n    let ctx = this._output.context;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n\n    ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n    ctx.fillRect(0, 0, this._output.w, this._output.h);\n\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#FFF\";\n    let percent = this._isSceneInitialized ? this._scene.getPercentLoaded() : 0;\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(\n      \"Loading \" + percent + \"%\",\n      10 + Math.random() * 3,\n      this._output.h - 10 + Math.random() * 3\n    );\n\n    this.normalizeContext(ctx);\n  }\n\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (this._recalculateCanvas) {\n        this.recalculateCanvas();\n        this._recalculateCanvas = false;\n      }\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(this._timePassed);\n        this._timePassed = this._timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          if (this._timePassed !== 0) {\n            if (this._autoSize && this._autoSize.enabled) {\n              now = window.performance ? performance.now() : Date.now();\n            }\n\n            this._scene.move(this._output, this._timePassed);\n\n            // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n            if (this._timePassed < 0) {\n              this._timePassed = this._scene.totalTimePassed;\n            }\n\n            this._scene.draw(this._output);\n\n            if (this._autoSize && this._autoSize.enabled) {\n              const delta =\n                (window.performance ? performance.now() : Date.now()) -\n                now -\n                this._autoSize.offsetTimeTarget;\n              if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n                this._autoSize.currentWaitedTime +=\n                  timestamp - this._realLastTimestamp;\n              } else {\n                if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                  this._autoSize.currentOffsetTime =\n                    this._autoSize.currentOffsetTime >= 0\n                      ? Math.max(\n                          0,\n                          this._autoSize.currentOffsetTime -\n                            this._autoSize.offsetTimeDelta\n                        )\n                      : Math.min(\n                          0,\n                          this._autoSize.currentOffsetTime +\n                            this._autoSize.offsetTimeDelta\n                        );\n                } else {\n                  if (\n                    delta < 0 &&\n                    this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime <=\n                      this._autoSize.offsetTimeLimitDown\n                    ) {\n                      this._autoSize.currentScale = Math.max(\n                        this._autoSize.scaleLimitMin,\n                        this._autoSize.currentScale / this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  } else if (\n                    delta > 0 &&\n                    this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                  ) {\n                    this._autoSize.currentOffsetTime += delta;\n                    if (\n                      this._autoSize.currentOffsetTime >=\n                      this._autoSize.offsetTimeLimitUp\n                    ) {\n                      this._autoSize.currentScale = Math.min(\n                        this._autoSize.scaleLimitMax,\n                        this._autoSize.currentScale * this._autoSize.scaleFactor\n                      );\n                      this._recalculateCanvas = true;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          this._isSceneInitialized = this._scene.callLoading(this._output);\n          if (this._isSceneInitialized && this._autoSize) {\n            this._autoSize.currentWaitedTime = 0;\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n        };\n        self.Images[i].src = Images[i];\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    return self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    this.layer[id] = element;\n    this.isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this.nextFree + 1;\n    while (nextFree !== len && layer[nextFree]) {\n      nextFree++;\n    }\n    this.nextFree = nextFree;\n    if (this.start > id) {\n      this.start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    if (len === id) {\n      this.layer = this.layer.concat(arrayOfElements);\n      this.nextFree = this.layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this.isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this.layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this.layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this.layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this.layer[elementId] = null;\n      while (len && !this.layer[len - 1]) {\n        len--;\n      }\n      this.layer.length = len;\n      this.isFunction.length = len;\n      this.nextFree = Math.min(this.nextFree, len);\n      this.start = Math.min(this.start, len);\n    } else {\n      this.layer[elementId] = null;\n      this.nextFree = Math.min(this.nextFree, elementId);\n      if (this.start === elementId) {\n        this.start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this.layer.length;\n    for (index = this.start; index < l; index++) {\n      element = this.layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this.isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    return this.layer.length;\n  }\n\n  clear() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this.layers = [];\n  }\n\n  addLayer() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers[this.layers.length - 1];\n  }\n\n  addLayerForId() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this.layers.length\n    );\n    this.layers = this.layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this.layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this.layers.length;\n    for (i = 0; i < l; i++) {\n      this.layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this.layers.length;\n  }\n\n  clear() {\n    this.layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport ifNull from \"../../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this.configuration = new configurationClassOrObject();\n    } else {\n      this.configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = calc(this.configuration.tickChunk);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this.configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this.configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this.tickChunk) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this.configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this.configuration.init &&\n        this.configuration.init({ engine, output, scene: this, parameter })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: 0,\n      y: 0,\n      w: output.w,\n      h: output.h,\n      orgW: output.w,\n      orgH: output.h,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        w: output.w,\n        h: output.h\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  callDestroy(output) {\n    this.configuration.destroy &&\n      this.configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n  }\n\n  loadingscreen(output, progress) {\n    const ctx = output.context,\n      loadedHeight = Math.max(1, progress * output.h);\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(0, output.h / 2 - loadedHeight / 2, output.w, loadedHeight);\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.h - 10 + Math.random() * 3\n    );\n\n    this.engine && this.engine.normalizeContext(ctx);\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      this.reset(output);\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.configuration.loading\n      ? this.configuration.loading({\n          engine: this.engine,\n          scene: this,\n          output,\n          value\n        })\n      : this.loadingscreen(output, value);\n    return false;\n  }\n\n  move(output, timepassed) {\n    // calc total time\n    this.totalTimePassed += timepassed;\n\n    // Jump back?\n    if (timepassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timepassed = this.totalTimePassed;\n    } else if (\n      this.configuration.endTime &&\n      this.configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timepassed -= this.totalTimePassed - this.endTime;\n      this.totalTimePassed = this.endTime;\n      // End Engine\n      this.configuration.end &&\n        this.configuration.end({ engine: this.engine, scene: this, output });\n    }\n\n    if (this.configuration.beforeMove) {\n      if (this.tickChunk) {\n        if (timepassed >= this.tickChunk - this.tickChunkTolerance) {\n          // how many frames should be skipped. Maximum is a skip of 2 frames\n          for (\n            let calcFrame = 0,\n              frames = Math.min(\n                this.maxSkippedTickChunk,\n                Math.floor(timepassed / this.tickChunk)\n              );\n            calcFrame < frames;\n            calcFrame++\n          ) {\n            this.configuration.beforeMove({\n              engine: this.engine,\n              scene: this,\n              layerManager: this.layerManager,\n              output,\n              timepassed\n            });\n          }\n        }\n      } else {\n        this.configuration.beforeMove({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output,\n          timepassed\n        });\n      }\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timepassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n\n    if (this.configuration.afterMove) {\n      this.configuration.afterMove({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timepassed\n      });\n    }\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            timepassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    let result = this.configuration.reset\n      ? this.configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from './Default.mjs';\n\nexport default class SceneAudio extends Scene {\n  constructor(audioElement) {\n    super();\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === 'playing') {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return this.audioPosition * 1000 + Math.min(260, currentTime - this.audioStartTime);\n            } else if ((this.audioElement.currentTime - this.audioPosition) < 0.5 && (this.audioElement.currentTime > this.audioPosition) && currentTime - this.audioStartTime < 350) {\n              this.audioStartTime = this.audioStartTime + (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return this.audioPosition * 1000 + currentTime - this.audioStartTime;\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return this.audioElement.currentTime * 1000;\n      }\n    }\n    else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  init(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof(MediaController) === 'function') {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.init(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (!(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA))\n      {\n        this.loadingscreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        this.audioElement.play();\n        this.loadingscreen(output, \"Click to play\");\n      }\n    }\n\n\t\treturn loaded;\n  }\n}","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from './Default.mjs';\nimport Transform from '../../func/transform.mjs';\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n        const hw = this.engine._output.w / 2\n        const hh = this.engine._output.h / 2\n        const scale = this.engine._output.ratio > 1 ? hw : hh;\n\n      this.transform = (new Transform())\n        .translate(hw, hh)\n        .scale(scale, scale);\n      this.transformInvert = null;\n\n      // Maybe move a cam in the future\n      //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n      //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n      //output.context.translate(-0.5,-0.5);\n    }\n    return this.transform\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h,\n      scaleCanvas: output.w / output.canvas.clientWidth\n    };\n    const [x1,y1] = this.transformPoint(0,0,1);\n    const [x2,y2] = this.transformPoint(output.w,output.h,1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      w: x2-x1,\n      h: y2-y1\n    }\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport().clone().invert()\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import SceneAudio from './Audio.mjs';\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(audioElement) {\n    super(audioElement);\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      a: 1,\n      x: -1,\n      y: -1,\n      w: 2,\n      h: 2,\n      orgW: output.w,\n      orgH: output.h\n    };\n  }\n\n  draw(output) {\n    output.context.save();\n    output.context.translate(output.w / 2, output.h / 2);\n    output.context.scale(output.w, output.h);\n\n    // Maybe move a cam in the future\n    //\t\t\toutput.context.scale(cam.zoom,cam.zoom);\n    //\t\t\toutput.context.translate(-cam.centerX,-cam.centerY);\n    output.context.translate(-0.5,-0.5);\n\n    super.draw(output);\n    output.context.restore();\n  }\n\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio\n};\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n\n  constructor(params) {\n    // Position\n    this.x = ifNull(calc(params.x), 0);\n    this.y = ifNull(calc(params.y), 0);\n    // rotation\n    this.arc = ifNull(calc(params.arc), 0);\n    // Scale\n    this.scaleX = ifNull(calc(params.scaleX), 1);\n    this.scaleY = ifNull(calc(params.scaleY), 1);\n    // Alpha\n    this.a = ifNull(calc(params.a), 1);\n    // Alphamode\n    this.alphaMode = ifNull(calc(params.alphaMode), \"source-over\");\n    // Color\n    this.color = ifNull(calc(params.color), \"#fff\");\n    // Animation\n    this.animation = calc(params.animation);\n    // Sprite active\n    this.enabled = ifNull(calc(params.enabled), true);\n  }\n\n  changeAnimationStatus(ani) {\n    if (typeof this.animation === \"object\") {\n      this.animation.changeAnimationStatus(ani);\n    }\n  };\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (typeof(this.animation) === \"object\") {\n      // run animation\n      if (this.animation.run(this, timepassed, true) >= 0) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(0, 0, 1, (90 + this.arc) * degToRad, (450 - this.arc) * degToRad, false);\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  };\n}","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(params) {\n    if (typeof params === \"function\") {\n      params = { callback: params };\n    }\n    super(params);\n    // Callback\n    this.callback = params.callback;\n    this.timepassed = 0;\n    this.deltaTime = 0;\n  }\n\n  animate(timepassed) {\n    if (this.enabled) {\n      this.timepassed += timepassed;\n      this.deltaTime += timepassed;\n    }\n    return super.animate(timepassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timepassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Group extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.sprite = ifNull(params.sprite, []);\n  }\n\n  // overwrite changeAnimationStatus\n  changeAnimationStatus(ani) {\n    // call super\n    super.changeAnimationStatus(ani);\n    // changeAnimationStatus for all sprites\n    for (let i in this.sprite) {\n      this.sprite[i].changeAnimationStatus(ani);\n    }\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = true;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = this.sprite[i].animate(timepassed) && spriteFinished;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.a < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.a *= this.a;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Canvas extends Group {\n\n  constructor(params) {\n    super(params);\n    // x,y,width,height without default to enable norm \n    this.x = calc(params.x);\n    this.y = calc(params.y);\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.gridSize = calc(params.gridSize);\n    this.norm = ifNull(calc(params.norm), (this.x === undefined && this.y === undefined && this.width === undefined && this.height === undefined));\n    this.currentGridSize = false;\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.orgW || context.canvas.width,\n      h = additionalModifier.orgH || context.canvas.height;\n    this.temp_canvas = document.createElement('canvas');\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n      } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n      }\n    this.tctx = this.temp_canvas.getContext('2d');\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.w;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.h;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(oldTempCanvas,0,0,oldTempCanvas.width, oldTempCanvas.height, 0,0,this.temp_canvas.width, this.temp_canvas.height)\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          a: 1,\n          x: 0,\n          y: 0,\n          w: tw,\n          h: th,\n          orgW: tw,\n          orgH: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            w: tw,\n            h: th\n          }\n        });\n      }\n\n      context.save();\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.drawImage(this.temp_canvas, 0, 0, this.temp_canvas.width, this.temp_canvas.height, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nexport default class Emitter extends Group {\n    constructor(params) {\n        super(params.self || {});\n        let staticArray = {},\n          functionArray = {};\n\n        for(let i in params) {\n            if (['self', 'class', 'count'].indexOf(i) === -1) {\n                if (typeof(params[i]) === 'function') {\n                  functionArray[i] = params[i];\n                } else {\n                  staticArray[i] = params[i];\n                }\n            }\n        }\n\n        // add the letters\n        let count = ifNull(calc(params.count), 1);\n        this.sprite = [];\n\n        for(let i = 0; i < count; i++) {\n            let classToEmit = params.class,\n                parameter = {};\n            for(let index in staticArray) {\n              parameter[index] = staticArray[index];\n            }\n            for(let index in functionArray) {\n              parameter[index] = functionArray[index].call(null, i);\n            }\n            this.sprite[i] = new classToEmit(parameter);\n        }\n    }\n}","import ifNull from \"../../func/ifnull.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(params) {\n    super(params);\n    // Size\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n\n    this.gridSize = calc(params.gridSize);\n    this.darker = ifNull(calc(params.darker), 0);\n    this.pixel = ifNull(calc(params.pixel), false);\n    this.clear = ifNull(calc(params.clear), false);\n    this.norm = ifNull(\n      calc(params.norm),\n      this.x === undefined &&\n        this.y === undefined &&\n        this.width === undefined &&\n        this.height === undefined\n    );\n    this.currentGridSize = false;\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.orgW || context.canvas.width,\n      h = additionalModifier.orgH || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.w;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.h;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      let a = this.a * additionalModifier.a,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.alphaMode;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.w;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.h;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import ifNull from \"../../func/ifnull.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(params) {\n    super(params);\n    // Image\n    this.image = ImageManager.getImage(calc(params.image));\n    // relativ position\n    this.position = ifNull(calc(params.position), Image.CENTER);\n    this.frameX = ifNull(calc(params.frameX), 0);\n    this.frameY = ifNull(calc(params.frameY), 0);\n    this.frameWidth = ifNull(calc(params.frameWidth), 0);\n    this.frameHeight = ifNull(calc(params.frameHeight), 0);\n    this.norm = ifNull(calc(params.norm), false);\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      if (!this.normScale) {\n        this.normScale = this.norm\n          ? Math.min(\n              additionalModifier.w / this.image.width,\n              additionalModifier.h / this.image.height\n            )\n          : 1;\n      }\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height,\n        sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.arc * degToRad);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nclass Text extends Circle {\n  constructor(params) {\n    super(params);\n    // Sprite\n    this.text = calc(params.text);\n    // font\n    this.font = ifNull(calc(params.font), '26px monospace');\n    // position\n    this.position = ifNull(calc(params.position), Text.CENTER);\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.save();\n      if (Text.LEFT_TOP) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.arc * degToRad);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from './Circle.mjs';\nimport Color from 'color';\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n\n\n  constructor(params) {\n    super(params)\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex, gIndex, cr = r >> gradientResolution, cg = g >> gradientResolution, cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(256 >> gradientResolution);\n        }\n\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(cr, cg, cb);\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement('canvas');\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext('2d');\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(gradientSizeHalf, gradientSizeHalf, 0, gradientSizeHalf, gradientSizeHalf, gradientSizeHalf);\n    grad.addColorStop(0, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",1)\");\n    grad.addColorStop(0.3, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0.4)\");\n    grad.addColorStop(1, \"rgba(\" + ((cr << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cg << gradientResolution) + (1 << gradientResolution) - 1) + \",\" + ((cb << gradientResolution) + (1 << gradientResolution) - 1) + \",0)\");\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster as: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      context.imageSmoothingEnabled = this.scaleX * additionalModifier.orgW / additionalModifier.w > gradientSize;\n      context.drawImage(Particle.getGradientImage(color[0], color[1], color[2]), 0, 0, gradientSize, gradientSize, this.x - (this.scaleX / 2), this.y - (this.scaleY / 2), this.scaleX, this.scaleY);\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Group from './Group.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nexport default class Path extends Group {\n  constructor(params) {\n    super(params);\n\n    this.oldPath = undefined;\n    this.path = calc(params.path);\n    this.path2D = new Path2D();\n\n    this.color = calc(params.color);\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clip = ifNull(calc(params.clip), false);\n    this.fixed = ifNull(calc(params.fixed), false);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      let a = this.a;\n      if (this.oldPath !== this.path) {\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach((curve) => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach((points) => {\n              this.path2D.bezierCurveTo(points[2], points[3], points[4], points[5], points[6], points[7]);\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n      if (additionalModifier) {\n        a *= additionalModifier.a;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.arc * degToRad);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.arc * degToRad);\n          context.scale(1/scaleX, 1/scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n      \n      context.restore();\n    }\n  };\n}\n","import ifNull from '../../func/ifnull.mjs';\nimport calc from '../../func/calc.mjs';\nimport Circle from './Circle.mjs';\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n\n  constructor(params) {\n    super(params);\n    // Size\n    this.width = calc(params.width);\n    this.height = calc(params.height);\n    this.x = calc(params.x);\n    this.y = calc(params.y);\n\n    this.borderColor = calc(params.borderColor);\n    this.lineWidth = ifNull(calc(params.lineWidth), 1);\n    this.clear = ifNull(calc(params.clear), false);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.w;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.h;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n      \n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.arc === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.arc * degToRad);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n            context.beginPath();\n            context.lineWidth = this.lineWidth;\n            context.strokeStyle = this.borderColor;\n            context.rect(-hw, -hh, this.width, this.height);\n            context.stroke();\n        }\n        context.restore();\n      }\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport Emitter from './Emitter.mjs';\nimport Text from './Text.mjs';\n\nexport default class Scroller extends Emitter {\n  constructor(params) {\n    let text = calc(params.text),\n      characterList = Array.isArray(text) ? text : [...text];\n    super(Object.assign({}, params, {\n      class: Text,\n      count: characterList.length,\n      text: (index) => characterList[index],\n      enabled: (index) => characterList[index] !== \" \" && calc(params.enabled, index)\n    }));\n  }\n}","import ifNull from \"../../func/ifnull.mjs\";\nimport calc from \"../../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(params) {\n    super(params);\n    this.count = ifNull(calc(params.count), 40);\n    this.moveX = ifNull(calc(params.moveX), 0);\n    this.moveY = ifNull(calc(params.moveY), 0);\n    this.moveZ = ifNull(calc(params.moveZ), 0);\n    this.lineWidth = calc(params.lineWidth);\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n\t\t\tthis.height &&\n\t\t\tthis.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.min(this.width, this.height);\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n\t\t}\n\t\tconst hw = this.width / 2;\n\t\tconst hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw ) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n\t\tconst projectX = this.centerX + (x / z) * hw;\n\t\tconst projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n\t\t\tthis.starsLineWidth[i] = (1 - this.starsZ[i] / this.scaleZ) * 3 + 1;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.w;\n        this.height = this.height || additionalModifier.h;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n\t\t\t\tthis.lineWidth = this.lineWidth || (additionalModifier.h / additionalModifier.orgH) / 4;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.alphaMode;\n      context.globalAlpha = this.a * additionalModifier.a;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - this.starsLineWidth[i] * this.lineWidth / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        let lw = 5,\n          i;\n        while (--lw) {\n          context.beginPath();\n          context.lineWidth = lw * this.lineWidth;\n          i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n            }\n          }\n          context.stroke();\n          context.closePath();\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nclass Sequence {\n  constructor(loop, timeWait, obj) {\n    this.loop = loop;\n    // Timewait - how long to wait for the start\n    this.timeWait = ifNull(timeWait, 0);\n    // Animations\n    this.animation = Array.isArray(obj) && !Array.isArray(obj[0]) ? [obj] : (obj || {});\n    // init position-array\n    this.animationPosition = {};\n    for (let i in this.animation) {\n      this.animationPosition[i] = {\n        position: 0,\n        timelapsed: -calc(this.timeWait),\n        object: null,\n        loop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        enabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n        orgLoop: (typeof loop === 'object') ? calc(loop[i]) : calc(loop),\n        orgEnabled: !((typeof loop === 'object' && calc(loop[i]) === false) || calc(loop) === false),\n      };\n      this.setObject(i);\n    }\n    // init time\n    this.last_timestamp = 0;\n    this.hide_vote = false;\n  }\n\n  reset(timelapsed = 0) {\n    for (let i in this.animation) {\n      const animationPosition = this.animationPosition[i];\n      animationPosition.position = 0;\n      animationPosition.timelapsed = timelapsed;\n      animationPosition.loop = animationPosition.orgLoop;\n      animationPosition.enabled = animationPosition.orgEnabled;\n      this.setObject(i);\n    }\n  }\n\n  setObject(i) {\n    if (\n      this.animationPosition[i].position < this.animation[i].length\n      && this.animation[i][this.animationPosition[i].position] !== null\n    ) {\n      this.animationPosition[i].object = this.animation[i][this.animationPosition[i].position];\n      // Reset animation if possible\n      if (typeof this.animationPosition[i].object.reset === 'function') {\n        this.animationPosition[i].object.reset();\n      }\n\n      // create run if not exists\n      if (typeof this.animationPosition[i].object.run !== 'function') {\n        this.animationPosition[i].object = {run: this.animationPosition[i].object};\n      }\n    }\n    else {\n      // No object left\n      this.animationPosition[i].object = null;\n    }\n  };\n\n  changeAnimationStatus(ani) {\n    let i;\n    // set new parameter\n    for (i in ani) {\n      if (typeof this.animationPosition[i] === 'object') {\n        if (ani[i].position !== null) {\n          this.animationPosition[i].position = ani[i].position;\n        }\n        if (ani[i].loop !== null) {\n          this.animationPosition[i].loop = ani[i].loop;\n          this.animationPosition[i].enabled = !(ani[i].loop === false);\n        }\n        if (ani[i].timelapsed !== null) {\n          this.animationPosition[i].timelapsed = ani[i].timelapsed;\n        }\n        this.setObject(i);\n      }\n    }\n    // search for additional animations\n    for (i in this.animation) {\n      if (typeof this.animationPosition[i] === 'object' && this.animationPosition[i].object instanceof Sequence) {\n        this.animationPosition[i].object.changeAnimationStatus(ani);\n      }\n    }\n  };\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timepassed = time,\n      // Vote to disable the sprite\n      disable_vote = 0,\n      hide_vote = 0,\n      animation_count = 0,\n      // Loop variables\n      timeleft = 0,\n      current_animationPosition = null;\n    if (!is_difference) {\n      timepassed = time - this.last_timestamp;\n      this.last_timestamp = time;\n    }\n    for (let i in this.animation) {\n      animation_count++;\n      current_animationPosition = this.animationPosition[i];\n      if (current_animationPosition.enabled === true) {\n        timeleft = timepassed;\n        // Valid animation avaible?\n        if (current_animationPosition.object === null) {\n          disable_vote++;\n          hide_vote++;\n          timeleft = 0;\n        }\n        else {\n          if (timeleft > 0) {\n            while (timeleft > 0) {\n              // New time-position in the animation\n              current_animationPosition.timelapsed += timeleft;\n              // Don't ran future animations\n              if (current_animationPosition.timelapsed >= 0) {\n                // Do the animation\n                timeleft = current_animationPosition.object.run(sprite, current_animationPosition.timelapsed);\n                // accept true and false values: when true go to next step. This is archived with timeleft=0\n                if (timeleft === true) {\n                  timeleft = 0;\n                }\n                if (timeleft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n                  return timepassed;\n                } else if (timeleft === Sequence.TIMELAPSE_TO_STOP) {\n                  // reset current animation for the future\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  // set object to null, so it disable votes every time\n                  current_animationPosition.object = null;\n                  //disable_vote++;\n                  timeleft = 0;\n                } else if (timeleft !== false && timeleft >= 0) {\n                  // yes, next animation\n                  current_animationPosition.position++;\n                  // loop animation?\n                  if (current_animationPosition.position >= this.animation[i].length) {\n                    if (current_animationPosition.loop !== true) {\n                      current_animationPosition.loop--;\n                    }\n                    if (current_animationPosition.loop) {\n                      current_animationPosition.position = current_animationPosition.position % this.animation[i].length;\n                    }\n                    else {\n                      current_animationPosition.enabled = false;\n                    }\n                  }\n                  // start from the beginning\n                  current_animationPosition.timelapsed = 0;\n                  // create next obj\n                  this.setObject(i);\n                  if (!current_animationPosition.enabled) {\n                    current_animationPosition.object = null;\n                    current_animationPosition.enabled = true;\n                  }\n                  if (current_animationPosition.object === null) {\n                    disable_vote++;\n                    timeleft = 0;\n                  }\n                }\n              }\n              else {\n                timeleft = 0;\n                hide_vote++;\n              }\n            }\n          }\n          else {\n            hide_vote++;\n          }\n        }\n      }\n    }\n    if (animation_count > 0) {\n      // Vote successful?\n      if (disable_vote === animation_count) {\n        // disable\n        return timepassed;\n      }\n      // Vote successful?\n      if (sprite.enabled && hide_vote === animation_count) {\n        // disable\n        sprite.enabled = false;\n        this.hide_vote = true;\n      }\n      else if (this.hide_vote && hide_vote !== animation_count) {\n        this.hide_vote = false;\n        sprite.enabled = true;\n      }\n    }\n    return -1;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = 'FORCE_DISABLE';\nSequence.TIMELAPSE_TO_STOP = 'STOP';\nexport default Sequence;\n","class State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      console.log(name);\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport Color from 'color';\nimport pasition from 'pasition';\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return pasition._lerp(data.pathFrom, data.pathTo, progress);\n}\n\n// to values of a object\nexport default class ChangeTo {\n\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      let value = changeValues[k],\n        isColor = k === 'color',\n        isPath = k === 'path',\n        isFunction = typeof value === 'function',\n        isBezier = !isColor && Array.isArray(value);\n      this.changeValues.push({\n        name: k,\n        to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n        bezier: isBezier ? value : false,\n        isColor: isColor,\n        isPath: isPath,\n        isFunction: isFunction ? value : false,\n        moveAlgorithm: isColor ? moveColor : isPath ? movePath : isBezier ? moveBezier : moveDefault\n      });\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, (t)=>t);\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(data.from), pasition.path2shapes(data.to));\n          data.moveAlgorithm = movePath;\n        }\n        else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = pasition._preprocessing(pasition.path2shapes(sprite[data.name]), pasition.path2shapes(data.to));\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequenz from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequenz from '../Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequenz.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (Array.isArray(this.frameNumber)) {\n            this.count = this.frameNumber.length;\n        } else {\n            this.frameNumber = [this.frameNumber];\n            this.count = 1;\n        }\n        this.duration = this.count * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = Math.floor(time / this.durationBetweenFrames);\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from '../../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t > 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../../func/calc.mjs';\nimport ifNull from '../../func/ifnull.mjs';\n\nexport default class Play {\n\n  constructor(name, duration, loop) {\n    this.duration = ifNull(calc(duration),1);\n    this.name = calc(name);\n    this.loop = calc(ifNull(loop, 1));\n  }\n\n  run(sprite, time) {\n    // return time left\n    if (time >= this.duration) {\n      // Play animation from the start\n      sprite.changeAnimationStatus({\n        [this.name]: {\n          position: 0,\n          timelapsed: (time - this.duration),\n          loop: this.loop\n        }\n      });\n    }\n    return time - this.duration;\n  };\n}","import calc from '../../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Animation from '../Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Animation.TIMELAPSE_TO_STOP;\n\t}\n}","import calc from '../../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import calc from '../../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Play from './Animations/Play.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Play = (...args) => new _Play(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  Stop = (...args) => new _Stop(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Image,\n  ImageFrame,\n  Move,\n  Once,\n  Play,\n  Shake,\n  ShowOnce,\n  Stop,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './lib/Engine.mjs';\nimport Scenes from './lib/Scenes.mjs';\nimport ImageManager from './lib/ImageManager.mjs';\nimport Sprites from './lib/Sprites.mjs';\nimport _Sequence from './lib/Sequence.mjs';\nimport _State from './lib/State.mjs';\nimport Animations from './lib/Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  State = (...args) => new _State(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Sequence,\n  State,\n  Animations,\n  Easing\n};"],"names":["calc","c","apply","params","Engine","constructor","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","_output","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvas","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","this","clientWidth","clientHeight","offsetTimeTarget","_autoSize","registerResizeEvents","window","addEventListener","recalculateCanvas","bind","registerVisibilityEvents","document","handleVisibilityChange","w","width","h","height","ratio","context","clickToPlayAudio","playAudioOfScene","switchScene","scene","normalizeContext","enabled","visibilityState","audioElement","play","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","referenceWidth","referenceHeight","Math","round","currentScale","setCanvasStyle","style","currentWaitedTime","currentOffsetTime","resize","loadingscreen","fillStyle","fillRect","font","percent","getPercentLoaded","fillText","random","run","initParameter","requestAnimationFrame","mainLoop","timestamp","_realLastTimestamp","parameterForNewScene","destroy","callInit","now","currentTime","clampTime","shiftTime","performance","Date","move","totalTimePassed","draw","delta","waitTime","abs","offsetTimeDelta","max","min","scaleLimitMin","offsetTimeLimitDown","scaleFactor","scaleLimitMax","offsetTimeLimitUp","callLoading","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","src","count","let","reset","getLoaded","getCount","getImage","nameOrImage","Layer","layer","isFunction","start","nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","clear","LayerManager","layers","ifNull","value","alternative","addLayer","addLayerForId","addLayersForIds","numberOfLayer","result","layerId","Scene","configurationClassOrObject","configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","output","parameter","images","Promise","resolve","init","then","res","orgW","orgH","visibleScreen","ref","callDestroy","progress","loadedHeight","clearRect","text","isNaN","parseFloat","loading","timepassed","endTime","end","beforeMove","calcFrame","frames","floor","animate","afterMove","isArray","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","super","controller","playbackState","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","_getViewport","hw","hh","a","scaleCanvas","x1","y1","save","setTransform","restore","SceneNormAudio","_Default","_Audio","_Norm","_NormAudio","Circle","arc","scaleX","scaleY","alphaMode","color","animation","changeAnimationStatus","ani","beginPath","fill","closePath","Callback","deltaTime","additionalParameter","Group","sprite","finished","spriteFinished","Canvas","gridSize","norm","currentGridSize","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","Emitter","staticArray","functionArray","classToEmit","class","call","FastBlur","darker","pixel","ceil","targetW","targetH","imageSmoothingEnabled","image","position","CENTER","frameX","frameY","frameWidth","frameHeight","normScale","sX","sY","LEFT_TOP","const","Text","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","b","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path","path2D","Path2D","clip","fixed","curve","moveTo","points","bezierCurveTo","stroke","Rect","rect","Scroller","characterList","StarField","moveX","moveY","moveZ","centerX","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","ret","lw","lineTo","_Image","_Text","_Callback","_Canvas","_Circle","_Emitter","_FastBlur","_Group","_Particle","_Path","_Rect","_Scroller","_StarField","Sequence","loop","timeWait","obj","animationPosition","orgLoop","setObject","last_timestamp","hide_vote","timelapsed","orgEnabled","object","time","is_difference","current_animationPosition","timeleft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","animation_count","disable_vote","State","states","transitions","delegateTo","currentStateName","defaultState","currentState","isTransitioningToStateName","setState","name","console","log","UCFirstName","charAt","toUpperCase","transitionName","find","timeLeft","isDifference","duration","initialized","moveDefault","data","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","pasition","_lerp","pathFrom","pathTo","ChangeTo","changeValues","ease","isColor","isPath","push","isBezier","bezier","moveAlgorithm","t","to","_preprocessing","path2shapes","End","Sequenz","EndDisabled","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Move","speed","targetX","targetY","hypotenuse","sqrt","Once","Aniobject","times","Play","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","Animation","Wait","WaitDisabled","_ChangeTo","_End","_EndDisabled","_ImageFrame","_Move","_Once","_Play","_Shake","_ShowOnce","_Stop","_Wait","_WaitDisabled","_Engine","_Sequence","_State"],"mappings":"uGAAe,SAASA,EAAKC,uEACP,mBAAPA,EAAoBA,EAAEC,MAAM,KAAKC,GAAUF,ECC1D,IAAMG,EACJC,SAAYC,cACNC,EAAeD,KACY,iBAApBA,QACH,IAAIE,MAAM,6CAEdF,EAAgBG,WAClBF,EAAe,QACLD,QAEL,IAAKA,EAAgBI,aACpB,IAAIF,MAAM,8CAEdG,EAAUC,OAAOC,OACnB,GACA,OACS,YACC,eACE,oBACQ,GAEpBN,WAGGO,QAAU,QACL,aACC,OACN,IACA,QACI,QAIJC,OAAS,UAETC,qBAAsB,OAEtBC,UAAY,UAGZC,eAAiB,OACjBC,YAAc,OACdC,oBAAqB,OAGrBC,gCAAkC,UAGlCP,QAAQJ,OAASC,EAAQD,OAGA,iBAAnBC,EAAQD,QACI,OAAnBC,EAAQD,SACRC,EAAQD,OAAOD,iBAGX,IAAID,MAAM,mDAGdG,EAAQW,SAAU,KACdC,EAA0B,UACrB,gBACM,gBACA,cACF,qCACSC,EAAKV,QAAQJ,OAAOe,+CACnBD,EAAKV,QAAQJ,OAAOgB,2BAC7B,WACJ,sBACS,oBACA,oBACA,wBACE,IACrBC,iBAAkB,IAAO,mBACR,wBACK,4BACI,kBACV,QAGXC,UADyB,iBAArBjB,EAAQW,SACAV,OAAOC,OACtB,GACAU,EACAZ,EAAQW,UAGOC,EAEfC,KAAKI,UAAUC,uBACjBC,OAAOC,iBACL,SACAP,KAAKQ,kBAAkBC,KAAKT,OAC5B,GAEFM,OAAOC,iBACL,oBACAP,KAAKQ,kBAAkBC,KAAKT,OAC5B,IAGAA,KAAKI,UAAUM,0BACjBC,SAASJ,iBACP,mBACAP,KAAKY,uBAAuBH,KAAKT,OACjC,QAGCQ,8BAEAlB,QAAQuB,EAAIb,KAAKV,QAAQJ,OAAO4B,WAChCxB,QAAQyB,EAAIf,KAAKV,QAAQJ,OAAO8B,YAChC1B,QAAQ2B,MAAQjB,KAAKV,QAAQuB,EAAIb,KAAKV,QAAQyB,OAEhDzB,QAAQ4B,QAAU/B,EAAQD,OAAOD,WAAW,MAE7CE,EAAQgC,kBACVhC,EAAQD,OAAOqB,iBACb,QACAP,KAAKoB,iBAAiBX,KAAKT,OAC3B,QAGCqB,YAAYlC,EAAQmC,YACpBC,iBAAiBvB,KAAKV,QAAQ4B,UAGrCN,YAAAA,uCACOR,UAAUoB,UAAwC,UAA5Bb,SAASc,kBAGtCL,YAAAA,4BACMpB,KAAKR,qBAAuBQ,KAAKT,QAAUS,KAAKT,OAAOmC,mBACpDnC,OAAOmC,aAAaC,QAI7BJ,YAAAA,0BAAiBK,GACfA,EAAIC,aAAe,SACnBD,EAAIE,UAAY,SAChBF,EAAIG,YAAc,EAClBH,EAAII,yBAA2B,eAGjCC,YAAAA,2BACSjC,KAAKV,QAAQuB,GAGtBqB,YAAAA,4BACSlC,KAAKV,QAAQyB,GAGtBP,YAAAA,gCACMR,KAAKI,UAAW,KACZU,EAAQtC,EAAKwB,KAAKI,UAAU+B,gBAC5BnB,EAASxC,EAAKwB,KAAKI,UAAUgC,oBAC/BtB,GAAS,GAAKE,GAAU,cAGvB1B,QAAQJ,OAAO4B,MAAQuB,KAAKC,MAAMxB,EAAQd,KAAKI,UAAUmC,mBACzDjD,QAAQJ,OAAO8B,OAASqB,KAAKC,MAAMtB,EAAShB,KAAKI,UAAUmC,cAC5DvC,KAAKI,UAAUoC,sBACZlD,QAAQJ,OAAOuD,MAAM3B,MAASA,YAC9BxB,QAAQJ,OAAOuD,MAAMzB,OAAUA,aAEjCZ,UAAUsC,kBAAoB,OAC9BtC,UAAUuC,kBAAoB,cAGhCrD,QAAQuB,EAAIb,KAAKV,QAAQJ,OAAO4B,WAChCxB,QAAQyB,EAAIf,KAAKV,QAAQJ,OAAO8B,YAChC1B,QAAQ2B,MAAQjB,KAAKV,QAAQuB,EAAIb,KAAKV,QAAQyB,OAE9C6B,SACE5C,MAGT4C,YAAAA,yBACM5C,KAAKT,QAAUS,KAAKT,OAAOqD,aACxBrD,OAAOqD,OAAO5C,KAAKV,SAEnBU,MAGTqB,YAAAA,qBAAYC,UACNA,SACG7B,UAAY6B,GAEZtB,MAGT6C,YAAAA,6BACMjB,EAAM5B,KAAKV,QAAQ4B,QACvBU,EAAII,yBAA2B,cAC/BJ,EAAIG,YAAc,EAElBH,EAAIkB,UAAY,oBACZC,SAAS,EAAG,EAAG/C,KAAKV,QAAQuB,EAAGb,KAAKV,QAAQyB,GAEhDa,EAAIoB,KAAO,eACXpB,EAAIkB,UAAY,WACZG,EAAUjD,KAAKR,oBAAsBQ,KAAKT,OAAO2D,mBAAqB,EAC1EtB,EAAIE,UAAY,OAChBF,EAAIC,aAAe,SACnBD,EAAIuB,SACF,WAAaF,EAAU,IACvB,GAAqB,EAAhBZ,KAAKe,SACVpD,KAAKV,QAAQyB,EAAI,GAAqB,EAAhBsB,KAAKe,eAGxB7B,iBAAiBK,IAGxByB,YAAAA,aAAIC,UACFA,EAAgBA,GAAiB,QA0H5BzD,gCAAkCS,OAAOiD,+BAxHrCC,EAASC,WACX5D,gCAAkCS,OAAOiD,sBAC5CC,EAAS/C,KAAKT,OAGZA,KAAKJ,0BACFY,yBACAZ,oBAAqB,GAEvBI,KAAK0D,0BACHA,mBAAqBD,GAGL,OAAnBzD,KAAKP,UAAoB,KACvBkE,EAAuB3D,KAAKT,OAC5BS,KAAKT,OAAOqE,QAAQ5D,KAAKV,SACzBgE,EACAK,SACGlE,UAAUoE,SAAS7D,KAAKV,QAASqE,EAAsB3D,WACvDT,OAASS,KAAKP,eACdA,UAAY,UACZD,qBAAsB,MAI3BQ,KAAKT,OAAQ,KACXuE,EAAM9D,KAAKT,OAAOwE,mBAIjBpE,YAAcK,KAAKT,OAAOyE,UAAUF,EAAM9D,KAAKN,oBAE9CuE,EAAYjE,KAAKT,OAAO0E,UAAUjE,KAAKL,qBACxCA,YAAcK,KAAKL,YAAcsE,OACjCvE,eAAiBoE,EAAMG,EAExBjE,KAAKR,wBACkB,IAArBQ,KAAKL,cACHK,KAAKI,WAAaJ,KAAKI,UAAUoB,UACnCsC,EAAMxD,OAAO4D,YAAcA,YAAYJ,MAAQK,KAAKL,YAGjDvE,OAAO6E,KAAKpE,KAAKV,QAASU,KAAKL,aAGhCK,KAAKL,YAAc,SAChBA,YAAcK,KAAKT,OAAO8E,sBAG5B9E,OAAO+E,KAAKtE,KAAKV,SAElBU,KAAKI,WAAaJ,KAAKI,UAAUoB,SAAS,KACtC+C,GACHjE,OAAO4D,YAAcA,YAAYJ,MAAQK,KAAKL,OAC/CA,EACA9D,KAAKI,UAAUD,iBACbH,KAAKI,UAAUsC,kBAAoB1C,KAAKI,UAAUoE,cAC/CpE,UAAUsC,mBACbe,EAAYzD,KAAK0D,mBAEfrB,KAAKoC,IAAIF,IAAUvE,KAAKI,UAAUsE,qBAC/BtE,UAAUuC,kBACb3C,KAAKI,UAAUuC,mBAAqB,EAChCN,KAAKsC,IACH,EACA3E,KAAKI,UAAUuC,kBACb3C,KAAKI,UAAUsE,iBAEnBrC,KAAKuC,IACH,EACA5E,KAAKI,UAAUuC,kBACb3C,KAAKI,UAAUsE,iBAIvBH,EAAQ,GACRvE,KAAKI,UAAUmC,aAAevC,KAAKI,UAAUyE,oBAExCzE,UAAUuC,mBAAqB4B,EAElCvE,KAAKI,UAAUuC,mBACf3C,KAAKI,UAAU0E,2BAEV1E,UAAUmC,aAAeF,KAAKsC,IACjC3E,KAAKI,UAAUyE,cACf7E,KAAKI,UAAUmC,aAAevC,KAAKI,UAAU2E,kBAE1CnF,oBAAqB,IAG5B2E,EAAQ,GACRvE,KAAKI,UAAUmC,aAAevC,KAAKI,UAAU4E,qBAExC5E,UAAUuC,mBAAqB4B,EAElCvE,KAAKI,UAAUuC,mBACf3C,KAAKI,UAAU6E,yBAEV7E,UAAUmC,aAAeF,KAAKuC,IACjC5E,KAAKI,UAAU4E,cACfhF,KAAKI,UAAUmC,aAAevC,KAAKI,UAAU2E,kBAE1CnF,oBAAqB,eAQjCJ,oBAAsBQ,KAAKT,OAAO2F,YAAYlF,KAAKV,SACpDU,KAAKR,qBAAuBQ,KAAKI,iBAC9BA,UAAUsC,kBAAoB,QAIpCgB,mBAAqBD,GAKjBhD,KAAKT,OAGTA,MAGT4D,YAAAA,+BACO/D,iCACHS,OAAO6E,qBAAqBnF,KAAKH,sCAC9BA,gCAAkC,KACvCS,OAAO8E,oBACL,SACApF,KAAKQ,kBAAkBC,KAAKT,OAC5B,GAEFM,OAAO8E,oBACL,oBACApF,KAAKQ,kBAAkBC,KAAKT,OAC5B,GAEFW,SAASyE,oBACP,mBACApF,KAAKY,uBAAuBH,KAAKT,OACjC,QAEGV,QAAQJ,OAAOkG,oBAClB,QACApF,KAAKoB,iBAAiBX,KAAKT,OAC3B,GAEKA,MChXX,IAAMqF,iBAEGC,aAAIC,EAAQC,OACXC,EAAOzF,MAAQqF,gBAEdI,EAAKF,OAAOG,GAeXF,GAAsC,mBAAlBA,EAAUE,IAChCF,EAAUE,GAAGA,EAAGD,EAAKF,OAAOG,KAf9BD,EAAKF,OAAOG,GAAK,IAAIpF,OAAOqF,QACvBJ,OAAOG,GAAGE,OAAS,WACtBH,EAAKI,SACDL,GAAmC,mBAAfA,EAClBC,EAAKK,gBAGAN,GAAsC,mBAAlBA,EAAUE,IACvCF,EAAUE,GAAGA,EAAGD,EAAKF,OAAOG,KAGhCD,EAAKF,OAAOG,GAAGK,IAAMR,EAAOG,GAC5BD,EAAKO,cAdJC,IAAIP,KAAKH,cAqBVC,GAAmC,mBAAfA,GAA6BC,EAAKK,gBAGnDL,GAGTJ,EAAOa,qBACCT,EAAOzF,MAAQqF,SACrBI,EAAKF,OAAS,GACdE,EAAKO,MAAQ,EACbP,EAAKI,OAAS,EACPJ,GAGTJ,EAAOc,4BACGnG,MAAQqF,GAAcQ,QAGhCR,EAAOe,2BACGpG,MAAQqF,GAAcW,OAGhCX,EAAOS,wBACCL,EAAOzF,MAAQqF,SACbI,EAAKI,SAAWJ,EAAKO,SAGxBK,kBAASC,SACgB,iBAAhBA,EAA2BA,GAAetG,MAAQqF,GAAcE,OAAOe,IAIzFjB,EAAaE,OAAS,GACtBF,EAAaW,MAAQ,EACrBX,EAAaQ,OAAS,EC3DtB,IAAMU,EACJ1H,gBACO2H,MAAQ,QACRC,WAAa,QACbC,MAAQ,OACRC,SAAW,GAGlBC,YAAAA,oBAAWC,eACJC,gBAAgBD,GACdA,GAGTE,YAAAA,qBAAYC,eACLC,kBAAkBD,GAChBA,GAGTF,YAAAA,yBAAgBD,OACVK,EAAMlH,KAAKwG,MAAMW,OACjBC,EAAKpH,KAAK2G,cACTH,MAAMY,GAAMP,OACZJ,WAAWW,GAAyB,mBAAZP,EACzBK,IAAQE,eAGRT,EAAW3G,KAAK2G,SAAW,EACxBA,IAAaO,GAAOV,MAAMG,oBAG5BA,SAAWA,EACZ3G,KAAK0G,MAAQU,SACVV,MAAQU,GAERA,GAGTH,YAAAA,2BAAkBD,cACZE,EAAMlH,KAAKwG,MAAMW,cAEjBD,IADKlH,KAAK2G,eAEPH,MAAQxG,KAAKwG,MAAMa,OAAOL,QAC1BL,SAAW3G,KAAKwG,MAAMW,SACXG,iBAASC,EAAGC,KACrBf,WAAWS,EAAMM,GAAkB,mBAAND,IAE7BE,MAAMC,KAAK,CAAEP,OAAQH,EAAgBG,iBAAWI,EAAGC,UAAMA,EAAIN,KAE7DF,EAAgBW,aAAId,UAAW7G,EAAK4G,WAAWC,MAI1De,YAAAA,iBAAQC,UACC7H,KAAKwG,MAAMqB,IAGpBC,YAAAA,wBAAejB,UACN7G,KAAKwG,MAAMuB,QAAQlB,IAG5BmB,YAAAA,yBAAgBnB,OACRgB,EAAY7H,KAAK8H,eAAejB,GAClCgB,GAAa,QACVI,WAAWJ,IAIpBI,YAAAA,oBAAWJ,OACLX,EAAMlH,KAAKwG,MAAMW,OAAS,KAC1BD,EAAM,GAAKW,IAAcX,EAAK,UAC3BV,MAAMqB,GAAa,KACjBX,IAAQlH,KAAKwG,MAAMU,EAAM,aAG3BV,MAAMW,OAASD,OACfT,WAAWU,OAASD,OACpBP,SAAWtE,KAAKuC,IAAI5E,KAAK2G,SAAUO,QACnCR,MAAQrE,KAAKuC,IAAI5E,KAAK0G,MAAOQ,aAE7BV,MAAMqB,GAAa,UACnBlB,SAAWtE,KAAKuC,IAAI5E,KAAK2G,SAAUkB,GACpC7H,KAAK0G,QAAUmB,SACZnB,MAAQmB,EAAY,IAK/BP,YAAAA,iBAAQY,OACFC,EAAOtB,EACLuB,EAAIpI,KAAKwG,MAAMW,WAChBgB,EAAQnI,KAAK0G,MAAOyB,EAAQC,EAAGD,OACxBnI,KAAKwG,MAAM2B,KAEnBD,EAAS,OACPC,UACAtB,EACAJ,WAAYzG,KAAKyG,WAAW0B,SACrBnI,QAMfgG,YAAAA,wBACShG,KAAKwG,MAAMW,QAGpBkB,YAAAA,sBACO7B,MAAQ,QACRC,WAAa,QACbC,MAAQ,OACRC,SAAW,GC7GpB,IAAM2B,EACJzJ,gBACO0J,OAAS,ICJH,SAASC,EAAOC,EAAOC,UAC7B,MAAOD,GAAsD,KAAVA,EAAeC,EAAcD,EDMvFE,YAAAA,gCACOJ,OAAOvI,KAAKuI,OAAOpB,QAAU,IAAIZ,EAC/BvG,KAAKuI,OAAOvI,KAAKuI,OAAOpB,OAAS,IAG1CyB,YAAAA,qCACOL,OAAOvI,KAAKuI,OAAOpB,QAAU,IAAIZ,EAC/BvG,KAAKuI,OAAOpB,OAAS,GAG9B0B,YAAAA,yBAAgBC,6BAAgB,OACxBC,EAAStB,MAAMC,KACnB,QAAUoB,YACTvB,EAAGC,UAAMA,EAAIxH,EAAKuI,OAAOpB,qBAEvBoB,OAASvI,KAAKuI,OAAOlB,OACxBI,MAAMC,KAAK,QAAUoB,YAAiBvB,UAAK,IAAIhB,KAE1CwC,GAGTnB,YAAAA,iBAAQoB,UACChJ,KAAKuI,OAAOS,IAGrB1B,YAAAA,iBAAQY,OACFxC,EACE0C,EAAIpI,KAAKuI,OAAOpB,WACjBzB,EAAI,EAAGA,EAAI0C,EAAG1C,SACZ6C,OAAO7C,GAAG4B,QAAQY,IAI3BlC,YAAAA,wBACShG,KAAKuI,OAAOpB,QAGrBkB,YAAAA,sBACOE,OAAS,IExClB,IAAMU,EACJpK,SAAYqK,QAEHC,cADmC,mBAA/BD,EACY,IAAIA,EAEJA,OAIlBE,aAAe,IAAId,OAEnBjE,gBAAkB,OAElBgF,OAAS,UACTC,UAAW,OACXC,wBAAqBC,OAErBC,UAAYjL,EAAKwB,KAAKmJ,cAAcM,gBACpCC,oBAAsBlB,EACzBhK,EAAKwB,KAAKmJ,cAAcO,qBACxB,QAEGC,mBAAqBnB,EACxBhK,EAAKwB,KAAKmJ,cAAcQ,oBACxB,KAIJ5F,YAAAA,8BACSzD,OAAO4D,YAAcA,YAAYJ,MAAQK,KAAKL,OAGvDE,YAAAA,mBAAU4F,OACJC,EAAU,WACV7J,KAAKyJ,cACGzJ,KAAKyJ,UAAYzJ,KAAK0J,qBAE9BE,EAAaC,EACRA,EAEFD,GAGT3F,YAAAA,mBAAU2F,UACH5J,KAAKyJ,WAGDG,EAAa5J,KAAKyJ,UAFlB,GAKX5F,YAAAA,kBAASiG,EAAQC,EAAWV,mBACrBA,OAASA,OACTzG,OAAOkH,OACNE,EAASxL,EAAKwB,KAAKmJ,cAAca,QACnCA,GACF3E,EAAaC,IAAI0E,GAEnBC,QAAQC,QACNlK,KAAKmJ,cAAcgB,MACjBnK,KAAKmJ,cAAcgB,KAAK,QAAEd,SAAQS,QAAe9J,eAAM+J,KACzDK,cAAKC,UAAQrK,EAAKsJ,UAAW,KAGjC1G,YAAAA,gBAAOkH,mBACAP,mBAAqB,GACrB,IACA,IACA,EACH1I,EAAGiJ,EAAOjJ,EACVE,EAAG+I,EAAO/I,EACVuJ,KAAMR,EAAOjJ,EACb0J,KAAMT,EAAO/I,EACbyJ,cAAe,GACV,IACA,EACH3J,EAAGiJ,EAAOjJ,EACVE,EAAG+I,EAAO/I,SAGTqI,aAAa9B,iBAASmD,2BAEf7H,OAAOkH,EAAQ9J,EAAKuJ,uBAKlCmB,YAAAA,qBAAYZ,QACLX,cAAcvF,SACjB5D,KAAKmJ,cAAcvF,QAAQ,CAAEyF,OAAQrJ,KAAKqJ,aAAerJ,YAAM8J,SAC5DR,UAAW,GAGlBzG,YAAAA,uBAAciH,EAAQa,OACd/I,EAAMkI,EAAO5I,QACjB0J,EAAevI,KAAKsC,IAAI,EAAGgG,EAAWb,EAAO/I,GAC/Ca,EAAII,yBAA2B,cAC/BJ,EAAIG,YAAc,EAClBH,EAAIiJ,UAAU,EAAG,EAAGf,EAAOjJ,EAAGiJ,EAAO/I,GACrCa,EAAIkB,UAAY,SACZC,SAAS,EAAG+G,EAAO/I,EAAI,EAAI6J,EAAe,EAAGd,EAAOjJ,EAAG+J,GAC3DhJ,EAAIoB,KAAO,eACXpB,EAAIkB,UAAY,OAChBlB,EAAIE,UAAY,OAChBF,EAAIC,aAAe,aACfiJ,EAAOH,EAGNI,MAAMC,WAAWL,KAAeI,MAAMJ,EAAW,KACpDG,EAAO,WAAazI,KAAKC,MAAM,IAAMqI,GAAY,KAEnD/I,EAAIuB,SACF2H,EACA,GAAqB,EAAhBzI,KAAKe,SACV0G,EAAO/I,EAAI,GAAqB,EAAhBsB,KAAKe,eAGlBiG,QAAUrJ,KAAKqJ,OAAO9H,iBAAiBK,IAG9CsD,YAAAA,qBAAY4E,MACNzE,EAAaS,YAAc9F,KAAKsJ,qBAC7BpD,MAAM4D,IACJ,MAEHrB,EAAQpD,EAAae,WACvBf,EAAac,YAAcd,EAAae,WACxC,yBAEC+C,cAAc8B,QACfjL,KAAKmJ,cAAc8B,QAAQ,CACzB5B,OAAQrJ,KAAKqJ,aACNrJ,YACP8J,QACArB,IAEFzI,KAAK6C,cAAciH,EAAQrB,IACxB,GAGTrE,YAAAA,cAAK0F,EAAQoB,WAEN7G,iBAAmB6G,EAGpBA,EAAa,QAEVhF,MAAM4D,GACXoB,EAAalL,KAAKqE,iBAElBrE,KAAKmJ,cAAcgC,SACnBnL,KAAKmJ,cAAcgC,SAAWnL,KAAKqE,qBAGrBrE,KAAKqE,gBAAkBrE,KAAKmL,aACrC9G,gBAAkBrE,KAAKmL,aAEvBhC,cAAciC,KACjBpL,KAAKmJ,cAAciC,IAAI,CAAE/B,OAAQrJ,KAAKqJ,aAAerJ,YAAM8J,KAG3D9J,KAAKmJ,cAAckC,cACjBrL,KAAKyJ,cACHyB,GAAclL,KAAKyJ,UAAYzJ,KAAK2J,uBAGpC1D,IAAIqF,EAAY,EACdC,EAASlJ,KAAKuC,IACZ5E,KAAK0J,oBACLrH,KAAKmJ,MAAMN,EAAalL,KAAKyJ,YAEjC6B,EAAYC,EACZD,SAEKnC,cAAckC,WAAW,CAC5BhC,OAAQrJ,KAAKqJ,aACNrJ,KACPoJ,aAAcpJ,KAAKoJ,oBACnBU,aACAoB,cAKD/B,cAAckC,WAAW,CAC5BhC,OAAQrJ,KAAKqJ,aACNrJ,KACPoJ,aAAcpJ,KAAKoJ,oBACnBU,aACAoB,SAKD9B,aAAa9B,iBAASmD,mDAEXgB,QAAQP,IAClB1E,EAAMyB,WAAWE,KAKnBnI,KAAKmJ,cAAcuC,gBAChBvC,cAAcuC,UAAU,CAC3BrC,OAAQrJ,KAAKqJ,aACNrJ,KACPoJ,aAAcpJ,KAAKoJ,oBACnBU,aACAoB,KAKN5G,YAAAA,cAAKwF,mBACEV,aAAa9B,iBAASmD,oDAGrB5D,EAAQ,CACNwC,OAAQrJ,EAAKqJ,aACNrJ,EACPoJ,aAAcpJ,EAAKoJ,mBACnB5C,SACAsD,EACAoB,WAAYlL,EAAKqE,mBAGnBmC,EAAMyB,WAAWE,GAGnBtB,EAAQvC,KAAKwF,EAAO5I,QAASlB,EAAKuJ,uBAKxCrD,YAAAA,eAAM4D,OACAf,EAAS/I,KAAKmJ,cAAcjD,MAC5BlG,KAAKmJ,cAAcjD,MAAM,CACvBmD,OAAQrJ,KAAKqJ,aACNrJ,KACPoJ,aAAcpJ,KAAKoJ,oBACnBU,IAEF,IAAIxB,KAEJb,MAAMkE,QAAQ5C,GAAS,KACnBR,EAASQ,EACfA,EAAS,IAAIT,EACbC,EAAOjB,iBAAQC,KACNoB,WAAW5B,YAAYQ,KAI9BwB,SACGK,aAAeL,IC/P1B,IAAqB6C,cACnB/M,WAAY6C,qBAELmK,eAAiB,UACjBC,cAAgB,UAChBC,mBAAoB,OACpBrK,aAAeA,kGAGtBqC,2BACMA,EAAciI,YAAMjI,0BACpB/D,KAAK0B,aAAc,IAEjB1B,KAAK+L,kBAAmB,IACE,OAAxB/L,KAAK6L,2BACFA,eAAiB9H,OACjB+H,cAAgB9L,KAAK0B,aAAaqC,YACA,IAAhC/D,KAAK0B,aAAaqC,eAE0B,YAA/C/D,KAAK0B,aAAauK,WAAWC,cAA6B,IACxDlM,KAAK0B,aAAaqC,cAAgB/D,KAAK8L,qBACb,IAArB9L,KAAK8L,cAAuBzJ,KAAKuC,IAAI,IAAKb,EAAc/D,KAAK6L,gBAC/D,GAAK7L,KAAK0B,aAAaqC,YAAc/D,KAAK8L,cAAiB,IAAQ9L,KAAK0B,aAAaqC,YAAc/D,KAAK8L,eAAkB/H,EAAc/D,KAAK6L,eAAiB,gBAC9JA,eAAiB7L,KAAK6L,eAAwE,KAAtD7L,KAAK0B,aAAaqC,YAAc/D,KAAK8L,oBAC7EA,cAAgB9L,KAAK0B,aAAaqC,YACX,IAArB/D,KAAK8L,cAAuB/H,EAAc/D,KAAK6L,2BAGrDA,eAAiB9H,OACjB+H,cAAgB9L,KAAK0B,aAAaqC,YACX,IAArB/D,KAAK8L,qBAGyB,IAAhC9L,KAAK0B,aAAaqC,mBAIpBA,eAIXC,mBAAU4F,UACDA,eAGTO,8EAEMnK,KAAK0B,eACW1B,KAAK0B,aAAayK,YAAY,aAChCC,MAAM,mBAIU,mBAArBC,uBACJ3K,aAAauK,WAAa,IAAII,qBAC9BN,mBAAoB,QAEtBrK,aAAa4K,QAAU,YACvB5K,aAAa6K,QAGbP,YAAM7B,WAAKnK,KAAGwM,gBAGvBtH,qBAAY4E,OACNjE,EAASmG,YAAM9G,sBAAY4E,MAE3BjE,GAAU7F,KAAK0B,aAAc,MACzB1B,KAAK0B,aAAa+K,YAAczM,KAAK0B,aAAagL,8BAEjD7J,cAAciH,EAAQ,sBACpB,OAEFpI,aAAaC,YACbkB,cAAciH,EAAQ,wBAI1BjE,MA9E+BoD,GCsBxC,SAAS0D,SACFzG,QAGPyG,EAAUC,UAAU1G,MAAQ,uBACrB2G,EAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACb7M,MAGT2M,EAAUC,UAAUE,SAAW,SAASC,OAElCC,EAAMhN,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAErDI,EAAMjN,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GACrDK,EAAMlN,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAErDM,EAAKnN,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,GAChEO,EAAKpN,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,eAE/DA,EAAE,GATG7M,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,GAAK7M,KAAK6M,EAAE,GAAKE,EAAOF,EAAE,QAUpDA,EAAE,GAAKG,OACPH,EAAE,GAAKI,OACPJ,EAAE,GAAKK,OACPL,EAAE,GAAKM,OACPN,EAAE,GAAKO,EACLpN,MAGT2M,EAAUC,UAAUS,OAAS,eACvBC,EAAI,GAAKtN,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,IAEpDU,GAAMvN,KAAK6M,EAAE,GAAKS,EAClBE,GAAMxN,KAAK6M,EAAE,GAAKS,EAClBG,EAAKzN,KAAK6M,EAAE,GAAKS,EACjBI,EAAKJ,GAAKtN,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,IACrDc,EAAKL,GAAKtN,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,gBACpDA,EAAE,GANE7M,KAAK6M,EAAE,GAAKS,OAOhBT,EAAE,GAAKU,OACPV,EAAE,GAAKW,OACPX,EAAE,GAAKY,OACPZ,EAAE,GAAKa,OACPb,EAAE,GAAKc,EACL3N,MAGT2M,EAAUC,UAAUgB,OAAS,SAASC,OAChCpP,EAAI4D,KAAKyL,IAAID,GACbE,EAAI1L,KAAK2L,IAAIH,GAEbb,EAAMhN,KAAK6M,EAAE,GAAKpO,EAAIuB,KAAK6M,EAAE,GAAKkB,EAClCd,EAAMjN,KAAK6M,EAAE,IAAMkB,EAAI/N,KAAK6M,EAAE,GAAKpO,EACnCyO,EAAMlN,KAAK6M,EAAE,IAAMkB,EAAI/N,KAAK6M,EAAE,GAAKpO,cAClCoO,EAAE,GAJG7M,KAAK6M,EAAE,GAAKpO,EAAIuB,KAAK6M,EAAE,GAAKkB,OAKjClB,EAAE,GAAKG,OACPH,EAAE,GAAKI,OACPJ,EAAE,GAAKK,EACLlN,MAGT2M,EAAUC,UAAUqB,UAAY,SAASC,EAAGC,eACrCtB,EAAE,IAAM7M,KAAK6M,EAAE,GAAKqB,EAAIlO,KAAK6M,EAAE,GAAKsB,OACpCtB,EAAE,IAAM7M,KAAK6M,EAAE,GAAKqB,EAAIlO,KAAK6M,EAAE,GAAKsB,EAClCnO,MAGT2M,EAAUC,UAAUwB,MAAQ,SAASC,EAAIC,eAClCzB,EAAE,IAAMwB,OACRxB,EAAE,IAAMwB,OACRxB,EAAE,IAAMyB,OACRzB,EAAE,IAAMyB,EACNtO,MAGT2M,EAAUC,UAAU2B,eAAiB,SAASC,EAAIC,OAC5CP,EAAIM,QAID,CAFPA,EAAKN,EAAIlO,KAAK6M,EAAE,GADR4B,EACiBzO,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,GAC5C4B,EAAKP,EAAIlO,KAAK6M,EAAE,GAFR4B,EAEiBzO,KAAK6M,EAAE,GAAK7M,KAAK6M,EAAE,KAI9CF,EAAUC,UAAU8B,MAAQ,eACtBC,EAAI,IAAIhC,SACZgC,EAAE9B,EAAI7M,KAAK6M,EAAE+B,MAAM,GACZD,GCzGT,IAAqBE,cACnBhQ,4EACQmB,KAAG8O,QACJC,UAAY,UACZC,gBAAkB,qGAGzBC,4BACOjP,KAAKqJ,OAAQ,OAAO,IAAIsD,MAExB3M,KAAK+O,UAAW,KACXG,EAAKlP,KAAKqJ,OAAO/J,QAAQuB,EAAI,EAC7BsO,EAAKnP,KAAKqJ,OAAO/J,QAAQyB,EAAI,EAC7BqN,EAAQpO,KAAKqJ,OAAO/J,QAAQ2B,MAAQ,EAAIiO,EAAKC,OAEhDJ,WAAa,IAAIpC,GACnBsB,UAAUiB,EAAIC,GACdf,MAAMA,EAAOA,QACXY,gBAAkB,YAOlBhP,KAAK+O,uBAGdnM,gBAAOkH,mBACAiF,UAAY,UACZC,gBAAkB,UAClBzF,mBAAqB,CACxB6F,EAAG,EACHlB,GAAI,EACJC,GAAI,EACJtN,EAAG,EACHE,EAAG,EACHuJ,KAAMR,EAAOjJ,EACb0J,KAAMT,EAAO/I,EACbsO,YAAavF,EAAOjJ,EAAIiJ,EAAO5K,OAAOe,mBAExBD,KAAKuO,eAAe,EAAE,EAAE,mBACxBvO,KAAKuO,eAAezE,EAAOjJ,EAAEiJ,EAAO/I,EAAE,QACjDwI,mBAAmBiB,cAAgB,CACtC0D,EAAGoB,EACHnB,EAAGoB,EACH1O,OAAMyO,EACNvO,OAAMwO,QAEHnG,aAAa9B,iBAASmD,2BAEf7H,OAAOkH,EAAQ9J,EAAKuJ,mCAKlCgF,wBAAeL,EAAGC,EAAGC,yBAAQpO,KAAKuJ,mBAAmB8F,aAC9CrP,KAAKgP,uBACHA,gBAAkBhP,KAAKiP,eAAeP,QAAQrB,UAE9CrN,KAAKgP,gBAAgBT,eAAeL,EAAIE,EAAOD,EAAIC,gBAG5D9J,cAAKwF,SACHA,EAAO5I,QAAQsO,UAEf1F,EAAO5I,SAAQuO,mBAAahF,EAAGzK,KAAKiP,eAAepC,eAE7CvI,eAAKwF,GACXA,EAAO5I,QAAQwO,cArEoBzG,GCDlB0G,cACnB9Q,WAAY6C,eACJA,mGAGRkB,gBAAOkH,QACAP,mBAAqB,CACxB6F,EAAG,EACHlB,GAAI,EACJC,GAAI,EACJtN,EAAG,EACHE,EAAG,EACHuJ,KAAMR,EAAOjJ,EACb0J,KAAMT,EAAO/I,gBAIjBuD,cAAKwF,GACHA,EAAO5I,QAAQsO,OACf1F,EAAO5I,QAAQ+M,UAAUnE,EAAOjJ,EAAI,EAAGiJ,EAAO/I,EAAI,GAClD+I,EAAO5I,QAAQkN,MAAMtE,EAAOjJ,EAAGiJ,EAAO/I,GAKtC+I,EAAO5I,QAAQ+M,WAAW,IAAK,gBAEzB3J,eAAKwF,GACXA,EAAO5I,QAAQwO,cA5ByB9D,KCS7B,kFALU,kCAAIgE,gBAAYd,qFAGlB,kCAAIe,gBAAUf,oFAFf,kCAAIgB,gBAAShB,yFACR,kCAAIiB,gBAAcjB,OCDxBkB,EAEnBnR,SAAYF,QAELuP,EAAI1F,EAAOhK,EAAKG,EAAOuP,GAAI,QAC3BC,EAAI3F,EAAOhK,EAAKG,EAAOwP,GAAI,QAE3B8B,IAAMzH,EAAOhK,EAAKG,EAAOsR,KAAM,QAE/BC,OAAS1H,EAAOhK,EAAKG,EAAOuR,QAAS,QACrCC,OAAS3H,EAAOhK,EAAKG,EAAOwR,QAAS,QAErCf,EAAI5G,EAAOhK,EAAKG,EAAOyQ,GAAI,QAE3BgB,UAAY5H,EAAOhK,EAAKG,EAAOyR,WAAY,oBAE3CC,MAAQ7H,EAAOhK,EAAKG,EAAO0R,OAAQ,aAEnCC,UAAY9R,EAAKG,EAAO2R,gBAExB9O,QAAUgH,EAAOhK,EAAKG,EAAO6C,UAAU,IAG9C+O,YAAAA,+BAAsBC,GACU,iBAAnBxQ,KAAKsQ,gBACTA,UAAUC,sBAAsBC,IAKzC/E,YAAAA,iBAAQP,SACyB,iBAApBlL,KAAKsQ,WAEVtQ,KAAKsQ,UAAUjN,IAAIrD,KAAMkL,GAAY,IAAS,SAE3C1J,SAAU,GACR,IAOboB,YAAAA,gBAAOkH,EAAQP,KAGfjF,YAAAA,cAAKpD,EAASqI,GACRvJ,KAAKwB,UACPN,EAAQc,yBAA2BhC,KAAKoQ,YAChCrO,YAAc/B,KAAKoP,EAAI7F,EAAmB6F,EAClDlO,EAAQsO,OACRtO,EAAQ+M,UAAUjO,KAAKkO,EAAGlO,KAAKmO,GAC/BjN,EAAQkN,MAAMpO,KAAKkQ,OAAQlQ,KAAKmQ,QAChCjP,EAAQuP,YACRvP,EAAQ4B,UAAY9C,KAAKqQ,MACzBnP,EAAQ+O,IAAI,EAAG,EAAG,EA3DP,qBA2DW,GAAKjQ,KAAKiQ,KA3DrB,qBA2DuC,IAAMjQ,KAAKiQ,MAAiB,GAC9E/O,EAAQwP,OACRxP,EAAQyP,YACRzP,EAAQwO,YC/Dd,IAAqBkB,cACnB/R,WAAYF,GACY,mBAAXA,IACTA,EAAS,CAAEuJ,SAAUvJ,gBAEjBA,QAEDuJ,SAAWvJ,EAAOuJ,cAClBgD,WAAa,OACb2F,UAAY,kGAGnBpF,iBAAQP,UACFlL,KAAKwB,eACF0J,YAAcA,OACd2F,WAAa3F,GAEbc,YAAMP,kBAAQP,gBAGvB5G,cAAKpD,EAAS4P,GACR9Q,KAAKwB,cACF0G,SAAShH,EAASlB,KAAKkL,WAAY4F,EAAqB9Q,WAE1D6Q,UAAY,MAxBiBb,GCGjBe,cACnBlS,WAAYF,eACJA,QAEDqS,OAASxI,EAAO7J,EAAOqS,OAAQ,oGAItCT,+BAAsBC,OAIfvK,IAAIP,iBAFH6K,gCAAsBC,GAEdxQ,KAAKgR,YACZA,OAAOtL,GAAG6K,sBAAsBC,gBAKzC/E,iBAAQP,OAEF+F,EAAWjF,YAAMP,kBAAQP,GAC3BgG,GAAiB,KAEflR,KAAKwB,YACFyE,IAAIP,KAAK1F,KAAKgR,OACjBE,EAAiBlR,KAAKgR,OAAOtL,GAAG+F,QAAQP,IAAegG,SAIvDlR,KAAKsQ,UACAW,GAEHC,SACG1P,SAAU,GAEV0P,gBAKX5M,cAAKpD,EAASqI,MACRvJ,KAAKwB,QAAS,KAWXyE,IAAIP,KAVL1F,KAAKoP,EAAI,KACX7F,EAAqBnK,OAAOC,OAAO,GAAIkK,IACpB6F,GAAKpP,KAAKoP,GAG/BlO,EAAQsO,OACRtO,EAAQ+M,UAAUjO,KAAKkO,EAAGlO,KAAKmO,GAC/BjN,EAAQkN,MAAMpO,KAAKkQ,OAAQlQ,KAAKmQ,QAChCjP,EAAQ0M,OApDG,oBAoDI5N,KAAKiQ,KAENjQ,KAAKgR,YACZA,OAAOtL,GAAGpB,KAAKpD,EAASqI,GAE/BrI,EAAQwO,eAvDqBM,GCAdmB,cAEnBtS,WAAYF,eACJA,QAEDuP,EAAI1P,EAAKG,EAAOuP,QAChBC,EAAI3P,EAAKG,EAAOwP,QAChBrN,MAAQtC,EAAKG,EAAOmC,YACpBE,OAASxC,EAAKG,EAAOqC,aACrBoQ,SAAW5S,EAAKG,EAAOyS,eACvBC,KAAO7I,OAAOhK,EAAKG,EAAO0S,WAAmB7H,IAAXxJ,KAAKkO,QAA8B1E,IAAXxJ,KAAKmO,QAAkC3E,IAAfxJ,KAAKc,YAAuC0I,IAAhBxJ,KAAKgB,aACnHsQ,iBAAkB,kGAGzBC,4BAAmBrQ,EAASqI,OACtB1I,EAAI0I,EAAmBe,MAAQpJ,EAAQhC,OAAO4B,MAChDC,EAAIwI,EAAmBgB,MAAQrJ,EAAQhC,OAAO8B,YAC3CwQ,YAAc7Q,SAAS8Q,cAAc,UACtCzR,KAAKoR,eACFE,gBAAkBtR,KAAKoR,cACvBI,YAAY1Q,MAAQuB,KAAKC,MAAMtC,KAAKsR,sBACpCE,YAAYxQ,OAASqB,KAAKC,MAAMtC,KAAKsR,wBAErCE,YAAY1Q,MAAQuB,KAAKC,MAAMzB,EAAIb,KAAKkQ,aACxCsB,YAAYxQ,OAASqB,KAAKC,MAAMvB,EAAIf,KAAKmQ,cAE3CuB,KAAO1R,KAAKwR,YAAYvS,WAAW,WACnCyS,KAAK1P,yBAA2B,mBAChC0P,KAAK3P,YAAc,eAG1B4P,6BAAoBpI,SACHC,IAAXxJ,KAAKkO,GAAmBlO,KAAKqR,aAC1BnD,EAAI3E,EAAmBiB,cAAc0D,SAE7B1E,IAAXxJ,KAAKmO,GAAmBnO,KAAKqR,aAC1BlD,EAAI5E,EAAmBiB,cAAc2D,SAEzB3E,IAAfxJ,KAAKc,OAAuBd,KAAKqR,aAC9BvQ,MAAQyI,EAAmBiB,cAAc3J,SAE5B2I,IAAhBxJ,KAAKgB,QAAwBhB,KAAKqR,aAC/BrQ,OAASuI,EAAmBiB,cAAczJ,gBAInD6B,gBAAO1B,EAASqI,MACVvJ,KAAKwR,aAAexR,KAAKsR,kBAAoBtR,KAAKoR,SAAU,KACxDQ,EAAgB5R,KAAKwR,iBACtBD,mBAAmBrQ,EAASqI,QAC5BmI,KAAK1P,yBAA2B,YAChC0P,KAAKG,UAAUD,EAAc,EAAE,EAAEA,EAAc9Q,MAAO8Q,EAAc5Q,OAAQ,EAAE,EAAEhB,KAAKwR,YAAY1Q,MAAOd,KAAKwR,YAAYxQ,aACzH0Q,KAAK1P,yBAA2B,mBAElC2P,oBAAoBpI,gBAI3BjF,cAAKpD,EAASqI,MACRvJ,KAAKwB,QAAS,CACXxB,KAAKwR,mBACHD,mBAAmBrQ,EAASqI,QAC5BoI,oBAAoBpI,IAEvBvJ,KAAKoR,UAAYpR,KAAKsR,kBAAoBtR,KAAKoR,eAC5CxO,OAAO1B,EAASqI,OAGjB1I,EAAIb,KAAKc,MACbC,EAAIf,KAAKgB,OACT8Q,EAAKjR,EAAI,EACTsO,EAAKpO,EAAI,EACTgR,EAAK/R,KAAKwR,YAAY1Q,MACtBkR,EAAKhS,KAAKwR,YAAYxQ,WAGnBiF,IAAIP,KAAK1F,KAAKgR,YACZA,OAAOtL,GAAGpB,KAAKtE,KAAK0R,KAAM,CAC7BtC,EAAG,EACHlB,EAAG,EACHC,EAAG,EACHtN,EAAGkR,EACHhR,EAAGiR,EACH1H,KAAMyH,EACNxH,KAAMyH,EACNxH,cAAe,CACb0D,EAAG,EACHC,EAAG,EACHtN,EAAGkR,EACHhR,EAAGiR,KAKT9Q,EAAQsO,OACRtO,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAc/B,KAAKoP,EAAI7F,EAAmB6F,EAClDlO,EAAQ+M,UAAUjO,KAAKkO,EAAI4D,EAAI9R,KAAKmO,EAAIgB,GACxCjO,EAAQkN,MAAMpO,KAAKkQ,OAAQlQ,KAAKmQ,QAChCjP,EAAQ0M,OArGG,oBAqGI5N,KAAKiQ,KACpB/O,EAAQ2Q,UAAU7R,KAAKwR,YAAa,EAAG,EAAGxR,KAAKwR,YAAY1Q,MAAOd,KAAKwR,YAAYxQ,QAAS8Q,GAAK3C,EAAItO,EAAGE,GACxGG,EAAQwO,eArGsBqB,GCDfkB,cACjBpT,WAAYF,eACFA,EAAO8G,MAAQ,QACjByM,EAAc,GAChBC,EAAgB,OAEdlM,IAAIP,KAAK/G,GACsC,IAA3C,CAAC,OAAQ,QAAS,SAASoJ,QAAQrC,KACT,mBAAf/G,EAAO+G,GAChByM,EAAczM,GAAK/G,EAAO+G,GAE1BwM,EAAYxM,GAAK/G,EAAO+G,QAM9BM,EAAQwC,EAAOhK,EAAKG,EAAOqH,OAAQ,QAClCgL,OAAS,OAEV/K,IAAIP,EAAI,EAAGA,EAAIM,EAAON,IAAK,KACvB0M,EAAczT,EAAO0T,MACrBtI,EAAY,OACZ9D,IAAIkC,KAAS+J,EACfnI,EAAU5B,GAAS+J,EAAY/J,OAE7BlC,IAAIkC,KAASgK,EACfpI,EAAU5B,GAASgK,EAAchK,GAAOmK,KAAK,KAAM5M,QAEhDsL,OAAOtL,GAAK,IAAI0M,EAAYrI,2FA7BRgH,GCAhBwB,cACnB1T,WAAYF,eACJA,QAEDuP,EAAI1P,EAAKG,EAAOuP,QAChBC,EAAI3P,EAAKG,EAAOwP,QAChBrN,MAAQtC,EAAKG,EAAOmC,YACpBE,OAASxC,EAAKG,EAAOqC,aAErBoQ,SAAW5S,EAAKG,EAAOyS,eACvBoB,OAAShK,EAAOhK,EAAKG,EAAO6T,QAAS,QACrCC,MAAQjK,EAAOhK,EAAKG,EAAO8T,QAAQ,QACnCpK,MAAQG,EAAOhK,EAAKG,EAAO0J,QAAQ,QACnCgJ,KAAO7I,EACVhK,EAAKG,EAAO0S,WACD7H,IAAXxJ,KAAKkO,QACQ1E,IAAXxJ,KAAKmO,QACU3E,IAAfxJ,KAAKc,YACW0I,IAAhBxJ,KAAKgB,aAEJsQ,iBAAkB,kGAGzBC,4BAAmBrQ,EAASqI,OACpB1I,EAAI0I,EAAmBe,MAAQpJ,EAAQhC,OAAO4B,MAClDC,EAAIwI,EAAmBgB,MAAQrJ,EAAQhC,OAAO8B,YAC3CwQ,YAAc7Q,SAAS8Q,cAAc,UACtCzR,KAAKoR,eACFE,gBAAkBtR,KAAKoR,cACvBI,YAAY1Q,MAAQuB,KAAKC,MAAMtC,KAAKsR,sBACpCE,YAAYxQ,OAASqB,KAAKC,MAAMtC,KAAKsR,wBAErCE,YAAY1Q,MAAQuB,KAAKqQ,KAAK7R,EAAIb,KAAKkQ,aACvCsB,YAAYxQ,OAASqB,KAAKqQ,KAAK3R,EAAIf,KAAKmQ,cAE1CuB,KAAO1R,KAAKwR,YAAYvS,WAAW,WACnCyS,KAAK1P,yBAA2B,mBAChC0P,KAAK3P,YAAc,eAG1B4P,6BAAoBpI,SACHC,IAAXxJ,KAAKkO,GAAmBlO,KAAKqR,aAC1BnD,EAAI3E,EAAmBiB,cAAc0D,SAE7B1E,IAAXxJ,KAAKmO,GAAmBnO,KAAKqR,aAC1BlD,EAAI5E,EAAmBiB,cAAc2D,SAEzB3E,IAAfxJ,KAAKc,OAAuBd,KAAKqR,aAC9BvQ,MAAQyI,EAAmBiB,cAAc3J,SAE5B2I,IAAhBxJ,KAAKgB,QAAwBhB,KAAKqR,aAC/BrQ,OAASuI,EAAmBiB,cAAczJ,gBAInD6B,gBAAO1B,EAASqI,MACVvJ,KAAKwR,aAAexR,KAAKsR,kBAAoBtR,KAAKoR,SAAU,KACxDQ,EAAgB5R,KAAKwR,iBACtBD,mBAAmBrQ,EAASqI,QAC5BmI,KAAK1P,yBAA2B,YAChC0P,KAAKG,UACRD,EACA,EACA,EACAA,EAAc9Q,MACd8Q,EAAc5Q,OACd,EACA,EACAhB,KAAKwR,YAAY1Q,MACjBd,KAAKwR,YAAYxQ,aAEd0Q,KAAK1P,yBAA2B,mBAElC2P,oBAAoBpI,gBAI3BjF,cAAKpD,EAASqI,MACRvJ,KAAKwB,QAAS,CACXxB,KAAKwR,mBACHD,mBAAmBrQ,EAASqI,QAC5BoI,oBAAoBpI,IAEvBvJ,KAAKoR,UAAYpR,KAAKsR,kBAAoBtR,KAAKoR,eAC5CxO,OAAO1B,EAASqI,OAGnB6F,EAAIpP,KAAKoP,EAAI7F,EAAmB6F,EAClCvO,EAAIb,KAAKc,MACTC,EAAIf,KAAKgB,OACT2R,EAAU3S,KAAKwR,YAAY1Q,MAC3B8R,EAAU5S,KAAKwR,YAAYxQ,OAEzBoO,EAAI,GAAKuD,GAAWC,SACjBlB,KAAK1P,yBAA2B,YAChC0P,KAAK3P,YAAc,OACnB2P,KAAKG,UACR3Q,EAAQhC,OACR,EACA,EACAgC,EAAQhC,OAAO4B,MACfI,EAAQhC,OAAO8B,OACf,EACA,EACA2R,EACAC,GAGE5S,KAAKwS,OAAS,SACXd,KAAK1P,yBAA2BhC,KAAKqI,MACtC,cACA,mBACCqJ,KAAK5O,UAAY,cAAgB9C,KAAKwS,OAAS,SAC/Cd,KAAK3O,SAAS,EAAG,EAAG4P,EAASC,IAIhC5S,KAAKqI,OACPnH,EAAQ2J,UAAU7K,KAAKkO,EAAGlO,KAAKmO,EAAGtN,EAAGE,GAEvCG,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAcqN,EACtBlO,EAAQ2R,uBAAyB7S,KAAKyS,MACtCvR,EAAQ2Q,UACN7R,KAAKwR,YACL,EACA,EACAmB,EACAC,EACA5S,KAAKkO,EACLlO,KAAKmO,EACLtN,EACAE,GAEFG,EAAQ2R,uBAAwB,QAI9B7S,KAAKqI,QACFrI,KAAKkO,SACHA,EAAI3E,EAAmB2E,GAEzBlO,KAAKmO,SACHA,EAAI5E,EAAmB4E,GAEzBnO,KAAKc,aACHA,MAAQyI,EAAmB1I,GAE7Bb,KAAKgB,cACHA,OAASuI,EAAmBxI,GAEnCG,EAAQ2J,UAAU7K,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKc,MAAOd,KAAKgB,aAvJrBgP,GCKhCrK,cACJ9G,WAAYF,eACJA,QAEDmU,MAAQzN,EAAagB,SAAS7H,EAAKG,EAAOmU,aAE1CC,SAAWvK,EAAOhK,EAAKG,EAAOoU,UAAWpN,EAAMqN,aAC/CC,OAASzK,EAAOhK,EAAKG,EAAOsU,QAAS,QACrCC,OAAS1K,EAAOhK,EAAKG,EAAOuU,QAAS,QACrCC,WAAa3K,EAAOhK,EAAKG,EAAOwU,YAAa,QAC7CC,YAAc5K,EAAOhK,EAAKG,EAAOyU,aAAc,QAC/C/B,KAAO7I,EAAOhK,EAAKG,EAAO0S,OAAO,mGAGxCzO,uBACOyQ,eAAY7J,eAInBlF,cAAKpD,EAASqI,MACRvJ,KAAKwB,SAAWxB,KAAK8S,MAAO,CACzB9S,KAAKqT,iBACHA,UAAYrT,KAAKqR,KAClBhP,KAAKuC,IACH2E,EAAmB1I,EAAIb,KAAK8S,MAAMhS,MAClCyI,EAAmBxI,EAAIf,KAAK8S,MAAM9R,QAEpC,OAEAmS,EAAanT,KAAKmT,YAAcnT,KAAK8S,MAAMhS,MAC/CsS,EAAcpT,KAAKoT,aAAepT,KAAK8S,MAAM9R,OAC7CsS,EAAKH,EAAanT,KAAKqT,UAAYrT,KAAKkQ,OACxCqD,EAAKH,EAAcpT,KAAKqT,UAAYrT,KAAKmQ,OAC3CjP,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAc/B,KAAKoP,EAAI7F,EAAmB6F,EAClC,GAAZpP,KAAKiQ,IACHjQ,KAAK+S,WAAapN,EAAM6N,SAC1BtS,EAAQ2Q,UACN7R,KAAK8S,MACL9S,KAAKiT,OACLjT,KAAKkT,OACLC,EACAC,EACApT,KAAKkO,EACLlO,KAAKmO,EACLmF,EACAC,GAGFrS,EAAQ2Q,UACN7R,KAAK8S,MACL9S,KAAKiT,OACLjT,KAAKkT,OACLC,EACAC,EACApT,KAAKkO,EAAIoF,EAAK,EACdtT,KAAKmO,EAAIoF,EAAK,EACdD,EACAC,IAIJrS,EAAQsO,OACRtO,EAAQ+M,UAAUjO,KAAKkO,EAAGlO,KAAKmO,GAC/BjN,EAAQ0M,OApEC,oBAoEM5N,KAAKiQ,KACpB/O,EAAQ2Q,UACN7R,KAAK8S,MACL9S,KAAKiT,OACLjT,KAAKkT,OACLC,EACAC,GACCE,EAAK,GACLC,EAAK,EACND,EACAC,GAEFrS,EAAQwO,gBA5EIM,GAiFpBrK,EAAM6N,SAAW,EACjB7N,EAAMqN,OAAS,ECvFfS,IAEMC,cACJ7U,WAAYF,eACJA,QAEDmM,KAAOtM,EAAKG,EAAOmM,WAEnB9H,KAAOwF,EAAOhK,EAAKG,EAAOqE,MAAO,uBAEjC+P,SAAWvK,EAAOhK,EAAKG,EAAOoU,UAAWW,EAAKV,aAE9C3C,MAAQ7R,EAAKG,EAAO0R,YACpBsD,YAAcnV,EAAKG,EAAOgV,kBAC1BC,UAAYpL,EAAOhK,EAAKG,EAAOiV,WAAY,mGAIlDtP,cAAKpD,EAASqI,GACRvJ,KAAKwB,UACPN,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAc/B,KAAKoP,EAAI7F,EAAmB6F,EAClDlO,EAAQsO,OACJkE,EAAKF,WACPtS,EAAQY,UAAY,OACpBZ,EAAQW,aAAe,OAEzBX,EAAQ+M,UAAUjO,KAAKkO,EAAGlO,KAAKmO,GAC/BjN,EAAQkN,MAAMpO,KAAKkQ,OAAQlQ,KAAKmQ,QAChCjP,EAAQ0M,OA7BG,oBA6BI5N,KAAKiQ,KACpB/O,EAAQ8B,KAAOhD,KAAKgD,KAEhBhD,KAAKqQ,QACPnP,EAAQ4B,UAAY9C,KAAKqQ,MACzBnP,EAAQiC,SAASnD,KAAK8K,KAAM,EAAG,IAG7B9K,KAAK2T,cACPzS,EAAQ2S,YAAc7T,KAAK2T,YAC3BzS,EAAQ0S,UAAY5T,KAAK4T,UACzB1S,EAAQ4S,WAAW9T,KAAK8K,KAAM,EAAG,IAGnC5J,EAAQwO,eAzCKM,GA+CnB0D,EAAKF,SAAW,EAChBE,EAAKV,OAAS,ECnDdS,IAIMM,cAGJlV,WAAYF,eACJA,yFAGDqV,0BAAiBC,EAAGC,EAAGC,OACxBC,EAAQC,EAAQC,EAAKL,GAXF,EAW2BM,EAAKL,GAXhC,EAWyDM,EAAKL,GAX9D,MAalBJ,EAASU,aACZV,EAASU,SAAW,IAAIhN,MAAM,IACzB2M,EAAS,EAAGA,EAASL,EAASU,SAAStN,OAAQiN,QAClDL,EAASU,SAASL,GAAU,IAAI3M,MAAM,IACjC4M,EAAS,EAAGA,EAASN,EAASU,SAASL,GAAQjN,OAAQkN,IAC1DN,EAASU,SAASL,GAAQC,GAAU,IAAI5M,MAAM,WAK/CsM,EAASU,SAASH,GAAIC,GAAIC,KAC7BT,EAASU,SAASH,GAAIC,GAAIC,GAAMT,EAASW,sBAAsBJ,EAAIC,EAAIC,IAElET,EAASU,SAASH,GAAIC,GAAIC,MAG5BE,+BAAsBJ,EAAIC,EAAIC,OAC/BtV,EAASyB,SAAS8Q,cAAc,UACpCvS,EAAO4B,MAAQ5B,EAAO8B,OAhCL,OAkCb2T,EAAOzV,EAAOD,WAAW,MAC7B0V,EAAK5S,YAAc,EACnB4S,EAAK3S,yBAA2B,cAChC2S,EAAK9J,UAAU,EAAG,EArCD,GAAA,QAuCb+J,EAAOD,EAAKE,qBArCKC,GAAAA,GAqCoD,EArCpDA,GAAAA,GAAAA,WAsCrBF,EAAKG,aAAa,EAAG,aAAYT,GAvCV,GAuCkE,GAAK,SAAQC,GAvC/E,GAuCuI,GAAK,SAAQC,GAvCpJ,GAuC4M,GAAK,OACxOI,EAAKG,aAAa,GAAK,aAAYT,GAxCZ,GAwCoE,GAAK,SAAQC,GAxCjF,GAwCyI,GAAK,SAAQC,GAxCtJ,GAwC8M,GAAK,SAC1OI,EAAKG,aAAa,EAAG,aAAYT,GAzCV,GAyCkE,GAAK,SAAQC,GAzC/E,GAyCuI,GAAK,SAAQC,GAzCpJ,GAyC4M,GAAK,OAExOG,EAAK7R,UAAY8R,EACjBD,EAAK5R,SAAS,EAAG,EA7CA,GAAA,IA+CV7D,eAIToF,cAAKpD,EAASqI,MACRvJ,KAAKwB,QAAS,CAEXxB,KAAKqQ,OAAUrQ,KAAKqQ,MAAMA,aACxBA,MAAQ2E,EAAMhV,KAAKqQ,OAAO4E,WAE3B5E,EAAQrQ,KAAKqQ,MAAMA,MACzBnP,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAc/B,KAAKoP,EAAI7F,EAAmB6F,EAClDlO,EAAQ2R,sBAAwB7S,KAAKkQ,OAAS3G,EAAmBe,KAAOf,EAAmB1I,EA5D5E,GA6DfK,EAAQ2Q,UAAUkC,EAASC,iBAAiB3D,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAK,EAAG,EA7D/D,GAAA,GA6D8FrQ,KAAKkO,EAAKlO,KAAKkQ,OAAS,EAAIlQ,KAAKmO,EAAKnO,KAAKmQ,OAAS,EAAInQ,KAAKkQ,OAAQlQ,KAAKmQ,QACvLjP,EAAQ2R,uBAAwB,OA1Df7C,GA+DvB+D,EAASU,SAAW,KClEpBhB,IAEqByB,cACnBrW,WAAYF,eACJA,QAEDwW,aAAU3L,OACV4L,KAAO5W,EAAKG,EAAOyW,WACnBC,OAAS,IAAIC,YAEbjF,MAAQ7R,EAAKG,EAAO0R,YACpBsD,YAAcnV,EAAKG,EAAOgV,kBAC1BC,UAAYpL,EAAOhK,EAAKG,EAAOiV,WAAY,QAC3C2B,KAAO/M,EAAOhK,EAAKG,EAAO4W,OAAO,QACjCC,MAAQhN,EAAOhK,EAAKG,EAAO6W,QAAQ,mGAI1ClR,cAAKpD,EAASqI,iBACRvJ,KAAKwB,QAAS,KACZ4N,EAAIpP,KAAKoP,EACTpP,KAAKmV,UAAYnV,KAAKoV,OACpB3N,MAAMkE,QAAQ3L,KAAKoV,YAChBC,OAAS,IAAIC,YACbF,KAAK9N,iBAASmO,KACZJ,OAAOK,OAAOD,EAAM,GAAG,GAAIA,EAAM,GAAG,IACzCA,EAAMnO,iBAASqO,KACRN,OAAOO,cAAcD,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,QAErFN,OAAO1E,oBAGT0E,OAAS,IAAIC,OAAOtV,KAAKoV,WAE3BD,QAAUnV,KAAKoV,MAElB7L,IACF6F,GAAK7F,EAAmB6F,OAGtBc,EAASlQ,KAAKkQ,OAChBC,EAASnQ,KAAKmQ,WAmCXlK,IAAIP,KAjCL1F,KAAKwV,QACO,GAAVtF,IACFA,EAAS,OAEG,GAAVC,IACFA,EAAS,QAIbjP,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAcqN,EACtBlO,EAAQsO,OACRtO,EAAQ+M,UAAUjO,KAAKkO,EAAGlO,KAAKmO,GAC/BjN,EAAQkN,MAAM8B,EAAQC,GACtBjP,EAAQ0M,OAzDG,oBAyDI5N,KAAKiQ,KAEhBjQ,KAAKqQ,QACPnP,EAAQ4B,UAAY9C,KAAKqQ,MACzBnP,EAAQwP,KAAK1Q,KAAKqV,SAGpBnU,EAAQsO,OAEJxP,KAAKuV,OACPrU,EAAQqU,KAAKvV,KAAKqV,QACdrV,KAAKwV,QACPtU,EAAQ0M,OArED,qBAqES5N,KAAKiQ,KACrB/O,EAAQkN,MAAM,EAAE8B,EAAQ,EAAEC,GAC1BjP,EAAQ+M,WAAWjO,KAAKkO,GAAIlO,KAAKmO,KAKvBnO,KAAKgR,YACZA,OAAOtL,GAAGpB,KAAKpD,EAASqI,GAG/BrI,EAAQwO,UAEJ1P,KAAK2T,cACPzS,EAAQ2S,YAAc7T,KAAK2T,YAC3BzS,EAAQ0S,UAAY5T,KAAK4T,UACzB1S,EAAQ2U,OAAO7V,KAAKqV,SAGtBnU,EAAQwO,eAtFoBqB,GCEb+E,cAEnBjX,WAAYF,eACJA,QAEDmC,MAAQtC,EAAKG,EAAOmC,YACpBE,OAASxC,EAAKG,EAAOqC,aACrBkN,EAAI1P,EAAKG,EAAOuP,QAChBC,EAAI3P,EAAKG,EAAOwP,QAEhBwF,YAAcnV,EAAKG,EAAOgV,kBAC1BC,UAAYpL,EAAOhK,EAAKG,EAAOiV,WAAY,QAC3CvL,MAAQG,EAAOhK,EAAKG,EAAO0J,QAAQ,mGAI1C/D,cAAKpD,EAASqI,MACRvJ,KAAKwB,WACFxB,KAAKc,aACHA,MAAQyI,EAAmB1I,GAE7Bb,KAAKgB,cACHA,OAASuI,EAAmBxI,QAEpByI,IAAXxJ,KAAKkO,SACFA,EAAI3E,EAAmB2E,QAEf1E,IAAXxJ,KAAKmO,SACFA,EAAI5E,EAAmB4E,GAG9BjN,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAc/B,KAAKoP,EAAI7F,EAAmB6F,EACjC,IAAbpP,KAAKiQ,IACHjQ,KAAKqI,MACPnH,EAAQ2J,UAAU7K,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKc,MAAOd,KAAKgB,SAEnDE,EAAQ4B,UAAY9C,KAAKqQ,MACzBnP,EAAQ6B,SAAS/C,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKc,MAAOd,KAAKgB,SAEhDhB,KAAK2T,cACLzS,EAAQuP,YACRvP,EAAQ0S,UAAY5T,KAAK4T,UACzB1S,EAAQ2S,YAAc7T,KAAK2T,YAC3BzS,EAAQ6U,KAAK/V,KAAKkO,EAAGlO,KAAKmO,EAAGnO,KAAKc,MAAOd,KAAKgB,QAC9CE,EAAQ2U,cAEP,KACD3G,EAAKlP,KAAKc,MAAQ,EAClBqO,EAAKnP,KAAKgB,OAAS,EACvBE,EAAQsO,OACRtO,EAAQ+M,UAAUjO,KAAKkO,EAAIgB,EAAIlP,KAAKmO,EAAIgB,GACxCjO,EAAQ0M,OAxDC,oBAwDM5N,KAAKiQ,KAChBjQ,KAAKqI,MACPnH,EAAQ2J,WAAWqE,GAAKC,EAAInP,KAAKc,MAAOd,KAAKgB,SAE7CE,EAAQ4B,UAAY9C,KAAKqQ,MACzBnP,EAAQ6B,UAAUmM,GAAKC,EAAInP,KAAKc,MAAOd,KAAKgB,SAE1ChB,KAAK2T,cACLzS,EAAQuP,YACRvP,EAAQ0S,UAAY5T,KAAK4T,UACzB1S,EAAQ2S,YAAc7T,KAAK2T,YAC3BzS,EAAQ6U,MAAM7G,GAAKC,EAAInP,KAAKc,MAAOd,KAAKgB,QACxCE,EAAQ2U,UAEZ3U,EAAQwO,eAlEkBM,GCJbgG,cACnBnX,WAAYF,OACNmM,EAAOtM,EAAKG,EAAOmM,MACrBmL,EAAgBxO,MAAMkE,QAAQb,GAAQA,EAAO,UAAIA,eAC7C1L,OAAOC,OAAO,GAAIV,EAAQ,CAC9B0T,MAAOqB,EACP1N,MAAOiQ,EAAc9O,OACrB2D,cAAO3C,UAAU8N,EAAc9N,IAC/B3G,iBAAU2G,SAAmC,MAAzB8N,EAAc9N,IAAkB3J,EAAKG,EAAO6C,QAAS2G,8FARzC8J,GCCjBiE,cACnBrX,WAAYF,eACJA,QACDqH,MAAQwC,EAAOhK,EAAKG,EAAOqH,OAAQ,SACnCmQ,MAAQ3N,EAAOhK,EAAKG,EAAOwX,OAAQ,QACnCC,MAAQ5N,EAAOhK,EAAKG,EAAOyX,OAAQ,QACnCC,MAAQ7N,EAAOhK,EAAKG,EAAO0X,OAAQ,QACnCzC,UAAYpV,EAAKG,EAAOiV,gBAEhBpK,IAAXxJ,KAAKkO,QACM1E,IAAXxJ,KAAKmO,GACLnO,KAAKc,OACRd,KAAKgB,QACLhB,KAAK4T,eAEGzJ,YAEAmM,aAAU9M,kGAInBW,qBACOmM,QAAUtW,KAAKc,MAAQ,EAAId,KAAKkO,OAChCqI,QAAUvW,KAAKgB,OAAS,EAAIhB,KAAKmO,OACjCqI,OAASnU,KAAKuC,IAAI5E,KAAKc,MAAOd,KAAKgB,aACnCyV,OAAS,QACTC,OAAS,QACTC,OAAS,QACTC,UAAY,QACZC,UAAY,QACZC,UAAY,QACZC,UAAY,QACZC,aAAe,QACfC,eAAiB,OACjBhR,IAAIP,EAAI,EAAGA,EAAI1F,KAAKgG,MAAON,SACzB+Q,OAAO/Q,GAAKrD,KAAKe,SAAWpD,KAAKc,MAAQd,KAAKc,MAAQ,OACtD4V,OAAOhR,GAAKrD,KAAKe,SAAWpD,KAAKgB,OAAShB,KAAKgB,OAAS,OACxD2V,OAAOjR,GAAKrD,KAAKe,SAAWpD,KAAKwW,oBAI1CU,kBAASxR,EAAGyR,EAAmBC,GACzBA,SACGJ,aAAatR,IAAK,WAErBwJ,EAAKlP,KAAKc,MAAQ,EAClBqO,EAAKnP,KAAKgB,OAAS,EACnBkN,EAAIlO,KAAKyW,OAAO/Q,GAAK1F,KAAKmW,MAAQgB,EACpChJ,EAAInO,KAAK0W,OAAOhR,GAAK1F,KAAKoW,MAAQe,EAClCE,EAAIrX,KAAK2W,OAAOjR,GAAK1F,KAAKqW,MAAQc,EAC7BjJ,GAAKgB,GACVhB,GAAKlO,KAAKc,MACVqN,EAAI9L,KAAKe,SAAWpD,KAAKgB,OAASmO,OAC7B6H,aAAatR,IAAK,OAElBwI,EAAIgB,GACThB,GAAKlO,KAAKc,MACVqN,EAAI9L,KAAKe,SAAWpD,KAAKgB,OAASmO,OAC7B6H,aAAatR,IAAK,OAGlByI,GAAKgB,GACVhB,GAAKnO,KAAKgB,OACVkN,EAAI7L,KAAKe,SAAWpD,KAAKc,MAAQoO,OAC5B8H,aAAatR,IAAK,OAElByI,EAAIgB,GACThB,GAAKnO,KAAKgB,OACVkN,EAAI7L,KAAKe,SAAWpD,KAAKc,MAAQoO,OAC5B8H,aAAatR,IAAK,OAGlB2R,GAAK,GACVA,GAAKrX,KAAKwW,OACVtI,EAAI7L,KAAKe,SAAWpD,KAAKc,MAAQoO,EACjCf,EAAI9L,KAAKe,SAAWpD,KAAKgB,OAASmO,OAC7B6H,aAAatR,IAAK,OAElB2R,EAAIrX,KAAKwW,QACda,GAAKrX,KAAKwW,OACVtI,EAAI7L,KAAKe,SAAWpD,KAAKc,MAAQoO,EACjCf,EAAI9L,KAAKe,SAAWpD,KAAKgB,OAASmO,OAC7B6H,aAAatR,IAAK,MAGrB4R,EAAWtX,KAAKsW,QAAWpI,EAAImJ,EAAKnI,EACpCqI,EAAWvX,KAAKuW,QAAWpI,EAAIkJ,EAAKlI,OACnC6H,aAAatR,GAChB1F,KAAKgX,aAAatR,IAClB4R,GAAYtX,KAAKkO,GACjBqJ,GAAYvX,KAAKmO,GACjBmJ,EAAWtX,KAAKkO,EAAIlO,KAAKc,OACzByW,EAAWvX,KAAKmO,EAAInO,KAAKgB,OACvBoW,QACGX,OAAO/Q,GAAKwI,OACZwI,OAAOhR,GAAKyI,OACZwI,OAAOjR,GAAK2R,OACZP,UAAUpR,GAAK4R,OACfP,UAAUrR,GAAK6R,SAEfX,UAAUlR,GAAK4R,OACfT,UAAUnR,GAAK6R,OAClBN,eAAevR,GAA0C,GAApC,EAAI1F,KAAK2W,OAAOjR,GAAK1F,KAAKwW,QAAc,gBAInE/K,iBAAQP,OACFsM,EAAMxL,YAAMP,kBAAQP,MACpBlL,KAAKwB,cAA4BgI,IAAjBxJ,KAAKsW,gBACnB5Q,EAAI1F,KAAKgG,MACNN,UACAwR,SAASxR,EAAGwF,EAAa,IAAI,GAC9BlL,KAAKgX,aAAatR,SACfwR,SAASxR,GAAI,GAAG,UAIpB8R,eAITlT,cAAKpD,EAASqI,MACRvJ,KAAKwB,QAAS,SACKgI,IAAjBxJ,KAAKsW,oBACFxV,MAAQd,KAAKc,OAASyI,EAAmB1I,OACzCG,OAAShB,KAAKgB,QAAUuI,EAAmBxI,OAC3CmN,OAAe1E,IAAXxJ,KAAKkO,EAAkB3E,EAAmB2E,EAAIlO,KAAKkO,OACvDC,OAAe3E,IAAXxJ,KAAKmO,EAAkB5E,EAAmB4E,EAAInO,KAAKmO,OAC3DyF,UAAY5T,KAAK4T,WAAcrK,EAAmBxI,EAAIwI,EAAmBgB,KAAQ,YAC7EJ,UAGPjJ,EAAQc,yBAA2BhC,KAAKoQ,UACxClP,EAAQa,YAAc/B,KAAKoP,EAAI7F,EAAmB6F,EAChC,GAAdpP,KAAKoW,OAA4B,GAAdpW,KAAKqW,OAAcrW,KAAKmW,MAAQ,EAAG,CACxDjV,EAAQ4B,UAAY9C,KAAKqQ,cACrB3K,EAAI1F,KAAKgG,MACNN,KACD1F,KAAKgX,aAAatR,IACpBxE,EAAQ6B,SACN/C,KAAK8W,UAAUpR,GACf1F,KAAK+W,UAAUrR,GAAK1F,KAAKiX,eAAevR,GAAK1F,KAAK4T,UAAY,EAC9D5T,KAAK4W,UAAUlR,GAAK1F,KAAK8W,UAAUpR,GACnC1F,KAAKiX,eAAevR,GAAK1F,KAAK4T,eAI/B,CACL1S,EAAQ2S,YAAc7T,KAAKqQ,cAEzB3K,EADE+R,EAAK,IAEAA,GAAI,KACXvW,EAAQuP,YACRvP,EAAQ0S,UAAY6D,EAAKzX,KAAK4T,UAC9BlO,EAAI1F,KAAKgG,MACFN,KACD1F,KAAKgX,aAAatR,IAAM1F,KAAKiX,eAAevR,KAAO+R,IACrDvW,EAAQwU,OAAO1V,KAAK4W,UAAUlR,GAAI1F,KAAK6W,UAAUnR,IACjDxE,EAAQwW,OAAO1X,KAAK8W,UAAUpR,GAAI1F,KAAK+W,UAAUrR,KAGrDxE,EAAQ2U,SACR3U,EAAQyP,mBAlKqBmF,GCgBrCnQ,2EAAqB,kCAAIgS,gBAAU7I,MACnC4E,2EAAoB,kCAAIkE,gBAAS9I,MAOnCnJ,EAAM6N,SAAWmE,EAAOnE,SACxB7N,EAAMqN,OAAS2E,EAAO3E,OACtBU,EAAKF,SAAWoE,EAAMpE,SACtBE,EAAKV,OAAS4E,EAAM5E,OAEpB,MAAe,mFAnBW,kCAAI6E,gBAAa/I,sFACnB,kCAAIgJ,gBAAWhJ,sFACf,kCAAIiJ,gBAAWjJ,uFACd,kCAAIkJ,gBAAYlJ,wFACf,kCAAImJ,gBAAanJ,qFACpB,kCAAIoJ,gBAAUpJ,YAqBnCnJ,OACA+N,oFAnBwB,kCAAIyE,gBAAarJ,oFACrB,kCAAIsJ,gBAAStJ,oFACb,kCAAIuJ,gBAASvJ,wFACT,kCAAIwJ,gBAAaxJ,yFAChB,kCAAIyJ,gBAAczJ,OCxBvC0J,EACJ3Z,SAAY4Z,EAAMC,EAAUC,OAQrB1S,IAAIP,UAPJ+S,KAAOA,OAEPC,SAAWlQ,EAAOkQ,EAAU,QAE5BpI,UAAY7I,MAAMkE,QAAQgN,KAASlR,MAAMkE,QAAQgN,EAAI,IAAM,CAACA,GAAQA,GAAO,QAE3EC,kBAAoB,GACX5Y,KAAKsQ,eACZsI,kBAAkBlT,GAAK,UAChB,cACGlH,EAAKwB,KAAK0Y,iBACf,KACRD,KAAmCja,EAAZ,iBAATia,EAA0BA,EAAK/S,GAAW+S,aAC5B,iBAATA,IAAuC,IAAlBja,EAAKia,EAAK/S,MAAiC,IAAflH,EAAKia,IACzEI,QAAsCra,EAAZ,iBAATia,EAA0BA,EAAK/S,GAAW+S,gBAC5B,iBAATA,IAAuC,IAAlBja,EAAKia,EAAK/S,MAAiC,IAAflH,EAAKia,UAEzEK,UAAUpT,QAGZqT,eAAiB,OACjBC,WAAY,GAGnB9S,YAAAA,eAAM+S,OACChT,IAAIP,oBADQ,GACH1F,KAAKsQ,UAAW,KACtBsI,EAAoB5Y,KAAK4Y,kBAAkBlT,GACjDkT,EAAkB7F,SAAW,EAC7B6F,EAAkBK,WAAaA,EAC/BL,EAAkBH,KAAOG,EAAkBC,QAC3CD,EAAkBpX,QAAUoX,EAAkBM,gBACzCJ,UAAUpT,KAInBoT,YAAAA,mBAAUpT,GAEN1F,KAAK4Y,kBAAkBlT,GAAGqN,SAAW/S,KAAKsQ,UAAU5K,GAAGyB,QACM,OAA1DnH,KAAKsQ,UAAU5K,GAAG1F,KAAK4Y,kBAAkBlT,GAAGqN,gBAE1C6F,kBAAkBlT,GAAGyT,OAASnZ,KAAKsQ,UAAU5K,GAAG1F,KAAK4Y,kBAAkBlT,GAAGqN,UAEzB,mBAA3C/S,KAAK4Y,kBAAkBlT,GAAGyT,OAAOjT,YACrC0S,kBAAkBlT,GAAGyT,OAAOjT,QAIiB,mBAAzClG,KAAK4Y,kBAAkBlT,GAAGyT,OAAO9V,WACrCuV,kBAAkBlT,GAAGyT,OAAS,KAAMnZ,KAAK4Y,kBAAkBlT,GAAGyT,eAKhEP,kBAAkBlT,GAAGyT,OAAS,MAIvC5I,YAAAA,+BAAsBC,OAChB9K,MAECA,KAAK8K,EACiC,iBAA9BxQ,KAAK4Y,kBAAkBlT,KACR,OAApB8K,EAAI9K,GAAGqN,gBACJ6F,kBAAkBlT,GAAGqN,SAAWvC,EAAI9K,GAAGqN,UAE1B,OAAhBvC,EAAI9K,GAAG+S,YACJG,kBAAkBlT,GAAG+S,KAAOjI,EAAI9K,GAAG+S,UACnCG,kBAAkBlT,GAAGlE,WAA4B,IAAhBgP,EAAI9K,GAAG+S,OAErB,OAAtBjI,EAAI9K,GAAGuT,kBACJL,kBAAkBlT,GAAGuT,WAAazI,EAAI9K,GAAGuT,iBAE3CH,UAAUpT,QAIdA,KAAK1F,KAAKsQ,UAC4B,iBAA9BtQ,KAAK4Y,kBAAkBlT,IAAmB1F,KAAK4Y,kBAAkBlT,GAAGyT,kBAAkBX,QAC1FI,kBAAkBlT,GAAGyT,OAAO5I,sBAAsBC,IAM7DnN,YAAAA,aAAI2N,EAAQoI,EAAMC,OAEZnO,EAAakO,IAEA,IACH,IACM,IAEP,IACiB,SAKzBnT,IAAIP,KAJJ2T,IACHnO,EAAakO,EAAOpZ,KAAK+Y,oBACpBA,eAAiBK,GAEVpZ,KAAKsQ,kBAGyB,OADdtQ,KAAK4Y,kBAAkBlT,IACrBlE,aACjB0J,EAE8B,OAArCoO,EAA0BH,iBAGjB,UAGPI,EAAW,OACNA,EAAW,MAEhBD,EAA0BL,YAAcM,EAEpCD,EAA0BL,YAAc,EAAG,KAI5B,KAFjBM,EAAWD,EAA0BH,OAAO9V,IAAI2N,EAAQsI,EAA0BL,iBAGrE,GAETM,IAAaf,EAASgB,kCACjBtO,EACEqO,IAAaf,EAASiB,mBAE/BH,EAA0BL,WAAa,OAElCH,UAAUpT,GAEf4T,EAA0BH,OAAS,OAExB,IACW,IAAbI,GAAsBA,GAAY,IAE3CD,EAA0BvG,WAEtBuG,EAA0BvG,UAAY/S,KAAKsQ,UAAU5K,GAAGyB,UACnB,IAAnCmS,EAA0Bb,MAC5Ba,EAA0Bb,OAExBa,EAA0Bb,KAC5Ba,EAA0BvG,SAAWuG,EAA0BvG,SAAW/S,KAAKsQ,UAAU5K,GAAGyB,OAG5FmS,EAA0B9X,SAAU,GAIxC8X,EAA0BL,WAAa,OAElCH,UAAUpT,GACV4T,EAA0B9X,UAC7B8X,EAA0BH,OAAS,KACnCG,EAA0B9X,SAAU,GAEG,OAArC8X,EAA0BH,eAEjB,WAKJ,kBAWnBO,EAAkB,EAAG,IAEnBC,IAAiBD,SAEZxO,EAGL8F,EAAOxP,SAAWwX,IAAcU,GAElC1I,EAAOxP,SAAU,OACZwX,WAAY,GAEVhZ,KAAKgZ,WAAaA,IAAcU,SAClCV,WAAY,EACjBhI,EAAOxP,SAAU,UAGb,GAIZgX,EAASgB,2BAA6B,gBACtChB,EAASiB,kBAAoB,OCzM7B,IAAMG,EACJ/a,SAAY4L,kBAKR,kCAJO,uCACK,wCACUjB,0CACXA,QAGRqQ,OAASA,OAETC,YAAcA,OAEdC,WAAaA,OAEbC,iBAAmBC,OACnBC,aAAela,KAAK6Z,OAAOI,QAC3BE,gCAA6B3Q,GAGpC4Q,YAAAA,kBAASC,EAAMlb,iBACTkb,IAASra,KAAKga,iBAAkB,CAClCM,QAAQC,IAAIF,QACPF,2BAA6BE,MAC5BG,EAAe,GAAEH,EAAKI,OAAO,GAAGC,cAAgBL,EAAKzL,MAAM,GAM3D+L,EAL0B,CAC3B3a,2BAA0Bwa,EAC1Bxa,gCACEwa,GAEwCI,cAC7CP,UAAQra,EAAK8Z,YAAYO,KAEvBM,QACGX,iBAAmBha,KAAKma,gCACxBD,aAAela,KAAK8Z,YAAYa,QAChCT,cAAgBla,KAAKka,aAAahU,OAASlG,KAAKka,aAAahU,eAE7D8T,iBAAmBha,KAAKma,gCACxBD,aAAela,KAAK6Z,OAAO7Z,KAAKga,uBAChCE,cAAgBla,KAAKka,aAAahU,OAASlG,KAAKka,aAAahU,aAC7DiU,gCAA6B3Q,KAOxCnG,YAAAA,aAAI2N,EAAQoI,EAAMC,OACZwB,EAAWzB,EACX0B,EAAezB,SACfrZ,KAAKka,eACPW,EAAW7a,KAAKka,aAAa7W,IAAI2N,EAAQ6J,EAAUC,MACpC,IAEbD,GAAY,IAAM7a,KAAKka,gBACrBla,KAAKma,iCACFH,iBAAmBha,KAAKma,gCACxBD,aAAela,KAAK6Z,OAAO7Z,KAAKga,uBAChCE,cAAgBla,KAAKka,aAAahU,OAASlG,KAAKka,aAAahU,aAC7DiU,gCAA6B3Q,EAClCqR,EAAW7a,KAAKka,aAAa7W,IAAI2N,EAAQ6J,EAAUC,SAE9CZ,kBAAe1Q,IAGhB,GC9DZ,IAAqBoH,EAEjB/R,SAAYqJ,EAAU6S,QACf7S,SAAWA,OACX6S,SAAWvS,EAAOhK,EAAKuc,QAAWvR,QAClCwR,aAAc,GCHzB,SAASC,EAAYtQ,EAAUuQ,UACtBA,EAAKxT,KAAOiD,EAAWuQ,EAAK3W,MAGrC,SAAS4W,EAAWxQ,EAAUuQ,WAG1BxV,EAFE0V,EAAO,UAAIF,EAAKG,QAClBC,EAAaF,EAAKjU,OAGbmU,EAAa,OAClBA,IACK5V,EAAI,EAAGA,EAAI4V,EAAY5V,IAC1B0V,EAAK1V,GAAK0V,EAAK1V,GAAKiF,GAAYyQ,EAAK1V,EAAI,GAAK0V,EAAK1V,WAGhD0V,EAAK,GAGd,SAASG,EAAU5Q,EAAUuQ,EAAMlK,UAC1BkK,EAAKM,UAAUC,IAAIP,EAAKQ,QAAS/Q,GAAUgR,SAGpD,SAASC,EAASjR,EAAUuQ,EAAMlK,UACzB6K,EAASC,MAAMZ,EAAKa,SAAUb,EAAKc,OAAQrR,GDjBhDzE,YAAAA,sBACO8U,aAAc,GAGrB3X,YAAAA,aAAI2N,EAAQoI,OACNrQ,cAEkBS,IAAlBxJ,KAAK+a,eACF7S,SAAS8I,EAAQ3O,KAAKuC,IAAIwU,EAAMpZ,KAAK+a,WAAY/a,KAAKgb,kBACtDA,aAAc,EACZ5B,EAAOpZ,KAAK+a,WAEnBhS,EAAS/I,KAAKkI,SAAS8I,EAAQoI,GAAOpZ,KAAKgb,kBACtCA,aAAc,EACZjS,ICOf,IAAqBkT,EAEnBpd,SAAYqd,EAAcnB,EAAUoB,OAG7BlW,IAAIuB,UAFJwT,aAAc,OACdkB,aAAe,GACNA,EAAc,KACtBzT,EAAQyT,EAAa1U,GACvB4U,EAAgB,UAAN5U,EACV6U,EAAe,SAAN7U,EACTf,EAA8B,mBAAVgC,KACR2T,GAAW3U,MAAMkE,QAAQlD,QAClCyT,aAAaI,KAAK,MACf9U,KACF+U,EAAW9T,EAAMA,EAAMtB,OAAS,GAAK3I,EAAKiK,EAAO,EAAG,IACxD+T,SAAQD,GAAW9T,UACV2T,SACDC,EACR5V,aAAYA,GAAagC,EACzBgU,cAAeL,EAAUb,EAAYc,EAAST,EAAWW,EAAWpB,EAAaF,SAGhFF,SAAWvS,EAAOhK,EAAKuc,GAAW,QAClCoB,KAAO3T,EAAO2T,WAAOO,UAAIA,KAGhCxW,YAAAA,sBACO8U,aAAc,GAGrB7Q,YAAAA,cAAK6G,EAAQoI,eAET8B,EADE9S,EAAIpI,KAAKkc,aAAa/U,OAEnBiB,QACEpI,KAAKkc,aAAa9T,IAChB3B,cACFiB,KAAOsJ,EAAOkK,EAAKb,MACxBa,EAAKyB,GAAKzB,EAAKzU,WAAWyU,EAAKxT,MAC3BwT,EAAKkB,WACFZ,UAAYxG,EAAMkG,EAAKxT,QACvBgU,QAAU1G,EAAMkG,EAAKyB,IAC1BzB,EAAKuB,cAAgBlB,GACZL,EAAKmB,UACiBR,EAASe,eAAef,EAASgB,YAAY3B,EAAKxT,MAAOmU,EAASgB,YAAY3B,EAAKyB,KAAjHzB,EAAKa,cAAUb,EAAKc,YACrBd,EAAKuB,cAAgBb,GAEdnU,MAAMkE,QAAQuP,EAAKyB,KAC1BzB,EAAKG,OAAS,CAACrK,EAAOkK,EAAKb,cAAUa,EAAKyB,IAC1CzB,EAAKuB,cAAgBtB,MAEhB5W,MAAQ2W,EAAKyB,GAAKzB,EAAKxT,KAC5BwT,EAAKuB,cAAgBxB,IAEdC,EAAKkB,SACdlB,EAAKM,UAAYxG,EAAMhE,EAAOkK,EAAKb,SAC9BqB,QAAU1G,EAAMkG,EAAKyB,KACjBzB,EAAKmB,UACiBR,EAASe,eAAef,EAASgB,YAAY7L,EAAOkK,EAAKb,OAAQwB,EAASgB,YAAY3B,EAAKyB,KAAzHzB,EAAKa,cAAUb,EAAKc,aACZd,EAAKsB,OACdtB,EAAKG,OAAS,CAACrK,EAAOkK,EAAKb,cAAUa,EAAKsB,WAErC9U,KAAOsJ,EAAOkK,EAAKb,QACnB9V,MAAQ2W,EAAKyB,GAAKzB,EAAKxT,OAKlCrE,YAAAA,aAAI2N,EAAQoI,MACLpZ,KAAKgb,mBACHA,aAAc,OACd7Q,KAAK6G,EAAQoI,IAIhBpZ,KAAK+a,UAAY3B,UAEjB8B,EADE9S,EAAIpI,KAAKkc,aAAa/U,OAInBiB,UACEpI,KAAKkc,aAAa9T,IACbiS,MAAQa,EAAKyB,gBAKzBzB,EAFE9S,EAAIpI,KAAKkc,aAAa/U,SACbnH,KAAKmc,KAAK/C,EAAOpZ,KAAK+a,UAG5B3S,KAEL4I,KADOhR,KAAKkc,aAAa9T,IACbiS,MAAQa,EAAKuB,cAAc9R,EAAUuQ,EAAMlK,UAGpDoI,EAAOpZ,KAAK+a,UC1HR,IAAM+B,EAEpBje,aAGAwE,YAAAA,aAAI2N,EAAQoI,UACJ2D,EAAQvD,4BCNF,IAAMwD,EAEjBne,aAGAwE,YAAAA,aAAI2N,EAAQoI,UACRpI,EAAOxP,SAAU,EACVub,EAAQvD,4BCLvB,IAAqB7T,EAEnB9G,SAAYiU,EAAOmK,QACZjC,aAAc,OACdlI,MAAQtU,EAAKsU,QACbmK,sBAAwBzU,EAAOhK,EAAKye,GAAwB,GAC7DxV,MAAMkE,QAAQ3L,KAAK8S,YAChB9M,MAAQhG,KAAK8S,MAAM3L,aAEnB2L,MAAQ,CAAC9S,KAAK8S,YACd9M,MAAQ,QAEV+U,SAAW/a,KAAKgG,MAAQhG,KAAKid,uBAGpC/W,YAAAA,sBACO8U,aAAc,GAGrB3X,YAAAA,aAAI2N,EAAQoI,MACLpZ,KAAKgb,mBACHA,aAAc,OACdkC,SAAW,GAId9D,GAAQpZ,KAAK+a,WACRjI,MAAQzN,EAAagB,SAASrG,KAAK8S,MAAM9S,KAAK8S,MAAM3L,OAAS,QAC/D,KACDgW,EAAe9a,KAAKmJ,MAAM4N,EAAOpZ,KAAKid,uBACtCE,IAAiBnd,KAAKkd,eACnBA,QAAUC,EACfnM,EAAO8B,MAAQzN,EAAagB,SAASrG,KAAK8S,MAAM9S,KAAKkd,kBAGlD9D,EAAOpZ,KAAK+a,UCpCvB,IAAqBqC,EAEjBve,SAAYwe,EAAaC,EAAeL,QAC/BjC,aAAc,OACdqC,YAAc7e,EAAK6e,QACnBC,cAAgB9U,EAAOhK,EAAK8e,IAAgB,QAC5CL,sBAAwBzU,EAAOhK,EAAKye,GAAwB,GAC7DxV,MAAMkE,QAAQ3L,KAAKqd,kBACdrX,MAAQhG,KAAKqd,YAAYlW,aAEzBkW,YAAc,CAACrd,KAAKqd,kBACpBrX,MAAQ,QAEZ+U,SAAW/a,KAAKgG,MAAQhG,KAAKid,uBAGtC5Z,YAAAA,aAAI2N,EAAQoI,OACJ+D,SAEAA,EADA/D,GAAQpZ,KAAK+a,SACE/a,KAAKqd,YAAYrd,KAAKqd,YAAYlW,OAAS,GAE3C9E,KAAKmJ,MAAM4N,EAAOpZ,KAAKid,uBAEtCjd,KAAKsd,gBACErK,OAASjC,EAAOmC,WAAagK,IAE7BjK,OAASlC,EAAOoC,YAAc+J,EAGlC/D,EAAOpZ,KAAK+a,UC7B3BtH,IAEqB8J,cACnB1e,WAAYqP,EAAGC,EAAGqP,EAAOrB,eACjB,GACJjO,IACAC,GACC,EAAGgO,QACDqB,MAAQhf,EAAKgf,IAAU,kGAG9BrT,cAAK6G,EAAQoI,MACO,GAAdpZ,KAAKwd,OAAexd,KAAKyd,UAAYzM,EAAO9C,GAAKlO,KAAK0d,UAAY1M,EAAO7C,OACtE4M,SAAW,MAEb,KACC7M,EAAIlO,KAAKkc,aAAa,GACxB/N,EAAInO,KAAKkc,aAAa,GAExBhO,EAAExG,KAAOsJ,EAAO9C,EAChBC,EAAEzG,KAAOsJ,EAAO7C,EAEhBD,EAAE3J,MAAQ2J,EAAEyO,GAAKzO,EAAExG,KACnByG,EAAE5J,MAAQ4J,EAAEwO,GAAKxO,EAAEzG,SAEbiW,EAAatb,KAAKub,KAAK1P,EAAE3J,MAAQ2J,EAAE3J,MAAQ4J,EAAE5J,MAAQ4J,EAAE5J,YAExDwW,SA3Bc,GA2BH4C,EAAgC3d,KAAKwd,kBAGjDrT,eAAK6G,EAAQoI,OA5BW6C,GCFb4B,EACnBhf,SAAYif,EAAWC,QAChBD,UAAYA,OACZC,MAAQvV,EAAOhK,EAAKuf,GAAQ,IAGnC1a,YAAAA,aAAI2N,EAAQoI,MACNpZ,KAAK+d,OAAS,SACT3E,MAGHsD,EAAI1c,KAAK8d,UAAUza,IAAI2N,EAAQoI,UAC/BsD,EAAI,QACDqB,QAEArB,GCfb,IAAqBsB,EAEnBnf,SAAYwb,EAAMU,EAAUtC,QACrBsC,SAAWvS,EAAOhK,EAAKuc,GAAU,QACjCV,KAAO7b,EAAK6b,QACZ5B,KAAOja,EAAKgK,EAAOiQ,EAAM,KAGhCpV,YAAAA,aAAI2N,EAAQoI,gBAENA,GAAQpZ,KAAK+a,YAERxK,0BAAsB,IAC1BvQ,KAAKqa,MAAO,UACD,EACVpB,WAAaG,EAAOpZ,KAAK+a,SACzBtC,KAAMzY,KAAKyY,UAIVW,EAAOpZ,KAAK+a,UCrBvB,IAAqBkD,EAEnBpf,SAAYqf,EAAWnD,QAChBC,aAAc,OACdD,SAAWvc,EAAKuc,QAChBoD,UAAY3f,EAAK0f,QACjBE,cAAgBpe,KAAKme,UAAY,GAGxCjY,YAAAA,sBACO8U,aAAc,GAGrB3X,YAAAA,aAAI2N,EAAQoI,UACLpZ,KAAKgb,mBACHA,aAAc,OACd9M,EAAI8C,EAAO9C,OACXC,EAAI6C,EAAO7C,GAIdiL,GAAQpZ,KAAK+a,UAEf/J,EAAO9C,EAAIlO,KAAKkO,EAChB8C,EAAO7C,EAAInO,KAAKmO,MAGTD,EAAIlO,KAAKkO,EAAI7L,KAAKe,SAAWpD,KAAKme,UAAYne,KAAKoe,gBACnDjQ,EAAInO,KAAKmO,EAAI9L,KAAKe,SAAWpD,KAAKme,UAAYne,KAAKoe,eAErDhF,EAAOpZ,KAAK+a,UChCR,IAAMsD,EAEjBxf,gBACSyf,UAAW,GAGpBjb,YAAAA,aAAI2N,EAAQoI,YACD5X,QAAUwP,EAAOxP,SAAWxB,KAAKse,cACnCA,UAAW,EACT,GCPA,IAAMxB,EAEpBje,aAGAwE,YAAAA,aAAI2N,EAAQoI,UACJmF,EAAU9E,mBCNJ,IAAM+E,EAEjB3f,SAAYkc,QACHA,SAAWvc,EAAKuc,IAGzB1X,YAAAA,aAAI2N,EAAQoI,UAEDpZ,KAAK+a,SAAW3B,EAAOpZ,KAAK+a,UAAY,GCRxC,IAAM0D,EAEnB5f,SAAYkc,QACLA,SAAWvc,EAAKuc,IAGvB1X,YAAAA,aAAI2N,EAAQoI,YAEH5X,QAAW4X,GAAQpZ,KAAK+a,SACxB3B,EAAOpZ,KAAK+a,UCIvBtH,MAgBe,mFAfW,kCAAIoE,gBAAa/I,wFACjB,kCAAI4P,gBAAa5P,mFACtB,kCAAI6P,gBAAQ7P,2FACJ,kCAAI8P,gBAAgB9P,qFAC1B,kCAAI6I,gBAAU7I,0FACT,kCAAI+P,gBAAe/P,oFACzB,kCAAIgQ,gBAAShQ,oFACb,kCAAIiQ,gBAASjQ,oFACb,kCAAIkQ,gBAASlQ,qFACZ,kCAAImQ,gBAAUnQ,wFACX,kCAAIoQ,gBAAapQ,oFACrB,kCAAIqQ,gBAASrQ,oFACb,kCAAIsQ,gBAAStQ,4FACL,kCAAIuQ,gBAAiBvQ,OCpB/ClQ,2EAAsB,kCAAI0gB,gBAAWxQ,MACvC0J,2EAAwB,kCAAI+G,gBAAazQ,MACzC8K,4EAAqB,kCAAI4F,gBAAU1Q"}