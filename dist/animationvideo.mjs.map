{"version":3,"file":"animationvideo.mjs","sources":["../func/calc.mjs","../Engine.mjs","../ImageManager.mjs","../Layer.mjs","../LayerManager.mjs","../func/ifnull.mjs","../Scenes/Default.mjs","../Scenes/Audio.mjs","../func/transform.mjs","../Scenes/Norm.mjs","../Scenes/NormAudio.mjs","../Scenes/NormCamera.mjs","../Scenes.mjs","../Animations/Wait.mjs","../Animations/Sequence.mjs","../Sprites/Circle.mjs","../Sprites/Callback.mjs","../Sprites/Group.mjs","../Sprites/Canvas.mjs","../Sprites/Emitter.mjs","../Sprites/FastBlur.mjs","../Sprites/Image.mjs","../Sprites/Text.mjs","../Sprites/Particle.mjs","../Sprites/Path.mjs","../Sprites/Rect.mjs","../Sprites/Scroller.mjs","../Sprites/StackBlur.mjs","../Sprites/StackBlurCanvas.mjs","../Sprites/StarField.mjs","../Sprites.mjs","../Animations/Callback.mjs","../Animations/ChangeTo.mjs","../Animations/End.mjs","../Animations/EndDisabled.mjs","../Animations/Forever.mjs","../Animations/If.mjs","../Animations/Image.mjs","../Animations/ImageFrame.mjs","../Animations/Loop.mjs","../Animations/Move.mjs","../Animations/Remove.mjs","../Animations/Once.mjs","../Animations/Shake.mjs","../Animations/ShowOnce.mjs","../Animations/State.mjs","../Animations/Stop.mjs","../Animations/StopDisabled.mjs","../Animations/WaitDisabled.mjs","../Animations.mjs","../animationvideo.mjs"],"sourcesContent":["export default function calc(c, ...params) {\n\treturn typeof(c) === \"function\" ? c.apply(null,params) : c;\n}","import calc from \"./func/calc.mjs\";\n\nclass Engine {\n  constructor(canvasOrOptions) {\n    let givenOptions = canvasOrOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if (canvasOrOptions.getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions\n      };\n    } else if (!canvasOrOptions.canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options = Object.assign(\n      {},\n      /* undefined is falsy - saves a few bytes\n      {\n        scene: null,\n        canvas: null,\n        autoSize: false,\n        clickToPlayAudio: false,\n        reduceFramerate: false\n      }, */\n      givenOptions\n    );\n\n    this._output = {\n      canvas: null,\n      context: null,\n      width: 0,\n      height: 0,\n      ratio: 1\n    };\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    this._newScene = null;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._timePassed = 0;\n    this._recalculateCanvas = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = null;\n\n    // data about the output canvas\n    this._output.canvas = options.canvas;\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 8,\n        scaleFactor: 1.1,\n        referenceWidth: () => this._output.canvas.clientWidth,\n        referenceHeight: () => this._output.canvas.clientHeight,\n        currentScale: 1,\n        waitTime: 800,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        offsetTimeTarget: 1000 / 60,\n        offsetTimeDelta: 3,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        window.addEventListener(\n          \"resize\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n        window.addEventListener(\n          \"orientationchange\",\n          this.recalculateCanvas.bind(this),\n          false\n        );\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        document.addEventListener(\n          \"visibilitychange\",\n          this.handleVisibilityChange.bind(this),\n          false\n        );\n      }\n      this.recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas.width;\n      this._output.height = this._output.canvas.height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.context = options.canvas.getContext(\"2d\");\n\n    if (options.clickToPlayAudio) {\n      options.canvas.addEventListener(\n        \"click\",\n        this.playAudioOfScene.bind(this),\n        false\n      );\n    }\n\n    this._reduceFramerate = options.reduceFramerate;\n    // not needed because undefined is falsy\n    // this._isOddFrame = true\n\n    this.switchScene(options.scene);\n  }\n\n  handleVisibilityChange() {\n    this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (this._isSceneInitialized && this._scene && this._scene.audioElement) {\n      this._scene.audioElement.play();\n    }\n  }\n\n  _normalizeContext(ctx) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc(this._autoSize.referenceWidth);\n      const height = calc(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.width = Math.round(\n        width / this._autoSize.currentScale\n      );\n      this._output.canvas.height = Math.round(\n        height / this._autoSize.currentScale\n      );\n      if (this._autoSize.setCanvasStyle) {\n        this._output.canvas.style.width = `${width}px`;\n        this._output.canvas.style.height = `${height}px`;\n      }\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas.width;\n    this._output.height = this._output.canvas.height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n    return this;\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize(this._output);\n    }\n    return this;\n  }\n\n  switchScene(scene) {\n    if (scene) {\n      this._newScene = scene;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n  run(initParameter) {\n    initParameter = initParameter || {};\n\n    function mainLoop(timestamp) {\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        mainLoop.bind(this)\n      );\n\n      if (\n        this._recalculateCanvas &&\n        !(this._reduceFramerate && this._isOddFrame)\n      ) {\n        this.recalculateCanvas();\n        this._recalculateCanvas = false;\n      }\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n      }\n\n      if (this._newScene !== null) {\n        let parameterForNewScene = this._scene\n          ? this._scene.destroy(this._output)\n          : initParameter;\n        if (parameterForNewScene) {\n          this._newScene.callInit(this._output, parameterForNewScene, this);\n          this._scene = this._newScene;\n          this._newScene = null;\n          this._isSceneInitialized = false;\n        }\n      }\n\n      if (this._scene && this._output.canvas.width) {\n        if (this._reduceFramerate) {\n          this._isOddFrame = !this._isOddFrame;\n        }\n        if (!this._reduceFramerate || this._isOddFrame) {\n          let now = this._scene.currentTime();\n\n          // modify time by scene\n          // first set a min/max\n          this._timePassed = this._scene.clampTime(now - this._lastTimestamp);\n          // then maybe shift to fit a framerate\n          const shiftTime = this._scene.shiftTime(this._timePassed);\n          this._timePassed = this._timePassed + shiftTime;\n          this._lastTimestamp = now + shiftTime;\n\n          this._normalizeContext(this._output.context);\n          if (this._isSceneInitialized) {\n            if (this._timePassed !== 0) {\n              const nowAutoSize = this._now();\n              this._scene.move(this._output, this._timePassed);\n\n              // if timepassed is negativ scene will do a reset. timepassed have to be the full new time\n              if (this._timePassed < 0) {\n                this._timePassed = this._scene.totalTimePassed;\n              }\n\n              this._scene.draw(this._output);\n\n              if (this._autoSize && this._autoSize.enabled) {\n                const deltaTimestamp =\n                  timestamp - this._realLastTimestamp;\n\n                if (\n                  this._autoSize.currentWaitedTime < this._autoSize.waitTime\n                ) {\n                  this._autoSize.currentWaitedTime += deltaTimestamp;\n                } else {\n                  const targetTime =\n                    this._autoSize.offsetTimeTarget *\n                    (this._reduceFramerate ? 2 : 1);\n                  const deltaFrame = this._now() - nowAutoSize;\n                  const delta =\n                    (Math.abs(deltaTimestamp - targetTime) > Math.abs(deltaFrame - targetTime)\n                      ? deltaTimestamp\n                      : deltaFrame) - targetTime;\n                  if (Math.abs(delta) <= this._autoSize.offsetTimeDelta) {\n                    this._autoSize.currentOffsetTime =\n                      this._autoSize.currentOffsetTime >= 0\n                        ? Math.max(\n                            0,\n                            this._autoSize.currentOffsetTime -\n                              this._autoSize.offsetTimeDelta\n                          )\n                        : Math.min(\n                            0,\n                            this._autoSize.currentOffsetTime +\n                              this._autoSize.offsetTimeDelta\n                          );\n                  } else {\n                    if (\n                      delta < 0 &&\n                      this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime <=\n                        -this._autoSize.offsetTimeLimitDown\n                      ) {\n                        this._autoSize.currentScale = Math.max(\n                          this._autoSize.scaleLimitMin,\n                          this._autoSize.currentScale /\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvas = true;\n                      }\n                    } else if (\n                      delta > 0 &&\n                      this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                    ) {\n                      this._autoSize.currentOffsetTime += delta;\n                      if (\n                        this._autoSize.currentOffsetTime >=\n                        this._autoSize.offsetTimeLimitUp\n                      ) {\n                        this._autoSize.currentScale = Math.min(\n                          this._autoSize.scaleLimitMax,\n                          this._autoSize.currentScale *\n                            this._autoSize.scaleFactor\n                        );\n                        this._recalculateCanvas = true;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            this._isSceneInitialized = this._scene.callLoading(this._output);\n            if (this._isSceneInitialized) {\n              this._scene.reset(this._output);\n              if (this._autoSize) {\n                this._autoSize.currentWaitedTime = 0;\n              }\n            }\n          }\n        }\n      }\n      this._realLastTimestamp = timestamp;\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  destroy() {\n    this._referenceRequestAnimationFrame &&\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    this._referenceRequestAnimationFrame = null;\n    this._scene && this._scene.destroy(this._output);\n    window.removeEventListener(\n      \"resize\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    window.removeEventListener(\n      \"orientationchange\",\n      this.recalculateCanvas.bind(this),\n      false\n    );\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange.bind(this),\n      false\n    );\n    this._output.canvas.removeEventListener(\n      \"click\",\n      this.playAudioOfScene.bind(this),\n      false\n    );\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n\n  static add(Images, Callbacks) {\n    const self = this || ImageManager;\n    for (let i in Images) {\n      if (!self.Images[i]) {\n        self.Images[i] = new window.Image();\n        self.Images[i].onload = function () {\n          self.loaded++;\n          if (Callbacks && typeof(Callbacks) === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n            Callbacks[i](i, self.Images[i]);\n          }\n          if (self.resolve && self.isLoaded()) {\n            self.resolve();\n            self.resolve = null;\n          }\n        };\n        if (Images[i].substr(0,4) === '<svg') {\n          const  DOMURL = window.URL || window.webkitURL || window;\n          const svg = new window.Blob([Images[i]], {type: 'image/svg+xml'});\n          self.Images[i].src = DOMURL.createObjectURL(svg);\n        }else {\n          self.Images[i].src = Images[i];\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof(Callbacks[i]) === \"function\") {\n          Callbacks[i](i, self.Images[i]);\n        }\n      }\n    }\n    if (Callbacks && typeof(Callbacks) === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self.resolve && self.isLoaded()) {\n      self.resolve();\n      self.resolve = null;\n    }\nreturn self;\n  }\n\n  static reset() {\n    const self = this || ImageManager;\n    self.Images = {};\n    self.count = 0;\n    self.loaded = 0;\n    return self;\n  }\n\n  static getLoaded() {\n    return (this || ImageManager).loaded;\n  }\n\n  static getCount() {\n    return (this || ImageManager).count;\n  }\n\n  static isLoaded() {\n    const self = this || ImageManager;\n    return (self.loaded === self.count);\n  }\n\n  static getImage(nameOrImage) {\n    return typeof nameOrImage === 'object' ? nameOrImage : (this || ImageManager).Images[nameOrImage];\n  }\n\n  static isLoadedPromise() {\n    const self = this || ImageManager;\n    return self.isLoaded() ? true : new Promise((resolve, reject) => {\n      self.resolve = resolve\n    });\n  }\n}\n\nImageManager.Images = {};\nImageManager.count = 0;\nImageManager.loaded = 0;\n\nexport default ImageManager;\n","class Layer {\n  constructor() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n\n  addElement(element) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    this.layer[id] = element;\n    this.isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this.nextFree + 1;\n    while (nextFree !== len && layer[nextFree]) {\n      nextFree++;\n    }\n    this.nextFree = nextFree;\n    if (this.start > id) {\n      this.start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements) {\n    let len = this.layer.length;\n    let id = this.nextFree;\n    if (len === id) {\n      this.layer = this.layer.concat(arrayOfElements);\n      this.nextFree = this.layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this.isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId) {\n    return this.layer[elementId];\n  }\n\n  getIdByElement(element) {\n    return this.layer.indexOf(element);\n  }\n\n  deleteByElement(element) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId) {\n    let len = this.layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this.layer[elementId] = null;\n      while (len && !this.layer[len - 1]) {\n        len--;\n      }\n      this.layer.length = len;\n      this.isFunction.length = len;\n      this.nextFree = Math.min(this.nextFree, len);\n      this.start = Math.min(this.start, len);\n    } else {\n      this.layer[elementId] = null;\n      this.nextFree = Math.min(this.nextFree, elementId);\n      if (this.start === elementId) {\n        this.start = elementId + 1;\n      }\n    }\n  }\n\n  forEach(callback) {\n    let index, element;\n    const l = this.layer.length;\n    for (index = this.start; index < l; index++) {\n      element = this.layer[index];\n      if (element) {\n        callback({\n          index,\n          element,\n          isFunction: this.isFunction[index],\n          layer: this\n        });\n      }\n    }\n  }\n\n  count() {\n    let count = 0;\n    const l = this.layer.length;\n    for (let index = this.start; index < l; index++) {\n      if (this.layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this.layer = [];\n    this.isFunction = [];\n    this.start = 0;\n    this.nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer.mjs\";\n\nclass LayerManager {\n  constructor() {\n    this.layers = [];\n  }\n\n  addLayer() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers[this.layers.length - 1];\n  }\n\n  addLayers(numberOfLayer = 1) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer());\n    this.layers = this.layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId() {\n    this.layers[this.layers.length] = new Layer();\n    return this.layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer = 1) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this.layers.length\n    );\n    this.layers = this.layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer())\n    );\n    return result;\n  }\n\n  getById(layerId) {\n    return this.layers[layerId];\n  }\n\n  forEach(callback) {\n    let i;\n    const l = this.layers.length;\n    for (i = 0; i < l; i++) {\n      this.layers[i].forEach(callback);\n    }\n  }\n\n  count() {\n    return this.layers.length;\n  }\n\n  clear() {\n    this.layers = [];\n  }\n}\n\nexport default LayerManager;","export default function ifNull(value, alternative)\t{\n\treturn (typeof(value) === \"undefined\" || value === null || value === \"\" ? alternative : value);\n}","import ImageManager from \"../ImageManager.mjs\";\nimport LayerManager from \"../LayerManager.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nclass Scene {\n  constructor(configurationClassOrObject) {\n    if (typeof configurationClassOrObject === \"function\") {\n      this._configuration = new configurationClassOrObject();\n    } else {\n      this._configuration = configurationClassOrObject;\n    }\n\n    // Layer consists of Sprites\n    this.layerManager = new LayerManager();\n\n    this.totalTimePassed = 0;\n\n    this.engine = null;\n    this.initDone = false;\n    this.additionalModifier = undefined;\n\n    this.tickChunk = ifNull(calc(this._configuration.tickChunk), 100 / 6);\n    this.maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      3\n    );\n    this.tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime(timePassed) {\n    let maxTime = 2000;\n    if (this.tickChunk) {\n      maxTime = this.tickChunk * this.maxSkippedTickChunk;\n    }\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    if (!this._configuration.fixedUpdate) {\n      return 0;\n    }\n    return -(timePassed % this.tickChunk);\n  }\n\n  callInit(output, parameter, engine) {\n    this.engine = engine;\n    this.resize(output);\n    const images = calc(this._configuration.images);\n    if (images) {\n      ImageManager.add(images);\n    }\n    Promise.resolve(\n      this._configuration.init &&\n        this._configuration.init({\n          engine,\n          output,\n          scene: this,\n          parameter,\n          imageManager: ImageManager\n        })\n    ).then(res => (this.initDone = true));\n  }\n\n  resize(output) {\n    this.additionalModifier = {\n      alpha: 1,\n      x: 0,\n      y: 0,\n      width: output.width,\n      height: output.height,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      visibleScreen: {\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height\n      }\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  destroy(output) {\n    const parameter =\n      this._configuration.destroy &&\n      this._configuration.destroy({ engine: this.engine, scene: this, output });\n    this.initDone = false;\n    return parameter;\n  }\n\n  loadingScreen(output, progress) {\n    if (this._configuration.loading) {\n      return this._configuration.loading({\n        engine: this.engine,\n        scene: this,\n        output,\n        progress\n      });\n    }\n    const ctx = output.context;\n    const loadedHeight =\n      typeof progress === \"number\"\n        ? Math.max(1, progress * output.h)\n        : output.h;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.w, output.h);\n    ctx.fillStyle = \"#aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    let text = progress;\n\n    // isNumber\n    if (!isNaN(parseFloat(progress)) && !isNaN(progress - 0)) {\n      text = \"Loading \" + Math.round(100 * progress) + \"%\";\n    }\n    ctx.fillText(\n      text,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n\n  callLoading(output) {\n    if (ImageManager.isLoaded() && this.initDone) {\n      return true;\n    }\n    const value = ImageManager.getCount()\n      ? ImageManager.getLoaded() / ImageManager.getCount()\n      : \"Loading...\";\n\n    this.loadingScreen(output, value);\n    return false;\n  }\n\n  fixedUpdate(output, timePassed) {\n    if (this._configuration.fixedUpdate) {\n      this._configuration.fixedUpdate({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n  }\n\n  move(output, timePassed) {\n    // calc total time\n    this.totalTimePassed += timePassed;\n\n    // Jump back?\n    if (timePassed < 0) {\n      // Back to the beginning\n      this.reset(output);\n      timePassed = this.totalTimePassed;\n    } else if (\n      this._configuration.endTime &&\n      this._configuration.endTime <= this.totalTimePassed\n    ) {\n      // set timepassed to match endtime\n      timePassed -= this.totalTimePassed - this._configuration.endTime;\n      this.totalTimePassed = this._configuration.endTime;\n      // End Engine\n      this._configuration.end &&\n        this._configuration.end({\n          engine: this.engine,\n          scene: this,\n          output,\n          timePassed,\n          totalTimePassed: this.totalTimePassed\n        });\n    }\n\n    if (this.tickChunk) {\n      if (timePassed >= this.tickChunk - this.tickChunkTolerance) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        for (\n          let calcFrame = 0,\n            frames = Math.min(\n              this.maxSkippedTickChunk,\n              Math.floor(timePassed / this.tickChunk)\n            );\n          calcFrame < frames;\n          calcFrame++\n        ) {\n          this.fixedUpdate(output, this.tickChunk, calcFrame === frames - 1);\n        }\n      }\n    } else {\n      this.fixedUpdate(output, timePassed, true);\n    }\n\n    if (this._configuration.update) {\n      this._configuration.update({\n        engine: this.engine,\n        scene: this,\n        layerManager: this.layerManager,\n        output,\n        timePassed,\n        totalTimePassed: this.totalTimePassed\n      });\n    }\n\n    this.layerManager.forEach(({ element, isFunction, layer, index }) => {\n      if (!isFunction) {\n        if (element.animate(timePassed)) {\n          layer.deleteById(index);\n        }\n      }\n    });\n  }\n\n  draw(output) {\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (isFunction) {\n        if (\n          element({\n            engine: this.engine,\n            scene: this,\n            layerManager: this.layerManager,\n            layer,\n            output,\n            totalTimePassed: this.totalTimePassed\n          })\n        ) {\n          layer.deleteById(index);\n        }\n      } else {\n        element.draw(output.context, this.additionalModifier);\n      }\n    });\n  }\n\n  reset(output) {\n    let result = this._configuration.reset\n      ? this._configuration.reset({\n          engine: this.engine,\n          scene: this,\n          layerManager: this.layerManager,\n          output\n        })\n      : new LayerManager();\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach(v => {\n        result.addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this.layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import Scene from \"./Default.mjs\";\n\nexport default class SceneAudio extends Scene {\n  constructor(configurationClassOrObject) {\n    super(configurationClassOrObject);\n    this.audioStartTime = null;\n    this.audioPosition = null;\n    this.enableAndroidHack = false;\n    this.audioElement = this._configuration.audioElement;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this.audioElement) {\n      // Android workaround\n      if (this.enableAndroidHack) {\n        if (this.audioStartTime === null) {\n          this.audioStartTime = currentTime;\n          this.audioPosition = this.audioElement.currentTime;\n          return this.audioElement.currentTime * 1000;\n        } else {\n          if (this.audioElement.controller.playbackState === \"playing\") {\n            if (this.audioElement.currentTime === this.audioPosition) {\n              return (\n                this.audioPosition * 1000 +\n                Math.min(260, currentTime - this.audioStartTime)\n              );\n            } else if (\n              this.audioElement.currentTime - this.audioPosition < 0.5 &&\n              this.audioElement.currentTime > this.audioPosition &&\n              currentTime - this.audioStartTime < 350\n            ) {\n              this.audioStartTime =\n                this.audioStartTime +\n                (this.audioElement.currentTime - this.audioPosition) * 1000;\n              this.audioPosition = this.audioElement.currentTime;\n              return (\n                this.audioPosition * 1000 + currentTime - this.audioStartTime\n              );\n            }\n          }\n          this.audioStartTime = currentTime;\n          this.audioPosition =\n            (this.audioElement.ended\n              ? this.audioElement.duration\n              : this.audioElement.currentTime) * 1000;\n          return this.audioPosition * 1000;\n        }\n      } else {\n        return (\n          (this.audioElement.ended\n            ? this.audioElement.duration\n            : this.audioElement.currentTime) * 1000\n        );\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime(timePassed) {\n    return timePassed;\n  }\n\n  shiftTime(timePassed) {\n    return 0;\n  }\n\n  callInit(...arg) {\n    // init audio\n    if (this.audioElement) {\n      var canPlayType = this.audioElement.canPlayType(\"audio/mp3\");\n      if (canPlayType.match(/maybe|probably/i)) {\n        //this.audioshift = 1500;\n      }\n      // Android hack\n      if (typeof MediaController === \"function\") {\n        this.audioElement.controller = new MediaController();\n        this.enableAndroidHack = true;\n      }\n      this.audioElement.preload = \"auto\";\n      this.audioElement.load();\n    }\n\n    return super.callInit(...arg);\n  }\n\n  callLoading(output) {\n    let loaded = super.callLoading(output);\n\n    if (loaded && this.audioElement) {\n      if (\n        !(this.audioElement.readyState >= this.audioElement.HAVE_ENOUGH_DATA)\n      ) {\n        this.loadingScreen(output, \"Waiting for Audio\");\n        return false;\n      } else {\n        let playPromise = this.audioElement.play();\n        if (playPromise) {\n          playPromise.catch(e => {});\n        }\n        if (!this._configuration.endTime) {\n          this._configuration.endTime = this.audioElement.duration * 1000;\n        }\n        this.loadingScreen(output, \"Click to play\");\n      }\n    }\n\n    return loaded;\n  }\n}\n","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\nfunction Transform() {\n  this.reset();\n}\n\nTransform.prototype.reset = function() {\n  this.m = [1,0,0,1,0,0];\n  return this;\n};\n\nTransform.prototype.multiply = function(matrix) {\n  var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n  var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n  var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n  var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n  var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n  var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  this.m[4] = dx;\n  this.m[5] = dy;\n  return this;\n};\n\nTransform.prototype.invert = function() {\n  var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n  var m0 = this.m[3] * d;\n  var m1 = -this.m[1] * d;\n  var m2 = -this.m[2] * d;\n  var m3 = this.m[0] * d;\n  var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n  var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n  this.m[0] = m0;\n  this.m[1] = m1;\n  this.m[2] = m2;\n  this.m[3] = m3;\n  this.m[4] = m4;\n  this.m[5] = m5;\n  return this;\n};\n\nTransform.prototype.rotate = function(rad) {\n  var c = Math.cos(rad);\n  var s = Math.sin(rad);\n  var m11 = this.m[0] * c + this.m[2] * s;\n  var m12 = this.m[1] * c + this.m[3] * s;\n  var m21 = this.m[0] * -s + this.m[2] * c;\n  var m22 = this.m[1] * -s + this.m[3] * c;\n  this.m[0] = m11;\n  this.m[1] = m12;\n  this.m[2] = m21;\n  this.m[3] = m22;\n  return this;\n};\n\nTransform.prototype.translate = function(x, y) {\n  this.m[4] += this.m[0] * x + this.m[2] * y;\n  this.m[5] += this.m[1] * x + this.m[3] * y;\n  return this;\n};\n\nTransform.prototype.scale = function(sx, sy) {\n  this.m[0] *= sx;\n  this.m[1] *= sx;\n  this.m[2] *= sy;\n  this.m[3] *= sy;\n  return this;\n};\n\nTransform.prototype.transformPoint = function(px, py) {\n  var x = px;\n  var y = py;\n  px = x * this.m[0] + y * this.m[2] + this.m[4];\n  py = x * this.m[1] + y * this.m[3] + this.m[5];\n  return [px, py];\n};\n\nTransform.prototype.clone = function() {\n  var n = new Transform();\n  n.m = this.m.slice(0);\n  return n;\n}\n\nexport default Transform;\n","import Scene from \"./Default.mjs\";\nimport Transform from \"../func/transform.mjs\";\n\nexport default class SceneNorm extends Scene {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n    this.cam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      this.transform = this._getViewportByCam(this.cam);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  _getViewportByCam(cam) {\n    const hw = this.engine.getWidth() / 2;\n    const hh = this.engine.getHeight() / 2;\n    const scale = this.engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneAudio from \"./Audio.mjs\";\n\nexport default class SceneNormAudio extends SceneAudio {\n  constructor(...args) {\n    super(...args);\n    this.transform = null;\n    this.transformInvert = null;\n  }\n\n  _getViewport() {\n    if (!this.engine) return new Transform();\n\n    if (!this.transform) {\n      const hw = this.engine.getWidth() / 2;\n      const hh = this.engine.getHeight() / 2;\n      const scale = this.engine.getRatio() > 1 ? hw : hh;\n\n      this.transform = new Transform().translate(hw, hh).scale(scale, scale);\n      this.transformInvert = null;\n    }\n    return this.transform;\n  }\n\n  resize(output) {\n    this.transform = null;\n    this.transformInvert = null;\n    this.additionalModifier = {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas.clientWidth\n    };\n    const [x1, y1] = this.transformPoint(0, 0, 1);\n    const [x2, y2] = this.transformPoint(output.width, output.height, 1);\n    this.additionalModifier.visibleScreen = {\n      x: x1,\n      y: y1,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n    this.layerManager.forEach(({ layer, element, isFunction, index }) => {\n      if (!isFunction) {\n        element.resize(output, this.additionalModifier);\n      }\n    });\n  }\n\n  transformPoint(x, y, scale = this.additionalModifier.scaleCanvas) {\n    if (!this.transformInvert) {\n      this.transformInvert = this._getViewport()\n        .clone()\n        .invert();\n    }\n    return this.transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  draw(output) {\n    output.context.save();\n\n    output.context.setTransform(...this._getViewport().m);\n\n    super.draw(output);\n    output.context.restore();\n  }\n}\n","import SceneNorm from \"./Norm.mjs\";\nimport calc from \"../func/calc.mjs\";\n\nexport default class SceneNormCamera extends SceneNorm {\n  constructor(...args) {\n    super(...args);\n    this.camConfig = Object.assign(\n      {},\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 4,\n        registerEvents: true,\n        enabled: true,\n        callResize: true,\n        doubleClickDetectInterval: 350\n      },\n      calc(this._configuration.cam) || {}\n    );\n    if (!this._configuration.click) {\n      this._configuration.click = () => {};\n    }\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n\n    this._mousePos = {\n      _isDown: false,\n      _timestamp: 0\n    };\n  }\n\n  camEnable() {\n    this.camConfig.enabled = true;\n  }\n\n  camDisable() {\n    this.camConfig.enabled = false;\n  }\n\n  camReset() {\n    this.toCam = {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  }\n\n  callInit(output, parameter, engine) {\n    if (this.camConfig.registerEvents) {\n      this.registerCamEvents(output.canvas);\n    }\n    return super.callInit(output, parameter, engine);\n  }\n\n  destroy(output) {\n    if (this.camConfig.registerEvents) {\n      this.destroyCamEvents(output.canvas);\n    }\n    return super.destroy(output);\n  }\n\n  _hasCamChanged() {\n    return (\n      this.toCam.x !== this.cam.x ||\n      this.toCam.y !== this.cam.y ||\n      this.toCam.zoom !== this.cam.zoom\n    );\n  }\n\n  fixedUpdate(output, timePassed, lastCall) {\n    const ret = super.fixedUpdate(output, timePassed);\n    if (this.camConfig.tween && this._hasCamChanged()) {\n      this.cam.x += (this.toCam.x - this.cam.x) / this.camConfig.tween;\n      this.cam.y += (this.toCam.y - this.cam.y) / this.camConfig.tween;\n      this.cam.zoom += (this.toCam.zoom - this.cam.zoom) / this.camConfig.tween;\n      if (lastCall) {\n        if (this.camConfig.callResize) {\n          this.resize(output);\n        } else {\n          this.transform = null;\n          this.transformInvert = null;\n        }\n      }\n    }\n    return ret;\n  }\n\n  move(output, timePassed) {\n    const ret = super.move(output, timePassed);\n    if (!this.camConfig.tween && this._hasCamChanged()) {\n      this.cam = Object.assign({}, this.toCam);\n      if (this.camConfig.callResize) {\n        this.resize(output);\n      } else {\n        this.transform = null;\n        this.transformInvert = null;\n      }\n    }\n    return ret;\n  }\n\n  registerCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.addEventListener(eventName, this._mouseDown.bind(this), true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.addEventListener(eventName, this._mouseUp.bind(this), true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.addEventListener(eventName, this._mouseOut.bind(this), true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.addEventListener(eventName, this._mouseMove.bind(this), true);\n    }\n    element.addEventListener(\"mousewheel\", this._mouseWheel.bind(this), true);\n  }\n\n  destroyCamEvents(element) {\n    for (const eventName of [\"touchstart\", \"mousedown\"]) {\n      element.removeEventListener(eventName, this._mouseDown, true);\n    }\n    for (const eventName of [\"touchend\", \"mouseup\"]) {\n      element.removeEventListener(eventName, this._mouseUp, true);\n    }\n    for (const eventName of [\"touchendoutside\", \"mouseout\"]) {\n      element.removeEventListener(eventName, this._mouseOut, true);\n    }\n    for (const eventName of [\"touchmove\", \"mousemove\"]) {\n      element.removeEventListener(eventName, this._mouseMove, true);\n    }\n    element.removeEventListener(\"mousewheel\", this._mouseWheel, true);\n  }\n\n  _getMousePosition(e) {\n    if (e && e.touches && e.touches.length > 0) {\n      const rect = e.target.getBoundingClientRect();\n      return [\n        e.targetTouches[0].pageX - rect.left,\n        e.targetTouches[0].pageY - rect.top\n      ];\n    }\n    return [e.offsetX, e.offsetY];\n  }\n\n  _mouseDown(e) {\n    e.preventDefault();\n    const [mx, my] = this._getMousePosition(e);\n    this._mousePos.x = mx;\n    this._mousePos.y = my;\n    this._mousePos._cx = this.toCam.x;\n    this._mousePos._cy = this.toCam.y;\n    this._mousePos._isDown = true;\n    this._mousePos._distance = undefined;\n    this._mousePos._timestamp = Date.now();\n  }\n  _mouseUp(e) {\n    e.preventDefault();\n    this._mousePos._isDown = false;\n    const [mx, my] = this._getMousePosition(e);\n    if (\n      Date.now() - this._mousePos._timestamp < 150 &&\n      Math.abs(this._mousePos.x - mx) < 5 &&\n      Math.abs(this._mousePos.y - my) < 5\n    ) {\n      const [x, y] = this.transformPoint(mx, my);\n      if (this._configuration.doubleClick) {\n        if (this._mousePos.doubleClickTimer) {\n          clearTimeout(this._mousePos.doubleClickTimer);\n          this._mousePos.doubleClickTimer = undefined;\n          this._configuration.doubleClick({ event: e, x, y, scene: this });\n        } else {\n          this._mousePos.doubleClickTimer = setTimeout(() => {\n            this._mousePos.doubleClickTimer = undefined;\n            this._configuration.click({ event: e, x, y, scene: this });\n          }, this.camConfig.doubleClickDetectInterval);\n        }\n      } else {\n        this._configuration.click({ event: e, x, y, scene: this });\n      }\n    }\n  }\n  _mouseOut(e) {\n    this._mousePos._isDown = false;\n  }\n  _mouseMove(e) {\n    e.preventDefault();\n    if (this.camConfig.enabled && this._mousePos._isDown) {\n      if (e.touches && e.touches.length >= 2) {\n        const t = e.touches;\n        // get distance of two finger\n        const distance = Math.sqrt(\n          (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n            (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n        );\n        if (this._mousePos._distance === undefined) {\n          if (distance > 0) {\n            this._mousePos._distance = distance;\n            this._mousePos._czoom = this.toCam.zoom;\n          }\n        } else {\n          this.toCam.zoom = Math.max(\n            this.camConfig.zoomMin,\n            Math.min(\n              this.camConfig.zoomMax,\n              (this._mousePos._czoom * distance) / this._mousePos._distance\n            )\n          );\n          this.clampView();\n        }\n      } else {\n        this._mousePos._distance = undefined;\n        const [mx, my] = this._getMousePosition(e);\n        const viewMatrix = this._getViewportByCam(this.toCam).invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos.x,\n          this._mousePos.y\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx, my);\n        this.toCam.x = this._mousePos._cx + ox - nx;\n        this.toCam.y = this._mousePos._cy + oy - ny;\n        this.clampView();\n      }\n    }\n  }\n  _mouseWheel(e) {\n    e.preventDefault();\n    if (this.camConfig.enabled) {\n      const [mx, my] = this._getMousePosition(e);\n      const [ox, oy] = this._getViewportByCam(this.toCam)\n        .invert()\n        .transformPoint(mx, my);\n      const wheelData = e.wheelDelta || e.deltaY * -1;\n      if (wheelData / 120 > 0) {\n        this.zoomIn();\n        const [nx, ny] = this._getViewportByCam(this.toCam)\n          .invert()\n          .transformPoint(mx, my);\n        this.toCam.x -= nx - ox;\n        this.toCam.y -= ny - oy;\n        this.clampView();\n      } else {\n        this.zoomOut();\n      }\n    }\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this.camConfig.zoomMax,\n      this.toCam.zoom * this.camConfig.zoomFactor\n    );\n  }\n  zoomOut() {\n    this.toCam.zoom = Math.max(\n      this.camConfig.zoomMin,\n      this.toCam.zoom / this.camConfig.zoomFactor\n    );\n    this.clampView();\n  }\n  zoomTo(x1, y1, x2, y2) {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    this.toCam.x = mx;\n    this.toCam.y = my;\n    this.toCam.zoom =\n      this.toCam.zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE);\n  }\n\n  clampView = function() {\n    const invert = this._getViewportByCam(this.toCam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      this.engine.getWidth(),\n      this.engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= 2) {\n      if (x1 < -1) {\n        if (x2 <= 1) {\n          this.toCam.x += -1 - x1;\n        }\n      } else {\n        if (x2 > 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    } else {\n      if (x1 > -1) {\n        this.toCam.x += -1 - x1;\n      } else {\n        if (x2 < 1) {\n          this.toCam.x += 1 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= 2) {\n      if (y1 < -1) {\n        if (y2 <= 1) {\n          this.toCam.y += -1 - y1;\n        }\n      } else {\n        if (y2 > 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    } else {\n      if (y1 > -1) {\n        this.toCam.y += -1 - y1;\n      } else {\n        if (y2 < 1) {\n          this.toCam.y += 1 - y2;\n        }\n      }\n    }\n  };\n}\n","import _Default from './Scenes/Default.mjs';\nimport _Audio from './Scenes/Audio.mjs';\nimport _Norm from './Scenes/Norm.mjs';\nimport _NormAudio from './Scenes/NormAudio.mjs';\nimport _NormCamera from './Scenes/NormCamera.mjs';\n\nconst\n  Default = (...args) => new _Default(...args),\n  Norm = (...args) => new _Norm(...args),\n  NormAudio = (...args) => new _NormAudio(...args),\n  Audio = (...args) => new _Audio(...args);\n  NormCamera = (...args) => new _NormCamera(...args);\n\nexport default {\n  Default,\n  Audio,\n  Norm,\n  NormAudio,\n  NormCamera\n};\n","import calc from '../func/calc.mjs';\n\nexport default class Wait {\n\n    constructor(duration) {\n        this.duration = calc(duration);\n    }\n\n    run(sprite, time) {\n        // return time left\n        return this.duration ? time - this.duration : -1;\n    };\n}","import Wait from \"./Wait.mjs\";\n\nclass Sequence {\n  constructor(...sequences) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift();\n    }\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift();\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof command.run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command }\n              : command\n          )\n          .filter(command => typeof command.run === \"function\"),\n        label: sequence.reduce((arr, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n    // init time\n    this.lastTimestamp = 0;\n    this.enabled = true;\n  }\n\n  reset(timelapsed = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0] &&\n        sequencePosition.sequence[0].reset &&\n        sequencePosition.sequence[0].reset(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (sequencePosition.label.hasOwnProperty(label)) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position] &&\n            sequencePosition.sequence[sequencePosition.position].reset &&\n            sequencePosition.sequence[sequencePosition.position].reset();\n        } else {\n          b |=\n            sequencePosition.sequence.find(seq => {\n              return seq.play && seq.play(label, timelapsed);\n            }) >= 0;\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  runSequence(sprite, sequencePosition, timePassed) {\n    let timeLeft = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      timeLeft = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (timeLeft === true) {\n        timeLeft = 0;\n      } else if (timeLeft === false) {\n        return -1;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (timeLeft === Sequence.TIMELAPSE_TO_REMOVE) {\n        return true;\n      }\n\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position] &&\n          sequencePosition.sequence[sequencePosition.position].reset &&\n          sequencePosition.sequence[sequencePosition.position].reset();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite, time, is_difference) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this.runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\n\nSequence.TIMELAPSE_TO_FORCE_DISABLE = \"FORCE_DISABLE\";\nSequence.TIMELAPSE_TO_STOP = \"STOP\";\nSequence.TIMELAPSE_TO_REMOVE = \"REMOVE\";\nexport default Sequence;\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Sequence from \"../Animations/Sequence.mjs\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\n// Sprite\n// Draw a Circle\nexport default class Circle {\n  constructor(givenParameter) {\n    const parameterList = this.getParameterList();\n    Object.keys(parameterList).forEach(name => {\n      const d = parameterList[name];\n      this[name] =\n        typeof d === \"function\"\n          ? d(givenParameter[name], givenParameter, this)\n          : ifNull(calc(givenParameter[name]), d);\n    });\n  }\n\n  getBaseParameterList () {\n    return {\n      // animation\n      animation: (value, givenParameter) => {\n        let result = calc(value);\n        return Array.isArray(result)\n          ? new Sequence(result)\n          : typeof result === \"object\"\n          ? result\n          : undefined;\n      },\n      // if it's rendering or not\n      enabled: true\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      // position\n      x: 0,\n      y: 0,\n      // rotation\n      rotation: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.rotationInRadian),\n            ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n          )\n        );\n      },\n      // scalling\n      scaleX: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      scaleY: (value, givenParameter) => {\n        return ifNull(\n          calc(value),\n          ifNull(\n            calc(givenParameter.scale),\n            1.\n          )\n        );\n      },\n      // alpha\n      alpha: 1.,\n      // blending\n      compositeOperation: \"source-over\",\n      // color\n      color: \"#fff\"\n    });\n  }\n\n  // Animation-Funktion\n  animate(timepassed) {\n    if (this.animation) {\n      // run animation\n      if (this.animation.run(this, timepassed, true) === true) {\n        // disable\n        this.enabled = false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n  }\n\n  resize(output, additionalModifier) {}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.beginPath();\n      context.fillStyle = this.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.rotation,\n        Math.PI * 2.5 - this.rotation,\n        false\n      );\n      context.fill();\n      context.closePath();\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\n\nexport default class Callback extends Circle {\n  constructor(givenParameter) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter };\n    }\n    super(givenParameter);\n\n    // set start value to count\n    this.timePassed = 0;\n    this.deltaTime = 0;\n  }\n\n  getParameterList() {\n    return Object.assign({}, this.getBaseParameterList(), {\n      callback: v => (typeof v === undefined ? () => {} : v)\n    });\n  }\n\n  animate(timePassed) {\n    if (this.enabled) {\n      this.timePassed += timePassed;\n      this.deltaTime += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context, additionalParameter) {\n    if (this.enabled) {\n      this.callback(context, this.timePassed, additionalParameter, this);\n    }\n    this.deltaTime = 0;\n  }\n}\n","import Circle from './Circle.mjs';\n\nexport default class Group extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      sprite: []\n    });\n  }\n\n  // overwrite change\n  animate(timepassed) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.enabled) {\n      for (let i in this.sprite) {\n        spriteFinished = spriteFinished || this.sprite[i].animate(timepassed) === true;\n      }\n    }\n\n    if (this.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.animation) {\n      this.animation.play && this.animation.play(label, timelapsed);\n    }\n    for (let i in this.sprite) {\n      this.sprite[i].play && this.sprite[i].play(label, timelapsed);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.alpha;\n      }\n\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Canvas extends Group {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    let w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.round(w / this.scaleX);\n      this.temp_canvas.height = Math.round(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const w = this.width,\n        h = this.height,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this.temp_canvas.width,\n        th = this.temp_canvas.height;\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(this.tctx, {\n          alpha: 1,\n          x: 0,\n          y: 0,\n          width: tw,\n          height: th,\n          widthInPixel: tw,\n          heightInPixel: th,\n          visibleScreen: {\n            x: 0,\n            y: 0,\n            width: tw,\n            height: th\n          }\n        });\n      }\n\n      this.additionalBlur && this.additionalBlur(tw, th, additionalModifier);\n\n      context.save();\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.translate(this.x + wh, this.y + hh);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.drawImage(\n        this.temp_canvas,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height,\n        -wh,\n        -hh,\n        w,\n        h\n      );\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Group from \"./Group.mjs\";\n\nexport default class Emitter extends Group {\n  constructor(givenParameter) {\n    super(givenParameter.self || {});\n    let staticArray = {},\n      functionArray = {};\n\n    for (let i in givenParameter) {\n      if (![\"self\", \"class\", \"count\"].includes(i)) {\n        if (typeof givenParameter[i] === \"function\") {\n          functionArray[i] = givenParameter[i];\n        } else {\n          staticArray[i] = givenParameter[i];\n        }\n      }\n    }\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.sprite = [];\n\n    for (let i = 0; i < count; i++) {\n      const classToEmit = givenParameter.class;\n      let parameter = {};\n      for (let index in staticArray) {\n        parameter[index] = staticArray[index];\n      }\n      for (let index in functionArray) {\n        parameter[index] = functionArray[index].call(null, i);\n      }\n      this.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Circle from \"./Circle.mjs\";\n\nexport default class FastBlur extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n        ifNull(\n          calc(value),\n          setParameter.x === undefined &&\n            setParameter.y === undefined &&\n            setParameter.width === undefined &&\n            setParameter.height === undefined\n        )\n    });\n  }\n\n  generateTempCanvas(context, additionalModifier) {\n    const w = additionalModifier.widthInPixel || context.canvas.width,\n      h = additionalModifier.heightInPixel || context.canvas.height;\n    this.temp_canvas = document.createElement(\"canvas\");\n    if (this.gridSize) {\n      this.currentGridSize = this.gridSize;\n      this.temp_canvas.width = Math.round(this.currentGridSize);\n      this.temp_canvas.height = Math.round(this.currentGridSize);\n    } else {\n      this.temp_canvas.width = Math.ceil(w / this.scaleX);\n      this.temp_canvas.height = Math.ceil(h / this.scaleY);\n    }\n    this.tctx = this.temp_canvas.getContext(\"2d\");\n    this.tctx.globalCompositeOperation = \"source-over\";\n    this.tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    if (this.temp_canvas && this.currentGridSize !== this.gridSize) {\n      const oldTempCanvas = this.temp_canvas;\n      this.generateTempCanvas(context, additionalModifier);\n      this.tctx.globalCompositeOperation = \"copy\";\n      this.tctx.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this.temp_canvas.width,\n        this.temp_canvas.height\n      );\n      this.tctx.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.temp_canvas) {\n        this.generateTempCanvas(context, additionalModifier);\n        this.normalizeFullScreen(additionalModifier);\n      }\n      if (this.gridSize && this.currentGridSize !== this.gridSize) {\n        this.resize(context, additionalModifier);\n      }\n\n      const a = this.alpha * additionalModifier.alpha,\n        w = this.width,\n        h = this.height,\n        targetW = this.temp_canvas.width,\n        targetH = this.temp_canvas.height;\n\n      if (a > 0 && targetW && targetH) {\n        this.tctx.globalCompositeOperation = \"copy\";\n        this.tctx.globalAlpha = 1;\n        this.tctx.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (this.darker > 0) {\n          this.tctx.globalCompositeOperation = this.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this.tctx.fillStyle = \"rgba(0,0,0,\" + this.darker + \")\";\n          this.tctx.fillRect(0, 0, targetW, targetH);\n        }\n\n        this.additionalBlur && this.additionalBlur(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (this.clear) {\n          context.clearRect(this.x, this.y, w, h);\n        }\n        context.globalCompositeOperation = this.compositeOperation;\n        context.globalAlpha = a;\n        context.imageSmoothingEnabled = !this.pixel;\n        context.drawImage(\n          this.temp_canvas,\n          0,\n          0,\n          targetW,\n          targetH,\n          this.x,\n          this.y,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = true;\n      }\n    } else {\n      // optional: clear screen\n      if (this.clear) {\n        if (!this.x) {\n          this.x = additionalModifier.x;\n        }\n        if (!this.y) {\n          this.y = additionalModifier.y;\n        }\n        if (!this.width) {\n          this.width = additionalModifier.width;\n        }\n        if (!this.height) {\n          this.height = additionalModifier.height;\n        }\n        context.clearRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ImageManager from \"../ImageManager.mjs\";\nimport Circle from \"./Circle.mjs\";\n\n// Sprite\n// Draw a Image\nclass Image extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      image: v => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Image.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      // autoscale to max\n      norm: false,\n      normCover: false\n    });\n  }\n\n  resize() {\n    this.normScale = undefined;\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled && this.image) {\n      const frameWidth = this.frameWidth || this.image.width,\n        frameHeight = this.frameHeight || this.image.height;\n      if (!this.normScale) {\n        this.normScale = this.normCover\n          ? Math.max(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : this.norm\n          ? Math.min(\n              additionalModifier.width / frameWidth,\n              additionalModifier.height / frameHeight\n            )\n          : 1;\n      }\n      const sX = frameWidth * this.normScale * this.scaleX,\n        sY = frameHeight * this.normScale * this.scaleY;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation == 0) {\n        if (this.position === Image.LEFT_TOP) {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x,\n            this.y,\n            sX,\n            sY\n          );\n        } else {\n          context.drawImage(\n            this.image,\n            this.frameX,\n            this.frameY,\n            frameWidth,\n            frameHeight,\n            this.x - sX / 2,\n            this.y - sY / 2,\n            sX,\n            sY\n          );\n        }\n      } else {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(this.rotation);\n        context.drawImage(\n          this.image,\n          this.frameX,\n          this.frameY,\n          frameWidth,\n          frameHeight,\n          -sX / 2,\n          -sY / 2,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\nImage.LEFT_TOP = 0;\nImage.CENTER = 1;\n\nexport default Image;\n","import Circle from './Circle.mjs';\n\nclass Text extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      text: undefined,\n      font: '2em monospace',\n      position: Text.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    });\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.x, this.y);\n      context.scale(this.scaleX, this.scaleY);\n      context.rotate(this.rotation);\n      context.font = this.font;\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fillText(this.text, 0, 0);\n      }\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.strokeText(this.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n\n// const\nText.LEFT_TOP = 0;\nText.CENTER = 1;\n\nexport default Text;\n","import Circle from \"./Circle.mjs\";\nimport Color from \"color\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nclass Particle extends Circle {\n  constructor(givenParameter) {\n    super(givenParameter);\n  }\n\n  static getGradientImage(r, g, b) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle.Gradient) {\n      Particle.Gradient = new Array(256 >> gradientResolution);\n      for (rIndex = 0; rIndex < Particle.Gradient.length; rIndex++) {\n        Particle.Gradient[rIndex] = new Array(256 >> gradientResolution);\n        for (gIndex = 0; gIndex < Particle.Gradient[rIndex].length; gIndex++) {\n          Particle.Gradient[rIndex][gIndex] = new Array(\n            256 >> gradientResolution\n          );\n        }\n      }\n    }\n    if (!Particle.Gradient[cr][cg][cb]) {\n      Particle.Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle.Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr, cg, cb) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\");\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n        ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",\" +\n        ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n        \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      // faster than: if (!(this.color instanceof Color && this.color.model === 'rgb')) {\n      if (!this.color || !this.color.color) {\n        this.color = Color(this.color).rgb();\n      }\n      const color = this.color.color;\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled =\n        (this.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n        gradientSize;\n      context.drawImage(\n        Particle.getGradientImage(color[0], color[1], color[2]),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        this.x - this.scaleX / 2,\n        this.y - this.scaleY / 2,\n        this.scaleX,\n        this.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nParticle.Gradient = null;\n\nexport default Particle;\n","import Group from \"./Group.mjs\";\nimport pasition from \"pasition\";\n\nexport default class Path extends Group {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    this.oldPath = undefined;\n    this.path2D = new Path2D();\n    if (this.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.polyfill = false;\n        }\n      }\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from, to) {\n    return pasition._preprocessing(\n      typeof from === 'string' ? pasition.path2shapes(from) : from,\n      typeof to === 'string' ? pasition.path2shapes(to) : to\n    );\n  }\n  changeToPath(progress, data, sprite) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      const a = this.alpha * additionalModifier.alpha;\n      if (this.oldPath !== this.path) {\n        if (this.polyfill && typeof this.path === \"string\") {\n          this.path = pasition.path2shapes(this.path);\n        }\n        if (Array.isArray(this.path)) {\n          this.path2D = new Path2D();\n          this.path.forEach(curve => {\n            this.path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this.path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this.path2D.closePath();\n          });\n        } else {\n          this.path2D = new Path2D(this.path);\n        }\n        this.oldPath = this.path;\n      }\n\n      let scaleX = this.scaleX,\n        scaleY = this.scaleY;\n\n      if (this.fixed) {\n        if (scaleX == 0) {\n          scaleX = 0.0000000001;\n        }\n        if (scaleY == 0) {\n          scaleY = 0.0000000001;\n        }\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(this.x, this.y);\n      context.scale(scaleX, scaleY);\n      context.rotate(this.rotation);\n\n      if (this.color) {\n        context.fillStyle = this.color;\n        context.fill(this.path2D);\n      }\n\n      context.save();\n\n      if (this.clip) {\n        context.clip(this.path2D);\n        if (this.fixed) {\n          context.rotate(-this.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-this.x, -this.y);\n        }\n      }\n\n      // draw all sprites\n      for (let i in this.sprite) {\n        this.sprite[i].draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (this.borderColor) {\n        context.strokeStyle = this.borderColor;\n        context.lineWidth = this.lineWidth;\n        context.stroke(this.path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import Circle from \"./Circle.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\n\n// Sprite\n// Draw a Circle\nexport default class Rect extends Circle {\n  constructor(givenParameters) {\n    super(givenParameters);\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value, givenParameter, setParameter) =>\n      ifNull(\n        calc(value),\n        setParameter.x === undefined &&\n          setParameter.y === undefined &&\n          setParameter.width === undefined &&\n          setParameter.height === undefined\n      )\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.x === undefined || this.norm) {\n      this.x = additionalModifier.visibleScreen.x;\n    }\n    if (this.y === undefined || this.norm) {\n      this.y = additionalModifier.visibleScreen.y;\n    }\n    if (this.width === undefined || this.norm) {\n      this.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.height === undefined || this.norm) {\n      this.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(context, additionalModifier) {\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (!this.width) {\n        this.width = additionalModifier.width;\n      }\n      if (!this.height) {\n        this.height = additionalModifier.height;\n      }\n      if (this.x === undefined) {\n        this.x = additionalModifier.x;\n      }\n      if (this.y === undefined) {\n        this.y = additionalModifier.y;\n      }\n\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.rotation === 0) {\n        if (this.clear) {\n          context.clearRect(this.x, this.y, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(this.x, this.y, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(this.x, this.y, this.width, this.height);\n          context.stroke();\n        }\n      } else {\n        let hw = this.width / 2;\n        let hh = this.height / 2;\n        context.save();\n        context.translate(this.x + hw, this.y + hh);\n        context.rotate(this.rotation);\n        if (this.clear) {\n          context.clearRect(-hw, -hh, this.width, this.height);\n        } else {\n          context.fillStyle = this.color;\n          context.fillRect(-hw, -hh, this.width, this.height);\n        }\n        if (this.borderColor) {\n          context.beginPath();\n          context.lineWidth = this.lineWidth;\n          context.strokeStyle = this.borderColor;\n          context.rect(-hw, -hh, this.width, this.height);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport Emitter from \"./Emitter.mjs\";\nimport Text from \"./Text.mjs\";\n\nexport default class Scroller extends Emitter {\n  constructor(givenParameters) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: index => characterList[index],\n        enabled: index =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled, index)\n      })\n    );\n  }\n}\n","import FastBlur from \"./FastBlur.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur\n\nexport default class StackBlur extends FastBlur {\n  constructor(givenParameter) {\n    super(givenParameter);\n\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  normalizeFullScreen(additionalModifier) {\n    if (this.norm && this.onCanvas) {\n      this.x = 0;\n      this.y = 0;\n      this.width = additionalModifier.widthInPixel;\n      this.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(this.imageData, 0, 0, targetW, targetH, additionalModifier.radius);\n    this.tctx.putImageData(this.imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.radius === undefined || this.currentRadiusPart !== this.radiusPart) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      const radius = Math.round(this.radius);\n      if (radius) {\n        if (this.onCanvas) {\n          if (this.width === undefined || this.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(this.x);\n          const y = Math.round(this.y);\n          const w = Math.round(this.width);\n          const h = Math.round(this.height);\n          this.imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(this.imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(this.imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import CanvasSprite from \"./Canvas.mjs\";\nimport * as stackblur from \"stackblur-canvas\";\nconst {imageDataRGBA} = stackblur.default || stackblur \n\nexport default class StackBlurCanvas extends CanvasSprite {\n  constructor(givenParameter) {\n    super(givenParameter);\n    this.currentGridSize = false;\n    this.currentRadiusPart = undefined;\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      radius: undefined,\n      radiusPart: undefined\n    });\n  }\n\n  resize(context, additionalModifier) {\n    super.resize(context, additionalModifier);\n    if (this.radiusPart) {\n      this.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW, targetH, additionalModifier) {\n    if (additionalModifier.radius) {\n      this.imageData = this.tctx.getImageData(0, 0, targetW, targetH);\n      imageDataRGBA(\n        this.imageData,\n        0,\n        0,\n        targetW,\n        targetH,\n        additionalModifier.radius\n      );\n      this.tctx.putImageData(this.imageData, 0, 0);\n    }\n  }\n\n  // draw-methode\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (\n        this.radius === undefined ||\n        this.currentRadiusPart !== this.radiusPart\n      ) {\n        this.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            this.radiusPart\n        );\n        this.currentRadiusPart = this.radiusPart;\n      }\n      additionalModifier.radius = Math.round(this.radius);\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull.mjs\";\nimport calc from \"../func/calc.mjs\";\nimport Rect from \"./Rect.mjs\";\n// Sprite\n// Draw a Circle\nexport default class StarField extends Rect {\n  constructor(givenParameters) {\n    super(givenParameters);\n\n    if (\n      this.x !== undefined &&\n      this.y !== undefined &&\n      this.width &&\n      this.height &&\n      this.lineWidth\n    ) {\n      this.init();\n    } else {\n      this.centerX = undefined;\n    }\n  }\n\n  getParameterList() {\n    return Object.assign({}, super.getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0.,\n      moveY: 0.,\n      moveZ: 0.,\n      lineWidth: undefined,\n      highScale: true\n    });\n  }\n\n  init() {\n    this.centerX = this.width / 2 + this.x;\n    this.centerY = this.height / 2 + this.y;\n    this.scaleZ = Math.max(this.width, this.height) / 2;\n    this.starsX = [];\n    this.starsY = [];\n    this.starsZ = [];\n    this.starsOldX = [];\n    this.starsOldY = [];\n    this.starsNewX = [];\n    this.starsNewY = [];\n    this.starsEnabled = [];\n    this.starsLineWidth = [];\n    for (let i = 0; i < this.count; i++) {\n      this.starsX[i] = Math.random() * this.width - this.width / 2;\n      this.starsY[i] = Math.random() * this.height - this.height / 2;\n      this.starsZ[i] = Math.random() * this.scaleZ;\n    }\n  }\n\n  moveStar(i, scaled_timepassed, firstPass) {\n    if (firstPass) {\n      this.starsEnabled[i] = true;\n    }\n    const hw = this.width / 2;\n    const hh = this.height / 2;\n    let x = this.starsX[i] + this.moveX * scaled_timepassed,\n      y = this.starsY[i] + this.moveY * scaled_timepassed,\n      z = this.starsZ[i] + this.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= this.width;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= this.height;\n      x = Math.random() * this.width - hw;\n      this.starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n    while (z > this.scaleZ) {\n      z -= this.scaleZ;\n      x = Math.random() * this.width - hw;\n      y = Math.random() * this.height - hh;\n      this.starsEnabled[i] = false;\n    }\n\n    const projectX = this.centerX + (x / z) * hw;\n    const projectY = this.centerY + (y / z) * hh;\n    this.starsEnabled[i] =\n      this.starsEnabled[i] &&\n      projectX >= this.x &&\n      projectY >= this.y &&\n      projectX < this.x + this.width &&\n      projectY < this.y + this.height;\n    if (firstPass) {\n      this.starsX[i] = x;\n      this.starsY[i] = y;\n      this.starsZ[i] = z;\n      this.starsNewX[i] = projectX;\n      this.starsNewY[i] = projectY;\n    } else {\n      this.starsOldX[i] = projectX;\n      this.starsOldY[i] = projectY;\n      let lw = (1 - this.starsZ[i] / this.scaleZ) * 4;\n      if (!this.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this.starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed) {\n    let ret = super.animate(timepassed);\n    if (this.enabled && this.centerX !== undefined) {\n      let i = this.count;\n      while (i--) {\n        this.moveStar(i, timepassed / 16, true);\n        if (this.starsEnabled[i]) {\n          this.moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(context, additionalModifier){}\n\n  // Draw-Funktion\n  draw(context, additionalModifier) {\n    if (this.enabled) {\n      if (this.centerX === undefined) {\n        this.width = this.width || additionalModifier.width;\n        this.height = this.height || additionalModifier.height;\n        this.x = this.x === undefined ? additionalModifier.x : this.x;\n        this.y = this.y === undefined ? additionalModifier.y : this.y;\n        this.lineWidth =\n          this.lineWidth ||\n          Math.min(\n            additionalModifier.height / additionalModifier.heightInPixel,\n            additionalModifier.width / additionalModifier.widthInPixel\n          ) / 2;\n        this.init();\n        return;\n      }\n      context.globalCompositeOperation = this.compositeOperation;\n      context.globalAlpha = this.alpha * additionalModifier.alpha;\n      if (this.moveY == 0 && this.moveZ == 0 && this.moveX < 0) {\n        context.fillStyle = this.color;\n        let i = this.count;\n        while (i--) {\n          if (this.starsEnabled[i]) {\n            context.fillRect(\n              this.starsNewX[i],\n              this.starsNewY[i] - (this.starsLineWidth[i] * this.lineWidth) / 2,\n              this.starsOldX[i] - this.starsNewX[i],\n              this.starsLineWidth[i] * this.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = this.color;\n        if (this.highScale) {\n          let i = this.count;\n          while (i--) {\n            if (this.starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this.starsLineWidth[i] * this.lineWidth;\n              context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n              context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * this.lineWidth;\n            i = this.count;\n            while (i--) {\n              if (this.starsEnabled[i] && this.starsLineWidth[i] === lw) {\n                context.moveTo(this.starsOldX[i], this.starsOldY[i]);\n                context.lineTo(this.starsNewX[i], this.starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import _Callback from './Sprites/Callback.mjs';\nimport _Canvas from './Sprites/Canvas.mjs';\nimport _Circle from './Sprites/Circle.mjs';\nimport _Emitter from './Sprites/Emitter.mjs';\nimport _FastBlur from './Sprites/FastBlur.mjs';\nimport _Group from './Sprites/Group.mjs';\nimport _Image from './Sprites/Image.mjs';\nimport _Text from './Sprites/Text.mjs';\nimport _Particle from './Sprites/Particle.mjs';\nimport _Path from './Sprites/Path.mjs';\nimport _Rect from './Sprites/Rect.mjs';\nimport _Scroller from './Sprites/Scroller.mjs';\nimport _StackBlur from './Sprites/StackBlur.mjs';\nimport _StackBlurCanvas from './Sprites/StackBlurCanvas.mjs';\nimport _StarField from './Sprites/StarField.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  Canvas = (...args) => new _Canvas(...args),\n  Circle = (...args) => new _Circle(...args),\n  Emitter = (...args) => new _Emitter(...args),\n  FastBlur = (...args) => new _FastBlur(...args),\n  Group = (...args) => new _Group(...args),\n  Image = (...args) => new _Image(...args),\n  Text = (...args) => new _Text(...args),\n  Particle = (...args) => new _Particle(...args),\n  Path = (...args) => new _Path(...args),\n  Rect = (...args) => new _Rect(...args),\n  Scroller = (...args) => new _Scroller(...args),\n  StackBlur = (...args) => new _StackBlur(...args);\n  StackBlurCanvas = (...args) => new _StackBlurCanvas(...args);\n  StarField = (...args) => new _StarField(...args);\n\nImage.LEFT_TOP = _Image.LEFT_TOP\nImage.CENTER = _Image.CENTER\nText.LEFT_TOP = _Text.LEFT_TOP\nText.CENTER = _Text.CENTER\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StackBlurCanvas,\n  StarField\n};\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Callback {\n\n    constructor(callback, duration) {\n      this.callback = callback;\n      this.duration = ifNull(calc(duration), undefined);\n      this.initialized = false;\n    }\n\n    reset() {\n      this.initialized = false;\n    }\n\n    run(sprite, time) {\n      let result;\n\n      if (this.duration !== undefined) {\n        this.callback(sprite, Math.min(time, this.duration), !this.initialized);\n        this.initialized = true;\n        return time - this.duration;\n      } else {\n        result = this.callback(sprite, time, !this.initialized);\n        this.initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Color from \"color\";\n\nconst degToRad = 0.017453292519943295; //Math.PI / 180;\n\nfunction moveDefault(progress, data) {\n  return data.from + progress * data.delta;\n}\n\nfunction moveBezier(progress, data) {\n  var copy = [...data.values],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress, data, sprite) {\n  return data.colorFrom.mix(data.colorTo, progress).string();\n}\n\nfunction movePath(progress, data, sprite) {\n  return sprite.changeToPath(progress, data, sprite);\n}\n\n// to values of a object\nexport default class ChangeTo {\n  constructor(changeValues, duration, ease) {\n    this.initialized = false;\n    this.changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? orgValue * degToRad : orgValue;\n      const isColor = k === \"color\";\n      const isPath = k === \"path\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n          ? [\"rotation\"]\n          : [k];\n      for (const name of names) {\n        this.changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value, 1, {}),\n          bezier: isBezier ? value : false,\n          isColor,\n          isPath,\n          isFunction: isFunction ? value : false,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n            ? movePath\n            : isBezier\n            ? moveBezier\n            : moveDefault\n        });\n      }\n    }\n    this.duration = ifNull(calc(duration), 0);\n    this.ease = ifNull(ease, t => t);\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  init(sprite, time) {\n    var l = this.changeValues.length,\n      data;\n    while (l--) {\n      data = this.changeValues[l];\n      if (data.isFunction) {\n        data.from = sprite[data.name];\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = Color(data.from);\n          data.colorTo = Color(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n            data.from,\n            data.to\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [sprite[data.name], ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else {\n          data.delta = data.to - data.from;\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        data.colorFrom = Color(sprite[data.name]);\n        data.colorTo = Color(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit(\n          sprite[data.name],\n          data.to\n        );\n      } else if (data.bezier) {\n        data.values = [sprite[data.name], ...data.bezier];\n      } else {\n        data.from = sprite[data.name];\n        data.delta = data.to - data.from;\n      }\n    }\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.init(sprite, time);\n    }\n\n    // return time left\n    if (this.duration <= time) {\n      let l = this.changeValues.length,\n        data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this.changeValues.length,\n        progress = this.ease(time / this.duration),\n        data;\n\n      while (l--) {\n        data = this.changeValues[l];\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this.duration;\n  }\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_FORCE_DISABLE;\n    };\n}","import Sequence from \"./Sequence.mjs\";\n\nexport default class Forever {\n  constructor(...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed = 0) {\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\n\nexport default class If {\n  constructor(ifCallback, Aniobject, AniobjectElse) {\n    this.ifCallback = ifCallback;\n    this.Aniobject = Aniobject;\n    this.AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  run(sprite, time) {\n    const AniObject = calc(this.ifCallback)\n      ? this.Aniobject\n      : this.AniobjectElse;\n    return AniObject.run\n      ? AniObject.run(sprite, time)\n      : AniObject(sprite, time);\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\nimport ImageManager from '../ImageManager.mjs';\n\nexport default class Image {\n\n  constructor(image, durationBetweenFrames) {\n    this.initialized = false;\n    this.image = calc(image);\n    this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(this.image)) {\n      this.count = this.image.length;\n    } else {\n      this.image = [this.image];\n      this.count = 1;\n    }\n    this.duration = this.count * this.durationBetweenFrames;\n  }\n\n  reset() {\n    this.initialized = false;\n  };\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.current = -1;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      sprite.image = ImageManager.getImage(this.image[this.image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this.durationBetweenFrames);\n      if (currentFrame !== this.current) {\n        this.current = currentFrame;\n        sprite.image = ImageManager.getImage(this.image[this.current]);\n      }\n    }\n    return time - this.duration;\n  }\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class ImageFrame {\n\n    constructor(frameNumber, framesToRight, durationBetweenFrames) {\n        this.initialized = false;\n        this.frameNumber = calc(frameNumber);\n        this.framesToRight = ifNull(calc(framesToRight), true);\n        this.durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        if (!Array.isArray(this.frameNumber)) {\n            this.frameNumber = [this.frameNumber];\n        }\n        this.duration = this.frameNumber.length * this.durationBetweenFrames;\n    }\n\n    run(sprite, time) {\n        let currentFrame = 0;\n        if (time >= this.duration) {\n            currentFrame = this.frameNumber[this.frameNumber.length - 1];\n        } else {\n            currentFrame = this.frameNumber[Math.floor(time / this.durationBetweenFrames)];\n        }\n        if (this.framesToRight) {\n            sprite.frameX = sprite.frameWidth * currentFrame;\n        } else {\n            sprite.frameY = sprite.frameHeight * currentFrame;\n        }\n\n        return time - this.duration;\n    }\n}","import calc from \"../func/calc.mjs\";\nimport ifNull from \"../func/ifnull.mjs\";\nimport Sequence from \"./Sequence.mjs\";\n\nexport default class Loop {\n  constructor(times, ...Aniobject) {\n    this.Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this.times = this.timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.reset && this.Aniobject.reset(timelapsed);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.times = this.timesOrg;\n    this.Aniobject.play && this.Aniobject.play(label, timelapsed);\n  }\n\n  run(sprite, time, isDifference) {\n    let t = time;\n    while (t >= 0 && this.times > 0) {\n      t = this.Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this.times--;\n        this.Aniobject.reset && this.Aniobject.reset();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc.mjs';\nimport ChangeTo from './ChangeTo.mjs';\n\nconst DURATION_FOR_1PX = 10;\n\nexport default class Move extends ChangeTo {\n  constructor(x, y, speed, ease) {\n    super({\n      x,\n      y\n    }, 0, ease);\n    this.speed = calc(speed) || 1;\n  }\n\n  init(sprite, time) {\n    if (this.speed == 0 || (this.targetX === sprite.x && this.targetY === sprite.y)) {\n      this.duration = 0;\n    }\n    else {\n      let x = this.changeValues[0],\n        y = this.changeValues[1];\n\n      x.from = sprite.x;\n      y.from = sprite.y;\n\n      x.delta = x.to - x.from;\n      y.delta = y.to - y.from;\n\n      const hypotenuse = Math.sqrt(x.delta * x.delta + y.delta * y.delta);\n\n      this.duration = hypotenuse * DURATION_FOR_1PX / this.speed;\n    }\n\n    super.init(sprite, time);\n  };\n}\n","import Sequence from './Sequence.mjs';\n\nexport default class Remove {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_REMOVE;\n\t}\n}","import calc from '../func/calc.mjs';\nimport ifNull from '../func/ifnull.mjs';\n\nexport default class Once {\n  constructor(Aniobject, times) {\n    this.Aniobject = Aniobject;\n    this.times = ifNull(calc(times), 1);\n  }\n\n  run(sprite, time) {\n    if (this.times <= 0) {\n      return time;\n    }\n    else {\n      let t = this.Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this.times--;\n      }\n      return t;\n    }\n  };\n}","import calc from '../func/calc.mjs';\n\nexport default class Shake {\n\n  constructor(shakediff, duration) {\n    this.initialized = false;\n    this.duration = calc(duration);\n    this.shakeDiff = calc(shakediff);\n    this.shakeDiffHalf = this.shakeDiff / 2;\n  }\n\n  reset() {\n    this.initialized = false;\n  }\n\n  run(sprite, time) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.x = sprite.x;\n      this.y = sprite.y;\n    }\n\n    // return time left\n    if (time >= this.duration) {\n      // prevent round errors\n      sprite.x = this.x;\n      sprite.y = this.y;\n    } else {\n      // shake sprite\n      sprite.x = this.x + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n      sprite.y = this.y + Math.random() * this.shakeDiff - this.shakeDiffHalf;\n    }\n    return time - this.duration;\n  }\n}","export default class ShowOnce {\n\n    constructor() {\n        this.showOnce = true;\n    }\n\n    run(sprite, time) {\n        sprite.enabled = sprite.enabled && this.showOnce;\n        this.showOnce = false;\n        return 0;\n    }\n}","import Sequence from './Sequence.mjs';\n\nclass State {\n  constructor({\n    states = {},\n    transitions = {},\n    default: defaultState = undefined,\n    delegateTo = undefined\n  } = {}) {\n    // save possible states\n    this.states = states;\n    Object.keys(this.states).forEach(i => {\n      if (Array.isArray(this.states[i])) {\n        this.states[i] = new Sequence(this.states[i])\n      }\n    });\n    // save transitions\n    this.transitions = transitions;\n    // save delegateTo\n    this.delegateTo = delegateTo;\n    // set start state\n    this.currentStateName = defaultState;\n    this.currentState = this.states[defaultState];\n    this.isTransitioningToStateName = undefined;\n  }\n\n  setState(name, options) {\n    if (name !== this.currentStateName) {\n      this.isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this.currentStateName}To${UCFirstName}`,\n        `${this.currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => this.transitions[name]\n      );\n      if (transitionName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.transitions[transitionName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n      } else {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    this.currentState.play && this.currentState.play(label, timelapsed);\n  }\n\n  run(sprite, time, is_difference) {\n    let timeLeft = time;\n    let isDifference = is_difference;\n    if (this.currentState) {\n      timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this.currentState) {\n      if (this.isTransitioningToStateName) {\n        this.currentStateName = this.isTransitioningToStateName;\n        this.currentState = this.states[this.currentStateName];\n        this.currentState && this.currentState.reset && this.currentState.reset();\n        this.isTransitioningToStateName = undefined;\n        timeLeft = this.currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this.currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Sequence from './Sequence.mjs';\n\nexport default class End {\n\n\tconstructor() {\n\t}\n\n\trun(sprite, time){\n\t\treturn Sequence.TIMELAPSE_TO_STOP;\n\t}\n}","import Sequence from './Sequence.mjs';\n\nexport default class EndDisabled {\n\n    constructor() {\n    }\n\n    run(sprite, time) {\n        sprite.enabled = false;\n        return Sequence.TIMELAPSE_TO_STOP;\n    };\n}","import calc from '../func/calc.mjs';\n\nexport default class WaitDisabled {\n\n  constructor(duration) {\n    this.duration = calc(duration);\n  }\n\n  run(sprite, time) {\n    // return time left\n    sprite.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import _Callback from './Animations/Callback.mjs';\nimport _ChangeTo from './Animations/ChangeTo.mjs';\nimport _End from './Animations/End.mjs';\nimport _EndDisabled from './Animations/EndDisabled.mjs';\nimport _Forever from './Animations/Forever.mjs';\nimport _If from './Animations/If.mjs';\nimport _Image from './Animations/Image.mjs';\nimport _ImageFrame from './Animations/ImageFrame.mjs';\nimport _Loop from './Animations/Loop.mjs';\nimport _Move from './Animations/Move.mjs';\nimport _Remove from './Animations/Remove.mjs';\nimport _Sequence from './Animations/Sequence.mjs';\nimport _Once from './Animations/Once.mjs';\nimport _Shake from './Animations/Shake.mjs';\nimport _ShowOnce from './Animations/ShowOnce.mjs';\nimport _State from './Animations/State.mjs';\nimport _Stop from './Animations/Stop.mjs';\nimport _StopDisabled from './Animations/StopDisabled.mjs';\nimport _Wait from './Animations/Wait.mjs';\nimport _WaitDisabled from './Animations/WaitDisabled.mjs';\n\nconst\n  Callback = (...args) => new _Callback(...args),\n  ChangeTo = (...args) => new _ChangeTo(...args),\n  End = (...args) => new _End(...args),\n  EndDisabled = (...args) => new _EndDisabled(...args),\n  Forever = (...args) => new _Forever(...args),\n  If = (...args) => new _If(...args),\n  Image = (...args) => new _Image(...args),\n  ImageFrame = (...args) => new _ImageFrame(...args),\n  Loop = (...args) => new _Loop(...args),\n  Move = (...args) => new _Move(...args),\n  Once = (...args) => new _Once(...args),\n  Remove = (...args) => new _Remove(...args),\n  Sequence = (...args) => new _Sequence(...args),\n  Shake = (...args) => new _Shake(...args),\n  ShowOnce = (...args) => new _ShowOnce(...args),\n  State = (...args) => new _State(...args),\n  Stop = (...args) => new _Stop(...args),\n  StopDisabled = (...args) => new _StopDisabled(...args),\n  Wait = (...args) => new _Wait(...args),\n  WaitDisabled = (...args) => new _WaitDisabled(...args);\n\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Move,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import _Engine from './Engine.mjs';\nimport Scenes from './Scenes.mjs';\nimport ImageManager from './ImageManager.mjs';\nimport Sprites from './Sprites.mjs';\nimport Animations from './Animations.mjs';\nimport Easing from 'eases';\n\nvar Engine = (...args) => new _Engine(...args);\n\nexport {\n  Engine,\n  Scenes,\n  ImageManager,\n  Sprites,\n  Animations,\n  Easing\n};"],"names":["calc","c","params","apply","Engine","canvasOrOptions","givenOptions","Error","getContext","canvas","options","Object","assign","this","_output","context","width","height","ratio","_scene","_isSceneInitialized","_newScene","_lastTimestamp","_timePassed","_recalculateCanvas","_referenceRequestAnimationFrame","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","_this","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","offsetTimeTarget","offsetTimeDelta","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","_autoSize","window","addEventListener","recalculateCanvas","bind","document","handleVisibilityChange","clickToPlayAudio","playAudioOfScene","_reduceFramerate","reduceFramerate","switchScene","scene","visibilityState","audioElement","play","_normalizeContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","Math","round","style","resize","_now","performance","now","Date","run","initParameter","requestAnimationFrame","mainLoop","timestamp","_isOddFrame","_realLastTimestamp","parameterForNewScene","destroy","callInit","currentTime","clampTime","shiftTime","nowAutoSize","move","totalTimePassed","draw","deltaTimestamp","targetTime","deltaFrame","delta","abs","max","min","callLoading","reset","cancelAnimationFrame","removeEventListener","ImageManager","add","Images","Callbacks","self","i","Image","onload","loaded","isLoaded","resolve","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","count","getLoaded","getCount","getImage","nameOrImage","isLoadedPromise","Promise","reject","Layer","layer","isFunction","start","nextFree","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","length","id","concat","forEach","v","k","Array","from","map","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","callback","index","l","clear","LayerManager","layers","addLayer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","result","layerId","ifNull","value","alternative","Scene","configurationClassOrObject","_configuration","layerManager","engine","initDone","additionalModifier","undefined","tickChunk","maxSkippedTickChunk","tickChunkTolerance","timePassed","maxTime","fixedUpdate","output","parameter","images","init","imageManager","then","res","alpha","x","y","widthInPixel","heightInPixel","visibleScreen","_this2","loadingScreen","progress","loading","loadedHeight","h","clearRect","w","fillStyle","fillRect","font","text","isNaN","parseFloat","fillText","random","endTime","end","calcFrame","frames","floor","update","animate","_this3","isArray","SceneAudio","audioStartTime","audioPosition","enableAndroidHack","controller","playbackState","ended","duration","canPlayType","match","MediaController","preload","load","arg","readyState","HAVE_ENOUGH_DATA","playPromise","e","Transform","prototype","m","multiply","matrix","m12","m21","m22","dx","dy","invert","d","m1","m2","m3","m4","m5","rotate","rad","cos","s","sin","translate","scale","sx","sy","transformPoint","px","py","clone","n","slice","SceneNorm","args","transform","transformInvert","cam","zoom","_getViewport","_getViewportByCam","hw","hh","scaleCanvas","x1","y1","save","setTransform","_Scene","restore","SceneNormAudio","_SceneAudio","SceneNormCamera","clampView","toCam","x2","y2","camConfig","zoomMax","zoomMin","zoomFactor","tween","registerEvents","callResize","doubleClickDetectInterval","click","_mousePos","_isDown","_timestamp","camEnable","camDisable","camReset","registerCamEvents","destroyCamEvents","_hasCamChanged","lastCall","ret","_mouseDown","_mouseUp","_mouseOut","_mouseMove","_mouseWheel","_getMousePosition","touches","rect","target","getBoundingClientRect","targetTouches","pageX","left","pageY","top","offsetX","offsetY","preventDefault","my","_cx","_cy","_distance","mx","doubleClick","doubleClickTimer","clearTimeout","event","setTimeout","t","distance","sqrt","_czoom","viewMatrix","ox","oy","ny","wheelDelta","deltaY","zoomIn","zoomOut","zoomTo","sx1","sy1","zoomX","zoomY","Number","MIN_VALUE","NormCamera","_NormCamera","Default","_Default","Audio","_Audio","Norm","_Norm","NormAudio","_NormAudio","Wait","sprite","time","Sequence","timeWait","sequences","shift","sequence","thisTimeWait","position","timelapsed","command","filter","label","reduce","arr","keys","lastTimestamp","sequencePosition","b","hasOwnProperty","find","seq","runSequence","timeLeft","TIMELAPSE_TO_FORCE_DISABLE","TIMELAPSE_TO_STOP","TIMELAPSE_TO_REMOVE","is_difference","disableVote","restTime","Infinity","Circle","givenParameter","parameterList","getParameterList","name","getBaseParameterList","animation","rotation","rotationInRadian","rotationInDegree","scaleX","scaleY","compositeOperation","color","timepassed","beginPath","arc","PI","fill","closePath","Callback","deltaTime","additionalParameter","Group","finished","spriteFinished","Canvas","currentGridSize","gridSize","norm","setParameter","generateTempCanvas","temp_canvas","createElement","tctx","normalizeFullScreen","oldTempCanvas","drawImage","wh","tw","th","additionalBlur","Emitter","staticArray","functionArray","includes","classToEmit","call","FastBlur","darker","pixel","ceil","a","targetW","targetH","imageSmoothingEnabled","image","CENTER","frameX","frameY","frameWidth","frameHeight","normCover","normScale","sX","sY","LEFT_TOP","Text","givenParameters","borderColor","lineWidth","strokeStyle","strokeText","Particle","getGradientImage","r","g","rIndex","gIndex","cr","cg","cb","Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","Color","rgb","Path","oldPath","path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Rect","Scroller","characterList","class","imageDataRGBA","stackblur","StackBlur","currentRadiusPart","onCanvas","radius","radiusPart","_FastBlur","imageData","putImageData","StackBlurCanvas","_CanvasSprite","CanvasSprite","StarField","centerX","moveX","moveY","moveZ","highScale","centerY","scaleZ","starsX","starsY","starsZ","starsOldX","starsOldY","starsNewX","starsNewY","starsEnabled","starsLineWidth","moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","lineTo","_Image","_Text","_StackBlurCanvas","_StarField","_Callback","_Canvas","_Circle","_Emitter","_Group","_Particle","_Path","_Rect","_Scroller","_StackBlur","initialized","degToRad","moveDefault","moveBezier","copy","values","copyLength","moveColor","colorFrom","mix","colorTo","string","movePath","ChangeTo","changeValues","ease","orgValue","isColor","isPath","isBezier","push","bezier","moveAlgorithm","End","EndDisabled","Forever","Aniobject","isDifference","If","ifCallback","AniobjectElse","AniObject","durationBetweenFrames","current","currentFrame","ImageFrame","frameNumber","framesToRight","Loop","times","timesOrg","Move","speed","targetX","targetY","hypotenuse","_ChangeTo","Remove","Once","Shake","shakediff","shakeDiff","shakeDiffHalf","ShowOnce","showOnce","State","states","transitions","defaultState","delegateTo","currentStateName","currentState","isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","WaitDisabled","_End","_EndDisabled","_Forever","_If","_ImageFrame","_Loop","_Move","_Once","_Remove","_Sequence","_Shake","_ShowOnce","_State","Stop","_Stop","StopDisabled","_StopDisabled","_Wait","_WaitDisabled","_Engine"],"mappings":"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"}