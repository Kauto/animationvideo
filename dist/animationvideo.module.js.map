{"version":3,"file":"animationvideo.module.js","sources":["../func/calc.ts","../func/toArray.ts","../Engine.ts","../ImageManager.ts","../Layer.ts","../LayerManager.ts","../func/transform.ts","../func/ifnull.ts","../Middleware/TimingDefault.ts","../Scene.ts","../Animations/Sequence.ts","../Animations/Wait.ts","../Sprites/Sprite.ts","../Sprites/Circle.ts","../Sprites/Group.ts","../Sprites/Canvas.ts","../Sprites/Emitter.ts","../Position.ts","../Sprites/FastBlur.ts","../Sprites/Image.ts","../Sprites/Text.ts","../Sprites/Particle.ts","../Sprites/Rect.ts","../Sprites/StarField.ts","../Sprites.ts","../Sprites/Callback.ts","../Sprites/Path.ts","../Sprites/Scroller.ts","../Sprites/StackBlur.ts","../Animations/Callback.ts","../Animations/ChangeTo.ts","../Animations/Forever.ts","../Animations/Shake.ts","../Animations/ShowOnce.ts","../Animations/State.ts","../Animations.ts","../Animations/End.ts","../Animations/EndDisabled.ts","../Animations/If.ts","../Animations/Image.ts","../Animations/ImageFrame.ts","../Animations/Loop.ts","../Animations/Once.ts","../Animations/Remove.ts","../Animations/Stop.ts","../Animations/StopDisabled.ts","../Animations/WaitDisabled.ts","../Middleware/Camera.ts","../Middleware/CameraControl.ts","../Middleware/Element.ts","../Middleware/Event.ts","../Middleware.ts","../Middleware/CameraControlSecondButton.ts","../Middleware/Click.ts","../Middleware/LoadingScreen.ts","../Middleware/Norm.ts","../Middleware/TimingAudio.ts"],"sourcesContent":["export type WithoutFunction<R> = R extends Function ? never : R\n\nexport default function calc<\n  T = unknown,\n  FunctionParamsType extends any[] = any[],\n  >(\n    c: T | ((...params: FunctionParamsType) => T),\n    ...params: FunctionParamsType): T {\n  return typeof c === \"function\" ? (c as ((...params: FunctionParamsType) => T))(...params) : c;\n}\n","export default function toArray<T>(value:T|T[]):T[]\t{\n\treturn (value === undefined || value === null ? [] : Array.isArray(value) ? value : [value]);\n}","import calc from \"./func/calc.js\";\nimport toArray from \"./func/toArray.js\";\nimport type TimingAudio from \"./Middleware/TimingAudio.js\";\nimport type Scene from './Scene'\n\nexport interface EngineOptions {\n  canvas: HTMLCanvasElement\n  scene?: null | Scene\n  sceneParameter?: Record<any, any>\n  autoSize?: AutoSizeSettings\n  clickToPlayAudio?: boolean\n  reduceFramerate?: boolean\n}\n\nexport interface AutoSizeSettings {\n  enabled: boolean\n  scaleLimitMin: number\n  scaleLimitMax: number\n  scaleFactor: number\n  referenceWidth: () => number\n  referenceHeight: () => number\n  currentScale: number\n  waitTime: number\n  currentWaitedTime: number\n  currentOffsetTime: number\n  offsetTimeLimitUp: number\n  offsetTimeLimitDown: number\n  registerResizeEvents: boolean\n  registerVisibilityEvents: boolean\n  setCanvasStyle: boolean\n  offsetTimeTarget?: number\n  offsetTimeDelta?: number\n}\n\ninterface EventSafe {\n  n: HTMLElement | Window & typeof globalThis | Document\n  e: string\n  f: EventListenerOrEventListenerObject,\n}\n\nexport interface OutputInfo {\n  canvas: HTMLCanvasElement[],\n  context: CanvasRenderingContext2D[],\n  width: number,\n  height: number,\n  ratio: number,\n}\n\n\nclass Engine {\n  _output: OutputInfo\n  _events: EventSafe[]\n  _scene: null | Scene | undefined\n  _newScene: undefined | null | Scene\n  _sceneParameter: undefined | Record<any, any>\n  _isSceneInitialized: boolean\n  _recalculateCanvasIntend: boolean\n  _lastTimestamp: number\n  _referenceRequestAnimationFrame: number | undefined\n  _autoSize: undefined | AutoSizeSettings\n  _canvasCount: number\n  _drawFrame: number[]\n  _reduceFramerate: boolean\n  _realLastTimestamp: number | undefined\n  _isOddFrame: boolean = false\n  _initializedStartTime: number | undefined\n  _promiseSceneDestroying: Promise<any> | undefined\n  _runParameter: undefined | Record<any, any>\n  _moveOnce: boolean = false\n\n  constructor(canvasOrOptions: HTMLCanvasElement | EngineOptions) {\n    let givenOptions: EngineOptions = canvasOrOptions as EngineOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if ((canvasOrOptions as HTMLCanvasElement).getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions as HTMLCanvasElement,\n      };\n    } else if (!(canvasOrOptions as EngineOptions).canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options: EngineOptions = Object.assign(\n      {},\n      givenOptions\n    );\n\n    this._output = {\n      canvas: [],\n      context: [],\n      width: 0,\n      height: 0,\n      ratio: 1,\n    };\n\n    // list of binded events\n    this._events = [];\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    // this._newScene = undefined;\n    // this._promiseSceneDestroying = undefined;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = undefined;\n\n    // data about the output canvas\n    this._output.canvas = toArray(options.canvas);\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings: AutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 2.5,\n        scaleFactor: 1.07,\n        referenceWidth: () => this._output.canvas[0].clientWidth,\n        referenceHeight: () => this._output.canvas[0].clientHeight,\n        currentScale: 1,\n        waitTime: 100,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        // undefined will be autodetect timing\n        // offsetTimeTarget: 25,\n        // offsetTimeDelta: 10,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false,\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        this._events = [\"resize\", \"orientationchange\"].map((e) => ({\n          n: window,\n          e: e,\n          f: this.recalculateCanvas.bind(this),\n        }));\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        this._events.push({\n          n: document,\n          e: \"visibilitychange\",\n          f: this.handleVisibilityChange.bind(this),\n        });\n      }\n      this._recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas[0].width;\n      this._output.height = this._output.canvas[0].height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.canvas.forEach((canvas, index) => {\n      this._output.context[index] = canvas.getContext(\"2d\")!;\n    });\n    this._canvasCount = this._output.canvas.length;\n    this._drawFrame = Array.from({ length: this._canvasCount }, (v) => 0);\n\n    if (options.clickToPlayAudio) {\n      this._events.push({\n        n: this._output.canvas[0],\n        e: \"click\",\n        f: this.playAudioOfScene.bind(this),\n      });\n    }\n\n    this._reduceFramerate = !!options.reduceFramerate;\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f);\n    });\n\n    this.switchScene(options.scene, options.sceneParameter || {});\n  }\n\n  handleVisibilityChange() {\n    if (this._autoSize) this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (\n      this._isSceneInitialized &&\n      this._scene &&\n      (this._scene.timing as TimingAudio).audioElement\n    ) {\n      (this._scene.timing as TimingAudio).audioElement.play();\n    }\n  }\n\n  normContext(ctx: CanvasRenderingContext2D) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  getOutput() {\n    return this._output;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc<number>(this._autoSize.referenceWidth);\n      const height = calc<number>(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.forEach((canvas) => {\n        canvas.width = Math.round(width / this._autoSize!.currentScale);\n        canvas.height = Math.round(height / this._autoSize!.currentScale);\n        if (this._autoSize!.setCanvasStyle) {\n          canvas.style.width = `${width}px`;\n          canvas.style.height = `${height}px`;\n        }\n      });\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas[0].width;\n    this._output.height = this._output.canvas[0].height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  async recalculateFPS() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n      this._referenceRequestAnimationFrame = undefined;\n    }\n    await new Promise((resolve) => requestAnimationFrame(resolve));\n    const start = this._now();\n    const count = 3;\n    for (let i = count; i--;) {\n      await new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n\n    const timeBetweenFrames = (this._now() - start) / count;\n    this._autoSize!.offsetTimeTarget = timeBetweenFrames;\n    this._autoSize!.offsetTimeDelta = timeBetweenFrames / 3;\n\n    if (this._referenceRequestAnimationFrame === undefined) {\n      this._realLastTimestamp = undefined;\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        this._mainLoop.bind(this)\n      );\n    }\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize();\n    }\n    return this;\n  }\n\n  switchScene(scene: Scene | null | undefined, sceneParameter: undefined | Record<any, any> = undefined) {\n    if (scene) {\n      this._newScene = scene;\n      this._sceneParameter = sceneParameter;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  _mainLoop(timestamp:number) {\n    if (!this._referenceRequestAnimationFrame) return;\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    let isRecalculatedCanvas =\n      this._recalculateCanvasIntend &&\n      (!this._reduceFramerate || !this._isOddFrame);\n\n    if (isRecalculatedCanvas) {\n      this._recalculateCanvas();\n      this._recalculateCanvasIntend = false;\n    }\n\n    for (let i = 0; i < this._canvasCount; i++) {\n      this._drawFrame[i] = Math.max(\n        this._drawFrame[i] - 1,\n        isRecalculatedCanvas ? 1 : 0\n      );\n    }\n\n    if (!this._realLastTimestamp) {\n      this._realLastTimestamp = timestamp;\n    }\n    if (!this._initializedStartTime) {\n      this._initializedStartTime = timestamp;\n    }\n\n    if (this._newScene && !this._promiseSceneDestroying) {\n      this._promiseSceneDestroying = Promise.resolve(\n        this._scene ? this._scene.destroy() : undefined\n      );\n      this._promiseSceneDestroying.then((destroyParameterForNewScene) => {\n        this._newScene!.callInit(\n          {\n            run: this._runParameter,\n            scene: this._sceneParameter,\n            destroy: destroyParameterForNewScene,\n          },\n          this\n        );\n        this._scene = this._newScene;\n        this._newScene = undefined;\n        this._promiseSceneDestroying = undefined;\n        this._isSceneInitialized = false;\n        this._lastTimestamp = this._scene!.currentTime();\n        this._initializedStartTime = timestamp;\n      });\n    }\n\n    if (this._scene) {\n      if (this._reduceFramerate) {\n        this._isOddFrame = !this._isOddFrame;\n      }\n\n      if (!this._reduceFramerate || this._isOddFrame) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(timePassed);\n        timePassed = timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          const moveFrame = timePassed !== 0 || this._moveOnce;\n          this._moveOnce = false;\n\n          const nowAutoSize = this._now();\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              const ctx = this._output.context[index];\n              this.normContext(ctx);\n              this._scene.initSprites(index);\n              //this.normContext(ctx);\n            }\n          }\n\n          const drawFrame = this._scene.isDrawFrame(timePassed);\n          if (Array.isArray(drawFrame)) {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(\n                this._drawFrame[i],\n                drawFrame[i],\n                0\n              );\n            }\n          } else {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame, 0);\n            }\n          }\n\n          if (moveFrame) {\n            this._scene.move(timePassed);\n          }\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              if (this._drawFrame[index]) {\n                this._scene.draw(index);\n              }\n            }\n          }\n\n          if (this._autoSize && this._autoSize.enabled) {\n            const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n            if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n              this._autoSize.currentWaitedTime += deltaTimestamp;\n            } else if (moveFrame) {\n              const targetTime =\n                this._autoSize.offsetTimeTarget! *\n                (this._reduceFramerate ? 2 : 1);\n              const deltaFrame = this._now() - nowAutoSize;\n              const delta =\n                (Math.abs(deltaTimestamp - targetTime) >\n                  Math.abs(deltaFrame - targetTime)\n                  ? deltaTimestamp\n                  : deltaFrame) - targetTime;\n              if (Math.abs(delta) <= this._autoSize.offsetTimeDelta!) {\n                this._autoSize.currentOffsetTime =\n                  this._autoSize.currentOffsetTime >= 0\n                    ? Math.max(\n                      0,\n                      this._autoSize.currentOffsetTime -\n                      this._autoSize.offsetTimeDelta!\n                    )\n                    : Math.min(\n                      0,\n                      this._autoSize.currentOffsetTime +\n                      this._autoSize.offsetTimeDelta!\n                    );\n              } else {\n                if (\n                  delta < 0 &&\n                  this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime <=\n                    -this._autoSize.offsetTimeLimitDown\n                  ) {\n                    this._autoSize.currentScale = Math.max(\n                      this._autoSize.scaleLimitMin,\n                      this._autoSize.currentScale / this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                } else if (\n                  delta > 0 &&\n                  this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime >=\n                    this._autoSize.offsetTimeLimitUp\n                  ) {\n                    this._autoSize.currentScale = Math.min(\n                      this._autoSize.scaleLimitMax,\n                      this._autoSize.currentScale * this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < this._canvasCount; i++) {\n            this.normContext(this._output.context[i]);\n          }\n          this._isSceneInitialized = this._scene.callLoading({\n            timePassed: timestamp - this._realLastTimestamp,\n            totalTimePassed: timestamp - this._initializedStartTime,\n          });\n          if (this._isSceneInitialized) {\n            this._scene.reset();\n            this._lastTimestamp = this._scene.currentTime();\n            this._moveOnce = true;\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      }\n    }\n    this._realLastTimestamp = timestamp;\n  }\n\n  async run(runParameter: Record<any, any>) {\n    this._runParameter = runParameter || {};\n\n    await this.stop();\n\n    this._realLastTimestamp = this._initializedStartTime = undefined;\n\n    if (this._autoSize && !this._autoSize.offsetTimeTarget) {\n      await this.recalculateFPS();\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  async stop() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    }\n    this._referenceRequestAnimationFrame = undefined;\n    this._scene && (await this._scene.destroy());\n  }\n\n  async destroy() {\n    await this.stop();\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f);\n    });\n    this._events = [];\n\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  Images:Record<string, HTMLImageElement>\n  count: number\n  loaded: number\n  _resolve: ((value:unknown)=>void)[] = []\n\n  constructor() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n  }\n\n  add<\n  F extends (key:string, image:HTMLImageElement)=>void\n  >(\n    Images: string[]|Record<string,string>, \n    Callbacks: undefined|(()=>void)|F[]|Record<string,F> = undefined\n    ) {\n    const self = this;\n    for (const key in Images) {\n      if (!self.Images[key]) {\n        const imageSrc = (Images as Record<string,string>)[key];\n        self.Images[key] = new window.Image();\n        self.Images[key].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n            (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n          }\n          if (self._resolve && self.isLoaded()) {\n            self._resolve.forEach(c => c(undefined));\n            self._resolve = [];\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[key].crossOrigin = \"anonymous\";\n        if (imageSrc.substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL;\n          const svg = new window.Blob([imageSrc], { type: \"image/svg+xml\" });\n          self.Images[key].src = DOMURL.createObjectURL(svg);\n        } else {\n          if (/^(https?:)?\\/\\//.test(imageSrc)) {\n            self.Images[key].onerror = () => {\n              // load again without crossOrigin\n              const img = new window.Image();\n              img.onload = self.Images[key].onload;\n              self.Images[key] = img;\n              self.Images[key].src = imageSrc;\n            };\n            self.Images[key].crossOrigin = \"anonymous\";\n          }\n          self.Images[key].src = imageSrc;\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n          (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self._resolve && self.isLoaded()) {\n      self._resolve.forEach(c => c(undefined));\n      self._resolve = [];\n    }\n    return self;\n  }\n\n  reset() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n    return this;\n  }\n\n  isLoaded() {\n    return this.loaded === this.count;\n  }\n\n  getImage(nameOrImage:HTMLImageElement|string) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : this.Images[nameOrImage];\n  }\n\n  isLoadedPromise() {\n    return this.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          this._resolve.push(resolve);\n        });\n  }\n}\n\nexport default new ImageManager();\n","import type { ISpriteFunctionOrSprite, ISprite, TTagParameter } from './Sprites/Sprite'\n\nexport interface LayerCallbackData {\n  elementId: number\n  layerId: number\n  element: ISpriteFunctionOrSprite\n  isFunction: boolean\n  layer: Layer\n}\nexport type LayerCallback = (data: LayerCallbackData) => void | boolean\n\nclass Layer {\n  _layer: (undefined | ISpriteFunctionOrSprite)[]\n  _isFunction: (undefined | boolean)[]\n  _start: number\n  _nextFree: number\n  _canvasIds: number[]\n\n  constructor(canvasIds: undefined | number | number[]) {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n    this._canvasIds =\n      canvasIds === undefined\n        ? []\n        : Array.isArray(canvasIds)\n          ? canvasIds\n          : [canvasIds];\n  }\n\n  addElement(element: ISpriteFunctionOrSprite) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element: ISpriteFunctionOrSprite) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId: number) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element: ISpriteFunctionOrSprite) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element: ISpriteFunctionOrSprite) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId: number) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = undefined;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else if (this._layer[elementId]) {\n      this._layer[elementId] = undefined;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  isCanvasId(canvasId: number|undefined) {\n    return (\n      canvasId === undefined ||\n      !this._canvasIds.length ||\n      this._canvasIds.includes(canvasId)\n    );\n  }\n\n  forEach(callback: LayerCallback, layerId: number = 0) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        if (callback({\n          elementId: index,\n          layerId,\n          element,\n          isFunction: this._isFunction[index]!,\n          layer: this\n        }) === false) {\n          return;\n        }\n      }\n    }\n  }\n\n  getElementsByTag(tag: TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  play(label: string = \"\", timelapsed: number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer\";\nimport type { LayerCallback } from \"./Layer\"\nimport type { ISprite, TTagParameter } from './Sprites/Sprite'\n\n\nclass LayerManager {\n  _layers: Layer[]\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer(canvasIds));\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer(canvasIds))\n    );\n    return result;\n  }\n\n  getById(layerId: number) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback: LayerCallback, canvasId?: number|undefined) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      if (this._layers[i].isCanvasId(canvasId)) {\n        this._layers[i].forEach(callback, i)\n      }\n    }\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  getElementsByTag(tag:TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\n\nexport default class Transform {\n  m: [number, number, number, number, number, number] = [1, 0, 0, 1, 0, 0];\n\n  __constuct() {\n    this.reset()\n  }\n\n  reset() {\n    this.m = [1, 0, 0, 1, 0, 0];\n    return this;\n  }\n\n  multiply(matrix: Transform) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  };\n\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  };\n\n  rotate(rad: number) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  };\n\n  translate(x: number, y: number) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  };\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  };\n\n  transformPoint(px: number, py: number):[number, number] {\n    const x = px;\n    const y = py;\n    px = x * this.m[0] + y * this.m[2] + this.m[4];\n    py = x * this.m[1] + y * this.m[3] + this.m[5];\n    return [px, py];\n  };\n\n  clone() {\n    const n = new Transform();\n    n.m = this.m.slice(0) as [number, number, number, number, number, number];\n    return n;\n  }\n}","export default function ifNull<T>(value:T|null|undefined, alternative:T):T\t{\n\t//@ts-ignore\n\treturn (value === undefined || value === null || value === \"\" ? alternative : value);\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ConfigurationObject, ParameterList, ParameterListWithoutTime } from \"../Scene\";\n\n\nexport interface MiddlewareTimingDefaultOptions {\n  tickChunk?: OrFunction<number>\n  maxSkippedTickChunk?:OrFunction<number|undefined>\n  tickChunkTolerance?:OrFunction<number|undefined>\n}\n\nexport default class TimingDefault implements ConfigurationObject {\n  _configuration: MiddlewareTimingDefaultOptions\n  _tickChunk: number\n  _maxSkippedTickChunk: number\n  _tickChunkTolerance: number\n\n  type = \"timing\"\n  totalTimePassed = 0\n\n  constructor(configuration:MiddlewareTimingDefaultOptions = {}) {\n    this._configuration = configuration;\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 120)\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  init(_params:ParameterListWithoutTime) {}\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime({ timePassed } : ParameterList) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime({ timePassed } : ParameterList) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  get tickChunk() {\n    return this._tickChunk;\n  }\n\n  isChunked() {\n    return !!this._tickChunk;\n  }\n\n  hasOneChunkedFrame({ timePassed } : ParameterList) {\n    return timePassed >= this._tickChunk - this._tickChunkTolerance;\n  }\n\n  calcFrames({ timePassed } : ParameterList) {\n    return Math.min(\n      this._maxSkippedTickChunk,\n      Math.floor((timePassed + this._tickChunkTolerance) / this._tickChunk)\n    );\n  }\n}\n","import ImageManager from \"./ImageManager\";\nimport LayerManager from \"./LayerManager\";\nimport calc, { WithoutFunction } from \"./func/calc\";\nimport toArray from \"./func/toArray\";\nimport Transform from \"./func/transform\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\nimport { OutputInfo } from \"./Engine\";\nimport type Engine from \"./Engine\";\nimport type { ISprite, ISpriteFunction, ISpriteFunctionOrSprite } from \"./Sprites/Sprite\";\nimport type { addPrefix, OrFunction, OrPromise, ValueOf } from \"./helper\";\nimport type Camera from \"./Middleware/Camera\";\nimport type { CameraPosition } from \"./Middleware/Camera\";\nimport type CameraControl from \"./Middleware/CameraControl\";\nimport type TimingAudio from \"./Middleware/TimingAudio\";\n\nexport interface RectPosition {\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n}\n\nexport interface ParameterListWithoutTime {\n  engine: Engine\n  scene: Scene\n  imageManager: typeof ImageManager\n  layerManager: LayerManager\n  totalTimePassed: number\n  output: OutputInfo\n}\n\nexport interface ParameterList extends ParameterListWithoutTime { \n  timePassed: number \n}\n\nexport interface ParameterListFixedUpdate extends ParameterList { \n  lastCall: boolean\n}\n\nexport interface ParameterListCanvas extends ParameterListWithoutTime { \n  canvasId: undefined|number\n}\n\nexport interface ParameterListLoading extends ParameterList {\n    timePassed: number\n    totalTimePassed: number\n    progress: string | number\n}\n\nexport interface ParameterListInitDestroy extends ParameterList {\n  parameter: any\n}\n\nexport interface ElementClickInfo {\n  layerId: number\n  element: ISprite\n  elementId: number\n}\n\nexport interface ElementPositionInfo {\n  mx: number\n  my: number\n  x: number\n  y: number\n}\n\nexport type ParameterListClickElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport type ParameterListClickNonElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport interface ParameterListPositionEvent extends ParameterListWithoutTime {\n  event: Event | MouseEvent | TouchEvent\n  position: [number, number]\n  x:number\n  y:number\n  button: number\n}\n\nexport type EventsReturn = (keyof HTMLElementEventMap|[keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[]\n\nexport interface ConfigurationObject extends Record<string, any> {\n  init?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  destroy?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  enabled?: boolean\n  type?: string\n  images?: OrFunction<string[] | Record<string, string>>\n  endTime?: OrFunction<number>\n  loading?: (params: ParameterListLoading) => void\n  viewport?: (params: ParameterListWithoutTime, matrix:Transform) => Transform\n  currentTime?: (params: ParameterListWithoutTime) => number\n  clampTime?: (params: ParameterList) => number\n  shiftTime?: (params: ParameterList) => number\n  isDrawFrame?: (params: ParameterList) => number|number[]\n  isChunked?: OrFunction<boolean>\n  additionalModifier?: (params: ParameterListWithoutTime, additionalModifier: AdditionalModifier) => AdditionalModifier\n  calcFrames?: OrFunction<number, [ParameterList]>\n  tickChunk?: OrFunction<number, [ParameterListWithoutTime]>\n  fixedUpdate?: (params: ParameterListFixedUpdate) => void\n  draw?: (params: ParameterListCanvas) => void\n  update?: (params: ParameterList) => void\n  reset?: (params: ParameterListWithoutTime) => LayerManager | ISpriteFunctionOrSprite[][]\n  preventDefault?: OrFunction<boolean>,\n  events?: OrFunction<EventsReturn, [ParameterListInitDestroy]>\n  initSprites?: (params: ParameterListCanvas) => void\n  doubleClickElement?: (params: ParameterListClickElement) => void\n  clickElement?: (params: ParameterListClickElement) => void\n  hoverElement?: (params: ParameterListClickElement) => void\n  doubleClickNonElement?: (params: ParameterListClickNonElement) => void\n  clickNonElement?: (params: ParameterListClickNonElement) => void\n  hoverNonElement?: (params: ParameterListClickNonElement) => void\n  mouseDown?: (params: ParameterListPositionEvent) => void\n  mouseUp?: (params: ParameterListPositionEvent) => void\n  mouseOut?: (params: ParameterListPositionEvent) => void\n  mouseMove?: (params: ParameterListPositionEvent) => void\n  mouseWheel?: (params: ParameterListPositionEvent) => void\n  doubleClick?: (params: ParameterListPositionEvent) => void\n  click?: (params: ParameterListPositionEvent) => void\n}\n\nexport interface ConfigurationConstructor {\n  new (options?: Record<string, any>): ConfigurationObject\n}\n\nexport type ConfigurationClassOrObject = ConfigurationObject | ConfigurationConstructor\n\ntype MiddlewareCommandList<T = ConfigurationObject> = {\n  _all: T[],\n  init: T[],\n  isDrawFrame: T[],\n  initSprites: T[],\n  fixedUpdate: T[],\n  update: T[],\n  draw: T[],\n  destroy: T[],\n  reset: T[],\n  resize: T[],\n  currentTime: T[],\n  clampTime: T[],\n  shiftTime: T[],\n  isChunked: T[],\n  hasOneChunkedFrame: T[],\n  calcFrames: T[],\n  tickChunk: T[],\n  additionalModifier: T[],\n} & Record<addPrefix<string, 't_'>, T[]>\n\ntype FullParameterList = ParameterListWithoutTime & Record<string, any>\n\nexport interface AdditionalModifier {\n  alpha: number\n  x: number\n  y: number\n  width: number\n  height: number\n  widthInPixel: number\n  heightInPixel: number\n  scaleCanvas: number\n  visibleScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  fullScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  cam?: CameraPosition\n  radius?: number\n}\n\nconst defaultMiddlewareCommandList = {\n  _all: [],\n  init: [],\n  isDrawFrame: [],\n  initSprites: [],\n  fixedUpdate: [],\n  update: [],\n  draw: [],\n  destroy: [],\n  reset: [],\n  resize: [],\n  currentTime: [],\n  clampTime: [],\n  shiftTime: [],\n  isChunked: [],\n  hasOneChunkedFrame: [],\n  calcFrames: [],\n  tickChunk: [],\n  additionalModifier: [],\n}\n\n\n\nclass Scene {\n  _layerManager: LayerManager\n  _imageManager: typeof ImageManager\n  _totalTimePassed: number\n  _engine: Engine | undefined\n  _middleware: MiddlewareCommandList<ConfigurationObject> = defaultMiddlewareCommandList\n  _stopPropagation: boolean = false\n  _transform: Transform | undefined\n  _transformInvert: Transform | undefined\n  _additionalModifier: AdditionalModifier | undefined\n  _initDone: boolean = false\n  _endTime: number | undefined\n  _resetIntend: boolean = false\n\n  constructor(...configurationClassOrObjects: ConfigurationClassOrObject[]) {\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n    this._totalTimePassed = 0;\n    this._imageManager = ImageManager;\n\n    this.middlewares = configurationClassOrObjects;\n    if (!this.middlewareByType(\"timing\")) {\n      this.middlewares = [TimingDefault as ConfigurationConstructor, ...this.middlewares as ConfigurationObject[]];\n    }\n  }\n\n  _output() {\n    return this._engine?.getOutput();\n  }\n\n  set middlewares(middlewares: ConfigurationClassOrObject | ConfigurationClassOrObject[]) {\n    this._middleware = (toArray(middlewares)\n      .map((configurationClassOrObject) =>\n        typeof configurationClassOrObject === \"function\"\n          ? new (configurationClassOrObject as ConfigurationConstructor)()\n          : configurationClassOrObject\n      ) as ConfigurationObject[])\n      .reduce(\n        (middlewareCommandList: MiddlewareCommandList<ConfigurationObject>, c: ConfigurationObject) => {\n          for (let command of Object.keys(middlewareCommandList)) {\n            if (command in c) {\n              middlewareCommandList[command as keyof MiddlewareCommandList<ConfigurationObject>].push(c);\n            }\n          }\n          middlewareCommandList._all.push(c);\n          if (!(\"enabled\" in c)) c.enabled = true;\n          if (c.type) middlewareCommandList[`t_${c.type}`] = [c];\n          return middlewareCommandList;\n        },\n        defaultMiddlewareCommandList\n      );\n  }\n  get middlewares() {\n    return this._middleware._all;\n  }\n\n  middlewareByType(type: string) {\n    const objs = this._middleware._all.filter((c) => c.type === type);\n    if (objs.length) {\n      return objs[objs.length - 1];\n    }\n  }\n\n  has(command: string) {\n    return (\n      command in this._middleware ||\n      this._middleware._all.some((c) => command in c)\n    );\n  }\n\n  do<\n    K extends string,\n    D = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>,\n    R = D | undefined\n  >(\n    command: K,\n    params: P,\n    defaultValue: D | undefined,\n    func: (ConfigurationObjects: ConfigurationObject[], params: P, defaultValue: D | undefined) => R\n  ) {\n    let objs =\n      this._middleware[command as keyof MiddlewareCommandList] ||\n      this._middleware._all.filter((c) => command in c);\n    objs = objs.filter((v: ConfigurationObject) => v.enabled);\n    if (!objs.length) {\n      return defaultValue;\n    }\n    const fullParams = this._param(params);\n    return func(objs, fullParams, defaultValue);\n  }\n\n  map<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P\n  ) {\n    return this.do<K, R[], P, R[]>(command, params, [], (objs, fullParams) =>\n      objs.map((c: ConfigurationObject) => c[command](fullParams))\n    ) as R[];\n  }\n\n  pipe<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeBack<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let i = objs.length - 1; i >= 0; i--) {\n        const c = objs[i];\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeMax<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, number | number[], P>(command, params, Array.isArray(pipe) ? pipe.map(p => p - 0) : pipe as unknown as number - 0, (objs, fullParams, pipe) => {\n      let res = pipe;\n      this._stopPropagation = false;\n\n      if (Array.isArray(res)) {\n        // res is number\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = (res as unknown as number[]).map((v, i) => Math.max(v, (newRes as number[])[i]));\n          } else {\n            res = res.map((v, i) => Math.max(v, newRes as number));\n          }\n          if (this._stopPropagation) break;\n        }\n      } else {\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = newRes.map((v) => Math.max(v, res as number));\n          } else {\n            res = Math.max(newRes, res as number);\n          }\n          if (this._stopPropagation) break;\n        }\n      }\n      return res;\n    });\n  }\n\n  async pipeAsync<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterList>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P, Promise<R | undefined>>(command, params, pipe, async (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = await c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  value<\n    K extends string,\n    R = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P | undefined = undefined\n  ):WithoutFunction<R>|undefined {\n    let objs: ConfigurationObject[] =\n      this._middleware[command as keyof MiddlewareCommandList<ConfigurationObject>] ||\n      this._middleware._all.filter((c: ConfigurationObject) => command in c);\n    objs.filter((v) => v.enabled);\n    if (!objs.length) {\n      return undefined;\n    }\n    const obj = objs[objs.length - 1];\n    return calc(obj[command], this._param(params || {}));\n  }\n\n  stopPropagation() {\n    this._stopPropagation = true;\n  }\n\n  currentTime() {\n    return this.pipe(\"currentTime\", {})!;\n  }\n\n  clampTime(timePassed: number) {\n    return this.pipe(\"clampTime\", { timePassed })!;\n  }\n\n  shiftTime(timePassed: number) {\n    return this.pipe(\"shiftTime\", { timePassed })!;\n  }\n\n  cacheClear() {\n    this._transform = undefined;\n    this._transformInvert = undefined;\n  }\n\n  viewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this.pipe(\"viewport\", {}, new Transform());\n      this._transformInvert = undefined;\n    }\n    return this._transform!;\n  }\n\n  transformPoint(x: number, y: number, scale = this._additionalModifier!.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this.viewport().clone().invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  callInit(parameter: any, engine: Engine) {\n    this._engine = engine;\n    this.resize();\n    const images = this.value(\"images\");\n    if (images) {\n      this._imageManager.add(images);\n    }\n    Promise.all(\n      this.map(\"init\", {\n        parameter,\n      })\n    ).then((res) => (this._initDone = true));\n  }\n\n  get additionalModifier() {\n    return this._additionalModifier!;\n  }\n\n  updateAdditionalModifier() {\n    const output = this._output()!;\n    this._additionalModifier = this.pipe(\n      \"additionalModifier\",\n      {},\n      {\n        alpha: 1,\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height,\n        widthInPixel: output.width,\n        heightInPixel: output.height,\n        scaleCanvas: 1,\n        visibleScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n        fullScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n      }\n    );\n  }\n\n  resize() {\n    const output = this._output()!;\n    this.updateAdditionalModifier();\n    this.pipe(\"resize\", {});\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).resize(output, this._additionalModifier!);\n      }\n    });\n  }\n\n  async destroy() {\n    const parameter = await this.pipeAsync(\"destroy\", {});\n    this._initDone = false;\n    return parameter;\n  }\n\n  get timing() {\n    return this._middleware.t_timing[0] as TimingDefault|TimingAudio;\n  }\n\n  get camera() {\n    return this._middleware.t_camera[0] as Camera;\n  }\n\n  get control() {\n    return this._middleware.t_control[0] as CameraControl;\n  }\n\n  get totalTimePassed() {\n    return this._totalTimePassed;\n  }\n\n  _param<K extends Record<string, any>>(additionalParameter: K | undefined = undefined): ParameterListWithoutTime & K {\n    return Object.assign({\n      engine: this._engine!,\n      scene: this,\n      imageManager: this._imageManager,\n      layerManager: this._layerManager,\n      totalTimePassed: this._totalTimePassed,\n      output: this._output()!,\n    }, additionalParameter);\n  }\n\n  callLoading(args: {\n    timePassed: number\n    totalTimePassed: number\n  }) {\n    if (this._imageManager.isLoaded() && this._initDone) {\n      this._endTime = this.value(\"endTime\");\n      const progress = \"Click to play\";\n      this.value(\"loading\", {\n        ...args,\n        progress\n      });\n      return true;\n    }\n    const progress = this._imageManager.count\n      ? this._imageManager.loaded / this._imageManager.count\n      : \"Loading...\";\n\n    this.value(\"loading\", {\n      ...args,\n      progress\n    });\n    return false;\n  }\n\n  fixedUpdate(timePassed: number, lastCall: boolean) {\n    this.map(\"fixedUpdate\", {\n      timePassed,\n      lastCall,\n    });\n  }\n\n  isDrawFrame(timePassed: number) {\n    return this.pipeMax(\"isDrawFrame\", { timePassed }, timePassed !== 0)!;\n  }\n\n  move(timePassed:number) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    if (this._resetIntend) {\n      this.reset();\n      // Jump back?\n    } else if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset();\n      this.initSprites();\n      this._totalTimePassed = timePassed;\n    } else if (this._endTime && this._endTime <= this._totalTimePassed) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._endTime;\n      this._totalTimePassed = this._endTime;\n      // End Engine\n      this.map(\"end\", { timePassed });\n    }\n    if (this.value(\"isChunked\")) {\n      if (this.value(\"hasOneChunkedFrame\", { timePassed })) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames = this.value(\"calcFrames\", { timePassed })! - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(this.value(\"tickChunk\", {})!, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(timePassed, true);\n    }\n\n    this.map(\"update\", { timePassed });\n\n    this._layerManager.forEach(({ element, isFunction, layer, elementId }) => {\n      if (!isFunction) {\n        if ((element as ISprite).animate(timePassed)) {\n          layer.deleteById(elementId);\n        }\n      }\n    });\n  }\n\n  draw(canvasId:number) {\n    this.map(\"draw\", { canvasId });\n    const context = this._output()!.context[canvasId]!;\n    context.save();\n\n    context.setTransform(...this.viewport().m);\n\n    this._layerManager.forEach(\n      ({ layer, layerId, element, isFunction, elementId }) => {\n        if (isFunction) {\n          if (\n            (element as ISpriteFunction)(\n              this._param({\n                layerId,\n                elementId,\n                layer,\n                context,\n              })\n            )\n          ) {\n            layer.deleteById(elementId);\n          }\n        } else {\n          (element as ISprite).draw(context, this._additionalModifier!);\n        }\n      },\n      canvasId\n    );\n\n    context.restore();\n  }\n\n  initSprites(canvasId: number|undefined = undefined) {\n    const context = this._output()!.context[canvasId || 0]!;\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).callInit(context, this._additionalModifier!);\n      }\n    }, canvasId);\n    this.map(\"initSprites\", { canvasId });\n  }\n\n  resetIntend() {\n    this._resetIntend = true;\n  }\n\n  reset() {\n    this._totalTimePassed = 0;\n    this._resetIntend = false;\n    let result = this.pipe<\"reset\",LayerManager | ISpriteFunctionOrSprite[][], {}>(\n      \"reset\",\n      {},\n      new LayerManager()\n    );\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach((v) => {\n        (result as LayerManager).addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Wait from \"./Wait\";\n\nexport enum SequenceRunCommand {\n  FORCE_DISABLE = \"F\",\n  STOP = \"S\",\n  REMOVE = \"R\"\n}\n\nexport type TWaitTime = number;\nexport type TLabel = string;\nexport type TAnimationFunction = IAnimation['run'];\nexport type TAnimationSequence = (TWaitTime | TLabel | TAnimationFunction | IAnimation)[]\nexport type AnimationSequenceOptions = TAnimationSequence | TAnimationSequence[]\n\ninterface ISequence {\n  position: number\n  timelapsed: number\n  sequence: IAnimation[]\n  label: Record<string, number>\n  enabled: boolean\n}\n\nclass Sequence implements IAnimation {\n  sequences: ISequence[] = []\n  lastTimestamp: number = 0\n  enabled: boolean = true\n\n  constructor(...sequences: AnimationSequenceOptions) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift() as number;\n    }\n\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait: number = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift() as number;\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof (command as IAnimation).run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command } as IAnimation\n              : command as IAnimation\n          )\n          .filter(command => typeof (command as IAnimation).run === \"function\"),\n        label: sequence.reduce((arr: Record<string, number>, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n  }\n\n  reset(timelapsed: number = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0]?.reset?.(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (label in sequencePosition.label) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        } else {\n          b = b || (sequencePosition.sequence.some(seq => seq.play?.(label, timelapsed)));\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  _runSequence(sprite: ISprite, sequencePosition: ISequence, timePassed: number) {\n    let timeLeft: number = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      const res = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (res === true) {\n        timeLeft = 0;\n      } else if (res === false) {\n        return -1;\n      } else if (res === SequenceRunCommand.FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.REMOVE) {\n        return true;\n      }\n\n      timeLeft = res as number;\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite: ISprite, time:number, is_difference:boolean=false) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this._runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\nexport default Sequence;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class Wait implements IAnimation{\n  _duration:number\n  constructor(duration:OrFunction<number>) {\n    this._duration = calc(duration) - 0;\n  }\n\n  run(sprite: ISprite, time: number) {\n    // return time left\n    return time - this._duration;\n  }\n}\n","import type { OutputInfo } from \"../Engine\"\nimport type { AdditionalModifier, ParameterListWithoutTime } from \"../Scene\"\nimport type { OrFunction, OrPromise } from \"../helper\";\nimport type Layer from \"../Layer\";\nimport Sequence from \"../Animations/Sequence\";\nimport { IAnimation } from \"../Animations/Animation\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\n\nexport type TTagParameter = string | string[] | ((value: string, index: number, array: string[]) => unknown)\nexport interface ISprite {\n    p: SpriteBaseOptionsInternal & Record<string, any>\n    changeToPathInit?: (from: number[][][] | string, to: number[][][] | string) => [number[][][], number[][][]]\n    changeToPath?: (progress: number, data: {\n        pathFrom: number[][][]\n        pathTo: number[][][]\n    }) => number[][][]\n    getElementsByTag: (tag: TTagParameter) => ISprite[]\n    play: (label: string, timelapsed?: number) => void\n    resize: (output: OutputInfo, additionalModifier: AdditionalModifier) => OrPromise<void>\n    callInit: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => OrPromise<void>\n    animate: (timepassed: number) => boolean\n    draw: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => void\n    detect: (context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number) => ISprite | \"c\" | undefined\n    detectDraw: (context: CanvasRenderingContext2D, color: string) => void\n}\n\nexport type ISpriteFunction = (params: ParameterListWithoutTime & {\n    layerId: number\n    elementId: number\n    layer: Layer\n    context: CanvasRenderingContext2D,\n}) => number | boolean\n\nexport type ISpriteFunctionOrSprite = ISpriteFunction | ISprite\n\n\n\nexport interface SpriteBaseOptions {\n    animation?: OrFunction<Sequence | IAnimation[]>\n    enabled?: OrFunction<boolean>\n    isClickable?: OrFunction<boolean>\n    tag?: OrFunction<string[] | string>\n}\n\nexport interface SpriteBaseOptionsInternal {\n    animation: Sequence | undefined\n    enabled: boolean\n    isClickable: boolean\n    tag: string[]\n}\nexport type TParameterList<T, R> = {\n    [P in keyof R & keyof T]?: R[P] | ((value: T[P], givenParameter: T) => R[P]);\n}\n\nexport class SpriteBase<O extends SpriteBaseOptions = SpriteBaseOptions, P extends SpriteBaseOptionsInternal = SpriteBaseOptionsInternal> implements ISprite {\n    _needInit = true\n    p: P\n    constructor(givenParameter: O) {\n        this.p = this._parseParameterList(this._getParameterList(), givenParameter);\n    }\n\n    _parseParameterList(parameterList: TParameterList<O, P>, givenParameter: O): P {\n        const parameterEntries = Object.entries(parameterList as ReturnType<this[\"_getParameterList\"]>)\n        const valueEntries = parameterEntries.map(\n            ([name, d]) => {\n                const givenValue = givenParameter[name as keyof O]\n                return [name,\n                    typeof d === \"function\"\n                        ? d(givenValue, givenParameter)\n                        : ifNull(calc(givenValue), d)\n                ];\n            }\n        );\n        return Object.fromEntries(valueEntries)\n    }\n\n    _getBaseParameterList() {\n        return {\n            // animation\n            animation: (value: OrFunction<Sequence | IAnimation[]> | undefined, givenParameter: O) => {\n                const result = calc(value);\n                return Array.isArray(result) ? new Sequence(result) : result;\n            },\n            // if it's rendering or not\n            enabled: true,\n            // if you can click it or not\n            isClickable: false,\n            // tags to mark the sprites\n            tag: (value: OrFunction<string | undefined | string[]>, givenParameter: O) => {\n                const v: string | string[] | undefined = calc(value)\n                return Array.isArray(v) ? v : v ? [v] : [];\n            }\n        }\n    }\n\n    _getParameterList():TParameterList<O,P> {\n        return this._getBaseParameterList() as TParameterList<O, P>\n    }\n\n    getElementsByTag(tag: TTagParameter):ISprite[] {\n        if (typeof tag === \"function\") {\n            if (this.p.tag.filter(tag).length) {\n                return [this];\n            }\n        } else {\n            const aTag = Array.isArray(tag) ? tag : [tag];\n            if (aTag.filter(tag => this.p.tag.includes(tag)).length) {\n                return [this];\n            }\n        }\n        return [];\n    }\n\n\n    // Animation-Funktion\n    animate(timepassed: number) {\n        if (this.p.animation) {\n            // run animation\n            if (this.p.animation.run(this, timepassed, true) === true) {\n                // disable\n                this.p.enabled = false;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    play(label = \"\", timelapsed = 0) {\n        if (this.p.animation) {\n            this.p.animation.play?.(label, timelapsed);\n        }\n    }\n\n    init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n    callInit(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier):OrPromise<void> {\n        if (this._needInit) {\n            this.init(context, additionalModifier);\n            this._needInit = false;\n        }\n    }\n\n\n    resize(output: OutputInfo, additionalModifier: AdditionalModifier):OrPromise<void> { }\n\n    _detectHelperCallback(p: {\n        enabled: boolean\n        isClickable: boolean\n        x: number\n        y: number\n        scaleX: number\n        scaleY: number\n        rotation: number\n    }, context: CanvasRenderingContext2D, x: number, y: number, callback: () => boolean) {\n        let a = false;\n        if (p.enabled && p.isClickable) {\n            context.save();\n            context.translate(p.x, p.y);\n            context.scale(p.scaleX, p.scaleY);\n            context.rotate(p.rotation);\n            context.beginPath();\n            a = callback();\n            context.restore();\n        }\n        return a ? this as ISprite : undefined;\n    }\n\n    _detectHelper({\n        enabled,\n        isClickable,\n        x = 0,\n        y = 0,\n        width = 0,\n        height = 0,\n        scaleX = 1,\n        scaleY = 1,\n        rotation = 0\n    }: {\n        enabled: boolean\n        isClickable: boolean\n        x?: number\n        y?: number\n        width?: number\n        height?: number\n        scaleX?: number\n        scaleY?: number\n        rotation?: number\n    }, context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number, moveToCenter: boolean, callback?: (hw: number, hh: number) => boolean) {\n        let a = false;\n        if (enabled && isClickable) {\n            const hw = width / 2;\n            const hh = height / 2;\n            context.save();\n            if (moveToCenter) {\n                context.translate(x + hw, y + hh);\n            } else {\n                context.translate(x, y);\n            }\n            context.scale(scaleX, scaleY);\n            context.rotate(rotation);\n            context.beginPath();\n            if (callback) {\n                a = callback(hw, hh);\n            } else {\n                context.rect(-hw, -hh, width, height);\n                context.closePath();\n                a = context.isPointInPath(coordinateX, coordinateY);\n            }\n            context.restore();\n        }\n        return a ? this as ISprite: undefined;\n    }\n\n    detectDraw(context: CanvasRenderingContext2D, color: string) { }\n\n    detect(context: CanvasRenderingContext2D, x: number, y: number):ISprite | \"c\" | undefined { return undefined }\n\n    draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TParameterList } from \"./Sprite\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\nconst degToRad = Math.PI / 180;\n\n\nexport interface SpriteCircleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\nexport interface SpriteCircleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string\n}\n\nexport const CircleParameterList = {\n  // position\n  x: 0 as number,\n  y: 0 as number,\n  // rotation\n  rotation: (value: SpriteCircleOptions['rotation'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(\n      calc(value),\n      ifNull(\n        calc(givenParameter.rotationInRadian),\n        ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n      )\n    ) as number\n  },\n  // scalling\n  scaleX: (value: SpriteCircleOptions['scaleX'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  scaleY: (value: SpriteCircleOptions['scaleY'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  // alpha\n  alpha: 1,\n  // blending\n  compositeOperation: \"source-over\",\n  // color\n  color: \"_fff\"\n}\n\n// Sprite\n// Draw a Circle\nexport default class Circle extends SpriteBase<SpriteCircleOptions, SpriteCircleOptionsInternal> implements ISprite {\n  constructor(givenParameter: SpriteCircleOptions) {\n    super(givenParameter)\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList) as TParameterList<SpriteCircleOptions, SpriteCircleOptionsInternal>\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelperCallback(this.p, context, x, y, () => {\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      return context.isPointInPath(x, y);\n    });\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.beginPath();\n      context.fillStyle = this.p.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      context.fill();\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine.js\"\nimport { OrFunction } from \"../helper.js\"\nimport { AdditionalModifier } from \"../Scene.js\"\nimport { CircleParameterList } from \"./Circle.js\"\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TTagParameter } from \"./Sprite.js\"\n\nexport interface SpriteGroupOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  sprite?: OrFunction<ISprite>\n}\n\nexport interface SpriteGroupOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number|undefined\n  y: number|undefined\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  sprite: ISprite[]\n}\n\n\nexport default class Group<O extends SpriteGroupOptions = SpriteGroupOptions, P extends SpriteGroupOptionsInternal = SpriteGroupOptionsInternal> extends SpriteBase<O, P> {\n  constructor(givenParameter:O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      sprite: []\n    });\n  }\n\n  getElementsByTag(tag: TTagParameter):ISprite[] {\n    let result:ISprite[] = super.getElementsByTag(tag);\n    for (const sprite of this.p.sprite) {\n      const ans = sprite.getElementsByTag(tag);\n      if (ans) {\n        result = result.concat(ans);\n      }\n    }\n    return result;\n  }\n\n  // overwrite change\n  animate(timepassed:number) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        spriteFinished = spriteFinished || sprite.animate(timepassed) === true;\n      }\n    }\n\n    if (this.p.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.p.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.p.animation) {\n      this.p.animation.play?.(label, timelapsed);\n    }\n    for (const sprite of this.p.sprite) {\n      sprite.play?.(label, timelapsed);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    for (const sprite of this.p.sprite) {\n      sprite.resize(output, additionalModifier);\n    }\n  }\n\n  callInit(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    super.callInit(context, additionalModifier);\n    for (let sprite of this.p.sprite) {\n      sprite.callInit(context, additionalModifier);\n    }\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        sprite.detectDraw(context, color);\n      }\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        const a = sprite.detect(context, x, y);\n        if (a) return a;\n      }\n    }\n    return undefined;\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      if (this.p.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.p.alpha;\n      }\n\n      context.save();\n      context.translate(this.p.x!, this.p.y!);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      // draw all sprites\n      for (const sprite of this.p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\nimport Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n\nexport interface SpriteCanvasOptions extends SpriteGroupOptions {\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  canvasWidth?: OrFunction<number>\n  canvasHeight?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  gridSize?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  isDrawFrame?: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport interface SpriteCanvasOptionsInternal extends SpriteGroupOptionsInternal {\n  width: number|undefined\n  height: number|undefined\n  canvasWidth: number|undefined\n  canvasHeight: number|undefined\n  compositeOperation: GlobalCompositeOperation\n  gridSize: number|undefined\n  norm: boolean\n  isDrawFrame: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport default class Canvas extends Group<SpriteCanvasOptions, SpriteCanvasOptionsInternal>  {\n  _currentGridSize:number|undefined;\n  _drawFrame:number = 2;\n  _temp_canvas: undefined|HTMLCanvasElement\n  _tctx: undefined|CanvasRenderingContext2D\n  \n  constructor(givenParameter:SpriteCanvasOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      canvasWidth: undefined,\n      canvasHeight: undefined,\n      gridSize: undefined,\n      compositeOperation: \"source-over\",\n      norm: (value: SpriteCanvasOptions[\"norm\"], givenParameter:SpriteCanvasOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      isDrawFrame: (value: SpriteCanvasOptions[\"isDrawFrame\"], givenParameter:SpriteCanvasOptions) => ifNull(value, 1)\n    });\n  }\n\n  _generateTempCanvas(additionalModifier:AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.canvasWidth && p.canvasHeight) {\n      this._temp_canvas.width = p.canvasWidth;\n      this._temp_canvas.height = p.canvasHeight;\n    } else if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / p.scaleX);\n      this._temp_canvas.height = Math.round(h / p.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n  }\n\n  _normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  _copyCanvas(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (\n      this._temp_canvas &&\n      this._currentGridSize !== p.gridSize &&\n      !p.canvasWidth\n    ) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n      this._drawFrame = 2;\n    }\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._copyCanvas(additionalModifier);\n    super.resize(output!, additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this._copyCanvas(additionalModifier);\n      }\n      this._drawFrame = Math.max(\n        this._drawFrame - 1,\n        calc(p.isDrawFrame, context, additionalModifier)\n      );\n      const w = p.width!,\n        h = p.height!,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas!.width,\n        th = this._temp_canvas!.height;\n\n      if (this._drawFrame) {\n        this._tctx!.textBaseline = \"middle\";\n        this._tctx!.textAlign = \"center\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.globalCompositeOperation = \"source-over\";\n        this._tctx!.save();\n        // draw all sprites\n        const cam = additionalModifier.cam;\n        if (p.norm && cam) {\n          const scale = Math.max(tw, th) / 2;\n          this._tctx!.translate(tw / 2, th / 2);\n          this._tctx!.scale(scale, scale);\n          this._tctx!.scale(cam.zoom, cam.zoom);\n          this._tctx!.translate(-cam.x, -cam.y);\n        }\n        for (const sprite of p.sprite) {\n          sprite.draw(\n            this._tctx!,\n            p.norm\n              ? Object.assign({}, additionalModifier, {\n                  alpha: 1,\n                  widthInPixel: tw,\n                  heightInPixel: th\n                })\n              : {\n                  alpha: 1,\n                  x: 0,\n                  y: 0,\n                  width: tw,\n                  height: th,\n                  widthInPixel: tw,\n                  heightInPixel: th,\n                  scaleCanvas: 1,\n                  visibleScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                  fullScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                }\n          );\n        }\n        this._tctx!.restore();\n      }\n\n      context.save();\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.translate(p.x! + wh, p.y! + hh);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(this._temp_canvas!, 0, 0, tw, th, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport Group, { SpriteGroupOptions } from \"./Group.js\";\nimport { SpriteBaseOptions, ISprite } from \"./Sprite\";\n\nexport interface SpriteEmitterOptions<P extends SpriteBaseOptions = SpriteBaseOptions & Record<string, any>> {\n  count?: number\n  class: { new(options: P): ISprite }\n  self?: SpriteGroupOptions\n}\n\nexport default class Emitter<P> extends Group {\n  constructor(givenParameter: SpriteEmitterOptions<P>) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.p.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      const parameter: P = Object.entries(givenParameter).reduce<P>((p, [index, value]) => {\n        if ([\"self\", \"class\", \"count\"].includes(index)) {\n          return p;\n        }\n        // @ts-ignore\n        p[index] = calc(value, i)\n        return p\n      }, {} as P)\n      this.p.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","export enum Position {\n    LEFT_TOP = 0,\n    CENTER = 1\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport type { OutputInfo } from \"../Engine\";\n\nexport interface SpriteFastBlurOptions extends SpriteBaseOptions {\n  x?: OrFunction<undefined | number>\n  y?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  scaleX?: OrFunction<undefined | number>\n  scaleY?: OrFunction<undefined | number>\n  scale?: OrFunction<undefined | number>\n  alpha?: OrFunction<undefined | number>\n  gridSize?: OrFunction<undefined | number>\n  darker?: OrFunction<undefined | number>\n  pixel?: OrFunction<undefined | boolean>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n  compositeOperation?: OrFunction<undefined | GlobalCompositeOperation>\n}\n\nexport interface SpriteFastBlurOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  scaleX?: number\n  scaleY?: number\n  gridSize: undefined | number\n  darker: number\n  pixel: boolean\n  clear: boolean\n  norm: boolean\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n}\n\nexport default class FastBlur<O extends SpriteFastBlurOptions = SpriteFastBlurOptions, P extends SpriteFastBlurOptionsInternal = SpriteFastBlurOptionsInternal> extends SpriteBase<O,P> {\n  _temp_canvas: HTMLCanvasElement | undefined;\n  _currentGridSize: number | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value: SpriteFastBlurOptions['norm'], givenParameter: SpriteFastBlurOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // scalling\n      scaleX: (value: SpriteFastBlurOptions['scaleX'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteFastBlurOptions['scaleY'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      // alpha\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    });\n  }\n\n  _generateTempCanvas(additionalModifier: AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / p.scaleX!);\n      this._temp_canvas.height = Math.ceil(h / p.scaleY!);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output: OutputInfo | undefined, additionalModifier: AdditionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.p.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this.resize(undefined, additionalModifier);\n      }\n\n      const a = p.alpha * additionalModifier.alpha,\n        w = p.width!,\n        h = p.height!,\n        targetW = this._temp_canvas!.width,\n        targetH = this._temp_canvas!.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx!.globalCompositeOperation = \"copy\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (p.darker > 0) {\n          this._tctx!.globalCompositeOperation = p.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx!.fillStyle = \"rgba(0,0,0,\" + p.darker + \")\";\n          this._tctx!.fillRect(0, 0, targetW, targetH);\n        }\n\n        // @ts-ignore\n        this.additionalBlur?.(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (p.clear) {\n          context.globalCompositeOperation = \"source-over\";\n          context.globalAlpha = 1;\n          context.clearRect(p.x!, p.y!, w, h);\n        }\n        context.globalCompositeOperation = p.compositeOperation;\n        context.globalAlpha = a;\n        const oldValue = context.imageSmoothingEnabled;\n        context.imageSmoothingEnabled = !p.pixel;\n        context.drawImage(\n          this._temp_canvas!,\n          0,\n          0,\n          targetW,\n          targetH,\n          p.x!,\n          p.y!,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = oldValue;\n      }\n    } else {\n      // optional: clear screen\n      if (p.clear) {\n        if (!p.x) {\n          p.x = additionalModifier.x;\n        }\n        if (!p.y) {\n          p.y = additionalModifier.y;\n        }\n        if (!p.width) {\n          p.width = additionalModifier.width;\n        }\n        if (!p.height) {\n          p.height = additionalModifier.height;\n        }\n        context.clearRect(p.x, p.y, p.width, p.height);\n      }\n    }\n  }\n}\n","import type { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport ImageManager from \"../ImageManager\";\nimport { Position } from \"../Position\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions, SpriteCircleOptionsInternal } from \"./Circle\";\nimport { SpriteBase } from \"./Sprite\";\n\nexport interface SpriteImageOptions extends SpriteCircleOptions {\n  image: OrFunction<HTMLImageElement | string>\n  position?: OrFunction<Position>\n  frameX?: OrFunction<number>\n  frameY?: OrFunction<number>\n  frameWidth?: OrFunction<number>\n  frameHeight?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  normCover?: OrFunction<boolean>\n  normToScreen?: OrFunction<boolean>\n  clickExact?: OrFunction<boolean>\n  tint?: OrFunction<number>\n}\n\nexport interface SpriteImageOptionsInternal extends SpriteCircleOptionsInternal {\n  image: HTMLImageElement\n  position: Position\n  frameX: number\n  frameY: number\n  frameWidth: number\n  frameHeight: number\n  width: number\n  height: number\n  norm: boolean\n  normCover: boolean\n  normToScreen: boolean\n  clickExact: boolean\n  tint: number\n}\n\n// Sprite\n// Draw a Image\nclass Image extends SpriteBase<SpriteImageOptions, SpriteImageOptionsInternal> {\n  _currentTintKey: string | undefined\n  _normScale: number | undefined\n  _temp_canvas: HTMLCanvasElement | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: SpriteImageOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      // set image\n      image: (v: OrFunction<HTMLImageElement | string>) => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Position.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      width: undefined,\n      height: undefined,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n      clickExact: false,\n      color: \"_FFF\",\n      tint: 0\n    });\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    const frameWidth = p.frameWidth || p.image.width;\n    const frameHeight = p.frameHeight || p.image.height;\n\n    this._normScale = p.normToScreen\n      ? p.normCover\n        ? Math.max(\n          additionalModifier.fullScreen.width / frameWidth,\n          additionalModifier.fullScreen.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.fullScreen.width / frameWidth,\n            additionalModifier.fullScreen.height / frameHeight\n          )\n          : 1\n      : p.normCover\n        ? Math.max(\n          additionalModifier.width / frameWidth,\n          additionalModifier.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.width / frameWidth,\n            additionalModifier.height / frameHeight\n          )\n          : 1;\n  }\n\n  _tintCacheKey() {\n    const frameWidth = this.p.frameWidth || this.p.image.width;\n    const frameHeight = this.p.frameHeight || this.p.image.height;\n    return [\n      this.p.tint,\n      frameWidth,\n      frameHeight,\n      this.p.color,\n      this.p.frameX,\n      this.p.frameY\n    ].join(\";\");\n  }\n\n  _temp_context(frameWidth: number, frameHeight: number): CanvasRenderingContext2D {\n    if (!this._temp_canvas) {\n      this._temp_canvas = document.createElement(\"canvas\");\n      this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    }\n    this._temp_canvas.width = frameWidth;\n    this._temp_canvas.height = frameHeight;\n    return this._tctx!;\n  }\n\n  detectDraw(context: CanvasRenderingContext2D, color: string) {\n    const p = this.p\n    if (p.enabled && p.isClickable && p.clickExact) {\n      const frameWidth = p.frameWidth || p.image.width;\n      const frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) * this._normScale! * p.scaleX;\n      const sY =\n        (p.height ? p.height : frameHeight) *\n        this._normScale! *\n        p.scaleY;\n      const isTopLeft = p.position === Position.LEFT_TOP;\n\n      const tctx = this._temp_context(frameWidth, frameHeight);\n      tctx.globalAlpha = 1;\n      tctx.globalCompositeOperation = \"source-over\";\n      tctx.fillStyle = color;\n      tctx.fillRect(0, 0, frameWidth, frameHeight);\n      tctx.globalCompositeOperation = \"destination-atop\";\n      tctx.drawImage(\n        p.image,\n        p.frameX,\n        p.frameY,\n        frameWidth,\n        frameHeight,\n        0,\n        0,\n        frameWidth,\n        frameHeight\n      );\n\n      context.save();\n      context.translate(p.x, p.y);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(\n        this._temp_canvas!,\n        0,\n        0,\n        frameWidth,\n        frameHeight,\n        isTopLeft ? 0 : -sX / 2,\n        isTopLeft ? 0 : -sY / 2,\n        sX,\n        sY\n      );\n      context.restore();\n      this._currentTintKey = undefined;\n    }\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    if (this.p.enabled && this.p.isClickable && this.p.clickExact) return \"c\";\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.image && p.alpha > 0) {\n      const frameWidth = p.frameWidth || p.image.width,\n        frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) *\n        this._normScale! *\n        p.scaleX,\n        sY =\n          (p.height ? p.height : frameHeight) *\n          this._normScale! *\n          p.scaleY;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      const isCenter = p.position !== Position.LEFT_TOP;\n\n      let img: CanvasImageSource = p.image\n      let frameX = p.frameX\n      let frameY = p.frameY\n\n      if (p.tint) {\n        const key = this._tintCacheKey()\n        if (this._currentTintKey !== key) {\n          const tctx = this._temp_context(frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"source-over\";\n          tctx.clearRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = p.tint;\n          tctx.fillStyle = p.color;\n          tctx.fillRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"destination-atop\";\n          tctx.drawImage(\n            p.image,\n            p.frameX,\n            p.frameY,\n            frameWidth,\n            frameHeight,\n            0,\n            0,\n            frameWidth,\n            frameHeight\n          );\n          this._currentTintKey = key;\n        }\n        img = this._temp_canvas!\n        frameX = 0\n        frameY = 0\n      }\n\n      let cx = 0\n      let cy = 0\n      if (isCenter) {\n        cx = - sX / 2\n        cy = - sY / 2\n      }\n\n      if (p.rotation == 0) {\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          p.x + cx,\n          p.y + cy,\n          sX,\n          sY\n        );\n      } else {\n        context.save();\n        context.translate(p.x, p.y);\n        context.rotate(p.rotation);\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          cx,\n          cy,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Image;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nexport interface SpriteTextOptions extends SpriteCircleOptions {\n  text?: OrFunction<string|string[]>\n  font?: OrFunction<undefined|string>\n  position?: OrFunction<undefined|Position>\n  borderColor?: OrFunction<undefined|string>\n  lineWidth?:  OrFunction<undefined|number>\n}\n\nexport interface SpriteTextOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  text: string\n  font: string\n  position: Position\n  borderColor: undefined|string\n  color: undefined|string\n  lineWidth: number\n}\n\nexport default class Text extends SpriteBase<SpriteTextOptions, SpriteTextOptionsInternal> implements ISprite {\n  constructor(givenParameters:SpriteTextOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList, {\n      text: (value:SpriteTextOptions['text']) => {\n        const text = calc(value)\n        return (Array.isArray(text) ? text.join('') : text) || ''\n      },\n      font: '2em monospace',\n      position: Position.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    })\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled && this.p.isClickable) {\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.font = this.p.font;\n      context.fillStyle = color;\n      context.fillText(this.p.text, 0, 0);\n      context.restore();\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number):\"c\" {\n    return \"c\" \n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      context.font = this.p.font;\n\n      if (this.p.color) {\n        context.fillStyle = this.p.color;\n        context.fillText(this.p.text, 0, 0);\n      }\n\n      if (this.p.borderColor) {\n        context.strokeStyle = this.p.borderColor;\n        context.lineWidth = this.p.lineWidth;\n        context.strokeText(this.p.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n","import { TinyColor } from \"@ctrl/tinycolor\";\nimport { OutputInfo } from \"../Engine.js\";\nimport calc from \"../func/calc.js\";\nimport ifNull from \"../func/ifnull.js\";\nimport type { OrFunction } from \"../helper.js\";\nimport type { AdditionalModifier } from \"../Scene.js\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nexport interface SpriteParticleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\ntype TinyColorRGB = ReturnType<TinyColor['toRgb']>\n\nexport interface SpriteParticleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string | TinyColorRGB\n}\n\nclass Particle extends SpriteBase<SpriteParticleOptions, SpriteParticleOptionsInternal> {\n  _currentScaleX: number | undefined;\n  _currentPixelSmoothing: boolean = false;\n  static _Gradient: HTMLCanvasElement[][][] = [[[]]]\n\n  constructor(givenParameter: SpriteParticleOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      x: 0,\n      y: 0,\n      // scalling\n      scaleX: (value: SpriteParticleOptions['scaleX'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteParticleOptions['scaleY'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      color: '_FFF',\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    })\n  }\n\n  static getGradientImage(r: number, g: number, b: number) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      const length = 256 >> gradientResolution;\n      Particle._Gradient = Array.from({ length }, (a) =>\n        Array.from({ length }, (a) => Array.from({ length }))\n      );\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr: number, cg: number, cb: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\")!;\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._currentScaleX = undefined;\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      // faster than: if (!(this.color instanceof TinyColor && this.color.model === 'rgb')) {\n      if (!p.color || !(p.color as TinyColorRGB).r) {\n        p.color = new TinyColor(p.color).toRgb();\n      }\n      if (this._currentScaleX !== p.scaleX) {\n        this._currentScaleX = p.scaleX;\n        this._currentPixelSmoothing =\n          (p.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n          gradientSize;\n      }\n      const { r, g, b } = p.color as TinyColorRGB;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled = this._currentPixelSmoothing;\n      context.drawImage(\n        Particle.getGradientImage(r, g, b),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        p.x - p.scaleX / 2,\n        p.y - p.scaleY / 2,\n        p.scaleX,\n        p.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\n\nexport interface SpriteRectOptions extends SpriteCircleOptions {\n  position?: OrFunction<undefined | Position>\n  borderColor?: OrFunction<undefined | string>\n  lineWidth?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n}\n\nexport interface SpriteRectOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  position: Position\n  borderColor: undefined | string\n  color: undefined | string\n  lineWidth: number\n  clear: boolean\n  norm: boolean\n}\n\n\n// Sprite\n// Draw a Circle\nclass Rect extends SpriteBase<SpriteRectOptions, SpriteRectOptionsInternal> implements ISprite {\n  constructor(givenParameters: SpriteRectOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      color: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value: SpriteRectOptions[\"norm\"], givenParameter: SpriteRectOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // relative position\n      position: Position.CENTER\n    })\n  }\n\n  _normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    if (this.p.norm || this.p.width === undefined) {\n      this.p.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.p.norm || this.p.height === undefined) {\n      this.p.height = additionalModifier.visibleScreen.height;\n    }\n    if (this.p.norm || this.p.x === undefined) {\n      this.p.x = additionalModifier.visibleScreen.x;\n      if (this.p.position === Position.CENTER) {\n        this.p.x += this.p.width / 2;\n      }\n    }\n    if (this.p.norm || this.p.y === undefined) {\n      this.p.y = additionalModifier.visibleScreen.y;\n      if (this.p.position === Position.CENTER) {\n        this.p.y += this.p.height / 2;\n      }\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, this.p.position === Position.LEFT_TOP);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      if (p.rotation === 0 && p.position === Position.LEFT_TOP) {\n        if (p.clear) {\n          context.clearRect(p.x!, p.y!, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(p.x!, p.y!, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(p.x!, p.y!, p.width!, p.height!);\n          context.stroke();\n        }\n      } else {\n        let hw = p.width! / 2;\n        let hh = p.height! / 2;\n        context.save();\n        if (p.position === Position.LEFT_TOP) {\n          context.translate(p.x! + hw, p.y! + hh);\n        } else {\n          context.translate(p.x!, p.y!);\n        }\n        context.scale(p.scaleX, p.scaleY);\n        context.rotate(p.rotation);\n        if (p.clear) {\n          context.clearRect(-hw, -hh, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(-hw, -hh, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(-hw, -hh, p.width!, p.height!);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Rect;\n","import { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OrFunction } from \"../helper\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStarFieldOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  alpha?: OrFunction<number>\n  lineWidth?: OrFunction<number>\n  count?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  moveX?: OrFunction<undefined|number>\n  moveY?: OrFunction<undefined|number>\n  moveZ?: OrFunction<undefined|number>\n  highScale?: OrFunction<undefined|boolean>\n  color?: OrFunction<undefined|string>\n}\n\nexport interface SpriteStarFieldOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  alpha: number\n  count: number\n  lineWidth: number\n  compositeOperation: GlobalCompositeOperation\n  moveX: number\n  moveY: number\n  moveZ: number\n  highScale: boolean\n  color: string\n}\n\n\n\n// Sprite\n// Draw a Circle\nexport default class StarField extends SpriteBase<SpriteStarFieldOptions, SpriteStarFieldOptionsInternal> {\n  _starsX: number[] = []\n  _starsY: number[] = []\n  _starsZ: number[] = []\n  _starsOldX: number[] = []\n  _starsOldY: number[] = []\n  _starsNewX: number[] = []\n  _starsNewY: number[] = []\n  _starsEnabled: boolean[] = []\n  _starsLineWidth: number[] = []\n  _centerX: number = 0\n  _centerY: number = 0\n  _scaleZ: number = 0\n\n  constructor(givenParameters: SpriteStarFieldOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0,\n      moveY: 0,\n      moveZ: 0,\n      lineWidth: undefined,\n      highScale: true,\n      color: \"_FFF\" // here default color is white\n    });\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    p.width = p.width || additionalModifier.width;\n    p.height = p.height || additionalModifier.height;\n    p.x = p.x === undefined ? additionalModifier.x : p.x;\n    p.y = p.y === undefined ? additionalModifier.y : p.y;\n    p.lineWidth =\n      p.lineWidth ||\n      Math.min(\n        additionalModifier.height / additionalModifier.heightInPixel,\n        additionalModifier.width / additionalModifier.widthInPixel\n      ) / 2;\n    this._centerX = p.width / 2 + p.x;\n    this._centerY = p.height / 2 + p.y;\n    this._scaleZ = Math.max(p.width, p.height) / 2;\n    function clampOrRandom(val: number | undefined, min: number, max = -min) {\n      return val === undefined || val < min || val >= max\n        ? Math.random() * (max - min) + min\n        : val;\n    }\n    for (let i = 0; i < p.count; i++) {\n      this._starsX[i] = clampOrRandom(this._starsX[i], -p.width / 2);\n      this._starsY[i] = clampOrRandom(this._starsY[i], -p.height / 2);\n      this._starsZ[i] = clampOrRandom(this._starsZ[i], 0, this._scaleZ);\n    }\n  }\n\n  _moveStar(i: number, scaled_timepassed: number, firstPass: boolean) {\n    const p = this.p\n    const hw = p.width! / 2;\n    const hh = p.height! / 2;\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    let\n      x = this._starsX[i] + p.moveX * scaled_timepassed,\n      y = this._starsY[i] + p.moveY * scaled_timepassed,\n      z = this._starsZ[i] + p.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= p.x! &&\n      projectY >= p.y! &&\n      projectX < p.x! + p.width! &&\n      projectY < p.y! + p.height!;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!p.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed:number) {\n    let ret = super.animate(timepassed);\n    if (this.p.enabled && this._centerX !== undefined) {\n      let i = this.p.count;\n      while (i--) {\n        this._moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this._moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      const p = this.p\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n\n      if (p.moveY == 0 && p.moveZ == 0 && p.moveX < 0) {\n        context.fillStyle = p.color;\n        let i = p.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] -\n              (this._starsLineWidth[i] * p.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * p.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = p.color;\n        if (p.highScale) {\n          let i = p.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * p.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * p.lineWidth;\n            i = p.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import Callback from './Sprites/Callback'\nimport Canvas from './Sprites/Canvas'\nimport Circle from './Sprites/Circle'\nimport Emitter from './Sprites/Emitter'\nimport FastBlur from './Sprites/FastBlur'\nimport Group from './Sprites/Group'\nimport Image from './Sprites/Image'\nimport Text from './Sprites/Text'\nimport Particle from './Sprites/Particle'\nimport Path from './Sprites/Path'\nimport Rect from './Sprites/Rect'\nimport Scroller from './Sprites/Scroller'\nimport StackBlur from './Sprites/StackBlur'\nimport StarField from './Sprites/StarField'\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StarField\n};\n","import { AdditionalModifier } from \"../Scene.js\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\n\n\nexport type SpriteCallback = (context:CanvasRenderingContext2D, timePassed:number, additionalParameter:AdditionalModifier, sprite:ISprite) => void\n\nexport interface SpriteCallbackOptions extends SpriteBaseOptions {\n  callback?: SpriteCallback\n}\n\nexport interface SpriteCallbackOptionsInternal extends SpriteBaseOptionsInternal {\n  callback: SpriteCallback\n}\n\n\nexport default class Callback extends SpriteBase<SpriteCallbackOptions,SpriteCallbackOptionsInternal> {\n  _timePassed = 0;\n\n  constructor(givenParameter:SpriteCallbackOptions|SpriteCallbackOptions['callback']) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter } as SpriteCallbackOptions;\n    }\n    super(givenParameter as SpriteCallbackOptions);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      callback: (v:SpriteCallback|undefined) => (typeof v === undefined ? () => {} : v) as SpriteCallback\n    });\n  }\n\n  animate(timePassed:number) {\n    if (this.p.enabled) {\n      this._timePassed += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context:CanvasRenderingContext2D, additionalParameter:AdditionalModifier) {\n    if (this.p.enabled) {\n      this.p.callback(context, this._timePassed, additionalParameter, this);\n    }\n  }\n}\n","import Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n// @ts-ignore\nimport pasition from \"pasition\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\n\nexport interface SpritePathOptions extends SpriteGroupOptions {\n  path?: OrFunction<number[][][]|string|Path2D>\n  color?: OrFunction<string|undefined>\n  borderColor?: OrFunction<string|undefined>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  lineWidth?: OrFunction<number>\n  clip?: OrFunction<boolean>\n  fixed?: OrFunction<boolean>\n  polyfill?: OrFunction<boolean>\n}\n\nexport interface SpritePathOptionsInternal extends SpriteGroupOptionsInternal {\n  path:  number[][][]|string|Path2D\n  color: string|undefined\n  borderColor: string|undefined\n  compositeOperation: GlobalCompositeOperation\n  lineWidth: number\n  clip: boolean\n  fixed: boolean\n  polyfill: boolean\n}\n\nexport default class Path extends Group<SpritePathOptions,SpritePathOptionsInternal> {\n  _oldPath:number[][][]|string|Path2D|undefined;\n  _path2D:Path2D = new Path2D();\n  \n  constructor(givenParameters:SpritePathOptions) {\n    super(givenParameters);\n\n    if (this.p.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.p.polyfill = false;\n        }\n      }\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from: number[][][] | string, to: number[][][] | string): number[][][] {\n    return pasition._preprocessing(\n      typeof from === \"string\" ? pasition.path2shapes(from) : from,\n      typeof to === \"string\" ? pasition.path2shapes(to) : to\n    );\n  }\n  \n  changeToPath(progress: number, data: {\n    pathFrom: number[][][]\n    pathTo: number[][][]\n  }) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false, () => {\n      return context.isPointInPath(this._path2D, x, y);\n    });\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      const a = p.alpha * additionalModifier.alpha;\n      if (this._oldPath !== p.path) {\n        if (p.polyfill && typeof p.path === \"string\") {\n          p.path = pasition.path2shapes(p.path);\n        }\n        if (Array.isArray(p.path)) {\n          this._path2D = new Path2D();\n          p.path.forEach(curve => {\n            this._path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this._path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this._path2D.closePath();\n          });\n        } else if (p.path instanceof Path2D) {\n          this._path2D = p.path;\n        } else {\n          this._path2D = new Path2D(p.path);\n        }\n        this._oldPath = p.path;\n      }\n\n      let scaleX = p.scaleX,\n        scaleY = p.scaleY;\n\n      if (p.fixed) {\n        if (scaleX == 0) {\n          scaleX = Number.EPSILON;\n        }\n        if (scaleY == 0) {\n          scaleY = Number.EPSILON;\n        }\n      }\n\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(p.x!, p.y!);\n      context.scale(scaleX, scaleY);\n      context.rotate(p.rotation);\n\n      if (p.color) {\n        context.fillStyle = p.color;\n        context.fill(this._path2D);\n      }\n\n      context.save();\n\n      if (p.clip) {\n        context.clip(this._path2D);\n        if (p.fixed) {\n          context.rotate(-p.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-p.x!, -p.y!);\n        }\n      }\n\n      // draw all sprites\n      for (const sprite of p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (p.borderColor) {\n        context.strokeStyle = p.borderColor;\n        context.lineWidth = p.lineWidth;\n        context.stroke(this._path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import calc from \"../func/calc\";\nimport { OrFunction } from \"../helper\";\nimport Emitter from \"./Emitter\";\nimport Text, { SpriteTextOptions } from \"./Text\";\n\nexport interface SpriteScollerOptions extends SpriteTextOptions {\n  text: OrFunction<string|string[]>\n}\n\n\nexport default class Scroller extends Emitter<SpriteTextOptions> {\n  constructor(givenParameters:SpriteScollerOptions) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: (index:number) => characterList[index],\n        enabled: (index:number) =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled)\n      })\n    );\n  }\n}\n","import FastBlur, { SpriteFastBlurOptions, SpriteFastBlurOptionsInternal } from \"./FastBlur\";\nimport { imageDataRGBA } from \"stackblur-canvas\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStackBlurOptions extends SpriteFastBlurOptions {\n  onCanvas?: OrFunction<boolean>\n  radius?: OrFunction<undefined|number>\n  radiusPart?: OrFunction<undefined|number>\n  radiusScale?: OrFunction<boolean>\n}\n\nexport interface SpriteStackBlurOptionsInternal extends SpriteFastBlurOptionsInternal {\n  onCanvas: boolean\n  radius: undefined|number\n  radiusPart: undefined|number\n  radiusScale: boolean\n}\n\nexport default class StackBlur extends FastBlur<SpriteStackBlurOptions,SpriteStackBlurOptionsInternal> {\n  _currentRadiusPart:number|undefined\n\n    constructor(givenParameter:SpriteStackBlurOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined,\n      radiusScale: true\n    });\n  }\n\n  normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm && p.onCanvas) {\n      p.x = 0;\n      p.y = 0;\n      p.width = additionalModifier.widthInPixel;\n      p.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    super.resize(output, additionalModifier);\n    if (this.p.radiusPart) {\n      this.p.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW:number, targetH:number, additionalModifier:AdditionalModifier) {\n    const imageData = this._tctx!.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius || 1);\n    this._tctx!.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (\n        p.radius === undefined ||\n        this._currentRadiusPart !== p.radiusPart\n      ) {\n        p.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            p.radiusPart!\n        );\n        this._currentRadiusPart = p.radiusPart!;\n      }\n      const radius = Math.round(\n        p.radius! *\n          ((p.radiusScale &&\n            additionalModifier.cam) ? additionalModifier.cam.zoom : 1) /\n              additionalModifier.scaleCanvas)\n      ;\n      if (radius) {\n        if (p.onCanvas) {\n          if (p.width === undefined || p.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(p.x!);\n          const y = Math.round(p.y!);\n          const w = Math.round(p.width!);\n          const h = Math.round(p.height!);\n          const imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport type TAnimationCallbackCallback = (sprite:ISprite, time:number, firstRun:boolean) => ReturnType<IAnimation['run']>\n\nexport default class Callback implements IAnimation{\n    _callback: TAnimationCallbackCallback\n    _duration: number|undefined\n    _initialized: boolean = false\n\n    constructor(callback: TAnimationCallbackCallback, duration?:number) {\n      this._callback = callback;\n      this._duration = ifNull(calc(duration), undefined);\n    }\n\n    reset() {\n      this._initialized = false;\n    }\n\n    run(sprite:ISprite, time:number) {\n      let result;\n\n      if (this._duration !== undefined) {\n        this._callback(sprite, Math.min(time, this._duration), !this._initialized);\n        this._initialized = true;\n        return time - this._duration;\n      } else {\n        result = this._callback(sprite, time, !this._initialized);\n        this._initialized = true;\n        return result;\n      }\n    };\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nimport type { IAnimation } from \"./Animation\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nconst degToRad = Math.PI / 180;\n\nfunction moveDefault(progress: number, data: IAlgorithmData) {\n  return data.from! as number + progress * data.delta!;\n}\n\nfunction moveStatic(progress: number, data: IAlgorithmData) {\n  return progress >= 0.5 ? data.to : data.from!;\n}\n\nfunction moveBezier(progress: number, data: IAlgorithmData) {\n  var copy = [...data.values!],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress: number, data: IAlgorithmData) {\n  return data.colorFrom!.mix(data.colorTo!, progress * 100).toString();\n}\n\nfunction movePath(progress: number, { pathFrom, pathTo }: IAlgorithmData, sprite?: ISprite) {\n  return sprite!.changeToPath!(progress, { pathFrom: pathFrom!, pathTo: pathTo! });\n}\n\nexport type TProperty = number | string\nexport type TBezier = number[]\nexport type TChangeFunction = ((from?: number | undefined) => number) | ((from?: string | undefined) => string)\nexport type TChangeValue = TProperty | TBezier | TChangeFunction\nexport interface IChangeValueMeta {\n  name: string\n  to: TProperty\n  bezier?: TBezier\n  isColor: boolean\n  isPath: boolean\n  isStatic: boolean\n  isFunction?: TChangeFunction,\n  moveAlgorithm: TAlgorithm\n}\nexport type TAlgorithm = (progress: number, data: IAlgorithmData, sprite?: ISprite) => TProperty | number[][][]\nexport interface IAlgorithmData extends IChangeValueMeta {\n  from?: TProperty\n  delta?: number\n  values?: TBezier\n  pathFrom?: number[][][]\n  pathTo?: number[][][]\n  colorFrom?: TinyColor\n  colorTo?: TinyColor\n}\n\n// to values of a object\nexport default class ChangeTo implements IAnimation {\n  _initialized = false\n  _changeValues: IChangeValueMeta[]\n  _duration: number\n  _ease: (t: number) => number\n  constructor(changeValues: Record<string, TChangeValue>, duration: number, ease: (t: number) => number) {\n    this._changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? (orgValue as number) * degToRad : orgValue;\n      const isColor = k === \"color\" || k === \"borderColor\";\n      const isPath = k === \"path\";\n      const isStatic = k === \"text\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n            ? [\"rotation\"]\n            : [k];\n      for (const name of names) {\n        this._changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value) as TProperty,\n          bezier: isBezier ? value : undefined,\n          isColor,\n          isPath,\n          isStatic,\n          isFunction: isFunction ? value : undefined,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n              ? movePath\n              : isBezier\n                ? moveBezier\n                : isStatic\n                  ? moveStatic\n                  : moveDefault\n        });\n      }\n    }\n    this._duration = ifNull(calc(duration), 0);\n    this._ease = ifNull(ease, (t: number) => t);\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  _init(sprite: ISprite, time: number) {\n    let l = this._changeValues.length\n    while (l--) {\n      const data: IAlgorithmData = this._changeValues[l];\n      // @ts-ignore\n      const from = sprite[data.name] as unknown as TProperty\n      if (data.isFunction) {\n        data.from = from;\n        // @ts-ignore\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = new TinyColor(data.from);\n          data.colorTo = new TinyColor(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n            data.from as string,\n            data.to as string\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [from as number, ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else if (!data.isStatic) {\n          data.delta = data.to as number - (data.from as number);\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        //\n        data.colorFrom = new TinyColor(from as string);\n        data.colorTo = new TinyColor(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n          from as string,\n          data.to as string\n        );\n      } else if (data.bezier) {\n        data.values = [from as number, ...data.bezier];\n      } else {\n        data.from = from as number;\n        data.delta = data.to as number - data.from;\n      }\n    }\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._init(sprite, time);\n    }\n\n    // return time left\n    if (this._duration <= time) {\n      let l = this._changeValues.length;\n      let data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite[data.name] = data.to;\n      }\n    } else {\n      let l = this._changeValues.length;\n      let data;\n      const progress = this._ease(time / this._duration);\n\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this._duration;\n  }\n}\n","import { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Forever implements IAnimation {\n  _Aniobject:Sequence\n\n  constructor(...Aniobject: IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    return this._Aniobject.play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport type { OrFunction } from '../helper.js';\nimport type { ISprite } from '../Sprites/Sprite.js';\n\nexport default class Shake {\n  _initialized = false\n  _duration: number\n  _shakeDiff: number\n  _shakeDiffHalf: number\n  _x: number = 0\n  _y: number = 0\n\n  constructor(shakediff: OrFunction<number>, duration: OrFunction<number>) {\n    this._duration = calc(duration);\n    this._shakeDiff = calc(shakediff);\n    this._shakeDiffHalf = this._shakeDiff / 2;\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._x = sprite.p.x;\n      this._y = sprite.p.y;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      // prevent round errors\n      sprite.p.x = this._x;\n      sprite.p.y = this._y;\n    } else {\n      // shake sprite\n      sprite.p.x = this._x + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n      sprite.p.y = this._y + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n    }\n    return time - this._duration;\n  }\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class ShowOnce implements IAnimation {\n    _showOnce:boolean = true\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = sprite.p.enabled && this._showOnce;\n        this._showOnce = false;\n        return 0;\n    }\n}","import { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\nimport Sequence from './Sequence';\n\nclass State implements IAnimation {\n  _states: Record<string, Sequence | State>\n  _transitions: Record<string, Sequence | State>\n  _currentStateName: string | undefined\n  _currentState: Sequence | State | undefined\n  _isTransitioningToStateName: string | undefined = undefined\n\n  constructor({\n    states = {},\n    transitions = {},\n    defaultState\n  }: {\n    states?: Record<string, IAnimation[] | Sequence>\n    transitions?: Record<string, IAnimation[] | Sequence>\n    defaultState: string\n  }) {\n    // save possible states\n    this._states = Object.fromEntries(Object.entries(states).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ))\n\n    // save transitions\n    this._transitions = Object.fromEntries(Object.entries(transitions).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ));\n    // set start state\n    this._currentStateName = defaultState;\n    this._currentState = this._states[defaultState];\n  }\n\n  setState(name:string) {\n    if (name !== this._currentStateName) {\n      this._isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this._currentStateName}To${UCFirstName}`,\n        `${this._currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => name in this._transitions\n      );\n      if (transitionName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._transitions[transitionName];\n        (this._currentState as Sequence)?.reset?.();\n      } else {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0):boolean|undefined {\n    return this._currentState?.play?.(label, timelapsed);\n  }\n\n  run(sprite: ISprite, time: number, is_difference?: boolean) {\n    let timeLeft:ReturnType<IAnimation['run']> = time;\n    let isDifference = is_difference;\n    if (this._currentState) {\n      timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this._currentState) {\n      if (this._isTransitioningToStateName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n        timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this._currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import Callback from './Animations/Callback'\nimport ChangeTo from './Animations/ChangeTo'\nimport End from './Animations/End'\nimport EndDisabled from './Animations/EndDisabled'\nimport Forever from './Animations/Forever'\nimport If from './Animations/If'\nimport Image from './Animations/Image'\nimport ImageFrame from './Animations/ImageFrame'\nimport Loop from './Animations/Loop'\nimport Remove from './Animations/Remove'\nimport Sequence from './Animations/Sequence'\nimport Once from './Animations/Once'\nimport Shake from './Animations/Shake'\nimport ShowOnce from './Animations/ShowOnce'\nimport State from './Animations/State'\nimport Stop from './Animations/Stop'\nimport StopDisabled from './Animations/StopDisabled'\nimport Wait from './Animations/Wait'\nimport WaitDisabled from './Animations/WaitDisabled'\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation {\n\tconstructor() {\n\t}\n\n\trun(sprite: ISprite, time: number) {\n\t\treturn SequenceRunCommand.FORCE_DISABLE;\n\t};\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.FORCE_DISABLE;\n    };\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport type { TAnimationFunction } from \"./Sequence\";\n\nexport default class If implements IAnimation {\n  _ifCallback: OrFunction<boolean>\n  _Aniobject: IAnimation|TAnimationFunction\n  _AniobjectElse: IAnimation|TAnimationFunction\n\n  constructor(ifCallback:OrFunction<boolean>, Aniobject:IAnimation|TAnimationFunction, AniobjectElse:IAnimation|TAnimationFunction) {\n    this._ifCallback = ifCallback;\n    this._Aniobject = Aniobject;\n    this._AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    return (this._Aniobject as IAnimation).play?.(label, timelapsed) || (this._AniobjectElse as IAnimation).play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number) {\n    const AniObject = calc(this._ifCallback)\n      ? this._Aniobject\n      : this._AniobjectElse;\n    return (AniObject as IAnimation).run\n      ?  (AniObject as IAnimation).run(sprite, time)\n      :  (AniObject as TAnimationFunction)(sprite, time);\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport { OrFunction } from '../helper';\nimport ImageManager from '../ImageManager';\nimport { ISprite } from '../Sprites/Sprite';\n\nexport default class Image {\n  _initialized: boolean = false\n  _image: (HTMLImageElement | string)[]\n  _count: number\n  _durationBetweenFrames: number\n  _duration: number\n  _current:number = -1\n\n  constructor(image: OrFunction<HTMLImageElement | string | (HTMLImageElement | string)[]>, durationBetweenFrames: OrFunction<number>) {\n    const imageCalced = calc(image);\n    this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(imageCalced)) {\n      this._image = imageCalced\n      this._count = imageCalced.length;\n    } else {\n      this._image = [imageCalced];\n      this._count = 1;\n    }\n    this._duration = this._count * this._durationBetweenFrames;\n  }\n\n  reset() {\n    this._initialized = false;\n  };\n\n  run(sprite: ISprite, time:number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._current = -1;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      sprite.p.image = ImageManager.getImage(this._image[this._image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this._durationBetweenFrames);\n      if (currentFrame !== this._current) {\n        this._current = currentFrame;\n        sprite.p.image = ImageManager.getImage(this._image[this._current]);\n      }\n    }\n    return time - this._duration;\n  }\n}","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { OrFunction } from '../helper';\nimport { ISprite } from '../Sprites/Sprite';\nimport { IAnimation } from './Animation';\n\nexport default class ImageFrame implements IAnimation{\n    _frameNumber: number[]\n    _durationBetweenFrames: number\n    _duration: number\n    _framesToRight: boolean\n\n    constructor(frameNumber: OrFunction<number | number[]>, framesToRight: OrFunction<boolean>, durationBetweenFrames: OrFunction<number>) {\n        const frameNumberCalc = calc(frameNumber);\n        this._framesToRight = ifNull(calc(framesToRight), true);\n        this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        this._frameNumber = Array.isArray(frameNumberCalc) ? frameNumberCalc : [frameNumberCalc];\n\n        this._duration = this._frameNumber.length * this._durationBetweenFrames;\n    }\n\n    run(sprite: ISprite, time:number) {\n        let currentFrame = 0;\n        if (time >= this._duration) {\n            currentFrame = this._frameNumber[this._frameNumber.length - 1];\n        } else {\n            currentFrame = this._frameNumber[Math.floor(time / this._durationBetweenFrames)];\n        }\n        if (this._framesToRight) {\n            sprite.p.frameX = sprite.p.frameWidth! * currentFrame;\n        } else {\n            sprite.p.frameY = sprite.p.frameHeight! * currentFrame;\n        }\n\n        return time - this._duration;\n    }\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Loop implements IAnimation {\n  _Aniobject: Sequence\n  _times:number\n  _timesOrg:number\n\n  constructor(times:number, ...Aniobject:IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this._times = this._timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    const b = this._Aniobject.play?.(label, timelapsed);\n    if (b) {\n      this._times = this._timesOrg;\n    }\n    return b\n  }\n\n  run(sprite: ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0 && this._times > 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._times--;\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\n\nexport default class Once implements IAnimation {\n  _Aniobject: IAnimation\n  _times: number\n\n  constructor(Aniobject: IAnimation, times: number) {\n    this._Aniobject = Aniobject;\n    this._times = ifNull(calc(times), 1);\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (this._times <= 0) {\n      return time;\n    }\n    else {\n      let t = this._Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this._times--;\n      }\n      return t;\n    }\n  };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class Remove implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.REMOVE;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class End implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.STOP;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.STOP;\n    };\n}","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class WaitDisabled implements IAnimation {\n  duration:number\n\n  constructor(duration:OrFunction<number>) {\n    this.duration = ifNull(calc(duration), 0);\n  }\n\n  run(sprite:ISprite, time:number) {\n    // return time left\n    sprite.p.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import Transform from \"../func/transform\";\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime, RectPosition } from \"../Scene\";\n\nexport interface CameraPosition {\n  zoom: number\n  x: number\n  y: number\n}\n\nexport default class Camera implements ConfigurationObject {\n  type = \"camera\"\n  cam: CameraPosition\n  constructor(config: Partial<CameraPosition> = {}) {\n    this.type = \"camera\";\n    this.cam = Object.assign({\n      zoom: 1,\n      x: 0,\n      y: 0,\n    }, config);\n  }\n\n  viewport({ }:ParameterListWithoutTime, matrix: Transform) {\n    return matrix\n      .scale(this.cam.zoom, this.cam.zoom)\n      .translate(-this.cam.x, -this.cam.y);\n  }\n\n  viewportByCam({ engine }: ParameterListWithoutTime, cam: CameraPosition) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  additionalModifier({ }, additionalModifier: AdditionalModifier) {\n    additionalModifier.cam = Object.assign({}, this.cam);\n    return additionalModifier;\n  }\n\n  clampView(params: ParameterListWithoutTime & { clampLimits?: RectPosition }, cam: CameraPosition) {\n    const { engine, scene, clampLimits } = params\n    const cl = clampLimits || {\n      x1: scene.additionalModifier.x,\n      y1: scene.additionalModifier.y,\n      x2: scene.additionalModifier.x + scene.additionalModifier.width,\n      y2: scene.additionalModifier.y + scene.additionalModifier.height,\n    };\n    const invert = this.viewportByCam(params, cam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      engine.getWidth(),\n      engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= cl.x2 - cl.x1) {\n      if (x1 < cl.x1) {\n        if (x2 <= cl.x2) {\n          cam.x += cl.x1 - x1;\n        }\n      } else {\n        if (x2 > cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > cl.x1) {\n        cam.x += cl.x1 - x1;\n      } else {\n        if (x2 < cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= cl.y2 - cl.y1) {\n      if (y1 < cl.y1) {\n        if (y2 <= cl.y2) {\n          cam.y += cl.y1 - y1;\n        }\n      } else {\n        if (y2 > cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > cl.y1) {\n        cam.y += cl.y1 - y1;\n      } else {\n        if (y2 < cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    }\n    return cam;\n  }\n\n  set zoom(value) {\n    this.cam.zoom = value;\n  }\n\n  set camX(v) {\n    this.cam.x = v;\n  }\n\n  set camY(v) {\n    this.cam.y = v;\n  }\n\n  get zoom() {\n    return this.cam.zoom;\n  }\n\n  get camX() {\n    return this.cam.x;\n  }\n\n  get camY() {\n    return this.cam.y;\n  }\n\n  zoomToFullScreen({ scene }: ParameterListWithoutTime) {\n    return Math.min(\n      scene.additionalModifier.fullScreen.width /\n      scene.additionalModifier.width,\n      scene.additionalModifier.fullScreen.height /\n      scene.additionalModifier.height\n    );\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition & {cam? : CameraPosition}) {\n    const { scene, engine, cam, x1, y1, x2, y2 } = params\n    const scale = scene.additionalModifier.scaleCanvas;\n    const invert = this.viewportByCam(params, cam || this.cam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      engine.getWidth() * scale,\n      engine.getHeight() * scale\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    const ret = {\n      x: mx,\n      y: my,\n      zoom: (cam || this.cam).zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE),\n    };\n    if (cam) {\n      cam.x = ret.x;\n      cam.y = ret.y;\n      cam.zoom = ret.zoom;\n    } else {\n      this.cam = ret;\n    }\n  }\n}\n","import type Scene from \"../Scene\";\nimport type { ConfigurationObject, ParameterList, ParameterListFixedUpdate, ParameterListInitDestroy, ParameterListPositionEvent, ParameterListWithoutTime, RectPosition } from \"../Scene\";\nimport type { CameraPosition } from \"./Camera\";\n\nexport interface MiddlewareCameraControlOptions {\n  zoomMax: number\n  zoomMin: number\n  zoomFactor: number\n  tween: number\n  callResize: boolean\n}\n\nconst clickTime = 300;\nexport default class CameraControl implements ConfigurationObject {\n  type = \"control\"\n  _mousePos: Record<number, {\n    x: number\n    y: number\n    _cx: number\n    _cy: number\n    _isDown: boolean\n    _numOfFingers: number\n    _distance: undefined | number\n    _timestamp: number\n    _czoom: undefined | number\n  }> = {}\n  toCam: CameraPosition = {\n    zoom: 1,\n    x: 0,\n    y: 0\n  }\n  _config: MiddlewareCameraControlOptions\n  _scene: Scene | undefined\n  _instant: boolean = false\n\n  constructor(config: Partial<MiddlewareCameraControlOptions> = {}) {\n    this._config = Object.assign(\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        callResize: true,\n      },\n      config\n    );\n  }\n\n  init({ scene }: ParameterListInitDestroy) {\n    this._scene = scene\n    this.toCam = Object.assign({}, scene.camera.cam);\n  }\n\n  mouseDown({ event: e, position: [mx, my], button: i }: ParameterListPositionEvent) {\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e as TouchEvent).touches?.length || 1,\n      _distance: undefined,\n      _timestamp: Date.now(),\n    });\n  }\n\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      !(\n        (\n          Date.now() - this._mousePos[i]._timestamp < clickTime &&\n          Math.abs(this._mousePos[i].x - mx) < 5 &&\n          Math.abs(this._mousePos[i].y - my) < 5 &&\n          i === 1\n        ) // i === 0\n      )\n    ) {\n      scene.stopPropagation();\n    }\n  }\n\n  mouseOut({ button: i }: ParameterListPositionEvent) {\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n        (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      const viewMatrix = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert();\n      const [ox, oy] = viewMatrix.transformPoint(\n        this._mousePos[i].x * scale,\n        this._mousePos[i].y * scale\n      );\n      const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n      this.toCam.x = this._mousePos[i]._cx + ox - nx;\n      this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    }\n  }\n\n  mouseWheel({ event: e, position: [mx, my], scene }: ParameterListPositionEvent) {\n    const scale = scene.additionalModifier.scaleCanvas;\n    const [ox, oy] = scene.camera\n      .viewportByCam(arguments[0], this.toCam)\n      .invert()\n      .transformPoint(mx * scale, my * scale);\n    // @ts-ignore\n    const wheelData = (e as WheelEvent).wheelDelta || (e as WheelEvent).deltaY * -1;\n    if (wheelData / 120 > 0) {\n      this.zoomIn();\n      const [nx, ny] = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert()\n        .transformPoint(mx * scale, my * scale);\n      this.toCam.x -= nx - ox;\n      this.toCam.y -= ny - oy;\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    } else {\n      this.zoomOut(arguments[0]);\n    }\n  }\n\n  hasCamChanged() {\n    const t = this._config.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this._scene!.camera.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this._scene!.camera.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this._scene!.camera.cam.zoom) >=\n      Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate({ scene, lastCall }: ParameterListFixedUpdate) {\n    if (this._config.tween && !this._instant && this.hasCamChanged()) {\n      scene.camera.cam.x +=\n        (this.toCam.x - scene.camera.cam.x) / this._config.tween;\n      scene.camera.cam.y +=\n        (this.toCam.y - scene.camera.cam.y) / this._config.tween;\n      scene.camera.cam.zoom +=\n        (this.toCam.zoom - scene.camera.cam.zoom) / this._config.tween;\n      if (lastCall) {\n        scene.additionalModifier.cam = scene.camera.cam;\n        if (this._config.callResize) {\n          scene.resize();\n        } else {\n          scene.cacheClear();\n        }\n      }\n    }\n  }\n\n  update({ scene }: ParameterList) {\n    if ((!this._config.tween || this._instant) && this.hasCamChanged()) {\n      this._instant = false;\n      scene.camera.cam = Object.assign({}, this.toCam);\n      if (this._config.callResize) {\n        scene.resize();\n      } else {\n        scene.cacheClear();\n      }\n    }\n  }\n\n  camInstant() {\n    this._instant = true;\n  }\n\n  resize(args: ParameterListWithoutTime& { clampLimits?: RectPosition }) {\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n  }\n\n  zoomToNorm() {\n    this.toCam.zoom = 1;\n    return this;\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this._config.zoomMax,\n      this.toCam.zoom * this._config.zoomFactor\n    );\n    return this;\n  }\n  zoomOut(args: ParameterListWithoutTime & { clampLimits?: RectPosition }) {\n    this.toCam.zoom = Math.max(\n      this._config.zoomMin,\n      this.toCam.zoom / this._config.zoomFactor\n    );\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n    return this;\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition) {\n    params.scene.camera.zoomTo(Object.assign(\n      params, {cam:this.toCam}\n    ));\n  }\n}\n","import Scene, { ConfigurationObject, ElementClickInfo, ParameterListCanvas, ParameterListClickElement, ParameterListClickNonElement, ParameterListPositionEvent } from \"../Scene\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nexport interface MiddlewareElementOptions {\n  doubleClickDetectInterval?: number\n}\n\ninterface MousePosition {\n  mx: number\n  my: number\n}\n\nexport default class Element implements ConfigurationObject {\n  _clickIntend: MousePosition | undefined = undefined;\n  _hoverIntend: MousePosition | undefined = undefined;\n  _hasDetectImage: boolean = false;\n  _doubleClickElementTimer: number | undefined = undefined;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  isDrawFrame() {\n    return this._hasDetectImage ? 1 : 0;\n  }\n\n  _dispatchEvent(scene: Scene, isClick: boolean, param: ParameterListClickElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickElement\")) {\n        if (this._doubleClickElementTimer) {\n          window.clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClickElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"clickElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickElement\", param);\n      }\n    } else {\n      scene.map(\"hoverElement\", param);\n    }\n  }\n\n  _dispatchNonEvent(scene: Scene, isClick: boolean, param: ParameterListClickNonElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickNonElement\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = undefined;\n          scene.map(\"doubleClickNonElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = undefined;\n            scene.map(\"clickNonElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickNonElement\", param);\n      }\n    } else {\n      scene.map(\"hoverNonElement\", param);\n    }\n  }\n\n  initSprites(params: ParameterListCanvas) {\n    const { scene, output, layerManager, canvasId } = params\n    this._hasDetectImage = false;\n    if (this._clickIntend || this._hoverIntend) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[canvasId || 0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n\n      ctx.save();\n      ctx.setTransform(...scene.viewport().m);\n      let found: ElementClickInfo | undefined | \"c\" = undefined;\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const a = (element as ISprite).detect(ctx, cx, cy);\n          if (a === \"c\") {\n            found = \"c\";\n          } else if (a) {\n            found = { layerId, element: a, elementId };\n            return false;\n          }\n        }\n      });\n      ctx.restore();\n\n      if (found === \"c\") {\n        this._hasDetectImage = true;\n      } else {\n        this._clickIntend = undefined;\n        this._hoverIntend = undefined;\n        const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n          mx,\n          my,\n          x,\n          y,\n        }, params) as ParameterListClickNonElement;\n        if (found) {\n          Object.assign(param, found as ElementClickInfo);\n          this._dispatchEvent(scene, isClick, param);\n        } else {\n          this._dispatchNonEvent(scene, isClick, param);\n        }\n      }\n    }\n  }\n\n  draw(params: ParameterListCanvas) {\n    const { engine, scene, layerManager, output, canvasId } = params;\n    if (!canvasId && this._hasDetectImage) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n      const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n        mx,\n        my,\n        x,\n        y,\n      }, params) as ParameterListClickNonElement;\n\n      const oldISE = ctx.imageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = false;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.save();\n\n      ctx.setTransform(...scene.viewport().m);\n\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const color = `rgb(${elementId & 0xff}, ${(elementId & 0xff00) >> 8\n            }, ${layerId & 0xff})`;\n          (element as ISprite).detectDraw(ctx, color);\n        }\n      }, 0);\n      ctx.restore();\n      ctx.imageSmoothingEnabled = oldISE;\n      engine.normContext(ctx);\n\n      this._clickIntend = undefined;\n      this._hoverIntend = undefined;\n\n      const p = ctx.getImageData(cx, cy, 1, 1).data;\n      if (p[3]) {\n        Object.assign(param, {\n          layerId: p[2],\n          elementId: p[0] + (p[1] << 8),\n          element: layerManager\n            .getById(param.layerId)\n            .getById(param.elementId)  \n        })\n        this._dispatchEvent(scene, isClick, param);\n      } else {\n        this._dispatchNonEvent(scene, isClick, param);\n      }\n    }\n  }\n\n  mouseUp({ scene, position: [mx, my], button }:ParameterListPositionEvent) {\n    this._clickIntend = button === 1 && scene.has(\"clickElement\") ? { mx, my } : undefined;\n  }\n\n  mouseMove({ scene, position: [mx, my] }:ParameterListPositionEvent) {\n    this._hoverIntend = scene.has(\"hoverElement\") ? { mx, my } : undefined;\n  }\n}\n","import ifNull from '../func/ifnull'\nimport type { ValueOf } from '../helper';\nimport type { ConfigurationObject, EventsReturn, ParameterList, ParameterListInitDestroy, ParameterListWithoutTime } from '../Scene';\nimport Scene from '../Scene';\n\nexport default class Events implements ConfigurationObject {\n  type = \"events\"\n\n  _events: {\n    n: HTMLElement,\n    e: keyof HTMLElementEventMap\n    f: (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any\n  }[] = []\n\n  _pushEvent(command: \"mouseDown\" | \"mouseUp\" | \"mouseOut\" | \"mouseMove\" | \"mouseWheel\", event: Event | TouchEvent | MouseEvent, scene: Scene) {\n    if (ifNull<boolean>(scene.value(\"preventDefault\"), true)) {\n      event.preventDefault();\n    }\n    const [mx, my] = this.getMousePosition({ event });\n    const [x, y] = scene.transformPoint(mx, my);\n    scene.pipeBack(command, {\n      event,\n      position: [mx, my],\n      x,\n      y,\n      button: this.getMouseButton({ event }),\n    });\n  }\n\n  events({ scene }: ParameterListInitDestroy) {\n    return [\n      scene.has(\"mouseDown\") && [\n        [\"touchstart\", \"mousedown\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseDown\", event, scene),\n      ],\n      scene.has(\"mouseUp\") && [\n        [\"touchend\", \"mouseup\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseUp\", event, scene),\n      ],\n      scene.has(\"mouseOut\") && [\n        [\"touchendoutside\", \"mouseout\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseOut\", event, scene),\n      ],\n      scene.has(\"mouseMove\") && [\n        [\"touchmove\", \"mousemove\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseMove\", event, scene),\n      ],\n      scene.has(\"mouseWheel\") && [\n        [\"wheel\"],\n        (event: Event) => this._pushEvent(\"mouseWheel\", event, scene),\n      ],\n      (ifNull(scene.value<\"preventDefault\", boolean>(\"preventDefault\"), true)) && [\n        [\"contextmenu\"],\n        (e: Event) => e.preventDefault(),\n      ],\n    ].filter((v) => v) as EventsReturn\n  }\n\n  init({ output, scene }: ParameterListInitDestroy) {\n    const element = output.canvas[0];\n\n    const events: (keyof HTMLElementEventMap | [keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[][] = scene.map(\"events\", {});\n\n    this._events = events\n      .filter(Array.isArray)\n      // flat(1)\n      .reduce((acc, cur) => {\n        acc.push.apply(acc, cur);\n        return acc;\n      }, [])\n      // convert strings to call to function with the same name\n      .map(cur =>\n        Array.isArray(cur) ? cur : [[cur], (event: ValueOf<HTMLElementEventMap>) => {\n          if (ifNull(scene.value(\"preventDefault\"), true)) event.preventDefault();\n          scene.pipeBack(cur, { event });\n        }]\n      )\n      .map(([events, func]) =>\n        events.map((e: keyof HTMLElementEventMap) => ({\n          n: element,\n          e: e,\n          f: func,\n        }))\n      )\n      // workaround for .flat(1) for edge\n      .reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          acc.push.apply(acc, cur);\n        } else {\n          acc.push(cur);\n        }\n        return acc;\n      }, []);\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f, true);\n    });\n  }\n\n  destroy() {\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f, true);\n    });\n    this._events = [];\n  }\n\n  getMousePosition({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    let touches;\n    if ((e as TouchEvent).touches && (e as TouchEvent).touches.length > 0) {\n      touches = (e as TouchEvent).targetTouches;\n    } else if ((e as TouchEvent).changedTouches && (e as TouchEvent).changedTouches.length > 0) {\n      touches = (e as TouchEvent).changedTouches;\n    }\n    if (touches) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top,\n      ];\n    }\n    if ((e as MouseEvent).offsetX === undefined) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      return [(e as MouseEvent).clientX - rect.left, (e as MouseEvent).clientY - rect.top];\n    }\n    return [(e as MouseEvent).offsetX, (e as MouseEvent).offsetY];\n  }\n\n  getMouseButton({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    return (\n      (e as TouchEvent).touches\n        ? ((e as TouchEvent).touches.length || (e as TouchEvent).changedTouches.length)\n        : ifNull((e as MouseEvent).buttons\n          ? (e as MouseEvent).buttons\n          : [0, 1, 4, 2][(e as MouseEvent).which], 1)\n    );\n  }\n}\n","import Callback from \"./Middleware/Camera\";\nimport Camera from \"./Middleware/Camera\";\nimport CameraControl from \"./Middleware/CameraControl\";\nimport CameraControlSecondButton from \"./Middleware/CameraControlSecondButton\";\nimport Click from \"./Middleware/Click\";\nimport Element from \"./Middleware/Element\";\nimport Event from \"./Middleware/Event\";\nimport LoadingScreen from \"./Middleware/LoadingScreen\";\nimport Norm from \"./Middleware/Norm\";\nimport TimingAudio from \"./Middleware/TimingAudio\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\n\nexport default {\n  Callback,\n  Camera,\n  CameraControl,\n  CameraControlSecondButton,\n  Click,\n  Element,\n  Event,\n  LoadingScreen,\n  Norm,\n  TimingAudio,\n  TimingDefault,\n};\n","import { ParameterListPositionEvent } from \"../Scene.js\";\nimport CameraControl from \"./CameraControl.js\";\nconst clickTime = 300;\n\nexport default class CameraControlSecondButton extends CameraControl {\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      (Date.now() - this._mousePos[i]._timestamp > clickTime ||\n        Math.abs(this._mousePos[i].x - mx) >= 5 ||\n        Math.abs(this._mousePos[i].y - my) >= 5) &&\n        i === 1\n    ) {\n      scene.stopPropagation();\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"region\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n          (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      if (i === 2) {\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n    }\n\n    if (\n      i === 1 &&\n      scene.has(\"regionMove\") &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!(e as TouchEvent).touches || (e as TouchEvent).touches.length === 1)\n    ) {\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"regionMove\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListPositionEvent } from \"../Scene\";\nimport type { MiddlewareElementOptions } from \"./Element\";\n\nexport default class Click implements ConfigurationObject{\n  _doubleClickElementTimer: undefined|number;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  mouseUp(param:ParameterListPositionEvent) {\n    const { scene, button } = param;\n    if (button === 1) {\n      if (scene.has(\"doubleClick\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClick\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"click\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"click\", param);\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListLoading } from \"../Scene\";\n\nexport default class LoadingScreen implements ConfigurationObject {\n  loading({ output, progress }: ParameterListLoading) {\n    const ctx = output.context[0];\n    const isNumber = typeof progress === \"number\"\n    const loadedHeight =\n      isNumber\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"_aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"_fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNumber\n        ? \"Loading \" + Math.round(100 * progress) + \"%\"\n        : progress,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n}\n","import Transform from '../func/transform'\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime } from '../Scene';\n\nexport default class Norm implements ConfigurationObject {\n  viewport({ engine }: ParameterListWithoutTime, matrix: Transform) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return matrix.translate(hw, hh).scale(scale, scale);\n  }\n\n  additionalModifier({ engine, output, scene }: ParameterListWithoutTime):AdditionalModifier {\n    scene.cacheClear();\n\n    const [x1, y1] = scene.transformPoint(0, 0, 1);\n    const [x2, y2] = scene.transformPoint(output.width, output.height, 1);\n\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    const transformInvert = new Transform().translate(hw, hh).scale(scale, scale).invert();\n    const [sx1, sy1] = transformInvert.transformPoint(0, 0);\n    const [sx2, sy2] = transformInvert.transformPoint(\n      output.width,\n      output.height\n    );\n\n    return {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth,\n      visibleScreen: {\n        x: x1,\n        y: y1,\n        width: x2 - x1,\n        height: y2 - y1,\n      },\n      fullScreen: {\n        x: sx1,\n        y: sy1,\n        width: sx2 - sx1,\n        height: sy2 - sy1,\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterList, ParameterListInitDestroy } from \"../Scene\";\nimport TimingDefault, { MiddlewareTimingDefaultOptions } from \"./TimingDefault\";\n\nexport interface MiddlewareTimingAudioOptions extends MiddlewareTimingDefaultOptions {\n  audioElement: HTMLMediaElement\n}\n\nexport default class TimingAudio extends TimingDefault implements ConfigurationObject {\n  _maxSkippedTickChunk: number = Number.POSITIVE_INFINITY\n  _audioStartTime: number | undefined = undefined\n  _audioPosition: number | undefined = undefined\n  _enableAndroidHack: boolean = false\n  _audioElement: HTMLMediaElement & {\n    controller?: Record<string,any>\n  }\n\n  constructor(configuration: MiddlewareTimingAudioOptions) {\n    super({\n      ...configuration,\n      maxSkippedTickChunk: Number.POSITIVE_INFINITY\n    });\n    this._audioElement = configuration.audioElement;\n  }\n\n  get audioElement() {\n    return this._audioElement;\n  }\n\n  init(_params: ParameterListInitDestroy) {\n    if (this._audioElement) {\n      // Android hack\n      // @ts-ignore\n      if (typeof MediaController === \"function\") {\n        // @ts-ignore\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      return new Promise((resolve) => {\n        let canplaythrough = () => {\n          this._audioElement.removeEventListener(\n            \"canplaythrough\",\n            canplaythrough\n          );\n          let playPromise = this._audioElement.play();\n          if (playPromise) {\n            playPromise.catch((e) => { });\n          }\n          resolve(undefined);\n        };\n        this._audioElement.addEventListener(\"canplaythrough\", canplaythrough);\n        this._audioElement.load();\n      });\n    }\n  }\n\n  endTime() {\n    return this._audioElement ? this._audioElement.duration * 1000 : Number.POSITIVE_INFINITY;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      if (this._audioElement.ended && this._audioElement.duration) {\n        return this._audioElement.duration * 1000;\n      }\n      const currentAudioTime = this._audioElement.currentTime * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === undefined) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller!.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition! < 500 &&\n              currentAudioTime > this._audioPosition! &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition!);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    return timePassed;\n  }\n\n  shiftTime() {\n    return 0;\n  }\n}\n"],"names":["calc","c","slice","call","arguments","toArray","value","Array","isArray","_settle","pact","state","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_events","_classPrivateFieldLooseKey","_scene","_newScene","_sceneParameter","_isSceneInitialized","_recalculateCanvasIntend","_lastTimestamp","_referenceRequestAnimationFrame","_autoSize","_canvasCount","_drawFrame","_reduceFramerate","_realLastTimestamp","_isOddFrame","_initializedStartTime","_promiseSceneDestroying","_runParameter","_moveOnce","Engine","constructor","canvasOrOptions","Object","defineProperty","_output","writable","givenOptions","Error","getContext","canvas","assign","_classPrivateFieldLooseBase","context","width","height","ratio","undefined","options","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","map","n","window","f","recalculateCanvas","push","document","handleVisibilityChange","_recalculateCanvas","forEach","index","length","from","clickToPlayAudio","playAudioOfScene","reduceFramerate","addEventListener","switchScene","scene","sceneParameter","visibilityState","timing","audioElement","play","normContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","getOutput","Math","round","style","resize","recalculateFPS","cancelAnimationFrame","Promise","resolve","requestAnimationFrame","_temp2","timeBetweenFrames","_now","start","count","offsetTimeTarget","offsetTimeDelta","_mainLoop","i","_temp","test","update","body","shouldContinue","stage","_resumeAfterTest","_resumeAfterBody","reject","_for","performance","now","Date","timestamp","isRecalculatedCanvas","max","destroy","destroyParameterForNewScene","callInit","run","currentTime","timePassed","clampTime","shiftTime","moveFrame","nowAutoSize","initSprites","drawFrame","isDrawFrame","move","draw","deltaTimestamp","deltaFrame","abs","targetTime","delta","min","callLoading","totalTimePassed","reset","runParameter","_this2","stop","_temp4","_temp3","_this3","_classPrivateFieldLoo2","_temp5","_this4","removeEventListener","ImageManager$1","Images","loaded","_resolve","add","Callbacks","self","key","imageSrc","Image","onload","isLoaded","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","onerror","img","crossOrigin","getImage","nameOrImage","isLoadedPromise","_layer","_isFunction","_start","_nextFree","_canvasIds","canvasIds","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","id","len","nextFree","concat","k","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","isCanvasId","canvasId","includes","layerId","l","isFunction","layer","getElementsByTag","tag","_ref","ans","label","timelapsed","_ref2","clear","_layers","addLayer","Layer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","Transform","m","__constuct","multiply","matrix","m12","dy","m21","m22","dx","invert","d","m4","m5","m1","m2","m3","rotate","rad","cos","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","alternative","TimingDefault","configuration","_configuration","ifNull","tickChunk","_maxSkippedTickChunk","maxSkippedTickChunk","tickChunkTolerance","init","_params","_tickChunk","maxTime","isChunked","hasOneChunkedFrame","_ref3","_tickChunkTolerance","calcFrames","_ref4","floor","_iteratorSymbol","Symbol","iterator","defaultMiddlewareCommandList","_all","fixedUpdate","additionalModifier","Scene","_transform","_transformInvert","_additionalModifier","_initDone","_endTime","_resetIntend","_layerManager","LayerManager","ImageManager","middlewares","middlewareByType","configurationClassOrObject","reduce","middlewareCommandList","command","keys","objs","filter","has","_middleware","some","do","params","defaultValue","func","fullParams","pipe","res","_stopPropagation","pipeBack","pipeMax","p","newRes","pipeAsync","_interrupt","target","check","step","_cycle","next","done","return","_fixup","TypeError","values","array","_forTo","_c$command","_param","stopPropagation","cacheClear","viewport","_engine","scaleCanvas","parameter","engine","images","_imageManager","all","updateAdditionalModifier","output","alpha","widthInPixel","heightInPixel","visibleScreen","fullScreen","t_timing","camera","t_camera","control","t_control","_totalTimePassed","args","progress","lastCall","frames","calcFrame","animate","save","setTransform","restore","resetIntend","layers","_classPrivateFieldLoo","additionalParameter","imageManager","layerManager","SequenceRunCommand","Wait","duration","_duration","sprite","time","_runSequence","Sequence","sequences","lastTimestamp","timeWait","shift","sequence","thisTimeWait","position","arr","sequencePosition","b","_sequencePosition$seq2","seq","is_difference","disableVote","Infinity","timeLeft","restTime","FORCE_DISABLE","STOP","REMOVE","_sequencePosition$seq3","givenParameter","_needInit","_parseParameterList","_getParameterList","parameterList","entries","name","givenValue","fromEntries","valueEntries","_getBaseParameterList","animation","isClickable","timepassed","_this$p$animation$pla","_this$p$animation","_detectHelperCallback","scaleX","scaleY","rotation","beginPath","a","_detectHelper","coordinateX","coordinateY","moveToCenter","hw","hh","rect","closePath","isPointInPath","detectDraw","color","detect","PI","CircleParameterList","rotationInRadian","rotationInDegree","degToRad","compositeOperation","Group","super","finished","spriteFinished","w","h","createElement","canvasWidth","canvasHeight","gridSize","_temp_canvas","_currentGridSize","_tctx","norm","oldTempCanvas","drawImage","Emitter","classToEmit","class","Position","FastBlur","SpriteBase","darker","pixel","_generateTempCanvas","ceil","normalizeFullScreen","targetW","targetH","_this$additionalBlur","fillStyle","fillRect","additionalBlur","clearRect","oldValue","imageSmoothingEnabled","tint","frameWidth","image","frameHeight","frameX","frameY","join","Text","givenParameters","text","font","CENTER","borderColor","lineWidth","fillText","strokeStyle","strokeText","Particle","static","r","g","rIndex","cr","cg","cb","_Gradient","generateGradientImage","txtc","grad","createRadialGradient","gradientSize","addColorStop","_currentScaleX","TinyColor","toRgb","_currentPixelSmoothing","getGradientImage","_normalizeFullScreen","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","_centerX","_centerY","_scaleZ","_moveStar","scaled_timepassed","firstPass","moveX","moveY","z","moveZ","random","projectX","projectY","lw","highScale","Sprites","Callback","_timePassed","Canvas","_copyCanvas","_copyCanvas2","_normalizeFullScreen2","_generateTempCanvas2","wh","tw","th","cam","zoom","Circle","arc","fill","_temp_context","_temp_context2","_tintCacheKey","_tintCacheKey2","_currentTintKey","_normScale","normCover","normToScreen","clickExact","sX","isTopLeft","LEFT_TOP","tctx","sY","isCenter","cx","cy","Path","Path2D","polyfill","getElementsByTagName","script","head","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","_oldPath","_path2D","curve","moveTo","points","bezierCurveTo","Number","EPSILON","Rect","Scroller","characterList","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","radiusScale","imageDataRGBA","imageData","putImageData","StarField","_moveStar2","clampOrRandom","val","ret","lineTo","_callback","_initialized","moveDefault","moveStatic","moveBezier","copy","copyLength","colorFrom","mix","colorTo","toString","isColor","moveAlgorithm","moveColor","isPath","movePath","isStatic","bezier","_Aniobject","_shakeDiff","_shakeDiffHalf","_x","_y","_showOnce","_states","_transitions","_currentStateName","_currentState","_isTransitioningToStateName","Animations","ChangeTo","changeValues","ease","_init","_init2","_changeValues","_ease","orgValue","isBezier","names","t","End","EndDisabled","Forever","Aniobject","_classPrivateFieldLoo3","_classPrivateFieldLoo4","isDifference","_classPrivateFieldLoo5","_classPrivateFieldLoo6","If","ifCallback","AniobjectElse","_ifCallback","_AniobjectElse","AniObject","durationBetweenFrames","_image","_count","_durationBetweenFrames","_current","imageCalced","currentFrame","ImageFrame","frameNumber","framesToRight","_frameNumber","_framesToRight","frameNumberCalc","Loop","times","_times","_timesOrg","Once","Remove","Shake","shakediff","ShowOnce","State","states","transitions","defaultState","setState","charAt","toUpperCase","transitionName","UCFirstName","find","Stop","StopDisabled","WaitDisabled","Camera","config","viewportByCam","clampView","clampLimits","cl","x1","y1","x2","y2","camY","camX","zoomToFullScreen","zoomTo","sx1","sy1","sx2","sy2","MIN_VALUE","CameraControl","_mousePos","toCam","_config","_instant","zoomMax","zoomMin","zoomFactor","tween","callResize","mouseDown","_e$touches","event","mx","my","button","_cx","_cy","_isDown","_numOfFingers","touches","_distance","_timestamp","mouseUp","_e$changedTouches","numCurrentFingers","changedTouches","down","numOfFingers","mouseOut","mouseMove","_ref5","which","_e$touches2","distance","sqrt","pageX","pageY","_czoom","viewMatrix","ox","oy","nx","ny","mouseWheel","_ref6","wheelDelta","deltaY","zoomIn","zoomOut","hasCamChanged","_ref7","camInstant","zoomToNorm","isClick","param","_doubleClickElementTimer","clearTimeout","setTimeout","_doubleClickDetectInterval","_pushEvent","preventDefault","getMousePosition","getMouseButton","Middleware","CameraControlSecondButton","fromX","fromY","toX","toY","Click","doubleClickDetectInterval","Element","_dispatchNonEvent","_dispatchNonEvent2","_dispatchEvent","_dispatchEvent2","_clickIntend","_hoverIntend","_hasDetectImage","found","oldISE","Event","_pushEvent2","events","acc","cur","apply","targetTouches","getBoundingClientRect","sum","left","top","offsetX","clientX","clientY","offsetY","buttons","LoadingScreen","loading","isNumber","loadedHeight","Norm","transformInvert","TimingAudio","POSITIVE_INFINITY","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","MediaController","controller","preload","canplaythrough","playPromise","catch","load","endTime","ended","currentAudioTime","playbackState"],"mappings":"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"}