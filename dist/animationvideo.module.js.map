{"version":3,"file":"animationvideo.module.js","sources":["../func/calc.ts","../func/toArray.ts","../Engine.ts","../ImageManager.ts","../Layer.ts","../LayerManager.ts","../func/transform.ts","../func/ifnull.ts","../Middleware/TimingDefault.ts","../Scene.ts","../Animations/Wait.ts","../Animations/Sequence.ts","../Sprites/Sprite.ts","../Sprites/Circle.ts","../Sprites/Group.ts","../Sprites/Emitter.ts","../Sprites/FastBlur.ts","../Position.ts","../Sprites/Text.ts","../Sprites/Particle.ts","../Sprites.ts","../Sprites/Callback.ts","../Sprites/Canvas.ts","../Sprites/Image.ts","../Sprites/Path.ts","../Sprites/Rect.ts","../Sprites/Scroller.ts","../Sprites/StackBlur.ts","../Sprites/StarField.ts","../Animations/ChangeTo.ts","../Animations.ts","../Animations/Callback.ts","../Animations/End.ts","../Animations/EndDisabled.ts","../Animations/Forever.ts","../Animations/If.ts","../Animations/Image.ts","../Animations/ImageFrame.ts","../Animations/Loop.ts","../Animations/Once.ts","../Animations/Remove.ts","../Animations/Shake.ts","../Animations/ShowOnce.ts","../Animations/State.ts","../Animations/Stop.ts","../Animations/StopDisabled.ts","../Animations/WaitDisabled.ts","../Middleware/Camera.ts","../Middleware/CameraControl.ts","../Middleware.ts","../Middleware/CameraControlSecondButton.ts","../Middleware/Click.ts","../Middleware/Element.ts","../Middleware/Event.ts","../Middleware/LoadingScreen.ts","../Middleware/Norm.ts","../Middleware/TimingAudio.ts"],"sourcesContent":["export type WithoutFunction<R> = R extends Function ? never : R\n\nexport default function calc<\n  T = unknown,\n  FunctionParamsType extends any[] = any[],\n  >(\n    c: T | ((...params: FunctionParamsType) => T),\n    ...params: FunctionParamsType): T {\n  return typeof c === \"function\" ? (c as ((...params: FunctionParamsType) => T))(...params) : c;\n}\n","export default function toArray<T>(value:T|T[]):T[]\t{\n\treturn (value === undefined || value === null ? [] : Array.isArray(value) ? value : [value]);\n}","import calc from \"./func/calc.js\";\nimport toArray from \"./func/toArray.js\";\nimport type TimingAudio from \"./Middleware/TimingAudio.js\";\nimport type Scene from './Scene'\n\nexport interface EngineOptions {\n  canvas: HTMLCanvasElement\n  scene?: null | Scene\n  sceneParameter?: Record<any, any>\n  autoSize?: AutoSizeSettings\n  clickToPlayAudio?: boolean\n  reduceFramerate?: boolean\n}\n\nexport interface AutoSizeSettings {\n  enabled: boolean\n  scaleLimitMin: number\n  scaleLimitMax: number\n  scaleFactor: number\n  referenceWidth: () => number\n  referenceHeight: () => number\n  currentScale: number\n  waitTime: number\n  currentWaitedTime: number\n  currentOffsetTime: number\n  offsetTimeLimitUp: number\n  offsetTimeLimitDown: number\n  registerResizeEvents: boolean\n  registerVisibilityEvents: boolean\n  setCanvasStyle: boolean\n  offsetTimeTarget?: number\n  offsetTimeDelta?: number\n}\n\ninterface EventSafe {\n  n: HTMLElement | Window & typeof globalThis | Document\n  e: string\n  f: EventListenerOrEventListenerObject,\n}\n\nexport interface OutputInfo {\n  canvas: HTMLCanvasElement[],\n  context: CanvasRenderingContext2D[],\n  width: number,\n  height: number,\n  ratio: number,\n}\n\n\nclass Engine {\n  _output: OutputInfo\n  _events: EventSafe[]\n  _scene: null | Scene | undefined\n  _newScene: undefined | null | Scene\n  _sceneParameter: undefined | Record<any, any>\n  _isSceneInitialized: boolean\n  _recalculateCanvasIntend: boolean\n  _lastTimestamp: number\n  _referenceRequestAnimationFrame: number | undefined\n  _autoSize: undefined | AutoSizeSettings\n  _canvasCount: number\n  _drawFrame: number[]\n  _reduceFramerate: boolean\n  _realLastTimestamp: number | undefined\n  _isOddFrame: boolean = false\n  _initializedStartTime: number | undefined\n  _promiseSceneDestroying: Promise<any> | undefined\n  _runParameter: undefined | Record<any, any>\n  _moveOnce: boolean = false\n\n  constructor(canvasOrOptions: HTMLCanvasElement | EngineOptions) {\n    let givenOptions: EngineOptions = canvasOrOptions as EngineOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if ((canvasOrOptions as HTMLCanvasElement).getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions as HTMLCanvasElement,\n      };\n    } else if (!(canvasOrOptions as EngineOptions).canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options: EngineOptions = Object.assign(\n      {},\n      givenOptions\n    );\n\n    this._output = {\n      canvas: [],\n      context: [],\n      width: 0,\n      height: 0,\n      ratio: 1,\n    };\n\n    // list of binded events\n    this._events = [];\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    // this._newScene = undefined;\n    // this._promiseSceneDestroying = undefined;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = undefined;\n\n    // data about the output canvas\n    this._output.canvas = toArray(options.canvas);\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings: AutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 2.5,\n        scaleFactor: 1.07,\n        referenceWidth: () => this._output.canvas[0].clientWidth,\n        referenceHeight: () => this._output.canvas[0].clientHeight,\n        currentScale: 1,\n        waitTime: 100,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        // undefined will be autodetect timing\n        // offsetTimeTarget: 25,\n        // offsetTimeDelta: 10,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false,\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        this._events = [\"resize\", \"orientationchange\"].map((e) => ({\n          n: window,\n          e: e,\n          f: this.recalculateCanvas.bind(this),\n        }));\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        this._events.push({\n          n: document,\n          e: \"visibilitychange\",\n          f: this.handleVisibilityChange.bind(this),\n        });\n      }\n      this._recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas[0].width;\n      this._output.height = this._output.canvas[0].height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.canvas.forEach((canvas, index) => {\n      this._output.context[index] = canvas.getContext(\"2d\")!;\n    });\n    this._canvasCount = this._output.canvas.length;\n    this._drawFrame = Array.from({ length: this._canvasCount }, (v) => 0);\n\n    if (options.clickToPlayAudio) {\n      this._events.push({\n        n: this._output.canvas[0],\n        e: \"click\",\n        f: this.playAudioOfScene.bind(this),\n      });\n    }\n\n    this._reduceFramerate = !!options.reduceFramerate;\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f);\n    });\n\n    this.switchScene(options.scene, options.sceneParameter || {});\n  }\n\n  handleVisibilityChange() {\n    if (this._autoSize) this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (\n      this._isSceneInitialized &&\n      this._scene &&\n      (this._scene.timing as TimingAudio).audioElement\n    ) {\n      (this._scene.timing as TimingAudio).audioElement!.play();\n    }\n  }\n\n  normContext(ctx: CanvasRenderingContext2D) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  getOutput() {\n    return this._output;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc<number>(this._autoSize.referenceWidth);\n      const height = calc<number>(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.forEach((canvas) => {\n        canvas.width = Math.round(width / this._autoSize!.currentScale);\n        canvas.height = Math.round(height / this._autoSize!.currentScale);\n        if (this._autoSize!.setCanvasStyle) {\n          canvas.style.width = `${width}px`;\n          canvas.style.height = `${height}px`;\n        }\n      });\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas[0].width;\n    this._output.height = this._output.canvas[0].height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  async recalculateFPS() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n      this._referenceRequestAnimationFrame = undefined;\n    }\n    await new Promise((resolve) => requestAnimationFrame(resolve));\n    const start = this._now();\n    const count = 3;\n    for (let i = count; i--;) {\n      await new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n\n    const timeBetweenFrames = (this._now() - start) / count;\n    this._autoSize!.offsetTimeTarget = timeBetweenFrames;\n    this._autoSize!.offsetTimeDelta = timeBetweenFrames / 3;\n\n    if (this._referenceRequestAnimationFrame === undefined) {\n      this._realLastTimestamp = undefined;\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        this._mainLoop.bind(this)\n      );\n    }\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize();\n    }\n    return this;\n  }\n\n  switchScene(scene: Scene | null | undefined, sceneParameter: undefined | Record<any, any> = undefined) {\n    if (scene) {\n      this._newScene = scene;\n      this._sceneParameter = sceneParameter;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  _mainLoop(timestamp:number) {\n    if (!this._referenceRequestAnimationFrame) return;\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    let isRecalculatedCanvas =\n      this._recalculateCanvasIntend &&\n      (!this._reduceFramerate || !this._isOddFrame);\n\n    if (isRecalculatedCanvas) {\n      this._recalculateCanvas();\n      this._recalculateCanvasIntend = false;\n    }\n\n    for (let i = 0; i < this._canvasCount; i++) {\n      this._drawFrame[i] = Math.max(\n        this._drawFrame[i] - 1,\n        isRecalculatedCanvas ? 1 : 0\n      );\n    }\n\n    if (!this._realLastTimestamp) {\n      this._realLastTimestamp = timestamp;\n    }\n    if (!this._initializedStartTime) {\n      this._initializedStartTime = timestamp;\n    }\n\n    if (this._newScene && !this._promiseSceneDestroying) {\n      this._promiseSceneDestroying = Promise.resolve(\n        this._scene ? this._scene.destroy() : undefined\n      );\n      this._promiseSceneDestroying.then((destroyParameterForNewScene) => {\n        this._newScene!.callInit(\n          {\n            run: this._runParameter,\n            scene: this._sceneParameter,\n            destroy: destroyParameterForNewScene,\n          },\n          this\n        );\n        this._scene = this._newScene;\n        this._newScene = undefined;\n        this._promiseSceneDestroying = undefined;\n        this._isSceneInitialized = false;\n        this._lastTimestamp = this._scene!.currentTime();\n        this._initializedStartTime = timestamp;\n      });\n    }\n\n    if (this._scene) {\n      if (this._reduceFramerate) {\n        this._isOddFrame = !this._isOddFrame;\n      }\n\n      if (!this._reduceFramerate || this._isOddFrame) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(timePassed);\n        timePassed = timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          const moveFrame = timePassed !== 0 || this._moveOnce;\n          this._moveOnce = false;\n\n          const nowAutoSize = this._now();\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              const ctx = this._output.context[index];\n              this.normContext(ctx);\n              this._scene.initSprites(index);\n              //this.normContext(ctx);\n            }\n          }\n\n          const drawFrame = this._scene.isDrawFrame(timePassed);\n          if (Array.isArray(drawFrame)) {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(\n                this._drawFrame[i],\n                drawFrame[i],\n                0\n              );\n            }\n          } else {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame, 0);\n            }\n          }\n\n          if (moveFrame) {\n            this._scene.move(timePassed);\n          }\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              if (this._drawFrame[index]) {\n                this._scene.draw(index);\n              }\n            }\n          }\n\n          if (this._autoSize && this._autoSize.enabled) {\n            const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n            if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n              this._autoSize.currentWaitedTime += deltaTimestamp;\n            } else if (moveFrame) {\n              const targetTime =\n                this._autoSize.offsetTimeTarget! *\n                (this._reduceFramerate ? 2 : 1);\n              const deltaFrame = this._now() - nowAutoSize;\n              const delta =\n                (Math.abs(deltaTimestamp - targetTime) >\n                  Math.abs(deltaFrame - targetTime)\n                  ? deltaTimestamp\n                  : deltaFrame) - targetTime;\n              if (Math.abs(delta) <= this._autoSize.offsetTimeDelta!) {\n                this._autoSize.currentOffsetTime =\n                  this._autoSize.currentOffsetTime >= 0\n                    ? Math.max(\n                      0,\n                      this._autoSize.currentOffsetTime -\n                      this._autoSize.offsetTimeDelta!\n                    )\n                    : Math.min(\n                      0,\n                      this._autoSize.currentOffsetTime +\n                      this._autoSize.offsetTimeDelta!\n                    );\n              } else {\n                if (\n                  delta < 0 &&\n                  this._autoSize.currentScale > this._autoSize.scaleLimitMin\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime <=\n                    -this._autoSize.offsetTimeLimitDown\n                  ) {\n                    this._autoSize.currentScale = Math.max(\n                      this._autoSize.scaleLimitMin,\n                      this._autoSize.currentScale / this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                } else if (\n                  delta > 0 &&\n                  this._autoSize.currentScale < this._autoSize.scaleLimitMax\n                ) {\n                  this._autoSize.currentOffsetTime += delta;\n                  if (\n                    this._autoSize.currentOffsetTime >=\n                    this._autoSize.offsetTimeLimitUp\n                  ) {\n                    this._autoSize.currentScale = Math.min(\n                      this._autoSize.scaleLimitMax,\n                      this._autoSize.currentScale * this._autoSize.scaleFactor\n                    );\n                    this._recalculateCanvasIntend = true;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < this._canvasCount; i++) {\n            this.normContext(this._output.context[i]);\n          }\n          this._isSceneInitialized = this._scene.callLoading({\n            timePassed: timestamp - this._realLastTimestamp,\n            totalTimePassed: timestamp - this._initializedStartTime,\n          });\n          if (this._isSceneInitialized) {\n            this._scene.reset();\n            this._lastTimestamp = this._scene.currentTime();\n            this._moveOnce = true;\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      }\n    }\n    this._realLastTimestamp = timestamp;\n  }\n\n  async run(runParameter: Record<any, any>) {\n    this._runParameter = runParameter || {};\n\n    await this.stop();\n\n    this._realLastTimestamp = this._initializedStartTime = undefined;\n\n    if (this._autoSize && !this._autoSize.offsetTimeTarget) {\n      await this.recalculateFPS();\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  async stop() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    }\n    this._referenceRequestAnimationFrame = undefined;\n    this._scene && (await this._scene.destroy());\n  }\n\n  async destroy() {\n    await this.stop();\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f);\n    });\n    this._events = [];\n\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  Images:Record<string, HTMLImageElement>\n  count: number\n  loaded: number\n  _resolve: ((value:unknown)=>void)[] = []\n\n  constructor() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n  }\n\n  add<\n  F extends (key:string, image:HTMLImageElement)=>void\n  >(\n    Images: string[]|Record<string,string>, \n    Callbacks: undefined|(()=>void)|F[]|Record<string,F> = undefined\n    ) {\n    const self = this;\n    for (const key in Images) {\n      if (!self.Images[key]) {\n        const imageSrc = (Images as Record<string,string>)[key];\n        self.Images[key] = new window.Image();\n        self.Images[key].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n            (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n          }\n          if (self._resolve && self.isLoaded()) {\n            self._resolve.forEach(c => c(undefined));\n            self._resolve = [];\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[key].crossOrigin = \"anonymous\";\n        if (imageSrc.substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL;\n          const svg = new window.Blob([imageSrc], { type: \"image/svg+xml\" });\n          self.Images[key].src = DOMURL.createObjectURL(svg);\n        } else {\n          if (/^(https?:)?\\/\\//.test(imageSrc)) {\n            self.Images[key].onerror = () => {\n              // load again without crossOrigin\n              const img = new window.Image();\n              img.onload = self.Images[key].onload;\n              self.Images[key] = img;\n              self.Images[key].src = imageSrc;\n            };\n            self.Images[key].crossOrigin = \"anonymous\";\n          }\n          self.Images[key].src = imageSrc;\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n          (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self._resolve && self.isLoaded()) {\n      self._resolve.forEach(c => c(undefined));\n      self._resolve = [];\n    }\n    return self;\n  }\n\n  reset() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n    return this;\n  }\n\n  isLoaded() {\n    return this.loaded === this.count;\n  }\n\n  getImage(nameOrImage:HTMLImageElement|string) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : this.Images[nameOrImage];\n  }\n\n  isLoadedPromise() {\n    return this.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          this._resolve.push(resolve);\n        });\n  }\n}\n\nexport default new ImageManager();\n","import type { ISpriteFunctionOrSprite, ISprite, TTagParameter } from './Sprites/Sprite'\n\nexport interface LayerCallbackData {\n  elementId: number\n  layerId: number\n  element: ISpriteFunctionOrSprite\n  isFunction: boolean\n  layer: Layer\n}\nexport type LayerCallback = (data: LayerCallbackData) => void | boolean\n\nclass Layer {\n  _layer: (undefined | ISpriteFunctionOrSprite)[]\n  _isFunction: (undefined | boolean)[]\n  _start: number\n  _nextFree: number\n  _canvasIds: number[]\n\n  constructor(canvasIds: undefined | number | number[]) {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n    this._canvasIds =\n      canvasIds === undefined\n        ? []\n        : Array.isArray(canvasIds)\n          ? canvasIds\n          : [canvasIds];\n  }\n\n  addElement(element: ISpriteFunctionOrSprite) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element: ISpriteFunctionOrSprite) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId: number) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element: ISpriteFunctionOrSprite) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element: ISpriteFunctionOrSprite) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId: number) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = undefined;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else if (this._layer[elementId]) {\n      this._layer[elementId] = undefined;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  isCanvasId(canvasId: number|undefined) {\n    return (\n      canvasId === undefined ||\n      !this._canvasIds.length ||\n      this._canvasIds.includes(canvasId)\n    );\n  }\n\n  forEach(callback: LayerCallback, layerId: number = 0) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        if (callback({\n          elementId: index,\n          layerId,\n          element,\n          isFunction: this._isFunction[index]!,\n          layer: this\n        }) === false) {\n          return;\n        }\n      }\n    }\n  }\n\n  getElementsByTag(tag: TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  play(label: string = \"\", timelapsed: number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer\";\nimport type { LayerCallback } from \"./Layer\"\nimport type { ISprite, TTagParameter } from './Sprites/Sprite'\n\n\nclass LayerManager {\n  _layers: Layer[]\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer(canvasIds));\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer(canvasIds))\n    );\n    return result;\n  }\n\n  getById(layerId: number) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback: LayerCallback, canvasId?: number|undefined) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      if (this._layers[i].isCanvasId(canvasId)) {\n        this._layers[i].forEach(callback, i)\n      }\n    }\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  getElementsByTag(tag:TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\n\nexport default class Transform {\n  m: [number, number, number, number, number, number] = [1, 0, 0, 1, 0, 0];\n\n  __constuct() {\n    this.reset()\n  }\n\n  reset() {\n    this.m = [1, 0, 0, 1, 0, 0];\n    return this;\n  }\n\n  multiply(matrix: Transform) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  };\n\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  };\n\n  rotate(rad: number) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  };\n\n  translate(x: number, y: number) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  };\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  };\n\n  transformPoint(px: number, py: number):[number, number] {\n    const x = px;\n    const y = py;\n    px = x * this.m[0] + y * this.m[2] + this.m[4];\n    py = x * this.m[1] + y * this.m[3] + this.m[5];\n    return [px, py];\n  };\n\n  clone() {\n    const n = new Transform();\n    n.m = this.m.slice(0) as [number, number, number, number, number, number];\n    return n;\n  }\n}","export default function ifNull<T>(value:T|null|undefined, alternative:T):T\t{\n\t//@ts-ignore\n\treturn (value === undefined || value === null || value === \"\" ? alternative : value);\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ConfigurationObject, ParameterList, ParameterListWithoutTime } from \"../Scene\";\n\n\nexport interface MiddlewareTimingDefaultOptions {\n  tickChunk?: OrFunction<number>\n  maxSkippedTickChunk?:OrFunction<number|undefined>\n  tickChunkTolerance?:OrFunction<number|undefined>\n}\n\nexport default class TimingDefault implements ConfigurationObject {\n  _configuration: MiddlewareTimingDefaultOptions\n  _tickChunk: number\n  _maxSkippedTickChunk: number\n  _tickChunkTolerance: number\n\n  type = \"timing\"\n  totalTimePassed = 0\n\n  constructor(configuration:MiddlewareTimingDefaultOptions = {}) {\n    this._configuration = configuration;\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 120)\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  init(_params:ParameterListWithoutTime) {}\n\n  currentTime() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  clampTime({ timePassed } : ParameterList) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    if (timePassed > maxTime) {\n      return maxTime;\n    }\n    return timePassed;\n  }\n\n  shiftTime({ timePassed } : ParameterList) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  get tickChunk() {\n    return this._tickChunk;\n  }\n\n  isChunked() {\n    return !!this._tickChunk;\n  }\n\n  hasOneChunkedFrame({ timePassed } : ParameterList) {\n    return timePassed >= this._tickChunk - this._tickChunkTolerance;\n  }\n\n  calcFrames({ timePassed } : ParameterList) {\n    return Math.min(\n      this._maxSkippedTickChunk,\n      Math.floor((timePassed + this._tickChunkTolerance) / this._tickChunk)\n    );\n  }\n}\n","import ImageManager from \"./ImageManager\";\nimport LayerManager from \"./LayerManager\";\nimport { WithoutFunction } from \"./func/calc\";\nimport toArray from \"./func/toArray\";\nimport Transform from \"./func/transform\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\nimport { OutputInfo } from \"./Engine\";\nimport type Engine from \"./Engine\";\nimport type { ISprite, ISpriteFunction, ISpriteFunctionOrSprite } from \"./Sprites/Sprite\";\nimport type { addPrefix, OrFunction, OrPromise, ValueOf } from \"./helper\";\nimport type Camera from \"./Middleware/Camera\";\nimport type { CameraPosition } from \"./Middleware/Camera\";\nimport type CameraControl from \"./Middleware/CameraControl\";\nimport type TimingAudio from \"./Middleware/TimingAudio\";\n\nexport interface RectPosition {\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n}\n\nexport interface ParameterListWithoutTime {\n  engine: Engine\n  scene: Scene\n  imageManager: typeof ImageManager\n  layerManager: LayerManager\n  totalTimePassed: number\n  output: OutputInfo\n}\n\nexport interface ParameterList extends ParameterListWithoutTime { \n  timePassed: number \n}\n\nexport interface ParameterListFixedUpdate extends ParameterList { \n  lastCall: boolean\n}\n\nexport interface ParameterListCanvas extends ParameterListWithoutTime { \n  canvasId: undefined|number\n}\n\nexport interface ParameterListLoading extends ParameterList {\n    timePassed: number\n    totalTimePassed: number\n    progress: string | number\n}\n\nexport interface ParameterListInitDestroy extends ParameterList {\n  parameter: any\n}\n\nexport interface ElementClickInfo {\n  layerId: number\n  element: ISprite\n  elementId: number\n}\n\nexport interface ElementPositionInfo {\n  mx: number\n  my: number\n  x: number\n  y: number\n}\n\nexport type ParameterListClickElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport type ParameterListClickNonElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport interface ParameterListPositionEvent extends ParameterListWithoutTime {\n  event: Event | MouseEvent | TouchEvent\n  position: [number, number]\n  x:number\n  y:number\n  button: number\n}\n\nexport type EventsReturn = (keyof HTMLElementEventMap|[keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[]\n\nexport interface ConfigurationObject extends Record<string, any> {\n  init?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  destroy?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  enabled?: boolean\n  type?: string\n  images?: OrFunction<string[] | Record<string, string>>\n  endTime?: OrFunction<number>\n  loading?: (params: ParameterListLoading) => void\n  viewport?: (params: ParameterListWithoutTime, matrix:Transform) => Transform\n  currentTime?: (params: ParameterListWithoutTime) => number\n  clampTime?: (params: ParameterList) => number\n  shiftTime?: (params: ParameterList) => number\n  isDrawFrame?: (params: ParameterList) => number|number[]\n  isChunked?: OrFunction<boolean>\n  additionalModifier?: (params: ParameterListWithoutTime, additionalModifier: AdditionalModifier) => AdditionalModifier\n  calcFrames?: OrFunction<number, [ParameterList]>\n  tickChunk?: OrFunction<number, [ParameterListWithoutTime]>\n  fixedUpdate?: (params: ParameterListFixedUpdate) => void\n  draw?: (params: ParameterListCanvas) => void\n  update?: (params: ParameterList) => void\n  reset?: (params: ParameterListWithoutTime, layerManager: LayerManager| ISpriteFunctionOrSprite[][]) => LayerManager | ISpriteFunctionOrSprite[][]\n  preventDefault?: OrFunction<boolean>,\n  events?: OrFunction<EventsReturn, [ParameterListInitDestroy]>\n  initSprites?: (params: ParameterListCanvas) => void\n  doubleClickElement?: (params: ParameterListClickElement) => void\n  clickElement?: (params: ParameterListClickElement) => void\n  hoverElement?: (params: ParameterListClickElement) => void\n  doubleClickNonElement?: (params: ParameterListClickNonElement) => void\n  clickNonElement?: (params: ParameterListClickNonElement) => void\n  hoverNonElement?: (params: ParameterListClickNonElement) => void\n  mouseDown?: (params: ParameterListPositionEvent) => void\n  mouseUp?: (params: ParameterListPositionEvent) => void\n  mouseOut?: (params: ParameterListPositionEvent) => void\n  mouseMove?: (params: ParameterListPositionEvent) => void\n  mouseWheel?: (params: ParameterListPositionEvent) => void\n  doubleClick?: (params: ParameterListPositionEvent) => void\n  click?: (params: ParameterListPositionEvent) => void\n}\n\nexport interface ConfigurationConstructor {\n  new (options?: Record<string, any>): ConfigurationObject\n}\n\nexport type ConfigurationClassOrObject = ConfigurationObject | ConfigurationConstructor\n\ntype MiddlewareCommandList<T = ConfigurationObject> = {\n  _all: T[],\n  init: T[],\n  isDrawFrame: T[],\n  initSprites: T[],\n  fixedUpdate: T[],\n  update: T[],\n  draw: T[],\n  destroy: T[],\n  reset: T[],\n  resize: T[],\n  currentTime: T[],\n  clampTime: T[],\n  shiftTime: T[],\n  isChunked: T[],\n  hasOneChunkedFrame: T[],\n  calcFrames: T[],\n  tickChunk: T[],\n  additionalModifier: T[],\n} & Record<addPrefix<string, 't_'>, T[]>\n\ntype FullParameterList = ParameterListWithoutTime & Record<string, any>\n\nexport interface AdditionalModifier {\n  alpha: number\n  x: number\n  y: number\n  width: number\n  height: number\n  widthInPixel: number\n  heightInPixel: number\n  scaleCanvas: number\n  visibleScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  fullScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  cam?: CameraPosition\n  radius?: number\n}\n\nconst defaultMiddlewareCommandList = {\n  _all: [],\n  init: [],\n  isDrawFrame: [],\n  initSprites: [],\n  fixedUpdate: [],\n  update: [],\n  draw: [],\n  destroy: [],\n  reset: [],\n  resize: [],\n  currentTime: [],\n  clampTime: [],\n  shiftTime: [],\n  isChunked: [],\n  hasOneChunkedFrame: [],\n  calcFrames: [],\n  tickChunk: [],\n  additionalModifier: [],\n}\n\n\n\nclass Scene {\n  _layerManager: LayerManager\n  _imageManager: typeof ImageManager\n  _totalTimePassed: number\n  _engine: Engine | undefined\n  _middleware: MiddlewareCommandList<ConfigurationObject> = defaultMiddlewareCommandList\n  _stopPropagation: boolean = false\n  _transform: Transform | undefined\n  _transformInvert: Transform | undefined\n  _additionalModifier: AdditionalModifier | undefined\n  _initDone: boolean = false\n  _endTime: number | undefined\n  _resetIntend: boolean = false\n\n  constructor(...configurationClassOrObjects: ConfigurationClassOrObject[]) {\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n    this._totalTimePassed = 0;\n    this._imageManager = ImageManager;\n\n    this.middlewares = configurationClassOrObjects;\n    if (!this.middlewareByType(\"timing\")) {\n      this.middlewares = [TimingDefault as ConfigurationConstructor, ...this.middlewares as ConfigurationObject[]];\n    }\n  }\n\n  _output() {\n    return this._engine?.getOutput();\n  }\n\n  set middlewares(middlewares: ConfigurationClassOrObject | ConfigurationClassOrObject[]) {\n    this._middleware = (toArray(middlewares)\n      .map((configurationClassOrObject) =>\n        typeof configurationClassOrObject === \"function\"\n          ? new (configurationClassOrObject as ConfigurationConstructor)()\n          : configurationClassOrObject\n      ) as ConfigurationObject[])\n      .reduce(\n        (middlewareCommandList: MiddlewareCommandList<ConfigurationObject>, c: ConfigurationObject) => {\n          for (let command of Object.keys(middlewareCommandList)) {\n            if (command in c) {\n              middlewareCommandList[command as keyof MiddlewareCommandList<ConfigurationObject>].push(c);\n            }\n          }\n          middlewareCommandList._all.push(c);\n          if (!(\"enabled\" in c)) c.enabled = true;\n          if (c.type) middlewareCommandList[`t_${c.type}`] = [c];\n          return middlewareCommandList;\n        },\n        defaultMiddlewareCommandList\n      );\n  }\n  get middlewares() {\n    return this._middleware._all;\n  }\n\n  middlewareByType(type: string) {\n    const objs = this._middleware._all.filter((c) => c.type === type);\n    if (objs.length) {\n      return objs[objs.length - 1];\n    }\n  }\n\n  has(command: string) {\n    return (\n      command in this._middleware ||\n      this._middleware._all.some((c) => command in c)\n    );\n  }\n\n  do<\n    K extends string,\n    D = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>,\n    R = D | undefined\n  >(\n    command: K,\n    params: P,\n    defaultValue: D | undefined,\n    func: (ConfigurationObjects: ConfigurationObject[], params: P, defaultValue: D | undefined) => R\n  ) {\n    let objs =\n      this._middleware[command as keyof MiddlewareCommandList] ||\n      this._middleware._all.filter((c) => command in c);\n    objs = objs.filter((v: ConfigurationObject) => v.enabled);\n    if (!objs.length) {\n      return defaultValue;\n    }\n    const fullParams = this._param(params);\n    return func(objs, fullParams, defaultValue);\n  }\n\n  map<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P\n  ) {\n    return this.do<K, R[], P, R[]>(command, params, [], (objs, fullParams) => {\n      return objs.map((c: ConfigurationObject) => c[command](fullParams))\n    }\n    ) as R[];\n  }\n\n  pipe<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeBack<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let i = objs.length - 1; i >= 0; i--) {\n        const c = objs[i];\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeMax<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, number | number[], P>(command, params, Array.isArray(pipe) ? pipe.map(p => p - 0) : pipe as unknown as number - 0, (objs, fullParams, pipe) => {\n      let res = pipe;\n      this._stopPropagation = false;\n\n      if (Array.isArray(res)) {\n        // res is number\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = (res as unknown as number[]).map((v, i) => Math.max(v, (newRes as number[])[i]));\n          } else {\n            res = res.map((v, i) => Math.max(v, newRes as number));\n          }\n          if (this._stopPropagation) break;\n        }\n      } else {\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = newRes.map((v) => Math.max(v, res as number));\n          } else {\n            res = Math.max(newRes, res as number);\n          }\n          if (this._stopPropagation) break;\n        }\n      }\n      return res;\n    });\n  }\n\n  async pipeAsync<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterList>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P, Promise<R | undefined>>(command, params, pipe, async (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = await c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  value<\n    K extends string,\n    R = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P | undefined = undefined\n  ):WithoutFunction<R>|undefined {\n    let objs: ConfigurationObject[] =\n      this._middleware[command as keyof MiddlewareCommandList<ConfigurationObject>] ||\n      this._middleware._all.filter((c: ConfigurationObject) => command in c);\n    objs.filter((v) => v.enabled);\n    if (!objs.length) {\n      return undefined;\n    }\n    const obj = objs[objs.length - 1];\n    return typeof (obj[command]) === 'function' ? obj[command].call(obj, this._param(params || {})) : obj[command]\n  }\n\n  stopPropagation() {\n    this._stopPropagation = true;\n  }\n\n  currentTime() {\n    return this.pipe(\"currentTime\", {})!;\n  }\n\n  clampTime(timePassed: number) {\n    return this.pipe(\"clampTime\", { timePassed })!;\n  }\n\n  shiftTime(timePassed: number) {\n    return this.pipe(\"shiftTime\", { timePassed })!;\n  }\n\n  cacheClear() {\n    this._transform = undefined;\n    this._transformInvert = undefined;\n  }\n\n  viewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this.pipe(\"viewport\", {}, new Transform());\n      this._transformInvert = undefined;\n    }\n    return this._transform!;\n  }\n\n  transformPoint(x: number, y: number, scale = this._additionalModifier!.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this.viewport().clone().invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  callInit(parameter: any, engine: Engine) {\n    this._engine = engine;\n    this.resize();\n    const images = this.value(\"images\");\n    if (images) {\n      this._imageManager.add(images);\n    }  \n    Promise.all(\n      this.map(\"init\", {\n        parameter,\n      })\n    ).then((res) => {\n      this._initDone = true\n    });\n    \n  }\n\n  get additionalModifier() {\n    return this._additionalModifier!;\n  }\n\n  updateAdditionalModifier() {\n    const output = this._output()!;\n    this._additionalModifier = this.pipe(\n      \"additionalModifier\",\n      {},\n      {\n        alpha: 1,\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height,\n        widthInPixel: output.width,\n        heightInPixel: output.height,\n        scaleCanvas: 1,\n        visibleScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n        fullScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n      }\n    );\n  }\n\n  resize() {\n    const output = this._output()!;\n    this.updateAdditionalModifier();\n    this.pipe(\"resize\", {});\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).resize(output, this._additionalModifier!);\n      }\n    });\n  }\n\n  async destroy() {\n    const parameter = await this.pipeAsync(\"destroy\", {});\n    this._initDone = false;\n    return parameter;\n  }\n\n  get timing() {\n    return this._middleware.t_timing[0] as TimingDefault|TimingAudio;\n  }\n\n  get camera() {\n    return this._middleware.t_camera[0] as Camera;\n  }\n\n  get control() {\n    return this._middleware.t_control[0] as CameraControl;\n  }\n\n  get totalTimePassed() {\n    return this._totalTimePassed;\n  }\n\n  _param<K extends Record<string, any>>(additionalParameter: K | undefined = undefined): ParameterListWithoutTime & K {\n    return Object.assign({\n      engine: this._engine!,\n      scene: this,\n      imageManager: this._imageManager,\n      layerManager: this._layerManager,\n      totalTimePassed: this._totalTimePassed,\n      output: this._output()!,\n    }, additionalParameter);\n  }\n\n  callLoading(args: {\n    timePassed: number\n    totalTimePassed: number\n  }) {\n    if (this._imageManager.isLoaded() && this._initDone) {\n      this._endTime = this.value(\"endTime\");\n      const progress = \"Click to play\";\n      this.value(\"loading\", {\n        ...args,\n        progress\n      });\n      return true;\n    }\n    const progress = this._imageManager.count\n      ? this._imageManager.loaded / this._imageManager.count\n      : \"Loading...\";\n\n    this.value(\"loading\", {\n      ...args,\n      progress\n    });\n    return false;\n  }\n\n  fixedUpdate(timePassed: number, lastCall: boolean) {\n    this.map(\"fixedUpdate\", {\n      timePassed,\n      lastCall,\n    });\n  }\n\n  isDrawFrame(timePassed: number) {\n    return this.pipeMax(\"isDrawFrame\", { timePassed }, timePassed !== 0)!;\n  }\n\n  move(timePassed:number) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    if (this._resetIntend) {\n      this.reset();\n      // Jump back?\n    } else if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset();\n      this.initSprites();\n      this._totalTimePassed = timePassed;\n    } else if (this._endTime && this._endTime <= this._totalTimePassed) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._endTime;\n      this._totalTimePassed = this._endTime;\n      // End Engine\n      this.map(\"end\", { timePassed });\n    }\n    if (this.value(\"isChunked\")) {\n      if (this.value(\"hasOneChunkedFrame\", { timePassed })) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames = this.value(\"calcFrames\", { timePassed })! - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(this.value(\"tickChunk\", {})!, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(timePassed, true);\n    }\n\n    this.map(\"update\", { timePassed });\n\n    this._layerManager.forEach(({ element, isFunction, layer, elementId }) => {\n      if (!isFunction) {\n        if ((element as ISprite).animate(timePassed)) {\n          layer.deleteById(elementId);\n        }\n      }\n    });\n  }\n\n  draw(canvasId:number) {\n    this.map(\"draw\", { canvasId });\n    const context = this._output()!.context[canvasId]!;\n    context.save();\n\n    context.setTransform(...this.viewport().m);\n\n    this._layerManager.forEach(\n      ({ layer, layerId, element, isFunction, elementId }) => {\n        if (isFunction) {\n          if (\n            (element as ISpriteFunction)(\n              this._param({\n                layerId,\n                elementId,\n                layer,\n                context,\n              })\n            )\n          ) {\n            layer.deleteById(elementId);\n          }\n        } else {\n          (element as ISprite).draw(context, this._additionalModifier!);\n        }\n      },\n      canvasId\n    );\n\n    context.restore();\n  }\n\n  initSprites(canvasId: number|undefined = undefined) {\n    const context = this._output()!.context[canvasId || 0]!;\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).callInit(context, this._additionalModifier!);\n      }\n    }, canvasId);\n    this.map(\"initSprites\", { canvasId });\n  }\n\n  resetIntend() {\n    this._resetIntend = true;\n  }\n\n  reset() {\n    this._totalTimePassed = 0;\n    this._resetIntend = false;\n    let result = this.pipe<\"reset\",LayerManager | ISpriteFunctionOrSprite[][], {}>(\n      \"reset\",\n      {},\n      new LayerManager()\n    );\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach((v) => {\n        (result as LayerManager).addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class Wait implements IAnimation{\n  _duration:number\n  constructor(duration:OrFunction<number>) {\n    this._duration = calc(duration) - 0;\n  }\n\n  run(sprite: ISprite, time: number) {\n    // return time left\n    return time - this._duration;\n  }\n}\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Wait from \"./Wait\";\n\nexport enum SequenceRunCommand {\n  FORCE_DISABLE = \"F\",\n  STOP = \"S\",\n  REMOVE = \"R\"\n}\n\nexport type TWaitTime = number;\nexport type TLabel = string;\nexport type TAnimationFunction = IAnimation['run'];\nexport type TAnimationSequence = (TWaitTime | TLabel | TAnimationFunction | IAnimation)[]\nexport type AnimationSequenceOptions = TAnimationSequence | TAnimationSequence[]\n\ninterface ISequence {\n  position: number\n  timelapsed: number\n  sequence: IAnimation[]\n  label: Record<string, number>\n  enabled: boolean\n}\n\nclass Sequence implements IAnimation {\n  sequences: ISequence[] = []\n  lastTimestamp: number = 0\n  enabled: boolean = true\n\n  constructor(...sequences: AnimationSequenceOptions) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift() as number;\n    }\n\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait: number = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift() as number;\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof (command as IAnimation).run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command } as IAnimation\n              : command as IAnimation\n          )\n          .filter(command => typeof (command as IAnimation).run === \"function\"),\n        label: sequence.reduce((arr: Record<string, number>, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n  }\n\n  reset(timelapsed: number = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0]?.reset?.(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (label in sequencePosition.label) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        } else {\n          b = b || (sequencePosition.sequence.some(seq => seq.play?.(label, timelapsed)));\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  _runSequence(sprite: ISprite, sequencePosition: ISequence, timePassed: number) {\n    let timeLeft: number = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      const res = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (res === true) {\n        timeLeft = 0;\n      } else if (res === false) {\n        return -1;\n      } else if (res === SequenceRunCommand.FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.REMOVE) {\n        return true;\n      }\n\n      timeLeft = res as number;\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite: ISprite, time:number, is_difference:boolean=false) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this._runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\nexport default Sequence;\n","import type { OutputInfo } from \"../Engine\"\nimport type { AdditionalModifier, ParameterListWithoutTime } from \"../Scene\"\nimport type { OrFunction, OrPromise } from \"../helper\";\nimport type Layer from \"../Layer\";\nimport Sequence from \"../Animations/Sequence\";\nimport { IAnimation } from \"../Animations/Animation\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\n\nexport type TTagParameter = string | string[] | ((value: string, index: number, array: string[]) => unknown)\nexport interface ISprite {\n    p: SpriteBaseOptionsInternal & Record<string, any>\n    changeToPathInit?: (from: number[][][] | string, to: number[][][] | string) => [number[][][], number[][][]]\n    changeToPath?: (progress: number, data: {\n        pathFrom: number[][][]\n        pathTo: number[][][]\n    }) => number[][][]\n    getElementsByTag: (tag: TTagParameter) => ISprite[]\n    play: (label: string, timelapsed?: number) => void\n    resize: (output: OutputInfo, additionalModifier: AdditionalModifier) => OrPromise<void>\n    callInit: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => OrPromise<void>\n    animate: (timepassed: number) => boolean\n    draw: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => void\n    detect: (context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number) => ISprite | \"c\" | undefined\n    detectDraw: (context: CanvasRenderingContext2D, color: string) => void\n}\n\nexport type ISpriteFunction = (params: ParameterListWithoutTime & {\n    layerId: number\n    elementId: number\n    layer: Layer\n    context: CanvasRenderingContext2D,\n}) => number | boolean\n\nexport type ISpriteFunctionOrSprite = ISpriteFunction | ISprite\n\n\n\nexport interface SpriteBaseOptions {\n    animation?: OrFunction<Sequence | IAnimation[]>\n    enabled?: OrFunction<boolean>\n    isClickable?: OrFunction<boolean>\n    tag?: OrFunction<string[] | string>\n}\n\nexport interface SpriteBaseOptionsInternal {\n    animation: Sequence | undefined\n    enabled: boolean\n    isClickable: boolean\n    tag: string[]\n}\nexport type TParameterList<T, R> = {\n    [P in keyof R & keyof T]?: R[P] | ((value: T[P], givenParameter: T) => R[P]);\n}\n\nexport class SpriteBase<O extends SpriteBaseOptions = SpriteBaseOptions, P extends SpriteBaseOptionsInternal = SpriteBaseOptionsInternal> implements ISprite {\n    _needInit = true\n    p: P\n    constructor(givenParameter: O) {\n        this.p = this._parseParameterList(this._getParameterList(), givenParameter);\n    }\n\n    _parseParameterList(parameterList: TParameterList<O, P>, givenParameter: O): P {\n        const parameterEntries = Object.entries(parameterList as ReturnType<this[\"_getParameterList\"]>)\n        const valueEntries = parameterEntries.map(\n            ([name, d]) => {\n                const givenValue = givenParameter[name as keyof O]\n                return [name,\n                    typeof d === \"function\"\n                        ? d(givenValue, givenParameter)\n                        : ifNull(calc(givenValue), d)\n                ];\n            }\n        );\n        return Object.fromEntries(valueEntries)\n    }\n\n    _getBaseParameterList() {\n        return {\n            // animation\n            animation: (value: OrFunction<Sequence | IAnimation[]> | undefined, givenParameter: O) => {\n                const result = calc(value);\n                return Array.isArray(result) ? new Sequence(result) : result;\n            },\n            // if it's rendering or not\n            enabled: true,\n            // if you can click it or not\n            isClickable: false,\n            // tags to mark the sprites\n            tag: (value: OrFunction<string | undefined | string[]>, givenParameter: O) => {\n                const v: string | string[] | undefined = calc(value)\n                return Array.isArray(v) ? v : v ? [v] : [];\n            }\n        }\n    }\n\n    _getParameterList():TParameterList<O,P> {\n        return this._getBaseParameterList() as TParameterList<O, P>\n    }\n\n    getElementsByTag(tag: TTagParameter):ISprite[] {\n        if (typeof tag === \"function\") {\n            if (this.p.tag.filter(tag).length) {\n                return [this];\n            }\n        } else {\n            const aTag = Array.isArray(tag) ? tag : [tag];\n            if (aTag.filter(tag => this.p.tag.includes(tag)).length) {\n                return [this];\n            }\n        }\n        return [];\n    }\n\n\n    // Animation-Funktion\n    animate(timepassed: number) {\n        if (this.p.animation) {\n            // run animation\n            if (this.p.animation.run(this, timepassed, true) === true) {\n                // disable\n                this.p.enabled = false;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    play(label = \"\", timelapsed = 0) {\n        if (this.p.animation) {\n            this.p.animation.play?.(label, timelapsed);\n        }\n    }\n\n    init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n    callInit(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier):OrPromise<void> {\n        if (this._needInit) {\n            this.init(context, additionalModifier);\n            this._needInit = false;\n        }\n    }\n\n\n    resize(output: OutputInfo, additionalModifier: AdditionalModifier):OrPromise<void> { }\n\n    _detectHelperCallback(p: {\n        enabled: boolean\n        isClickable: boolean\n        x: number\n        y: number\n        scaleX: number\n        scaleY: number\n        rotation: number\n    }, context: CanvasRenderingContext2D, x: number, y: number, callback: () => boolean) {\n        let a = false;\n        if (p.enabled && p.isClickable) {\n            context.save();\n            context.translate(p.x, p.y);\n            context.scale(p.scaleX, p.scaleY);\n            context.rotate(p.rotation);\n            context.beginPath();\n            a = callback();\n            context.restore();\n        }\n        return a ? this as ISprite : undefined;\n    }\n\n    _detectHelper({\n        enabled,\n        isClickable,\n        x = 0,\n        y = 0,\n        width = 0,\n        height = 0,\n        scaleX = 1,\n        scaleY = 1,\n        rotation = 0\n    }: {\n        enabled: boolean\n        isClickable: boolean\n        x?: number\n        y?: number\n        width?: number\n        height?: number\n        scaleX?: number\n        scaleY?: number\n        rotation?: number\n    }, context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number, moveToCenter: boolean, callback?: (hw: number, hh: number) => boolean) {\n        let a = false;\n        if (enabled && isClickable) {\n            const hw = width / 2;\n            const hh = height / 2;\n            context.save();\n            if (moveToCenter) {\n                context.translate(x + hw, y + hh);\n            } else {\n                context.translate(x, y);\n            }\n            context.scale(scaleX, scaleY);\n            context.rotate(rotation);\n            context.beginPath();\n            if (callback) {\n                a = callback(hw, hh);\n            } else {\n                context.rect(-hw, -hh, width, height);\n                context.closePath();\n                a = context.isPointInPath(coordinateX, coordinateY);\n            }\n            context.restore();\n        }\n        return a ? this as ISprite: undefined;\n    }\n\n    detectDraw(context: CanvasRenderingContext2D, color: string) { }\n\n    detect(context: CanvasRenderingContext2D, x: number, y: number):ISprite | \"c\" | undefined { return undefined }\n\n    draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TParameterList } from \"./Sprite\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\nconst degToRad = Math.PI / 180;\n\n\nexport interface SpriteCircleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\nexport interface SpriteCircleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string\n}\n\nexport const CircleParameterList = {\n  // position\n  x: 0 as number,\n  y: 0 as number,\n  // rotation\n  rotation: (value: SpriteCircleOptions['rotation'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(\n      calc(value),\n      ifNull(\n        calc(givenParameter.rotationInRadian),\n        ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n      )\n    ) as number\n  },\n  // scalling\n  scaleX: (value: SpriteCircleOptions['scaleX'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  scaleY: (value: SpriteCircleOptions['scaleY'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  // alpha\n  alpha: 1,\n  // blending\n  compositeOperation: \"source-over\",\n  // color\n  color: \"#fff\"\n}\n\n// Sprite\n// Draw a Circle\nexport default class Circle extends SpriteBase<SpriteCircleOptions, SpriteCircleOptionsInternal> implements ISprite {\n  constructor(givenParameter: SpriteCircleOptions) {\n    super(givenParameter)\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList) as TParameterList<SpriteCircleOptions, SpriteCircleOptionsInternal>\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelperCallback(this.p, context, x, y, () => {\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      return context.isPointInPath(x, y);\n    });\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.beginPath();\n      context.fillStyle = this.p.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      context.fill();\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine.js\"\nimport { OrFunction } from \"../helper.js\"\nimport { AdditionalModifier } from \"../Scene.js\"\nimport { CircleParameterList } from \"./Circle.js\"\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TTagParameter } from \"./Sprite.js\"\n\nexport interface SpriteGroupOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  sprite?: OrFunction<ISprite>\n}\n\nexport interface SpriteGroupOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number|undefined\n  y: number|undefined\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  sprite: ISprite[]\n}\n\n\nexport default class Group<O extends SpriteGroupOptions = SpriteGroupOptions, P extends SpriteGroupOptionsInternal = SpriteGroupOptionsInternal> extends SpriteBase<O, P> {\n  constructor(givenParameter:O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      sprite: []\n    });\n  }\n\n  getElementsByTag(tag: TTagParameter):ISprite[] {\n    let result:ISprite[] = super.getElementsByTag(tag);\n    for (const sprite of this.p.sprite) {\n      const ans = sprite.getElementsByTag(tag);\n      if (ans) {\n        result = result.concat(ans);\n      }\n    }\n    return result;\n  }\n\n  // overwrite change\n  animate(timepassed:number) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        spriteFinished = spriteFinished || sprite.animate(timepassed) === true;\n      }\n    }\n\n    if (this.p.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.p.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.p.animation) {\n      this.p.animation.play?.(label, timelapsed);\n    }\n    for (const sprite of this.p.sprite) {\n      sprite.play?.(label, timelapsed);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    for (const sprite of this.p.sprite) {\n      sprite.resize(output, additionalModifier);\n    }\n  }\n\n  callInit(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    super.callInit(context, additionalModifier);\n    for (let sprite of this.p.sprite) {\n      sprite.callInit(context, additionalModifier);\n    }\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        sprite.detectDraw(context, color);\n      }\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        const a = sprite.detect(context, x, y);\n        if (a) return a;\n      }\n    }\n    return undefined;\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      if (this.p.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.p.alpha;\n      }\n\n      context.save();\n      context.translate(this.p.x!, this.p.y!);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      // draw all sprites\n      for (const sprite of this.p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport Group, { SpriteGroupOptions } from \"./Group.js\";\nimport { SpriteBaseOptions, ISprite } from \"./Sprite\";\n\nexport interface SpriteEmitterOptions<P extends SpriteBaseOptions = SpriteBaseOptions & Record<string, any>> {\n  count?: number\n  class: { new(options: P): ISprite }\n  self?: SpriteGroupOptions\n}\n\nexport default class Emitter<P> extends Group {\n  constructor(givenParameter: SpriteEmitterOptions<P>) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.p.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      const parameter: P = Object.entries(givenParameter).reduce<P>((p, [index, value]) => {\n        if ([\"self\", \"class\", \"count\"].includes(index)) {\n          return p;\n        }\n        // @ts-ignore\n        p[index] = calc(value, i)\n        return p\n      }, {} as P)\n      this.p.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport type { OutputInfo } from \"../Engine\";\n\nexport interface SpriteFastBlurOptions extends SpriteBaseOptions {\n  x?: OrFunction<undefined | number>\n  y?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  scaleX?: OrFunction<undefined | number>\n  scaleY?: OrFunction<undefined | number>\n  scale?: OrFunction<undefined | number>\n  alpha?: OrFunction<undefined | number>\n  gridSize?: OrFunction<undefined | number>\n  darker?: OrFunction<undefined | number>\n  pixel?: OrFunction<undefined | boolean>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n  compositeOperation?: OrFunction<undefined | GlobalCompositeOperation>\n}\n\nexport interface SpriteFastBlurOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  scaleX?: number\n  scaleY?: number\n  gridSize: undefined | number\n  darker: number\n  pixel: boolean\n  clear: boolean\n  norm: boolean\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n}\n\nexport default class FastBlur<O extends SpriteFastBlurOptions = SpriteFastBlurOptions, P extends SpriteFastBlurOptionsInternal = SpriteFastBlurOptionsInternal> extends SpriteBase<O,P> {\n  _temp_canvas: HTMLCanvasElement | undefined;\n  _currentGridSize: number | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value: SpriteFastBlurOptions['norm'], givenParameter: SpriteFastBlurOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // scalling\n      scaleX: (value: SpriteFastBlurOptions['scaleX'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteFastBlurOptions['scaleY'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      // alpha\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    });\n  }\n\n  _generateTempCanvas(additionalModifier: AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / p.scaleX!);\n      this._temp_canvas.height = Math.ceil(h / p.scaleY!);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output: OutputInfo | undefined, additionalModifier: AdditionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.p.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this.resize(undefined, additionalModifier);\n      }\n\n      const a = p.alpha * additionalModifier.alpha,\n        w = p.width!,\n        h = p.height!,\n        targetW = this._temp_canvas!.width,\n        targetH = this._temp_canvas!.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx!.globalCompositeOperation = \"copy\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (p.darker > 0) {\n          this._tctx!.globalCompositeOperation = p.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx!.fillStyle = \"rgba(0,0,0,\" + p.darker + \")\";\n          this._tctx!.fillRect(0, 0, targetW, targetH);\n        }\n\n        // @ts-ignore\n        this.additionalBlur?.(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (p.clear) {\n          context.globalCompositeOperation = \"source-over\";\n          context.globalAlpha = 1;\n          context.clearRect(p.x!, p.y!, w, h);\n        }\n        context.globalCompositeOperation = p.compositeOperation;\n        context.globalAlpha = a;\n        const oldValue = context.imageSmoothingEnabled;\n        context.imageSmoothingEnabled = !p.pixel;\n        context.drawImage(\n          this._temp_canvas!,\n          0,\n          0,\n          targetW,\n          targetH,\n          p.x!,\n          p.y!,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = oldValue;\n      }\n    } else {\n      // optional: clear screen\n      if (p.clear) {\n        if (!p.x) {\n          p.x = additionalModifier.x;\n        }\n        if (!p.y) {\n          p.y = additionalModifier.y;\n        }\n        if (!p.width) {\n          p.width = additionalModifier.width;\n        }\n        if (!p.height) {\n          p.height = additionalModifier.height;\n        }\n        context.clearRect(p.x, p.y, p.width, p.height);\n      }\n    }\n  }\n}\n","export enum Position {\n    LEFT_TOP = 0,\n    CENTER = 1\n}","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nexport interface SpriteTextOptions extends SpriteCircleOptions {\n  text?: OrFunction<string|string[]>\n  font?: OrFunction<undefined|string>\n  position?: OrFunction<undefined|Position>\n  borderColor?: OrFunction<undefined|string>\n  lineWidth?:  OrFunction<undefined|number>\n}\n\nexport interface SpriteTextOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  text: string\n  font: string\n  position: Position\n  borderColor: undefined|string\n  color: undefined|string\n  lineWidth: number\n}\n\nexport default class Text extends SpriteBase<SpriteTextOptions, SpriteTextOptionsInternal> implements ISprite {\n  constructor(givenParameters:SpriteTextOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList, {\n      text: (value:SpriteTextOptions['text']) => {\n        const text = calc(value)\n        return (Array.isArray(text) ? text.join('') : text) || ''\n      },\n      font: '2em monospace',\n      position: Position.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    })\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled && this.p.isClickable) {\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.font = this.p.font;\n      context.fillStyle = color;\n      context.fillText(this.p.text, 0, 0);\n      context.restore();\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number):\"c\" {\n    return \"c\" \n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      context.font = this.p.font;\n\n      if (this.p.color) {\n        context.fillStyle = this.p.color;\n        context.fillText(this.p.text, 0, 0);\n      }\n\n      if (this.p.borderColor) {\n        context.strokeStyle = this.p.borderColor;\n        context.lineWidth = this.p.lineWidth;\n        context.strokeText(this.p.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n","import { TinyColor } from \"@ctrl/tinycolor\";\nimport { OutputInfo } from \"../Engine.js\";\nimport calc from \"../func/calc.js\";\nimport ifNull from \"../func/ifnull.js\";\nimport type { OrFunction } from \"../helper.js\";\nimport type { AdditionalModifier } from \"../Scene.js\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nexport interface SpriteParticleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\ntype TinyColorRGB = ReturnType<TinyColor['toRgb']>\n\nexport interface SpriteParticleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string | TinyColorRGB\n}\n\nclass Particle extends SpriteBase<SpriteParticleOptions, SpriteParticleOptionsInternal> {\n  _currentScaleX: number | undefined;\n  _currentPixelSmoothing: boolean = false;\n  static _Gradient: HTMLCanvasElement[][][]\n\n  constructor(givenParameter: SpriteParticleOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      x: 0,\n      y: 0,\n      // scalling\n      scaleX: (value: SpriteParticleOptions['scaleX'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteParticleOptions['scaleY'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      color: '#FFF',\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    })\n  }\n\n  static getGradientImage(r: number, g: number, b: number) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      const length = 256 >> gradientResolution;\n      Particle._Gradient = Array.from({ length }, (a) =>\n        Array.from({ length }, (a) => Array.from({ length }))\n      );\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr: number, cg: number, cb: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\")!;\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._currentScaleX = undefined;\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      // faster than: if (!(this.color instanceof TinyColor && this.color.model === 'rgb')) {\n      if (!p.color || !(p.color as TinyColorRGB).r) {\n        p.color = new TinyColor(p.color).toRgb();\n      }\n      if (this._currentScaleX !== p.scaleX) {\n        this._currentScaleX = p.scaleX;\n        this._currentPixelSmoothing =\n          (p.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n          gradientSize;\n      }\n      const { r, g, b } = p.color as TinyColorRGB;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled = this._currentPixelSmoothing;\n      context.drawImage(\n        Particle.getGradientImage(r, g, b),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        p.x - p.scaleX / 2,\n        p.y - p.scaleY / 2,\n        p.scaleX,\n        p.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Callback from './Sprites/Callback'\nimport Canvas from './Sprites/Canvas'\nimport Circle from './Sprites/Circle'\nimport Emitter from './Sprites/Emitter'\nimport FastBlur from './Sprites/FastBlur'\nimport Group from './Sprites/Group'\nimport Image from './Sprites/Image'\nimport Text from './Sprites/Text'\nimport Particle from './Sprites/Particle'\nimport Path from './Sprites/Path'\nimport Rect from './Sprites/Rect'\nimport Scroller from './Sprites/Scroller'\nimport StackBlur from './Sprites/StackBlur'\nimport StarField from './Sprites/StarField'\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StarField\n};\n","import { AdditionalModifier } from \"../Scene.js\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\n\n\nexport type SpriteCallback = (context:CanvasRenderingContext2D, timePassed:number, additionalParameter:AdditionalModifier, sprite:ISprite) => void\n\nexport interface SpriteCallbackOptions extends SpriteBaseOptions {\n  callback?: SpriteCallback\n}\n\nexport interface SpriteCallbackOptionsInternal extends SpriteBaseOptionsInternal {\n  callback: SpriteCallback\n}\n\n\nexport default class Callback extends SpriteBase<SpriteCallbackOptions,SpriteCallbackOptionsInternal> {\n  _timePassed = 0;\n\n  constructor(givenParameter:SpriteCallbackOptions|SpriteCallbackOptions['callback']) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter } as SpriteCallbackOptions;\n    }\n    super(givenParameter as SpriteCallbackOptions);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      callback: (v:SpriteCallback|undefined) => (typeof v === undefined ? () => {} : v) as SpriteCallback\n    });\n  }\n\n  animate(timePassed:number) {\n    if (this.p.enabled) {\n      this._timePassed += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context:CanvasRenderingContext2D, additionalParameter:AdditionalModifier) {\n    if (this.p.enabled) {\n      this.p.callback(context, this._timePassed, additionalParameter, this);\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\nimport Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n\nexport interface SpriteCanvasOptions extends SpriteGroupOptions {\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  canvasWidth?: OrFunction<number>\n  canvasHeight?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  gridSize?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  isDrawFrame?: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport interface SpriteCanvasOptionsInternal extends SpriteGroupOptionsInternal {\n  width: number|undefined\n  height: number|undefined\n  canvasWidth: number|undefined\n  canvasHeight: number|undefined\n  compositeOperation: GlobalCompositeOperation\n  gridSize: number|undefined\n  norm: boolean\n  isDrawFrame: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport default class Canvas extends Group<SpriteCanvasOptions, SpriteCanvasOptionsInternal>  {\n  _currentGridSize:number|undefined;\n  _drawFrame:number = 2;\n  _temp_canvas: undefined|HTMLCanvasElement\n  _tctx: undefined|CanvasRenderingContext2D\n  \n  constructor(givenParameter:SpriteCanvasOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      canvasWidth: undefined,\n      canvasHeight: undefined,\n      gridSize: undefined,\n      compositeOperation: \"source-over\",\n      norm: (value: SpriteCanvasOptions[\"norm\"], givenParameter:SpriteCanvasOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      isDrawFrame: (value: SpriteCanvasOptions[\"isDrawFrame\"], givenParameter:SpriteCanvasOptions) => ifNull(value, 1)\n    });\n  }\n\n  _generateTempCanvas(additionalModifier:AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.canvasWidth && p.canvasHeight) {\n      this._temp_canvas.width = p.canvasWidth;\n      this._temp_canvas.height = p.canvasHeight;\n    } else if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / p.scaleX);\n      this._temp_canvas.height = Math.round(h / p.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n  }\n\n  _normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  _copyCanvas(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (\n      this._temp_canvas &&\n      this._currentGridSize !== p.gridSize &&\n      !p.canvasWidth\n    ) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n      this._drawFrame = 2;\n    }\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._copyCanvas(additionalModifier);\n    super.resize(output!, additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this._copyCanvas(additionalModifier);\n      }\n      this._drawFrame = Math.max(\n        this._drawFrame - 1,\n        calc(p.isDrawFrame, context, additionalModifier)\n      );\n      const w = p.width!,\n        h = p.height!,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas!.width,\n        th = this._temp_canvas!.height;\n\n      if (this._drawFrame) {\n        this._tctx!.textBaseline = \"middle\";\n        this._tctx!.textAlign = \"center\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.globalCompositeOperation = \"source-over\";\n        this._tctx!.save();\n        // draw all sprites\n        const cam = additionalModifier.cam;\n        if (p.norm && cam) {\n          const scale = Math.max(tw, th) / 2;\n          this._tctx!.translate(tw / 2, th / 2);\n          this._tctx!.scale(scale, scale);\n          this._tctx!.scale(cam.zoom, cam.zoom);\n          this._tctx!.translate(-cam.x, -cam.y);\n        }\n        for (const sprite of p.sprite) {\n          sprite.draw(\n            this._tctx!,\n            p.norm\n              ? Object.assign({}, additionalModifier, {\n                  alpha: 1,\n                  widthInPixel: tw,\n                  heightInPixel: th\n                })\n              : {\n                  alpha: 1,\n                  x: 0,\n                  y: 0,\n                  width: tw,\n                  height: th,\n                  widthInPixel: tw,\n                  heightInPixel: th,\n                  scaleCanvas: 1,\n                  visibleScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                  fullScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                }\n          );\n        }\n        this._tctx!.restore();\n      }\n\n      context.save();\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.translate(p.x! + wh, p.y! + hh);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(this._temp_canvas!, 0, 0, tw, th, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import type { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport ImageManager from \"../ImageManager\";\nimport { Position } from \"../Position\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions, SpriteCircleOptionsInternal } from \"./Circle\";\nimport { SpriteBase } from \"./Sprite\";\n\nexport interface SpriteImageOptions extends SpriteCircleOptions {\n  image: OrFunction<HTMLImageElement | string>\n  position?: OrFunction<Position>\n  frameX?: OrFunction<number>\n  frameY?: OrFunction<number>\n  frameWidth?: OrFunction<number>\n  frameHeight?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  normCover?: OrFunction<boolean>\n  normToScreen?: OrFunction<boolean>\n  clickExact?: OrFunction<boolean>\n  tint?: OrFunction<number>\n}\n\nexport interface SpriteImageOptionsInternal extends SpriteCircleOptionsInternal {\n  image: HTMLImageElement\n  position: Position\n  frameX: number\n  frameY: number\n  frameWidth: number\n  frameHeight: number\n  width: number\n  height: number\n  norm: boolean\n  normCover: boolean\n  normToScreen: boolean\n  clickExact: boolean\n  tint: number\n}\n\n// Sprite\n// Draw a Image\nclass Image extends SpriteBase<SpriteImageOptions, SpriteImageOptionsInternal> {\n  _currentTintKey: string | undefined\n  _normScale: number | undefined\n  _temp_canvas: HTMLCanvasElement | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: SpriteImageOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      // set image\n      image: (v: OrFunction<HTMLImageElement | string>) => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Position.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      width: undefined,\n      height: undefined,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n      clickExact: false,\n      color: \"#FFF\",\n      tint: 0\n    });\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    const frameWidth = p.frameWidth || p.image.width;\n    const frameHeight = p.frameHeight || p.image.height;\n\n    this._normScale = p.normToScreen\n      ? p.normCover\n        ? Math.max(\n          additionalModifier.fullScreen.width / frameWidth,\n          additionalModifier.fullScreen.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.fullScreen.width / frameWidth,\n            additionalModifier.fullScreen.height / frameHeight\n          )\n          : 1\n      : p.normCover\n        ? Math.max(\n          additionalModifier.width / frameWidth,\n          additionalModifier.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.width / frameWidth,\n            additionalModifier.height / frameHeight\n          )\n          : 1;\n  }\n\n  _tintCacheKey() {\n    const frameWidth = this.p.frameWidth || this.p.image.width;\n    const frameHeight = this.p.frameHeight || this.p.image.height;\n    return [\n      this.p.tint,\n      frameWidth,\n      frameHeight,\n      this.p.color,\n      this.p.frameX,\n      this.p.frameY\n    ].join(\";\");\n  }\n\n  _temp_context(frameWidth: number, frameHeight: number): CanvasRenderingContext2D {\n    if (!this._temp_canvas) {\n      this._temp_canvas = document.createElement(\"canvas\");\n      this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    }\n    this._temp_canvas.width = frameWidth;\n    this._temp_canvas.height = frameHeight;\n    return this._tctx!;\n  }\n\n  detectDraw(context: CanvasRenderingContext2D, color: string) {\n    const p = this.p\n    if (p.enabled && p.isClickable && p.clickExact) {\n      const frameWidth = p.frameWidth || p.image.width;\n      const frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) * this._normScale! * p.scaleX;\n      const sY =\n        (p.height ? p.height : frameHeight) *\n        this._normScale! *\n        p.scaleY;\n      const isTopLeft = p.position === Position.LEFT_TOP;\n\n      const tctx = this._temp_context(frameWidth, frameHeight);\n      tctx.globalAlpha = 1;\n      tctx.globalCompositeOperation = \"source-over\";\n      tctx.fillStyle = color;\n      tctx.fillRect(0, 0, frameWidth, frameHeight);\n      tctx.globalCompositeOperation = \"destination-atop\";\n      tctx.drawImage(\n        p.image,\n        p.frameX,\n        p.frameY,\n        frameWidth,\n        frameHeight,\n        0,\n        0,\n        frameWidth,\n        frameHeight\n      );\n\n      context.save();\n      context.translate(p.x, p.y);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(\n        this._temp_canvas!,\n        0,\n        0,\n        frameWidth,\n        frameHeight,\n        isTopLeft ? 0 : -sX / 2,\n        isTopLeft ? 0 : -sY / 2,\n        sX,\n        sY\n      );\n      context.restore();\n      this._currentTintKey = undefined;\n    }\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    if (this.p.enabled && this.p.isClickable && this.p.clickExact) return \"c\";\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.image && p.alpha > 0) {\n      const frameWidth = p.frameWidth || p.image.width,\n        frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) *\n        this._normScale! *\n        p.scaleX,\n        sY =\n          (p.height ? p.height : frameHeight) *\n          this._normScale! *\n          p.scaleY;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      const isCenter = p.position !== Position.LEFT_TOP;\n\n      let img: CanvasImageSource = p.image\n      let frameX = p.frameX\n      let frameY = p.frameY\n\n      if (p.tint) {\n        const key = this._tintCacheKey()\n        if (this._currentTintKey !== key) {\n          const tctx = this._temp_context(frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"source-over\";\n          tctx.clearRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = p.tint;\n          tctx.fillStyle = p.color;\n          tctx.fillRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"destination-atop\";\n          tctx.drawImage(\n            p.image,\n            p.frameX,\n            p.frameY,\n            frameWidth,\n            frameHeight,\n            0,\n            0,\n            frameWidth,\n            frameHeight\n          );\n          this._currentTintKey = key;\n        }\n        img = this._temp_canvas!\n        frameX = 0\n        frameY = 0\n      }\n\n      let cx = 0\n      let cy = 0\n      if (isCenter) {\n        cx = - sX / 2\n        cy = - sY / 2\n      }\n\n      if (p.rotation == 0) {\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          p.x + cx,\n          p.y + cy,\n          sX,\n          sY\n        );\n      } else {\n        context.save();\n        context.translate(p.x, p.y);\n        context.rotate(p.rotation);\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          cx,\n          cy,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Image;\n","import Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n// @ts-ignore\nimport pasition from \"pasition\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\n\nexport interface SpritePathOptions extends SpriteGroupOptions {\n  path?: OrFunction<number[][][]|string|Path2D>\n  color?: OrFunction<string|undefined>\n  borderColor?: OrFunction<string|undefined>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  lineWidth?: OrFunction<number>\n  clip?: OrFunction<boolean>\n  fixed?: OrFunction<boolean>\n  polyfill?: OrFunction<boolean>\n}\n\nexport interface SpritePathOptionsInternal extends SpriteGroupOptionsInternal {\n  path:  number[][][]|string|Path2D\n  color: string|undefined\n  borderColor: string|undefined\n  compositeOperation: GlobalCompositeOperation\n  lineWidth: number\n  clip: boolean\n  fixed: boolean\n  polyfill: boolean\n}\n\nexport default class Path extends Group<SpritePathOptions,SpritePathOptionsInternal> {\n  _oldPath:number[][][]|string|Path2D|undefined;\n  _path2D:Path2D = new Path2D();\n  \n  constructor(givenParameters:SpritePathOptions) {\n    super(givenParameters);\n\n    if (this.p.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.p.polyfill = false;\n        }\n      }\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from: number[][][] | string, to: number[][][] | string): number[][][] {\n    return pasition._preprocessing(\n      typeof from === \"string\" ? pasition.path2shapes(from) : from,\n      typeof to === \"string\" ? pasition.path2shapes(to) : to\n    );\n  }\n  \n  changeToPath(progress: number, data: {\n    pathFrom: number[][][]\n    pathTo: number[][][]\n  }) {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false, () => {\n      return context.isPointInPath(this._path2D, x, y);\n    });\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      const a = p.alpha * additionalModifier.alpha;\n      if (this._oldPath !== p.path) {\n        if (p.polyfill && typeof p.path === \"string\") {\n          p.path = pasition.path2shapes(p.path);\n        }\n        if (Array.isArray(p.path)) {\n          this._path2D = new Path2D();\n          p.path.forEach(curve => {\n            this._path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this._path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this._path2D.closePath();\n          });\n        } else if (p.path instanceof Path2D) {\n          this._path2D = p.path;\n        } else {\n          this._path2D = new Path2D(p.path);\n        }\n        this._oldPath = p.path;\n      }\n\n      let scaleX = p.scaleX,\n        scaleY = p.scaleY;\n\n      if (p.fixed) {\n        if (scaleX == 0) {\n          scaleX = Number.EPSILON;\n        }\n        if (scaleY == 0) {\n          scaleY = Number.EPSILON;\n        }\n      }\n\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(p.x!, p.y!);\n      context.scale(scaleX, scaleY);\n      context.rotate(p.rotation);\n\n      if (p.color) {\n        context.fillStyle = p.color;\n        context.fill(this._path2D);\n      }\n\n      context.save();\n\n      if (p.clip) {\n        context.clip(this._path2D);\n        if (p.fixed) {\n          context.rotate(-p.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-p.x!, -p.y!);\n        }\n      }\n\n      // draw all sprites\n      for (const sprite of p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (p.borderColor) {\n        context.strokeStyle = p.borderColor;\n        context.lineWidth = p.lineWidth;\n        context.stroke(this._path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\n\nexport interface SpriteRectOptions extends SpriteCircleOptions {\n  position?: OrFunction<undefined | Position>\n  borderColor?: OrFunction<undefined | string>\n  lineWidth?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n}\n\nexport interface SpriteRectOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  position: Position\n  borderColor: undefined | string\n  color: undefined | string\n  lineWidth: number\n  clear: boolean\n  norm: boolean\n}\n\n\n// Sprite\n// Draw a Circle\nclass Rect extends SpriteBase<SpriteRectOptions, SpriteRectOptionsInternal> implements ISprite {\n  constructor(givenParameters: SpriteRectOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      color: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value: SpriteRectOptions[\"norm\"], givenParameter: SpriteRectOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // relative position\n      position: Position.CENTER\n    })\n  }\n\n  _normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    if (this.p.norm || this.p.width === undefined) {\n      this.p.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.p.norm || this.p.height === undefined) {\n      this.p.height = additionalModifier.visibleScreen.height;\n    }\n    if (this.p.norm || this.p.x === undefined) {\n      this.p.x = additionalModifier.visibleScreen.x;\n      if (this.p.position === Position.CENTER) {\n        this.p.x += this.p.width / 2;\n      }\n    }\n    if (this.p.norm || this.p.y === undefined) {\n      this.p.y = additionalModifier.visibleScreen.y;\n      if (this.p.position === Position.CENTER) {\n        this.p.y += this.p.height / 2;\n      }\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, this.p.position === Position.LEFT_TOP);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      if (p.rotation === 0 && p.position === Position.LEFT_TOP) {\n        if (p.clear) {\n          context.clearRect(p.x!, p.y!, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(p.x!, p.y!, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(p.x!, p.y!, p.width!, p.height!);\n          context.stroke();\n        }\n      } else {\n        let hw = p.width! / 2;\n        let hh = p.height! / 2;\n        context.save();\n        if (p.position === Position.LEFT_TOP) {\n          context.translate(p.x! + hw, p.y! + hh);\n        } else {\n          context.translate(p.x!, p.y!);\n        }\n        context.scale(p.scaleX, p.scaleY);\n        context.rotate(p.rotation);\n        if (p.clear) {\n          context.clearRect(-hw, -hh, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(-hw, -hh, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(-hw, -hh, p.width!, p.height!);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Rect;\n","import calc from \"../func/calc\";\nimport { OrFunction } from \"../helper\";\nimport Emitter from \"./Emitter\";\nimport Text, { SpriteTextOptions } from \"./Text\";\n\nexport interface SpriteScollerOptions extends SpriteTextOptions {\n  text: OrFunction<string|string[]>\n}\n\n\nexport default class Scroller extends Emitter<SpriteTextOptions> {\n  constructor(givenParameters:SpriteScollerOptions) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: (index:number) => characterList[index],\n        enabled: (index:number) =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled)\n      })\n    );\n  }\n}\n","import FastBlur, { SpriteFastBlurOptions, SpriteFastBlurOptionsInternal } from \"./FastBlur\";\nimport { imageDataRGBA } from \"stackblur-canvas\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStackBlurOptions extends SpriteFastBlurOptions {\n  onCanvas?: OrFunction<boolean>\n  radius?: OrFunction<undefined|number>\n  radiusPart?: OrFunction<undefined|number>\n  radiusScale?: OrFunction<boolean>\n}\n\nexport interface SpriteStackBlurOptionsInternal extends SpriteFastBlurOptionsInternal {\n  onCanvas: boolean\n  radius: undefined|number\n  radiusPart: undefined|number\n  radiusScale: boolean\n}\n\nexport default class StackBlur extends FastBlur<SpriteStackBlurOptions,SpriteStackBlurOptionsInternal> {\n  _currentRadiusPart:number|undefined\n\n    constructor(givenParameter:SpriteStackBlurOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined,\n      radiusScale: true\n    });\n  }\n\n  normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm && p.onCanvas) {\n      p.x = 0;\n      p.y = 0;\n      p.width = additionalModifier.widthInPixel;\n      p.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    super.resize(output, additionalModifier);\n    if (this.p.radiusPart) {\n      this.p.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW:number, targetH:number, additionalModifier:AdditionalModifier) {\n    const imageData = this._tctx!.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius || 1);\n    this._tctx!.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (\n        p.radius === undefined ||\n        this._currentRadiusPart !== p.radiusPart\n      ) {\n        p.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            p.radiusPart!\n        );\n        this._currentRadiusPart = p.radiusPart!;\n      }\n      const radius = Math.round(\n        p.radius! *\n          ((p.radiusScale &&\n            additionalModifier.cam) ? additionalModifier.cam.zoom : 1) /\n              additionalModifier.scaleCanvas)\n      ;\n      if (radius) {\n        if (p.onCanvas) {\n          if (p.width === undefined || p.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(p.x!);\n          const y = Math.round(p.y!);\n          const w = Math.round(p.width!);\n          const h = Math.round(p.height!);\n          const imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OrFunction } from \"../helper\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStarFieldOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  alpha?: OrFunction<number>\n  lineWidth?: OrFunction<number>\n  count?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  moveX?: OrFunction<undefined|number>\n  moveY?: OrFunction<undefined|number>\n  moveZ?: OrFunction<undefined|number>\n  highScale?: OrFunction<undefined|boolean>\n  color?: OrFunction<undefined|string>\n}\n\nexport interface SpriteStarFieldOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  alpha: number\n  count: number\n  lineWidth: number\n  compositeOperation: GlobalCompositeOperation\n  moveX: number\n  moveY: number\n  moveZ: number\n  highScale: boolean\n  color: string\n}\n\n\n\n// Sprite\n// Draw a Circle\nexport default class StarField extends SpriteBase<SpriteStarFieldOptions, SpriteStarFieldOptionsInternal> {\n  _starsX: number[] = []\n  _starsY: number[] = []\n  _starsZ: number[] = []\n  _starsOldX: number[] = []\n  _starsOldY: number[] = []\n  _starsNewX: number[] = []\n  _starsNewY: number[] = []\n  _starsEnabled: boolean[] = []\n  _starsLineWidth: number[] = []\n  _centerX: number = 0\n  _centerY: number = 0\n  _scaleZ: number = 0\n\n  constructor(givenParameters: SpriteStarFieldOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0,\n      moveY: 0,\n      moveZ: 0,\n      lineWidth: undefined,\n      highScale: true,\n      color: \"#FFF\" // here default color is white\n    });\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    p.width = p.width || additionalModifier.width;\n    p.height = p.height || additionalModifier.height;\n    p.x = p.x === undefined ? additionalModifier.x : p.x;\n    p.y = p.y === undefined ? additionalModifier.y : p.y;\n    p.lineWidth =\n      p.lineWidth ||\n      Math.min(\n        additionalModifier.height / additionalModifier.heightInPixel,\n        additionalModifier.width / additionalModifier.widthInPixel\n      ) / 2;\n    this._centerX = p.width / 2 + p.x;\n    this._centerY = p.height / 2 + p.y;\n    this._scaleZ = Math.max(p.width, p.height) / 2;\n    function clampOrRandom(val: number | undefined, min: number, max = -min) {\n      return val === undefined || val < min || val >= max\n        ? Math.random() * (max - min) + min\n        : val;\n    }\n    for (let i = 0; i < p.count; i++) {\n      this._starsX[i] = clampOrRandom(this._starsX[i], -p.width / 2);\n      this._starsY[i] = clampOrRandom(this._starsY[i], -p.height / 2);\n      this._starsZ[i] = clampOrRandom(this._starsZ[i], 0, this._scaleZ);\n    }\n  }\n\n  _moveStar(i: number, scaled_timepassed: number, firstPass: boolean) {\n    const p = this.p\n    const hw = p.width! / 2;\n    const hh = p.height! / 2;\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    let\n      x = this._starsX[i] + p.moveX * scaled_timepassed,\n      y = this._starsY[i] + p.moveY * scaled_timepassed,\n      z = this._starsZ[i] + p.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= p.x! &&\n      projectY >= p.y! &&\n      projectX < p.x! + p.width! &&\n      projectY < p.y! + p.height!;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!p.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed:number) {\n    let ret = super.animate(timepassed);\n    if (this.p.enabled && this._centerX !== undefined) {\n      let i = this.p.count;\n      while (i--) {\n        this._moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this._moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      const p = this.p\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n\n      if (p.moveY == 0 && p.moveZ == 0 && p.moveX < 0) {\n        context.fillStyle = p.color;\n        let i = p.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] -\n              (this._starsLineWidth[i] * p.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * p.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = p.color;\n        if (p.highScale) {\n          let i = p.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * p.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * p.lineWidth;\n            i = p.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nimport type { IAnimation } from \"./Animation\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nconst degToRad = Math.PI / 180;\n\nfunction moveDefault(progress: number, data: IAlgorithmData) {\n  return data.from! as number + progress * data.delta!;\n}\n\nfunction moveStatic(progress: number, data: IAlgorithmData) {\n  return progress >= 0.5 ? data.to : data.from!;\n}\n\nfunction moveBezier(progress: number, data: IAlgorithmData) {\n  var copy = [...data.values!],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress: number, data: IAlgorithmData) {\n  return data.colorFrom!.mix(data.colorTo!, progress * 100).toString();\n}\n\nfunction movePath(progress: number, { pathFrom, pathTo }: IAlgorithmData, sprite?: ISprite) {\n  return sprite!.changeToPath!(progress, { pathFrom: pathFrom!, pathTo: pathTo! });\n}\n\nexport type TProperty = number | string\nexport type TBezier = number[]\nexport type TChangeFunction = ((from?: number | undefined) => number) | ((from?: string | undefined) => string)\nexport type TChangeValue = TProperty | TBezier | TChangeFunction\nexport interface IChangeValueMeta {\n  name: string\n  to: TProperty\n  bezier?: TBezier\n  isColor: boolean\n  isPath: boolean\n  isStatic: boolean\n  isFunction?: TChangeFunction,\n  moveAlgorithm: TAlgorithm\n}\nexport type TAlgorithm = (progress: number, data: IAlgorithmData, sprite?: ISprite) => TProperty | number[][][]\nexport interface IAlgorithmData extends IChangeValueMeta {\n  from?: TProperty\n  delta?: number\n  values?: TBezier\n  pathFrom?: number[][][]\n  pathTo?: number[][][]\n  colorFrom?: TinyColor\n  colorTo?: TinyColor\n}\n\n// to values of a object\nexport default class ChangeTo implements IAnimation {\n  _initialized = false\n  _changeValues: IChangeValueMeta[]\n  _duration: number\n  _ease: (t: number) => number\n  constructor(changeValues: Record<string, TChangeValue>, duration: number, ease: (t: number) => number) {\n    this._changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? (orgValue as number) * degToRad : orgValue;\n      const isColor = k === \"color\" || k === \"borderColor\";\n      const isPath = k === \"path\";\n      const isStatic = k === \"text\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n            ? [\"rotation\"]\n            : [k];\n      for (const name of names) {\n        this._changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value) as TProperty,\n          bezier: isBezier ? value : undefined,\n          isColor,\n          isPath,\n          isStatic,\n          isFunction: isFunction ? value : undefined,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n              ? movePath\n              : isBezier\n                ? moveBezier\n                : isStatic\n                  ? moveStatic\n                  : moveDefault\n        });\n      }\n    }\n    this._duration = ifNull(calc(duration), 0);\n    this._ease = ifNull(ease, (t: number) => t);\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  _init(sprite: ISprite, time: number) {\n    let l = this._changeValues.length\n    while (l--) {\n      const data: IAlgorithmData = this._changeValues[l];\n      // @ts-ignore\n      const from = sprite.p[data.name] as unknown as TProperty\n      if (data.isFunction) {\n        data.from = from;\n        // @ts-ignore\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = new TinyColor(data.from);\n          data.colorTo = new TinyColor(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n            data.from as string,\n            data.to as string\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [from as number, ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else if (!data.isStatic) {\n          data.delta = data.to as number - (data.from as number);\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        //\n        data.colorFrom = new TinyColor(from as string);\n        data.colorTo = new TinyColor(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n          from as string,\n          data.to as string\n        );\n      } else if (data.bezier) {\n        data.values = [from as number, ...data.bezier];\n      } else {\n        data.from = from as number;\n        data.delta = data.to as number - data.from;\n      }\n    }\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._init(sprite, time);\n    }\n\n    // return time left\n    if (this._duration <= time) {\n      let l = this._changeValues.length;\n      let data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.to;\n      }\n    } else {\n      let l = this._changeValues.length;\n      let data;\n      const progress = this._ease(time / this._duration);\n\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this._duration;\n  }\n}\n","import Callback from './Animations/Callback'\nimport ChangeTo from './Animations/ChangeTo'\nimport End from './Animations/End'\nimport EndDisabled from './Animations/EndDisabled'\nimport Forever from './Animations/Forever'\nimport If from './Animations/If'\nimport Image from './Animations/Image'\nimport ImageFrame from './Animations/ImageFrame'\nimport Loop from './Animations/Loop'\nimport Remove from './Animations/Remove'\nimport Sequence from './Animations/Sequence'\nimport Once from './Animations/Once'\nimport Shake from './Animations/Shake'\nimport ShowOnce from './Animations/ShowOnce'\nimport State from './Animations/State'\nimport Stop from './Animations/Stop'\nimport StopDisabled from './Animations/StopDisabled'\nimport Wait from './Animations/Wait'\nimport WaitDisabled from './Animations/WaitDisabled'\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport type TAnimationCallbackCallback = (sprite:ISprite, time:number, firstRun:boolean) => ReturnType<IAnimation['run']>\n\nexport default class Callback implements IAnimation{\n    _callback: TAnimationCallbackCallback\n    _duration: number|undefined\n    _initialized: boolean = false\n\n    constructor(callback: TAnimationCallbackCallback, duration?:number) {\n      this._callback = callback;\n      this._duration = ifNull(calc(duration), undefined);\n    }\n\n    reset() {\n      this._initialized = false;\n    }\n\n    run(sprite:ISprite, time:number) {\n      let result;\n\n      if (this._duration !== undefined) {\n        this._callback(sprite, Math.min(time, this._duration), !this._initialized);\n        this._initialized = true;\n        return time - this._duration;\n      } else {\n        result = this._callback(sprite, time, !this._initialized);\n        this._initialized = true;\n        return result;\n      }\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation {\n\tconstructor() {\n\t}\n\n\trun(sprite: ISprite, time: number) {\n\t\treturn SequenceRunCommand.FORCE_DISABLE;\n\t};\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.FORCE_DISABLE;\n    };\n}","import { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Forever implements IAnimation {\n  _Aniobject:Sequence\n\n  constructor(...Aniobject: IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    return this._Aniobject.play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport type { TAnimationFunction } from \"./Sequence\";\n\nexport default class If implements IAnimation {\n  _ifCallback: OrFunction<boolean>\n  _Aniobject: IAnimation|TAnimationFunction\n  _AniobjectElse: IAnimation|TAnimationFunction\n\n  constructor(ifCallback:OrFunction<boolean>, Aniobject:IAnimation|TAnimationFunction, AniobjectElse:IAnimation|TAnimationFunction) {\n    this._ifCallback = ifCallback;\n    this._Aniobject = Aniobject;\n    this._AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    return (this._Aniobject as IAnimation).play?.(label, timelapsed) || (this._AniobjectElse as IAnimation).play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number) {\n    const AniObject = calc(this._ifCallback)\n      ? this._Aniobject\n      : this._AniobjectElse;\n    return (AniObject as IAnimation).run\n      ?  (AniObject as IAnimation).run(sprite, time)\n      :  (AniObject as TAnimationFunction)(sprite, time);\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport { OrFunction } from '../helper';\nimport ImageManager from '../ImageManager';\nimport { ISprite } from '../Sprites/Sprite';\n\nexport default class Image {\n  _initialized: boolean = false\n  _image: (HTMLImageElement | string)[]\n  _count: number\n  _durationBetweenFrames: number\n  _duration: number\n  _current:number = -1\n\n  constructor(image: OrFunction<HTMLImageElement | string | (HTMLImageElement | string)[]>, durationBetweenFrames: OrFunction<number>) {\n    const imageCalced = calc(image);\n    this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(imageCalced)) {\n      this._image = imageCalced\n      this._count = imageCalced.length;\n    } else {\n      this._image = [imageCalced];\n      this._count = 1;\n    }\n    this._duration = this._count * this._durationBetweenFrames;\n  }\n\n  reset() {\n    this._initialized = false;\n  };\n\n  run(sprite: ISprite, time:number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._current = -1;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      sprite.p.image = ImageManager.getImage(this._image[this._image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this._durationBetweenFrames);\n      if (currentFrame !== this._current) {\n        this._current = currentFrame;\n        sprite.p.image = ImageManager.getImage(this._image[this._current]);\n      }\n    }\n    return time - this._duration;\n  }\n}","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { OrFunction } from '../helper';\nimport { ISprite } from '../Sprites/Sprite';\nimport { IAnimation } from './Animation';\n\nexport default class ImageFrame implements IAnimation{\n    _frameNumber: number[]\n    _durationBetweenFrames: number\n    _duration: number\n    _framesToRight: boolean\n\n    constructor(frameNumber: OrFunction<number | number[]>, framesToRight: OrFunction<boolean>, durationBetweenFrames: OrFunction<number>) {\n        const frameNumberCalc = calc(frameNumber);\n        this._framesToRight = ifNull(calc(framesToRight), true);\n        this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        this._frameNumber = Array.isArray(frameNumberCalc) ? frameNumberCalc : [frameNumberCalc];\n\n        this._duration = this._frameNumber.length * this._durationBetweenFrames;\n    }\n\n    run(sprite: ISprite, time:number) {\n        let currentFrame = 0;\n        if (time >= this._duration) {\n            currentFrame = this._frameNumber[this._frameNumber.length - 1];\n        } else {\n            currentFrame = this._frameNumber[Math.floor(time / this._durationBetweenFrames)];\n        }\n        if (this._framesToRight) {\n            sprite.p.frameX = sprite.p.frameWidth! * currentFrame;\n        } else {\n            sprite.p.frameY = sprite.p.frameHeight! * currentFrame;\n        }\n\n        return time - this._duration;\n    }\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence from \"./Sequence\";\n\nexport default class Loop implements IAnimation {\n  _Aniobject: Sequence\n  _times:number\n  _timesOrg:number\n\n  constructor(times:number, ...Aniobject:IAnimation[]) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this._times = this._timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    const b = this._Aniobject.play?.(label, timelapsed);\n    if (b) {\n      this._times = this._timesOrg;\n    }\n    return b\n  }\n\n  run(sprite: ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0 && this._times > 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._times--;\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\n\nexport default class Once implements IAnimation {\n  _Aniobject: IAnimation\n  _times: number\n\n  constructor(Aniobject: IAnimation, times: number) {\n    this._Aniobject = Aniobject;\n    this._times = ifNull(calc(times), 1);\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (this._times <= 0) {\n      return time;\n    }\n    else {\n      let t = this._Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this._times--;\n      }\n      return t;\n    }\n  };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class Remove implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.REMOVE;\n    };\n}","import calc from '../func/calc';\nimport type { OrFunction } from '../helper.js';\nimport type { ISprite } from '../Sprites/Sprite.js';\n\nexport default class Shake {\n  _initialized = false\n  _duration: number\n  _shakeDiff: number\n  _shakeDiffHalf: number\n  _x: number = 0\n  _y: number = 0\n\n  constructor(shakediff: OrFunction<number>, duration: OrFunction<number>) {\n    this._duration = calc(duration);\n    this._shakeDiff = calc(shakediff);\n    this._shakeDiffHalf = this._shakeDiff / 2;\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._x = sprite.p.x;\n      this._y = sprite.p.y;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      // prevent round errors\n      sprite.p.x = this._x;\n      sprite.p.y = this._y;\n    } else {\n      // shake sprite\n      sprite.p.x = this._x + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n      sprite.p.y = this._y + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n    }\n    return time - this._duration;\n  }\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class ShowOnce implements IAnimation {\n    _showOnce:boolean = true\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = sprite.p.enabled && this._showOnce;\n        this._showOnce = false;\n        return 0;\n    }\n}","import { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\nimport Sequence from './Sequence';\n\nclass State implements IAnimation {\n  _states: Record<string, Sequence | State>\n  _transitions: Record<string, Sequence | State>\n  _currentStateName: string | undefined\n  _currentState: Sequence | State | undefined\n  _isTransitioningToStateName: string | undefined = undefined\n\n  constructor({\n    states = {},\n    transitions = {},\n    defaultState\n  }: {\n    states?: Record<string, IAnimation[] | Sequence>\n    transitions?: Record<string, IAnimation[] | Sequence>\n    defaultState: string\n  }) {\n    // save possible states\n    this._states = Object.fromEntries(Object.entries(states).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ))\n\n    // save transitions\n    this._transitions = Object.fromEntries(Object.entries(transitions).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ));\n    // set start state\n    this._currentStateName = defaultState;\n    this._currentState = this._states[defaultState];\n  }\n\n  setState(name:string) {\n    if (name !== this._currentStateName) {\n      this._isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this._currentStateName}To${UCFirstName}`,\n        `${this._currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => name in this._transitions\n      );\n      if (transitionName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._transitions[transitionName];\n        (this._currentState as Sequence)?.reset?.();\n      } else {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0):boolean|undefined {\n    return this._currentState?.play?.(label, timelapsed);\n  }\n\n  run(sprite: ISprite, time: number, is_difference?: boolean) {\n    let timeLeft:ReturnType<IAnimation['run']> = time;\n    let isDifference = is_difference;\n    if (this._currentState) {\n      timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this._currentState) {\n      if (this._isTransitioningToStateName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n        timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this._currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class End implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.STOP;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.STOP;\n    };\n}","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class WaitDisabled implements IAnimation {\n  duration:number\n\n  constructor(duration:OrFunction<number>) {\n    this.duration = ifNull(calc(duration), 0);\n  }\n\n  run(sprite:ISprite, time:number) {\n    // return time left\n    sprite.p.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import Transform from \"../func/transform\";\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime, RectPosition } from \"../Scene\";\n\nexport interface CameraPosition {\n  zoom: number\n  x: number\n  y: number\n}\n\nexport default class Camera implements ConfigurationObject {\n  type = \"camera\"\n  cam: CameraPosition\n  constructor(config: Partial<CameraPosition> = {}) {\n    this.type = \"camera\";\n    this.cam = Object.assign({\n      zoom: 1,\n      x: 0,\n      y: 0,\n    }, config);\n  }\n\n  viewport({ }:ParameterListWithoutTime, matrix: Transform) {\n    return matrix\n      .scale(this.cam.zoom, this.cam.zoom)\n      .translate(-this.cam.x, -this.cam.y);\n  }\n\n  viewportByCam({ engine }: ParameterListWithoutTime, cam: CameraPosition) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  additionalModifier({ }, additionalModifier: AdditionalModifier) {\n    additionalModifier.cam = Object.assign({}, this.cam);\n    return additionalModifier;\n  }\n\n  clampView(params: ParameterListWithoutTime & { clampLimits?: RectPosition }, cam: CameraPosition) {\n    const { engine, scene, clampLimits } = params\n    const cl = clampLimits || {\n      x1: scene.additionalModifier.x,\n      y1: scene.additionalModifier.y,\n      x2: scene.additionalModifier.x + scene.additionalModifier.width,\n      y2: scene.additionalModifier.y + scene.additionalModifier.height,\n    };\n    const invert = this.viewportByCam(params, cam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      engine.getWidth(),\n      engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= cl.x2 - cl.x1) {\n      if (x1 < cl.x1) {\n        if (x2 <= cl.x2) {\n          cam.x += cl.x1 - x1;\n        }\n      } else {\n        if (x2 > cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > cl.x1) {\n        cam.x += cl.x1 - x1;\n      } else {\n        if (x2 < cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= cl.y2 - cl.y1) {\n      if (y1 < cl.y1) {\n        if (y2 <= cl.y2) {\n          cam.y += cl.y1 - y1;\n        }\n      } else {\n        if (y2 > cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > cl.y1) {\n        cam.y += cl.y1 - y1;\n      } else {\n        if (y2 < cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    }\n    return cam;\n  }\n\n  set zoom(value) {\n    this.cam.zoom = value;\n  }\n\n  set camX(v) {\n    this.cam.x = v;\n  }\n\n  set camY(v) {\n    this.cam.y = v;\n  }\n\n  get zoom() {\n    return this.cam.zoom;\n  }\n\n  get camX() {\n    return this.cam.x;\n  }\n\n  get camY() {\n    return this.cam.y;\n  }\n\n  zoomToFullScreen({ scene }: ParameterListWithoutTime) {\n    return Math.min(\n      scene.additionalModifier.fullScreen.width /\n      scene.additionalModifier.width,\n      scene.additionalModifier.fullScreen.height /\n      scene.additionalModifier.height\n    );\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition & {cam? : CameraPosition}) {\n    const { scene, engine, cam, x1, y1, x2, y2 } = params\n    const scale = scene.additionalModifier.scaleCanvas;\n    const invert = this.viewportByCam(params, cam || this.cam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      engine.getWidth() * scale,\n      engine.getHeight() * scale\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    const ret = {\n      x: mx,\n      y: my,\n      zoom: (cam || this.cam).zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE),\n    };\n    if (cam) {\n      cam.x = ret.x;\n      cam.y = ret.y;\n      cam.zoom = ret.zoom;\n    } else {\n      this.cam = ret;\n    }\n  }\n}\n","import type Scene from \"../Scene\";\nimport type { ConfigurationObject, ParameterList, ParameterListFixedUpdate, ParameterListInitDestroy, ParameterListPositionEvent, ParameterListWithoutTime, RectPosition } from \"../Scene\";\nimport type { CameraPosition } from \"./Camera\";\n\nexport interface MiddlewareCameraControlOptions {\n  zoomMax: number\n  zoomMin: number\n  zoomFactor: number\n  tween: number\n  callResize: boolean\n}\n\nconst clickTime = 300;\nexport default class CameraControl implements ConfigurationObject {\n  type = \"control\"\n  _mousePos: Record<number, {\n    x: number\n    y: number\n    _cx: number\n    _cy: number\n    _isDown: boolean\n    _numOfFingers: number\n    _distance: undefined | number\n    _timestamp: number\n    _czoom: undefined | number\n  }> = {}\n  toCam: CameraPosition = {\n    zoom: 1,\n    x: 0,\n    y: 0\n  }\n  _config: MiddlewareCameraControlOptions\n  _scene: Scene | undefined\n  _instant: boolean = false\n\n  constructor(config: Partial<MiddlewareCameraControlOptions> = {}) {\n    this._config = Object.assign(\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        callResize: true,\n      },\n      config\n    );\n  }\n\n  init({ scene }: ParameterListInitDestroy) {\n    this._scene = scene\n    this.toCam = Object.assign({}, scene.camera.cam);\n  }\n\n  mouseDown({ event: e, position: [mx, my], button: i }: ParameterListPositionEvent) {\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e as TouchEvent).touches?.length || 1,\n      _distance: undefined,\n      _timestamp: Date.now(),\n    });\n  }\n\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      !(\n        (\n          Date.now() - this._mousePos[i]._timestamp < clickTime &&\n          Math.abs(this._mousePos[i].x - mx) < 5 &&\n          Math.abs(this._mousePos[i].y - my) < 5 &&\n          i === 1\n        ) // i === 0\n      )\n    ) {\n      scene.stopPropagation();\n    }\n  }\n\n  mouseOut({ button: i }: ParameterListPositionEvent) {\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n        (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      const viewMatrix = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert();\n      const [ox, oy] = viewMatrix.transformPoint(\n        this._mousePos[i].x * scale,\n        this._mousePos[i].y * scale\n      );\n      const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n      this.toCam.x = this._mousePos[i]._cx + ox - nx;\n      this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    }\n  }\n\n  mouseWheel({ event: e, position: [mx, my], scene }: ParameterListPositionEvent) {\n    const scale = scene.additionalModifier.scaleCanvas;\n    const [ox, oy] = scene.camera\n      .viewportByCam(arguments[0], this.toCam)\n      .invert()\n      .transformPoint(mx * scale, my * scale);\n    // @ts-ignore\n    const wheelData = (e as WheelEvent).wheelDelta || (e as WheelEvent).deltaY * -1;\n    if (wheelData / 120 > 0) {\n      this.zoomIn();\n      const [nx, ny] = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert()\n        .transformPoint(mx * scale, my * scale);\n      this.toCam.x -= nx - ox;\n      this.toCam.y -= ny - oy;\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    } else {\n      this.zoomOut(arguments[0]);\n    }\n  }\n\n  hasCamChanged() {\n    const t = this._config.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this._scene!.camera.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this._scene!.camera.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this._scene!.camera.cam.zoom) >=\n      Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate({ scene, lastCall }: ParameterListFixedUpdate) {\n    if (this._config.tween && !this._instant && this.hasCamChanged()) {\n      scene.camera.cam.x +=\n        (this.toCam.x - scene.camera.cam.x) / this._config.tween;\n      scene.camera.cam.y +=\n        (this.toCam.y - scene.camera.cam.y) / this._config.tween;\n      scene.camera.cam.zoom +=\n        (this.toCam.zoom - scene.camera.cam.zoom) / this._config.tween;\n      if (lastCall) {\n        scene.additionalModifier.cam = scene.camera.cam;\n        if (this._config.callResize) {\n          scene.resize();\n        } else {\n          scene.cacheClear();\n        }\n      }\n    }\n  }\n\n  update({ scene }: ParameterList) {\n    if ((!this._config.tween || this._instant) && this.hasCamChanged()) {\n      this._instant = false;\n      scene.camera.cam = Object.assign({}, this.toCam);\n      if (this._config.callResize) {\n        scene.resize();\n      } else {\n        scene.cacheClear();\n      }\n    }\n  }\n\n  camInstant() {\n    this._instant = true;\n  }\n\n  resize(args: ParameterListWithoutTime& { clampLimits?: RectPosition }) {\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n  }\n\n  zoomToNorm() {\n    this.toCam.zoom = 1;\n    return this;\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this._config.zoomMax,\n      this.toCam.zoom * this._config.zoomFactor\n    );\n    return this;\n  }\n  zoomOut(args: ParameterListWithoutTime & { clampLimits?: RectPosition }) {\n    this.toCam.zoom = Math.max(\n      this._config.zoomMin,\n      this.toCam.zoom / this._config.zoomFactor\n    );\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n    return this;\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition) {\n    params.scene.camera.zoomTo(Object.assign(\n      params, {cam:this.toCam}\n    ));\n  }\n}\n","import Callback from \"./Middleware/Camera\";\nimport Camera from \"./Middleware/Camera\";\nimport CameraControl from \"./Middleware/CameraControl\";\nimport CameraControlSecondButton from \"./Middleware/CameraControlSecondButton\";\nimport Click from \"./Middleware/Click\";\nimport Element from \"./Middleware/Element\";\nimport Event from \"./Middleware/Event\";\nimport LoadingScreen from \"./Middleware/LoadingScreen\";\nimport Norm from \"./Middleware/Norm\";\nimport TimingAudio from \"./Middleware/TimingAudio\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\n\nexport default {\n  Callback,\n  Camera,\n  CameraControl,\n  CameraControlSecondButton,\n  Click,\n  Element,\n  Event,\n  LoadingScreen,\n  Norm,\n  TimingAudio,\n  TimingDefault,\n};\n","import { ParameterListPositionEvent } from \"../Scene.js\";\nimport CameraControl from \"./CameraControl.js\";\nconst clickTime = 300;\n\nexport default class CameraControlSecondButton extends CameraControl {\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      (Date.now() - this._mousePos[i]._timestamp > clickTime ||\n        Math.abs(this._mousePos[i].x - mx) >= 5 ||\n        Math.abs(this._mousePos[i].y - my) >= 5) &&\n        i === 1\n    ) {\n      scene.stopPropagation();\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"region\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n          (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      if (i === 2) {\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n    }\n\n    if (\n      i === 1 &&\n      scene.has(\"regionMove\") &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!(e as TouchEvent).touches || (e as TouchEvent).touches.length === 1)\n    ) {\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"regionMove\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListPositionEvent } from \"../Scene\";\nimport type { MiddlewareElementOptions } from \"./Element\";\n\nexport default class Click implements ConfigurationObject{\n  _doubleClickElementTimer: undefined|number;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  mouseUp(param:ParameterListPositionEvent) {\n    const { scene, button } = param;\n    if (button === 1) {\n      if (scene.has(\"doubleClick\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClick\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"click\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"click\", param);\n      }\n    }\n  }\n}\n","import Scene, { ConfigurationObject, ElementClickInfo, ParameterListCanvas, ParameterListClickElement, ParameterListClickNonElement, ParameterListPositionEvent } from \"../Scene\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nexport interface MiddlewareElementOptions {\n  doubleClickDetectInterval?: number\n}\n\ninterface MousePosition {\n  mx: number\n  my: number\n}\n\nexport default class Element implements ConfigurationObject {\n  _clickIntend: MousePosition | undefined = undefined;\n  _hoverIntend: MousePosition | undefined = undefined;\n  _hasDetectImage: boolean = false;\n  _doubleClickElementTimer: number | undefined = undefined;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  isDrawFrame() {\n    return this._hasDetectImage ? 1 : 0;\n  }\n\n  _dispatchEvent(scene: Scene, isClick: boolean, param: ParameterListClickElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickElement\")) {\n        if (this._doubleClickElementTimer) {\n          window.clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClickElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"clickElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickElement\", param);\n      }\n    } else {\n      scene.map(\"hoverElement\", param);\n    }\n  }\n\n  _dispatchNonEvent(scene: Scene, isClick: boolean, param: ParameterListClickNonElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickNonElement\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = undefined;\n          scene.map(\"doubleClickNonElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = undefined;\n            scene.map(\"clickNonElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickNonElement\", param);\n      }\n    } else {\n      scene.map(\"hoverNonElement\", param);\n    }\n  }\n\n  initSprites(params: ParameterListCanvas) {\n    const { scene, output, layerManager, canvasId } = params\n    this._hasDetectImage = false;\n    if (this._clickIntend || this._hoverIntend) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[canvasId || 0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n\n      ctx.save();\n      ctx.setTransform(...scene.viewport().m);\n      let found: ElementClickInfo | undefined | \"c\" = undefined;\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const a = (element as ISprite).detect(ctx, cx, cy);\n          if (a === \"c\") {\n            found = \"c\";\n          } else if (a) {\n            found = { layerId, element: a, elementId };\n            return false;\n          }\n        }\n      });\n      ctx.restore();\n\n      if (found === \"c\") {\n        this._hasDetectImage = true;\n      } else {\n        this._clickIntend = undefined;\n        this._hoverIntend = undefined;\n        const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n          mx,\n          my,\n          x,\n          y,\n        }, params) as ParameterListClickNonElement;\n        if (found) {\n          Object.assign(param, found as ElementClickInfo);\n          this._dispatchEvent(scene, isClick, param);\n        } else {\n          this._dispatchNonEvent(scene, isClick, param);\n        }\n      }\n    }\n  }\n\n  draw(params: ParameterListCanvas) {\n    const { engine, scene, layerManager, output, canvasId } = params;\n    if (!canvasId && this._hasDetectImage) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n      const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n        mx,\n        my,\n        x,\n        y,\n      }, params) as ParameterListClickNonElement;\n\n      const oldISE = ctx.imageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = false;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.save();\n\n      ctx.setTransform(...scene.viewport().m);\n\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const color = `rgb(${elementId & 0xff}, ${(elementId & 0xff00) >> 8\n            }, ${layerId & 0xff})`;\n          (element as ISprite).detectDraw(ctx, color);\n        }\n      }, 0);\n      ctx.restore();\n      ctx.imageSmoothingEnabled = oldISE;\n      engine.normContext(ctx);\n\n      this._clickIntend = undefined;\n      this._hoverIntend = undefined;\n\n      const p = ctx.getImageData(cx, cy, 1, 1).data;\n      if (p[3]) {\n        Object.assign(param, {\n          layerId: p[2],\n          elementId: p[0] + (p[1] << 8),\n          element: layerManager\n            .getById(param.layerId)\n            .getById(param.elementId)  \n        })\n        this._dispatchEvent(scene, isClick, param);\n      } else {\n        this._dispatchNonEvent(scene, isClick, param);\n      }\n    }\n  }\n\n  mouseUp({ scene, position: [mx, my], button }:ParameterListPositionEvent) {\n    this._clickIntend = button === 1 && scene.has(\"clickElement\") ? { mx, my } : undefined;\n  }\n\n  mouseMove({ scene, position: [mx, my] }:ParameterListPositionEvent) {\n    this._hoverIntend = scene.has(\"hoverElement\") ? { mx, my } : undefined;\n  }\n}\n","import ifNull from '../func/ifnull'\nimport type { ValueOf } from '../helper';\nimport LayerManager from '../LayerManager';\nimport type { ConfigurationObject, EventsReturn, ParameterList, ParameterListInitDestroy, ParameterListWithoutTime } from '../Scene';\nimport Scene from '../Scene';\nimport { ISpriteFunctionOrSprite } from '../Sprites/Sprite';\n\nexport default class Events implements ConfigurationObject {\n  type = \"events\"\n  _reseted:boolean = false\n\n  _events: {\n    n: HTMLElement,\n    e: keyof HTMLElementEventMap\n    f: (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any\n  }[] = []\n\n  _pushEvent(command: \"mouseDown\" | \"mouseUp\" | \"mouseOut\" | \"mouseMove\" | \"mouseWheel\", event: Event | TouchEvent | MouseEvent, scene: Scene) {\n    if (ifNull<boolean>(scene.value(\"preventDefault\"), true)) {\n      event.preventDefault();\n    }\n    if (!this._reseted) {\n      return\n    }\n    const [mx, my] = this.getMousePosition({ event });\n    const [x, y] = scene.transformPoint(mx, my);\n    scene.pipeBack(command, {\n      event,\n      position: [mx, my],\n      x,\n      y,\n      button: this.getMouseButton({ event }),\n    });\n  }\n\n  events({ scene }: ParameterListInitDestroy) {\n    return [\n      scene.has(\"mouseDown\") && [\n        [\"touchstart\", \"mousedown\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseDown\", event, scene),\n      ],\n      scene.has(\"mouseUp\") && [\n        [\"touchend\", \"mouseup\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseUp\", event, scene),\n      ],\n      scene.has(\"mouseOut\") && [\n        [\"touchendoutside\", \"mouseout\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseOut\", event, scene),\n      ],\n      scene.has(\"mouseMove\") && [\n        [\"touchmove\", \"mousemove\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseMove\", event, scene),\n      ],\n      scene.has(\"mouseWheel\") && [\n        [\"wheel\"],\n        (event: Event) => this._pushEvent(\"mouseWheel\", event, scene),\n      ],\n      (ifNull(scene.value<\"preventDefault\", boolean>(\"preventDefault\"), true)) && [\n        [\"contextmenu\"],\n        (e: Event) => e.preventDefault(),\n      ],\n    ].filter((v) => v) as EventsReturn\n  }\n\n  init({ output, scene }: ParameterListInitDestroy) {\n    const element = output.canvas[0];\n\n    const events: (keyof HTMLElementEventMap | [keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[][] = scene.map(\"events\", {});\n\n    this._events = events\n      .filter(Array.isArray)\n      // flat(1)\n      .reduce((acc, cur) => {\n        acc.push.apply(acc, cur);\n        return acc;\n      }, [])\n      // convert strings to call to function with the same name\n      .map(cur =>\n        Array.isArray(cur) ? cur : [[cur], (event: ValueOf<HTMLElementEventMap>) => {\n          if (ifNull(scene.value(\"preventDefault\"), true)) event.preventDefault();\n          scene.pipeBack(cur, { event });\n        }]\n      )\n      .map(([events, func]) =>\n        events.map((e: keyof HTMLElementEventMap) => ({\n          n: element,\n          e: e,\n          f: func,\n        }))\n      )\n      // workaround for .flat(1) for edge\n      .reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          acc.push.apply(acc, cur);\n        } else {\n          acc.push(cur);\n        }\n        return acc;\n      }, []);\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f, true);\n    });\n  }\n\n  destroy() {\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f, true);\n    });\n    this._events = [];\n  }\n\n  reset(params: ParameterListWithoutTime, layerManager:LayerManager| ISpriteFunctionOrSprite[][]) {\n    return layerManager;\n  }\n\n  getMousePosition({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    let touches;\n    if ((e as TouchEvent).touches && (e as TouchEvent).touches.length > 0) {\n      touches = (e as TouchEvent).targetTouches;\n    } else if ((e as TouchEvent).changedTouches && (e as TouchEvent).changedTouches.length > 0) {\n      touches = (e as TouchEvent).changedTouches;\n    }\n    if (touches) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top,\n      ];\n    }\n    if ((e as MouseEvent).offsetX === undefined) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      return [(e as MouseEvent).clientX - rect.left, (e as MouseEvent).clientY - rect.top];\n    }\n    return [(e as MouseEvent).offsetX, (e as MouseEvent).offsetY];\n  }\n\n  getMouseButton({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    return (\n      (e as TouchEvent).touches\n        ? ((e as TouchEvent).touches.length || (e as TouchEvent).changedTouches.length)\n        : ifNull((e as MouseEvent).buttons\n          ? (e as MouseEvent).buttons\n          : [0, 1, 4, 2][(e as MouseEvent).which], 1)\n    );\n  }\n}\n","import type { ConfigurationObject, ParameterListLoading } from \"../Scene\";\n\nexport default class LoadingScreen implements ConfigurationObject {\n  loading({ output, progress }: ParameterListLoading) {\n    const ctx = output.context[0];\n    const isNumber = typeof progress === \"number\"\n    const loadedHeight =\n      isNumber\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"_aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNumber\n        ? \"Loading \" + Math.round(100 * progress) + \"%\"\n        : progress,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n}\n","import Transform from '../func/transform'\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime } from '../Scene';\n\nexport default class Norm implements ConfigurationObject {\n  viewport({ engine }: ParameterListWithoutTime, matrix: Transform) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return matrix.translate(hw, hh).scale(scale, scale);\n  }\n\n  additionalModifier({ engine, output, scene }: ParameterListWithoutTime):AdditionalModifier {\n    scene.cacheClear();\n\n    const [x1, y1] = scene.transformPoint(0, 0, 1);\n    const [x2, y2] = scene.transformPoint(output.width, output.height, 1);\n\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    const transformInvert = new Transform().translate(hw, hh).scale(scale, scale).invert();\n    const [sx1, sy1] = transformInvert.transformPoint(0, 0);\n    const [sx2, sy2] = transformInvert.transformPoint(\n      output.width,\n      output.height\n    );\n\n    return {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth,\n      visibleScreen: {\n        x: x1,\n        y: y1,\n        width: x2 - x1,\n        height: y2 - y1,\n      },\n      fullScreen: {\n        x: sx1,\n        y: sy1,\n        width: sx2 - sx1,\n        height: sy2 - sy1,\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterList, ParameterListInitDestroy } from \"../Scene\";\nimport TimingDefault, { MiddlewareTimingDefaultOptions } from \"./TimingDefault\";\n\nexport interface MiddlewareTimingAudioOptions extends MiddlewareTimingDefaultOptions {\n  audioElement: HTMLMediaElement\n}\n\nexport default class TimingAudio extends TimingDefault implements ConfigurationObject {\n  _maxSkippedTickChunk: number = Number.POSITIVE_INFINITY\n  _audioStartTime: number | undefined = undefined\n  _audioPosition: number | undefined = undefined\n  _enableAndroidHack: boolean = false\n  _audioElement: undefined|HTMLMediaElement & {\n    controller?: Record<string,any>\n  }\n\n  constructor(configuration: MiddlewareTimingAudioOptions) {\n    super({\n      ...configuration,\n      maxSkippedTickChunk: Number.POSITIVE_INFINITY\n    });\n    this._audioElement = configuration.audioElement;\n  }\n\n  get audioElement() {\n    return this._audioElement;\n  }\n\n  init(_params: ParameterListInitDestroy) {\n    if (this._audioElement) {\n      // Android hack\n      // @ts-ignore\n      if (typeof MediaController === \"function\") {\n        // @ts-ignore\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      return new Promise((resolve, reject) => {\n        const canplaythrough = () => {\n          this._audioElement!.removeEventListener(\n            \"canplaythrough\",\n            canplaythrough\n          );\n          const playPromise = this._audioElement!.play();\n          if (playPromise) {\n            playPromise.catch((e) => { });\n          }\n          resolve(undefined);\n        };\n        this._audioElement!.addEventListener(\"canplaythrough\", canplaythrough);\n        this._audioElement!.onerror = () => {\n          this._audioElement=undefined\n          resolve(undefined);\n        }\n        this._audioElement!.load();\n      });\n    }\n  }\n\n  endTime() {\n    return this._audioElement ? this._audioElement.duration * 1000 : Number.POSITIVE_INFINITY;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      if (this._audioElement.ended && this._audioElement.duration) {\n        return this._audioElement.duration * 1000;\n      }\n      const currentAudioTime = this._audioElement.currentTime * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === undefined) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller!.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition! < 500 &&\n              currentAudioTime > this._audioPosition! &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition!);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    return timePassed;\n  }\n\n  shiftTime() {\n    return 0;\n  }\n}\n"],"names":["calc","c","slice","call","arguments","toArray","value","Array","isArray","pact","state","s","_Pact","o","_settle","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","thenable","Engine","constructor","canvasOrOptions","_output","_events","_scene","_newScene","_sceneParameter","_isSceneInitialized","_recalculateCanvasIntend","_lastTimestamp","_referenceRequestAnimationFrame","_autoSize","_canvasCount","_drawFrame","_reduceFramerate","_realLastTimestamp","_isOddFrame","_initializedStartTime","_promiseSceneDestroying","_runParameter","_moveOnce","givenOptions","Error","getContext","canvas","Object","assign","context","width","height","ratio","undefined","options","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","map","n","window","f","recalculateCanvas","push","document","handleVisibilityChange","_recalculateCanvas","forEach","index","length","from","clickToPlayAudio","playAudioOfScene","reduceFramerate","addEventListener","switchScene","scene","sceneParameter","visibilityState","timing","audioElement","play","normContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","getOutput","Math","round","style","resize","recalculateFPS","cancelAnimationFrame","Promise","resolve","requestAnimationFrame","_temp2","_now","start","count","offsetTimeTarget","timeBetweenFrames","offsetTimeDelta","_mainLoop","i","test","update","body","shouldContinue","_isSettledPact","stage","reject","_resumeAfterTest","_resumeAfterBody","_temp","performance","now","Date","timestamp","isRecalculatedCanvas","max","destroy","destroyParameterForNewScene","callInit","run","currentTime","timePassed","clampTime","shiftTime","nowAutoSize","initSprites","drawFrame","isDrawFrame","moveFrame","move","draw","deltaTimestamp","targetTime","deltaFrame","delta","abs","min","callLoading","totalTimePassed","reset","runParameter","_this2","stop","_temp4","_temp3","_temp5","_this3$_scene$destroy","_this3","_this4","removeEventListener","ImageManager$1","Images","loaded","_resolve","add","Callbacks","self","key","imageSrc","Image","onload","isLoaded","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","onerror","img","crossOrigin","getImage","nameOrImage","isLoadedPromise","canvasIds","_layer","_isFunction","_start","_nextFree","_canvasIds","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","id","nextFree","concat","k","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","isCanvasId","canvasId","includes","layerId","l","isFunction","layer","getElementsByTag","tag","_ref","ans","label","timelapsed","_ref2","clear","LayerManager","_layers","addLayer","Layer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","Transform","m","__constuct","multiply","matrix","m12","dy","m21","m22","dx","invert","d","m4","m5","m1","m2","m3","rotate","rad","cos","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","alternative","TimingDefault","configuration","_configuration","_tickChunk","_maxSkippedTickChunk","_tickChunkTolerance","ifNull","tickChunk","maxSkippedTickChunk","tickChunkTolerance","init","_params","maxTime","isChunked","hasOneChunkedFrame","_ref3","calcFrames","_ref4","floor","Symbol","iterator","defaultMiddlewareCommandList","_all","fixedUpdate","additionalModifier","Scene","_layerManager","_imageManager","_totalTimePassed","_engine","_middleware","_stopPropagation","_transform","_transformInvert","_additionalModifier","_initDone","_endTime","_resetIntend","ImageManager","middlewares","middlewareByType","_this$_engine","configurationClassOrObject","reduce","middlewareCommandList","command","keys","objs","filter","has","some","do","params","defaultValue","func","_param","fullParams","pipe","res","pipeBack","pipeMax","p","newRes","pipeAsync","_interrupt","target","check","_iteratorSymbol","step","_cycle","next","done","return","_fixup","TypeError","values","array","obj","stopPropagation","cacheClear","viewport","scaleCanvas","parameter","engine","images","all","updateAdditionalModifier","output","alpha","widthInPixel","heightInPixel","visibleScreen","fullScreen","t_timing","camera","t_camera","t_control","additionalParameter","imageManager","layerManager","args","progress","lastCall","frames","calcFrame","animate","save","setTransform","restore","resetIntend","layers","Wait","duration","_duration","sprite","time","SequenceRunCommand","Sequence","sequences","lastTimestamp","timeWait","shift","sequence","thisTimeWait","position","arr","sequencePosition","_sequencePosition$seq","b","_sequencePosition$seq2","seq","_runSequence","timeLeft","FORCE_DISABLE","STOP","REMOVE","_sequencePosition$seq3","is_difference","restTime","Infinity","disableVote","givenParameter","_needInit","_parseParameterList","_getParameterList","parameterList","entries","name","givenValue","fromEntries","valueEntries","_getBaseParameterList","animation","isClickable","timepassed","_this$p$animation$pla","_this$p$animation","_detectHelperCallback","scaleX","scaleY","rotation","beginPath","a","_detectHelper","coordinateX","coordinateY","moveToCenter","hw","hh","rect","closePath","isPointInPath","detectDraw","color","detect","PI","CircleParameterList","rotationInRadian","rotationInDegree","degToRad","compositeOperation","Group","super","finished","spriteFinished","Emitter","classToEmit","class","FastBlur","SpriteBase","_temp_canvas","_currentGridSize","_tctx","gridSize","darker","pixel","norm","_generateTempCanvas","w","h","createElement","ceil","normalizeFullScreen","oldTempCanvas","drawImage","targetW","targetH","_this$additionalBlur","fillStyle","fillRect","additionalBlur","clearRect","oldValue","imageSmoothingEnabled","Position","Text","givenParameters","text","join","font","CENTER","borderColor","lineWidth","fillText","strokeStyle","strokeText","_currentScaleX","_currentPixelSmoothing","static","r","g","rIndex","cr","cg","cb","Particle","_Gradient","generateGradientImage","txtc","createRadialGradient","gradientSize","grad","addColorStop","toRgb","getGradientImage","Sprites","Callback","_timePassed","Canvas","canvasWidth","canvasHeight","_normalizeFullScreen","_copyCanvas","wh","tw","th","cam","zoom","Circle","arc","fill","_currentTintKey","_normScale","image","frameX","frameY","frameWidth","frameHeight","normCover","normToScreen","clickExact","tint","_tintCacheKey","_temp_context","sX","isTopLeft","LEFT_TOP","tctx","sY","isCenter","cx","cy","Path","_oldPath","_path2D","Path2D","polyfill","head","getElementsByTagName","script","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","_preprocessing","pasition","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Number","EPSILON","Rect","Scroller","characterList","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","radiusScale","imageDataRGBA","imageData","putImageData","StarField","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","_centerX","_centerY","_scaleZ","moveX","moveY","moveZ","highScale","clampOrRandom","val","random","_moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","ret","lineTo","moveDefault","moveStatic","moveBezier","copyLength","copy","moveColor","colorFrom","mix","colorTo","toString","movePath","Animations","_callback","_initialized","ChangeTo","changeValues","ease","_changeValues","_ease","orgValue","isColor","isPath","isStatic","names","isBezier","bezier","moveAlgorithm","t","_init","TinyColor","End","EndDisabled","Forever","_Aniobject","Aniobject","_this$_Aniobject$rese","_this$_Aniobject","_this$_Aniobject$play","isDifference","_this$_Aniobject$rese2","_this$_Aniobject3","If","ifCallback","AniobjectElse","_ifCallback","_AniobjectElse","_this$_AniobjectElse$","AniObject","durationBetweenFrames","_image","_count","_durationBetweenFrames","_current","imageCalced","currentFrame","ImageFrame","frameNumber","framesToRight","_frameNumber","_framesToRight","frameNumberCalc","Loop","times","_times","_timesOrg","_this$_Aniobject2","Once","Remove","Shake","shakediff","_shakeDiff","_shakeDiffHalf","_x","_y","ShowOnce","_showOnce","State","states","transitions","defaultState","_states","_transitions","_currentStateName","_currentState","_isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","find","_this$_currentState","_this$_currentState3","_this$_currentState4","Stop","StopDisabled","WaitDisabled","Camera","config","viewportByCam","clampView","clampLimits","cl","x1","y1","x2","y2","camY","camX","zoomToFullScreen","zoomTo","sx1","sy1","sx2","sy2","MIN_VALUE","CameraControl","_mousePos","toCam","_config","_instant","zoomMax","zoomMin","zoomFactor","tween","callResize","mouseDown","event","mx","my","button","_cx","_cy","_isDown","_numOfFingers","touches","_e$touches","_distance","_timestamp","mouseUp","_e$changedTouches","down","numCurrentFingers","changedTouches","numOfFingers","mouseOut","mouseMove","_ref5","which","_e$touches2","distance","sqrt","pageX","pageY","_czoom","viewMatrix","ox","oy","nx","ny","mouseWheel","_ref6","wheelDelta","deltaY","zoomIn","zoomOut","hasCamChanged","_ref7","_ref8","camInstant","zoomToNorm","Middleware","CameraControlSecondButton","fromX","fromY","toX","toY","Click","doubleClickDetectInterval","_doubleClickElementTimer","_doubleClickDetectInterval","param","clearTimeout","setTimeout","Element","_clickIntend","_hoverIntend","_hasDetectImage","_dispatchEvent","isClick","_dispatchNonEvent","found","oldISE","Event","Events","_reseted","_pushEvent","preventDefault","getMousePosition","getMouseButton","events","acc","cur","apply","targetTouches","getBoundingClientRect","sum","left","top","offsetX","clientX","clientY","offsetY","buttons","LoadingScreen","loading","isNumber","loadedHeight","Norm","transformInvert","TimingAudio","POSITIVE_INFINITY","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","MediaController","controller","preload","canplaythrough","playPromise","catch","load","endTime","ended","currentAudioTime","playbackState"],"mappings":"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"}