{"version":3,"file":"animationvideo.module.js","sources":["../src/func/calc.ts","../src/func/toArray.ts","../src/Engine.ts","../src/ImageManager.ts","../src/Layer.ts","../src/LayerManager.ts","../src/func/transform.ts","../src/func/ifnull.ts","../src/Middleware/TimingDefault.ts","../src/Scene.ts","../src/Animations/Wait.ts","../src/Animations/Sequence.ts","../src/Sprites/Sprite.ts","../src/Sprites/Circle.ts","../src/Sprites/Group.ts","../src/Sprites/Emitter.ts","../src/Sprites/FastBlur.ts","../src/Position.ts","../src/Sprites/Text.ts","../src/Sprites/Particle.ts","../src/Sprites.ts","../src/Sprites/Callback.ts","../src/Sprites/Canvas.ts","../src/Sprites/Image.ts","../src/Sprites/Path.ts","../src/Sprites/Rect.ts","../src/Sprites/Scroller.ts","../src/Sprites/StackBlur.ts","../src/Sprites/StarField.ts","../src/Animations/ChangeTo.ts","../src/Animations.ts","../src/Animations/Callback.ts","../src/Animations/End.ts","../src/Animations/EndDisabled.ts","../src/Animations/Forever.ts","../src/Animations/If.ts","../src/Animations/Image.ts","../src/Animations/ImageFrame.ts","../src/Animations/Loop.ts","../src/Animations/Once.ts","../src/Animations/Remove.ts","../src/Animations/Shake.ts","../src/Animations/ShowOnce.ts","../src/Animations/State.ts","../src/Animations/Stop.ts","../src/Animations/StopDisabled.ts","../src/Animations/WaitDisabled.ts","../src/Middleware/Camera.ts","../src/Middleware/CameraControl.ts","../src/Middleware.ts","../src/Middleware/CameraControlSecondButton.ts","../src/Middleware/Click.ts","../src/Middleware/Element.ts","../src/Middleware/Event.ts","../src/Middleware/LoadingScreen.ts","../src/Middleware/Norm.ts","../src/Middleware/TimingAudio.ts"],"sourcesContent":["export type WithoutFunction<R> = R extends Function ? never : R\n\nexport default function calc<\n  T = unknown,\n  FunctionParamsType extends any[] = any[],\n  >(\n    c: T | ((...params: FunctionParamsType) => T),\n    ...params: FunctionParamsType): T {\n  return typeof c === \"function\" ? (c as ((...params: FunctionParamsType) => T))(...params) : c;\n}\n","export default function toArray<T>(value:T|T[]):T[]\t{\n\treturn (value === undefined || value === null ? [] : Array.isArray(value) ? value : [value]);\n}","import calc from \"./func/calc.js\";\nimport toArray from \"./func/toArray.js\";\nimport type TimingAudio from \"./Middleware/TimingAudio.js\";\nimport type Scene from './Scene'\n\nexport interface EngineOptions {\n  canvas: HTMLCanvasElement\n  scene?: null | Scene\n  sceneParameter?: Record<any, any>\n  autoSize?: Partial<AutoSizeSettings>|boolean\n  clickToPlayAudio?: boolean\n  reduceFramerate?: boolean\n}\n\nexport interface AutoSizeSettings {\n  enabled: boolean\n  scaleLimitMin: number\n  scaleLimitMax: number\n  scaleFactor: number\n  referenceWidth: () => number\n  referenceHeight: () => number\n  currentScale: number\n  waitTime: number\n  currentWaitedTime: number\n  currentOffsetTime: number\n  offsetTimeLimitUp: number\n  offsetTimeLimitDown: number\n  registerResizeEvents: boolean\n  registerVisibilityEvents: boolean\n  setCanvasStyle: boolean\n  offsetTimeTarget?: number\n  offsetTimeDelta?: number\n}\n\ninterface EventSafe {\n  n: HTMLElement | Window & typeof globalThis | Document\n  e: string\n  f: EventListenerOrEventListenerObject,\n}\n\nexport interface OutputInfo {\n  canvas: HTMLCanvasElement[],\n  context: CanvasRenderingContext2D[],\n  width: number,\n  height: number,\n  ratio: number,\n}\n\n\nclass Engine {\n  _output: OutputInfo\n  _events: EventSafe[]\n  _scene: null | Scene | undefined\n  _newScene: undefined | null | Scene\n  _sceneParameter: undefined | Record<any, any>\n  _isSceneInitialized: boolean\n  _recalculateCanvasIntend: boolean\n  _lastTimestamp: number\n  _referenceRequestAnimationFrame: number | undefined\n  _autoSize: undefined | AutoSizeSettings\n  _canvasCount: number\n  _drawFrame: number[]\n  _reduceFramerate: boolean\n  _realLastTimestamp: number | undefined\n  _isOddFrame: boolean = false\n  _initializedStartTime: number | undefined\n  _promiseSceneDestroying: Promise<any> | undefined\n  _runParameter: undefined | Record<any, any>\n  _moveOnce: boolean = false\n\n  constructor(canvasOrOptions: HTMLCanvasElement | EngineOptions) {\n    let givenOptions: EngineOptions = canvasOrOptions as EngineOptions;\n    if (typeof canvasOrOptions !== \"object\") {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    if ((canvasOrOptions as HTMLCanvasElement).getContext) {\n      givenOptions = {\n        canvas: canvasOrOptions as HTMLCanvasElement,\n      };\n    } else if (!(canvasOrOptions as EngineOptions).canvas) {\n      throw new Error(\"No canvas given for Engine constructor\");\n    }\n    let options: EngineOptions = Object.assign(\n      {},\n      givenOptions\n    );\n\n    this._output = {\n      canvas: [],\n      context: [],\n      width: 0,\n      height: 0,\n      ratio: 1,\n    };\n\n    // list of binded events\n    this._events = [];\n\n    // the current _scene-object\n    this._scene = null;\n    // is a _scene ready for action?\n    this._isSceneInitialized = false;\n    // new _scene to initialize\n    // this._newScene = undefined;\n    // this._promiseSceneDestroying = undefined;\n\n    // time measurement\n    this._lastTimestamp = 0;\n    this._recalculateCanvasIntend = false;\n\n    // reference to\n    this._referenceRequestAnimationFrame = undefined;\n\n    // data about the output canvas\n    this._output.canvas = toArray(options.canvas);\n\n    if (options.autoSize) {\n      const defaultAutoSizeSettings: AutoSizeSettings = {\n        enabled: true,\n        scaleLimitMin: 1,\n        scaleLimitMax: 2.5,\n        scaleFactor: 1.07,\n        referenceWidth: () => this._output.canvas[0].clientWidth,\n        referenceHeight: () => this._output.canvas[0].clientHeight,\n        currentScale: 1,\n        waitTime: 100,\n        currentWaitedTime: 0,\n        currentOffsetTime: 0,\n        offsetTimeLimitUp: 300,\n        offsetTimeLimitDown: 300,\n        // undefined will be autodetect timing\n        // offsetTimeTarget: 25,\n        // offsetTimeDelta: 10,\n        registerResizeEvents: true,\n        registerVisibilityEvents: true,\n        setCanvasStyle: false,\n      };\n      if (typeof options.autoSize === \"object\") {\n        this._autoSize = Object.assign(\n          {},\n          defaultAutoSizeSettings,\n          options.autoSize\n        );\n      } else {\n        this._autoSize = defaultAutoSizeSettings;\n      }\n      if (this._autoSize.registerResizeEvents) {\n        this._events = [\"resize\", \"orientationchange\"].map((e) => ({\n          n: window,\n          e: e,\n          f: this.recalculateCanvas.bind(this),\n        }));\n      }\n      if (this._autoSize.registerVisibilityEvents) {\n        this._events.push({\n          n: document,\n          e: \"visibilitychange\",\n          f: this.handleVisibilityChange.bind(this),\n        });\n      }\n      this._recalculateCanvas();\n    } else {\n      this._output.width = this._output.canvas[0].width;\n      this._output.height = this._output.canvas[0].height;\n      this._output.ratio = this._output.width / this._output.height;\n    }\n    this._output.canvas.forEach((canvas, index) => {\n      this._output.context[index] = canvas.getContext(\"2d\")!;\n    });\n    this._canvasCount = this._output.canvas.length;\n    this._drawFrame = Array.from({ length: this._canvasCount }, (v) => 0);\n\n    if (options.clickToPlayAudio) {\n      this._events.push({\n        n: this._output.canvas[0],\n        e: \"click\",\n        f: this.playAudioOfScene.bind(this),\n      });\n    }\n\n    this._reduceFramerate = !!options.reduceFramerate;\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f);\n    });\n\n    this.switchScene(options.scene, options.sceneParameter || {});\n  }\n\n  handleVisibilityChange() {\n    if (this._autoSize) this._autoSize.enabled = !(document.visibilityState == \"hidden\");\n  }\n\n  playAudioOfScene() {\n    if (\n      this._isSceneInitialized &&\n      this._scene &&\n      (this._scene.timing as TimingAudio).audioElement\n    ) {\n      (this._scene.timing as TimingAudio).audioElement!.play();\n    }\n  }\n\n  normContext(ctx: CanvasRenderingContext2D) {\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  getWidth() {\n    return this._output.width;\n  }\n\n  getHeight() {\n    return this._output.height;\n  }\n\n  getRatio() {\n    return this._output.ratio;\n  }\n\n  getOutput() {\n    return this._output;\n  }\n\n  recalculateCanvas() {\n    this._recalculateCanvasIntend = true;\n    return this;\n  }\n\n  _recalculateCanvas() {\n    if (this._autoSize) {\n      const width = calc<number>(this._autoSize.referenceWidth);\n      const height = calc<number>(this._autoSize.referenceHeight);\n      if (width <= 0 || height <= 0) {\n        return;\n      }\n      this._output.canvas.forEach((canvas) => {\n        canvas.width = Math.round(width / this._autoSize!.currentScale);\n        canvas.height = Math.round(height / this._autoSize!.currentScale);\n        if (this._autoSize!.setCanvasStyle) {\n          canvas.style.width = `${width}px`;\n          canvas.style.height = `${height}px`;\n        }\n      });\n      this._autoSize.currentWaitedTime = 0;\n      this._autoSize.currentOffsetTime = 0;\n    }\n\n    this._output.width = this._output.canvas[0].width;\n    this._output.height = this._output.canvas[0].height;\n    this._output.ratio = this._output.width / this._output.height;\n\n    this.resize();\n  }\n\n  async recalculateFPS() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n      this._referenceRequestAnimationFrame = undefined;\n    }\n    await new Promise((resolve) => requestAnimationFrame(resolve));\n    const start = this._now();\n    const count = 3;\n    for (let i = count; i--;) {\n      await new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n\n    const timeBetweenFrames = (this._now() - start) / count;\n    this._autoSize!.offsetTimeTarget = timeBetweenFrames;\n    this._autoSize!.offsetTimeDelta = timeBetweenFrames / 3;\n\n    if (this._referenceRequestAnimationFrame === undefined) {\n      this._realLastTimestamp = undefined;\n      this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n        this._mainLoop.bind(this)\n      );\n    }\n  }\n\n  resize() {\n    if (this._scene && this._scene.resize) {\n      this._scene.resize();\n    }\n    return this;\n  }\n\n  switchScene(scene: Scene | null | undefined, sceneParameter: undefined | Record<any, any> = undefined) {\n    if (scene) {\n      this._newScene = scene;\n      this._sceneParameter = sceneParameter;\n    }\n    return this;\n  }\n\n  _now() {\n    return window.performance ? performance.now() : Date.now();\n  }\n\n  _mainLoop(timestamp:number) {\n    if (!this._referenceRequestAnimationFrame) return;\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    let isRecalculatedCanvas =\n      this._recalculateCanvasIntend &&\n      (!this._reduceFramerate || !this._isOddFrame);\n\n    if (isRecalculatedCanvas) {\n      this._recalculateCanvas();\n      this._recalculateCanvasIntend = false;\n    }\n\n    for (let i = 0; i < this._canvasCount; i++) {\n      this._drawFrame[i] = Math.max(\n        this._drawFrame[i] - 1,\n        isRecalculatedCanvas ? 1 : 0\n      );\n    }\n\n      if (!this._realLastTimestamp) {\n        this._realLastTimestamp = timestamp;\n    }\n    if (!this._initializedStartTime) {\n      this._initializedStartTime = timestamp;\n    }\n\n    if (this._newScene && !this._promiseSceneDestroying) {\n      this._promiseSceneDestroying = Promise.resolve(\n        this._scene ? this._scene.destroy() : undefined\n      );\n      this._promiseSceneDestroying.then((destroyParameterForNewScene) => {\n        this._newScene!.callInit(\n          {\n            run: this._runParameter,\n            scene: this._sceneParameter,\n            destroy: destroyParameterForNewScene,\n          },\n          this\n        );\n        this._scene = this._newScene;\n        this._newScene = undefined;\n        this._promiseSceneDestroying = undefined;\n        this._isSceneInitialized = false;\n        this._lastTimestamp = this._scene!.currentTime();\n        this._initializedStartTime = timestamp;\n      });\n    }\n\n    if (this._scene) {\n      let moveFrame = false;\n      const nowAutoSize = this._now();\n\n      if (this._reduceFramerate) {\n        this._isOddFrame = !this._isOddFrame;\n      }\n\n      if (!this._reduceFramerate || this._isOddFrame) {\n        let now = this._scene.currentTime();\n\n        // modify time by scene\n        // first set a min/max\n        let timePassed = this._scene.clampTime(now - this._lastTimestamp);\n        // then maybe shift to fit a framerate\n        const shiftTime = this._scene.shiftTime(timePassed);\n        timePassed = timePassed + shiftTime;\n        this._lastTimestamp = now + shiftTime;\n\n        if (this._isSceneInitialized) {\n          moveFrame = timePassed !== 0 || this._moveOnce;\n          this._moveOnce = false;\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              const ctx = this._output.context[index];\n              this.normContext(ctx);\n              this._scene.initSprites(index);\n              //this.normContext(ctx);\n            }\n          }\n\n          const drawFrame = this._scene.isDrawFrame(timePassed);\n          if (Array.isArray(drawFrame)) {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(\n                this._drawFrame[i],\n                drawFrame[i],\n                0\n              );\n            }\n          } else {\n            for (let i = 0; i < this._canvasCount; i++) {\n              this._drawFrame[i] = Math.max(this._drawFrame[i], drawFrame, 0);\n            }\n          }\n\n          if (moveFrame) {\n            this._scene.move(timePassed);\n          }\n\n          if (this._output.canvas[0].width) {\n            for (let index = 0; index < this._canvasCount; index++) {\n              if (this._drawFrame[index]) {\n                this._scene.draw(index);\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < this._canvasCount; i++) {\n            this.normContext(this._output.context[i]);\n          }\n          this._isSceneInitialized = this._scene.callLoading({\n            timePassed: timestamp - this._realLastTimestamp,\n            totalTimePassed: timestamp - this._initializedStartTime,\n          });\n          if (this._isSceneInitialized) {\n            this._scene.reset();\n            this._lastTimestamp = this._scene.currentTime();\n            this._moveOnce = true;\n            if (this._autoSize) {\n              this._autoSize.currentWaitedTime = 0;\n            }\n          }\n        }\n      } \n\n      if (this._isSceneInitialized && this._autoSize && this._autoSize.enabled) {\n        const deltaTimestamp = timestamp - this._realLastTimestamp;\n\n        if (this._autoSize.currentWaitedTime < this._autoSize.waitTime) {\n          this._autoSize.currentWaitedTime += deltaTimestamp;\n        } else if (moveFrame) {\n          const targetTime =\n            this._autoSize.offsetTimeTarget! *\n            (this._reduceFramerate ? 2 : 1);\n          const deltaFrame = this._now() - nowAutoSize;\n          const delta =\n            (Math.abs(deltaTimestamp - targetTime) >\n              Math.abs(deltaFrame - targetTime)\n              ? deltaTimestamp\n              : deltaFrame) - targetTime;\n\n          if (Math.abs(delta) <= this._autoSize.offsetTimeDelta!) {\n            this._autoSize.currentOffsetTime =\n              this._autoSize.currentOffsetTime >= 0\n                ? Math.max(\n                  0,\n                  this._autoSize.currentOffsetTime -\n                  this._autoSize.offsetTimeDelta!\n                )\n                : Math.min(\n                  0,\n                  this._autoSize.currentOffsetTime +\n                  this._autoSize.offsetTimeDelta!\n                );\n          } else {\n            if (\n              delta < 0 &&\n              this._autoSize.currentScale > this._autoSize.scaleLimitMin\n            ) {\n              this._autoSize.currentOffsetTime += delta;\n              if (\n                this._autoSize.currentOffsetTime <=\n                -this._autoSize.offsetTimeLimitDown\n              ) {\n                this._autoSize.currentScale = Math.max(\n                  this._autoSize.scaleLimitMin,\n                  this._autoSize.currentScale / this._autoSize.scaleFactor\n                );\n                this._recalculateCanvasIntend = true;\n              }\n            } else if (\n              delta > 0 &&\n              this._autoSize.currentScale < this._autoSize.scaleLimitMax\n            ) {\n              this._autoSize.currentOffsetTime += delta;\n              if (\n                this._autoSize.currentOffsetTime >=\n                this._autoSize.offsetTimeLimitUp\n              ) {\n                this._autoSize.currentScale = Math.min(\n                  this._autoSize.scaleLimitMax,\n                  this._autoSize.currentScale * this._autoSize.scaleFactor\n                );\n                this._recalculateCanvasIntend = true;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this._realLastTimestamp = timestamp;\n  }\n\n  async run(runParameter: Record<any, any> = {}) {\n    this._runParameter = runParameter;\n\n    await this.stop();\n\n    this._realLastTimestamp = this._initializedStartTime = undefined;\n\n    if (this._autoSize && !this._autoSize.offsetTimeTarget) {\n      await this.recalculateFPS();\n    }\n\n    // First call ever\n    this._referenceRequestAnimationFrame = window.requestAnimationFrame(\n      this._mainLoop.bind(this)\n    );\n\n    return this;\n  }\n\n  async stop() {\n    if (this._referenceRequestAnimationFrame) {\n      window.cancelAnimationFrame(this._referenceRequestAnimationFrame);\n    }\n    this._referenceRequestAnimationFrame = undefined;\n    this._scene && (await this._scene.destroy());\n  }\n\n  async destroy() {\n    await this.stop();\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f);\n    });\n    this._events = [];\n\n    return this;\n  }\n}\n\nexport default Engine;\n","class ImageManager {\n  Images:Record<string, HTMLImageElement>\n  count: number\n  loaded: number\n  _resolve: ((value:unknown)=>void)[] = []\n\n  constructor() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n  }\n\n  add<\n  F extends (key:string, image:HTMLImageElement)=>void\n  >(\n    Images: string[]|Record<string,string>, \n    Callbacks: undefined|(()=>void)|F[]|Record<string,F> = undefined\n    ) {\n    const self = this;\n    for (const key in Images) {\n      if (!self.Images[key]) {\n        const imageSrc = (Images as Record<string,string>)[key];\n        self.Images[key] = new window.Image();\n        self.Images[key].onload = function() {\n          self.loaded++;\n          if (Callbacks && typeof Callbacks === \"function\") {\n            if (self.isLoaded()) {\n              Callbacks();\n            }\n          } else if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n            (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n          }\n          if (self._resolve && self.isLoaded()) {\n            self._resolve.forEach(c => c(undefined));\n            self._resolve = [];\n          }\n        };\n        // crossOrigin makes more trouble in the browser and seems to cause slow downs\n        // self.Images[key].crossOrigin = \"anonymous\";\n        if (imageSrc.substr(0, 4) === \"<svg\") {\n          const DOMURL = window.URL || window.webkitURL;\n          const svg = new window.Blob([imageSrc], { type: \"image/svg+xml\" });\n          self.Images[key].src = DOMURL.createObjectURL(svg);\n        } else {\n          if (/^(https?:)?\\/\\//.test(imageSrc)) {\n            self.Images[key].onerror = () => {\n              // load again without crossOrigin\n              const img = new window.Image();\n              img.onload = self.Images[key].onload;\n              self.Images[key] = img;\n              self.Images[key].src = imageSrc;\n            };\n            self.Images[key].crossOrigin = \"anonymous\";\n          }\n          self.Images[key].src = imageSrc;\n        }\n        self.count++;\n      } else {\n        if (Callbacks && typeof (Callbacks as Record<string,F>)[key] === \"function\") {\n          (Callbacks as Record<string,F>)[key](key, self.Images[key]);\n        }\n      }\n    }\n    if (Callbacks && typeof Callbacks === \"function\" && self.isLoaded()) {\n      Callbacks();\n    }\n    if (self._resolve && self.isLoaded()) {\n      self._resolve.forEach(c => c(undefined));\n      self._resolve = [];\n    }\n    return self;\n  }\n\n  reset() {\n    this.Images = {};\n    this.count = 0;\n    this.loaded = 0;\n    return this;\n  }\n\n  isLoaded() {\n    return this.loaded === this.count;\n  }\n\n  getImage(nameOrImage:HTMLImageElement|string) {\n    return typeof nameOrImage === \"object\"\n      ? nameOrImage\n      : this.Images[nameOrImage];\n  }\n\n  isLoadedPromise() {\n    return this.isLoaded()\n      ? true\n      : new Promise((resolve, reject) => {\n          this._resolve.push(resolve);\n        });\n  }\n}\n\nexport default new ImageManager();\n","import type { ISpriteFunctionOrSprite, ISprite, TTagParameter } from './Sprites/Sprite'\n\nexport interface LayerCallbackData {\n  elementId: number\n  layerId: number\n  element: ISpriteFunctionOrSprite\n  isFunction: boolean\n  layer: Layer\n}\nexport type LayerCallback = (data: LayerCallbackData) => void | boolean\n\nclass Layer {\n  _layer: (undefined | ISpriteFunctionOrSprite)[]\n  _isFunction: (undefined | boolean)[]\n  _start: number\n  _nextFree: number\n  _canvasIds: number[]\n\n  constructor(canvasIds: undefined | number | number[]) {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n    this._canvasIds =\n      canvasIds === undefined\n        ? []\n        : Array.isArray(canvasIds)\n          ? canvasIds\n          : [canvasIds];\n  }\n\n  addElement(element: ISpriteFunctionOrSprite) {\n    this.addElementForId(element);\n    return element;\n  }\n\n  addElements(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    this.addElementsForIds(arrayOfElements);\n    return arrayOfElements;\n  }\n\n  addElementForId(element: ISpriteFunctionOrSprite) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    this._layer[id] = element;\n    this._isFunction[id] = typeof element === \"function\";\n    if (len === id) {\n      len++;\n    }\n    let nextFree = this._nextFree + 1;\n    while (nextFree !== len && this._layer[nextFree]) {\n      nextFree++;\n    }\n    this._nextFree = nextFree;\n    if (this._start > id) {\n      this._start = id;\n    }\n    return id;\n  }\n\n  addElementsForIds(arrayOfElements: ISpriteFunctionOrSprite[]) {\n    let len = this._layer.length;\n    let id = this._nextFree;\n    if (len === id) {\n      this._layer = this._layer.concat(arrayOfElements);\n      this._nextFree = this._layer.length;\n      arrayOfElements.forEach((v, k) => {\n        this._isFunction[len + k] = typeof v === \"function\";\n      });\n      return Array.from({ length: arrayOfElements.length }, (v, k) => k + len);\n    } else {\n      return arrayOfElements.map(element => this.addElement(element));\n    }\n  }\n\n  getById(elementId: number) {\n    return this._layer[elementId];\n  }\n\n  getIdByElement(element: ISpriteFunctionOrSprite) {\n    return this._layer.indexOf(element);\n  }\n\n  deleteByElement(element: ISpriteFunctionOrSprite) {\n    const elementId = this.getIdByElement(element);\n    if (elementId >= 0) {\n      this.deleteById(elementId);\n    }\n  }\n\n  deleteById(elementId: number) {\n    let len = this._layer.length - 1;\n    if (len > 0 && elementId === len) {\n      this._layer[elementId] = undefined;\n      while (len && !this._layer[len - 1]) {\n        len--;\n      }\n      this._layer.length = len;\n      this._isFunction.length = len;\n      this._nextFree = Math.min(this._nextFree, len);\n      this._start = Math.min(this._start, len);\n    } else if (this._layer[elementId]) {\n      this._layer[elementId] = undefined;\n      this._nextFree = Math.min(this._nextFree, elementId);\n      if (this._start === elementId) {\n        this._start = elementId + 1;\n      }\n    }\n  }\n\n  isCanvasId(canvasId: number|undefined) {\n    return (\n      canvasId === undefined ||\n      !this._canvasIds.length ||\n      this._canvasIds.includes(canvasId)\n    );\n  }\n\n  forEach(callback: LayerCallback, layerId: number = 0) {\n    let index, element;\n    const l = this._layer.length;\n    for (index = this._start; index < l; index++) {\n      element = this._layer[index];\n      if (element) {\n        if (callback({\n          elementId: index,\n          layerId,\n          element,\n          isFunction: this._isFunction[index]!,\n          layer: this\n        }) === false) {\n          return;\n        }\n      }\n    }\n  }\n\n  getElementsByTag(tag: TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  play(label: string = \"\", timelapsed: number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  count() {\n    let count = 0;\n    const l = this._layer.length;\n    for (let index = this._start; index < l; index++) {\n      if (this._layer[index]) count++;\n    }\n    return count;\n  }\n\n  clear() {\n    this._layer = [];\n    this._isFunction = [];\n    this._start = 0;\n    this._nextFree = 0;\n  }\n}\n\nexport default Layer;\n","import Layer from \"./Layer\";\nimport type { LayerCallback } from \"./Layer\"\nimport type { ISprite, TTagParameter } from './Sprites/Sprite'\n\n\nclass LayerManager {\n  _layers: Layer[]\n  constructor() {\n    this._layers = [];\n  }\n\n  addLayer(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers[this._layers.length - 1];\n  }\n\n  addLayers(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    let newLayers = Array.from({ length: numberOfLayer }, v => new Layer(canvasIds));\n    this._layers = this._layers.concat(newLayers);\n    return newLayers;\n  }\n\n  addLayerForId(canvasIds: undefined | number | number[] = undefined) {\n    this._layers[this._layers.length] = new Layer(canvasIds);\n    return this._layers.length - 1;\n  }\n\n  addLayersForIds(numberOfLayer: number = 1, canvasIds: undefined | number | number[] = undefined) {\n    const result = Array.from(\n      { length: numberOfLayer },\n      (v, k) => k + this._layers.length\n    );\n    this._layers = this._layers.concat(\n      Array.from({ length: numberOfLayer }, v => new Layer(canvasIds))\n    );\n    return result;\n  }\n\n  getById(layerId: number) {\n    return this._layers[layerId];\n  }\n\n  forEach(callback: LayerCallback, canvasId?: number|undefined) {\n    let i;\n    const l = this._layers.length;\n    for (i = 0; i < l; i++) {\n      if (this._layers[i].isCanvasId(canvasId)) {\n        this._layers[i].forEach(callback, i)\n      }\n    }\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this.forEach(\n      ({ element, isFunction }) =>\n        !isFunction && (element as ISprite).play(label, timelapsed)\n    );\n  }\n\n  getElementsByTag(tag:TTagParameter) {\n    let result:ISprite[] = []\n    this.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        const ans = (element as ISprite).getElementsByTag(tag)\n        if (ans) {\n          result = result.concat(ans)\n        }\n      }\n    })\n    return result\n  }\n\n  count() {\n    return this._layers.length;\n  }\n\n  clear() {\n    this._layers = [];\n  }\n}\n\nexport default LayerManager;","// https://github.com/simonsarris/Canvas-tutorials/blob/master/transform.js\n// Last updated November 2011\n// By Simon Sarris\n// www.simonsarris.com\n// sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    var t = new Transform();\n//    t.rotate(5);\n//    var m = t.m;\n//    ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\n//https://www.npmjs.com/package/canvas-get-transform\n\nexport default class Transform {\n  m: [number, number, number, number, number, number] = [1, 0, 0, 1, 0, 0];\n\n  __constuct() {\n    this.reset()\n  }\n\n  reset() {\n    this.m = [1, 0, 0, 1, 0, 0];\n    return this;\n  }\n\n  multiply(matrix: Transform) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  };\n\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  };\n\n  rotate(rad: number) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  };\n\n  translate(x: number, y: number) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  };\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  };\n\n  transformPoint(px: number, py: number):[number, number] {\n    const x = px;\n    const y = py;\n    px = x * this.m[0] + y * this.m[2] + this.m[4];\n    py = x * this.m[1] + y * this.m[3] + this.m[5];\n    return [px, py];\n  };\n\n  clone() {\n    const n = new Transform();\n    n.m = this.m.slice(0) as [number, number, number, number, number, number];\n    return n;\n  }\n}","export default function ifNull<T>(value:T|null|undefined, alternative:T):T\t{\n\t//@ts-ignore\n\treturn (value === undefined || value === null || value === \"\" ? alternative : value);\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ConfigurationObject, ParameterList, ParameterListWithoutTime } from \"../Scene\";\n\n\nexport interface MiddlewareTimingDefaultOptions {\n  tickChunk?: OrFunction<number>\n  maxSkippedTickChunk?: OrFunction<number | undefined>\n  tickChunkTolerance?: OrFunction<number | undefined>\n}\n\nexport default class TimingDefault implements ConfigurationObject {\n  _configuration: MiddlewareTimingDefaultOptions\n  _tickChunk: number\n  _maxSkippedTickChunk: number\n  _tickChunkTolerance: number\n\n  type = \"timing\"\n  totalTimePassed = 0\n\n  constructor(configuration: MiddlewareTimingDefaultOptions = {}) {\n    this._configuration = configuration;\n    this._tickChunk = ifNull(calc(this._configuration.tickChunk), 1000 / 60)\n    this._maxSkippedTickChunk = ifNull(\n      calc(this._configuration.maxSkippedTickChunk),\n      120\n    );\n    this._tickChunkTolerance = ifNull(\n      calc(this._configuration.tickChunkTolerance),\n      0.1\n    );\n  }\n\n  init(_params: ParameterListWithoutTime) { }\n\n  currentTime() {\n    return window.performance ? window.performance.now() : Date.now();\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    const maxTime = this._tickChunk\n      ? this._tickChunk * this._maxSkippedTickChunk\n      : 2000;\n    return timePassed > maxTime ? maxTime : timePassed\n  }\n\n  shiftTime({ timePassed }: ParameterList) {\n    return this._tickChunk ? -(timePassed % this._tickChunk) : 0;\n  }\n\n  get tickChunk() {\n    return this._tickChunk;\n  }\n\n  isChunked() {\n    return !!this._tickChunk;\n  }\n\n  hasOneChunkedFrame({ timePassed }: ParameterList) {\n    return timePassed >= this._tickChunk - this._tickChunkTolerance;\n  }\n\n  calcFrames({ timePassed }: ParameterList) {\n    return Math.min(\n      this._maxSkippedTickChunk,\n      Math.floor((timePassed + this._tickChunkTolerance) / this._tickChunk)\n    );\n  }\n}\n","import ImageManager from \"./ImageManager\";\nimport LayerManager from \"./LayerManager\";\nimport { WithoutFunction } from \"./func/calc\";\nimport toArray from \"./func/toArray\";\nimport Transform from \"./func/transform\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\nimport { OutputInfo } from \"./Engine\";\nimport type Engine from \"./Engine\";\nimport type { ISprite, ISpriteFunction, ISpriteFunctionOrSprite } from \"./Sprites/Sprite\";\nimport type { addPrefix, OrFunction, OrPromise, ValueOf } from \"./helper\";\nimport type Camera from \"./Middleware/Camera\";\nimport type { CameraPosition } from \"./Middleware/Camera\";\nimport type CameraControl from \"./Middleware/CameraControl\";\nimport type TimingAudio from \"./Middleware/TimingAudio\";\n\nexport interface RectPosition {\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n}\n\nexport interface ParameterListWithoutTime {\n  engine: Engine\n  scene: Scene\n  imageManager: typeof ImageManager\n  layerManager: LayerManager\n  totalTimePassed: number\n  output: OutputInfo\n}\n\nexport interface ParameterList extends ParameterListWithoutTime { \n  timePassed: number \n}\n\nexport interface ParameterListFixedUpdate extends ParameterList { \n  lastCall: boolean\n}\n\nexport interface ParameterListCanvas extends ParameterListWithoutTime { \n  canvasId: undefined|number\n}\n\nexport interface ParameterListLoading extends ParameterList {\n    timePassed: number\n    totalTimePassed: number\n    progress: string | number\n}\n\nexport interface ParameterListInitDestroy extends ParameterList {\n  parameter: any\n}\n\nexport interface ElementClickInfo {\n  layerId: number\n  element: ISprite\n  elementId: number\n}\n\nexport interface ElementPositionInfo {\n  mx: number\n  my: number\n  x: number\n  y: number\n}\n\nexport type ParameterListClickElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport type ParameterListClickNonElement = ParameterListCanvas & ElementClickInfo & ElementPositionInfo\n\nexport interface ParameterListPositionEvent extends ParameterListWithoutTime {\n  event: Event | MouseEvent | TouchEvent\n  position: [number, number]\n  x:number\n  y:number\n  button: number\n}\n\nexport type EventsReturn = (keyof HTMLElementEventMap|[keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[]\n\nexport interface ConfigurationObject extends Record<string, any> {\n  init?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  destroy?: (params: ParameterListInitDestroy) => OrPromise<void|unknown>\n  enabled?: boolean\n  type?: string\n  images?: OrFunction<string[] | Record<string, string>>\n  endTime?: OrFunction<number>\n  loading?: (params: ParameterListLoading) => void\n  viewport?: (params: ParameterListWithoutTime, matrix:Transform) => Transform\n  currentTime?: (params: ParameterListWithoutTime) => number\n  clampTime?: (params: ParameterList) => number\n  shiftTime?: (params: ParameterList) => number\n  isDrawFrame?: (params: ParameterList) => number|number[]\n  isChunked?: OrFunction<boolean>\n  additionalModifier?: (params: ParameterListWithoutTime, additionalModifier: AdditionalModifier) => AdditionalModifier\n  calcFrames?: OrFunction<number, [ParameterList]>\n  tickChunk?: OrFunction<number, [ParameterListWithoutTime]>\n  fixedUpdate?: (params: ParameterListFixedUpdate) => void\n  draw?: (params: ParameterListCanvas) => void\n  update?: (params: ParameterList) => void\n  reset?: (params: ParameterListWithoutTime, layerManager: LayerManager| ISpriteFunctionOrSprite[][]) => LayerManager | ISpriteFunctionOrSprite[][]\n  preventDefault?: OrFunction<boolean>,\n  events?: OrFunction<EventsReturn, [ParameterListInitDestroy]>\n  initSprites?: (params: ParameterListCanvas) => void\n  doubleClickElement?: (params: ParameterListClickElement) => void\n  clickElement?: (params: ParameterListClickElement) => void\n  hoverElement?: (params: ParameterListClickElement) => void\n  doubleClickNonElement?: (params: ParameterListClickNonElement) => void\n  clickNonElement?: (params: ParameterListClickNonElement) => void\n  hoverNonElement?: (params: ParameterListClickNonElement) => void\n  mouseDown?: (params: ParameterListPositionEvent) => void\n  mouseUp?: (params: ParameterListPositionEvent) => void\n  mouseOut?: (params: ParameterListPositionEvent) => void\n  mouseMove?: (params: ParameterListPositionEvent) => void\n  mouseWheel?: (params: ParameterListPositionEvent) => void\n  doubleClick?: (params: ParameterListPositionEvent) => void\n  click?: (params: ParameterListPositionEvent) => void\n}\n\nexport interface ConfigurationConstructor {\n  new (options?: Record<string, any>): ConfigurationObject\n}\n\nexport type ConfigurationClassOrObject = ConfigurationObject | ConfigurationConstructor\n\ntype MiddlewareCommandList<T = ConfigurationObject> = {\n  _all: T[],\n  init: T[],\n  isDrawFrame: T[],\n  initSprites: T[],\n  fixedUpdate: T[],\n  update: T[],\n  draw: T[],\n  destroy: T[],\n  reset: T[],\n  resize: T[],\n  currentTime: T[],\n  clampTime: T[],\n  shiftTime: T[],\n  isChunked: T[],\n  hasOneChunkedFrame: T[],\n  calcFrames: T[],\n  tickChunk: T[],\n  additionalModifier: T[],\n} & Record<addPrefix<string, 't_'>, T[]>\n\ntype FullParameterList = ParameterListWithoutTime & Record<string, any>\n\nexport interface AdditionalModifier {\n  alpha: number\n  x: number\n  y: number\n  width: number\n  height: number\n  widthInPixel: number\n  heightInPixel: number\n  scaleCanvas: number\n  visibleScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  fullScreen: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  cam?: CameraPosition\n  radius?: number\n}\n\nconst defaultMiddlewareCommandList = ()=>({\n  _all: [],\n  init: [],\n  isDrawFrame: [],\n  initSprites: [],\n  fixedUpdate: [],\n  update: [],\n  draw: [],\n  destroy: [],\n  reset: [],\n  resize: [],\n  currentTime: [],\n  clampTime: [],\n  shiftTime: [],\n  isChunked: [],\n  hasOneChunkedFrame: [],\n  calcFrames: [],\n  tickChunk: [],\n  additionalModifier: [],\n})\n\n\n\nclass Scene {\n  _layerManager: LayerManager\n  _imageManager: typeof ImageManager\n  _totalTimePassed: number\n  _engine: Engine | undefined\n  _middleware: MiddlewareCommandList<ConfigurationObject> = defaultMiddlewareCommandList()\n  _stopPropagation: boolean = false\n  _transform: Transform | undefined\n  _transformInvert: Transform | undefined\n  _additionalModifier: AdditionalModifier | undefined\n  _initDone: boolean = false\n  _endTime: number | undefined\n  _resetIntend: boolean = false\n\n  constructor(...configurationClassOrObjects: ConfigurationClassOrObject[]) {\n    // Layer consists of Sprites\n    this._layerManager = new LayerManager();\n    this._totalTimePassed = 0;\n    this._imageManager = ImageManager;\n\n    this.middlewares = configurationClassOrObjects;\n    if (!this.middlewareByType(\"timing\")) {\n      this.middlewares = [TimingDefault as ConfigurationConstructor, ...this.middlewares as ConfigurationObject[]];\n    }\n  }\n\n  _output() {\n    return this._engine?.getOutput();\n  }\n\n  set middlewares(middlewares: ConfigurationClassOrObject | ConfigurationClassOrObject[]) {\n    this._middleware = (toArray(middlewares)\n      .map((configurationClassOrObject) =>\n        typeof configurationClassOrObject === \"function\"\n          ? new (configurationClassOrObject as ConfigurationConstructor)()\n          : configurationClassOrObject\n      ) as ConfigurationObject[])\n      .reduce(\n        (middlewareCommandList: MiddlewareCommandList<ConfigurationObject>, c: ConfigurationObject) => {\n          for (let command of Object.keys(middlewareCommandList)) {\n            if (command in c) {\n              middlewareCommandList[command as keyof MiddlewareCommandList<ConfigurationObject>].push(c);\n            }\n          }\n          middlewareCommandList._all.push(c);\n          if (!(\"enabled\" in c)) c.enabled = true;\n          if (c.type) middlewareCommandList[`t_${c.type}`] = [c];\n          return middlewareCommandList;\n        },\n        defaultMiddlewareCommandList()\n      );\n  }\n  get middlewares() {\n    return this._middleware._all;\n  }\n\n  middlewareByType(type: string) {\n    const objs = this._middleware._all.filter((c) => c.type === type);\n    if (objs.length) {\n      return objs[objs.length - 1];\n    }\n  }\n\n  has(command: string) {\n    return (\n      command in this._middleware ||\n      this._middleware._all.some((c) => command in c)\n    );\n  }\n\n  do<\n    K extends string,\n    D = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>,\n    R = D | undefined\n  >(\n    command: K,\n    params: P,\n    defaultValue: D | undefined,\n    func: (ConfigurationObjects: ConfigurationObject[], params: P, defaultValue: D | undefined) => R\n  ) {\n    let objs =\n      this._middleware[command as keyof MiddlewareCommandList] ||\n      this._middleware._all.filter((c) => command in c);\n    objs = objs.filter((v: ConfigurationObject) => v.enabled);\n    if (!objs.length) {\n      return defaultValue;\n    }\n    const fullParams = this._param(params);\n    return func(objs, fullParams, defaultValue);\n  }\n\n  map<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P\n  ) {\n    return this.do<K, R[], P, R[]>(command, params, [], (objs, fullParams) => {\n      return objs.map((c: ConfigurationObject) => c[command](fullParams))\n    }\n    ) as R[];\n  }\n\n  pipe<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeBack<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R>(command, params, pipe, (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let i = objs.length - 1; i >= 0; i--) {\n        const c = objs[i];\n        res = c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  pipeMax<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, number | number[], P>(command, params, Array.isArray(pipe) ? pipe.map(p => p - 0) : pipe as unknown as number - 0, (objs, fullParams, pipe) => {\n      let res = pipe;\n      this._stopPropagation = false;\n\n      if (Array.isArray(res)) {\n        // res is number\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = (res as unknown as number[]).map((v, i) => Math.max(v, (newRes as number[])[i]));\n          } else {\n            res = res.map((v, i) => Math.max(v, newRes as number));\n          }\n          if (this._stopPropagation) break;\n        }\n      } else {\n        for (let c of objs) {\n          let newRes = c[command](fullParams, res) as number | number[];\n          if (Array.isArray(newRes)) {\n            res = newRes.map((v) => Math.max(v, res as number));\n          } else {\n            res = Math.max(newRes, res as number);\n          }\n          if (this._stopPropagation) break;\n        }\n      }\n      return res;\n    });\n  }\n\n  async pipeAsync<\n    K extends string,\n    R = ReturnType<ConfigurationObject[K]>,\n    P = Omit<Parameters<ConfigurationObject[K]>[0],\n      keyof ParameterList>\n  >(\n    command: K,\n    params: P,\n    pipe: R | undefined = undefined\n  ) {\n    return this.do<K, R, P, Promise<R | undefined>>(command, params, pipe, async (objs, fullParams) => {\n      let res = pipe;\n      this._stopPropagation = false;\n      for (let c of objs) {\n        res = await c[command](fullParams, res);\n        if (this._stopPropagation) break;\n      }\n      return res;\n    });\n  }\n\n  value<\n    K extends string,\n    R = ConfigurationObject[K],\n    P = Omit<Parameters<ConfigurationObject[K]>[0], keyof ParameterListWithoutTime>\n  >(\n    command: K,\n    params: P | undefined = undefined\n  ):WithoutFunction<R>|undefined {\n    let objs: ConfigurationObject[] =\n      this._middleware[command as keyof MiddlewareCommandList<ConfigurationObject>] ||\n      this._middleware._all.filter((c: ConfigurationObject) => command in c);\n    objs.filter((v) => v.enabled);\n    if (!objs.length) {\n      return undefined;\n    }\n    const obj = objs[objs.length - 1];\n    return typeof (obj[command]) === 'function' ? obj[command].call(obj, this._param(params || {})) : obj[command]\n  }\n\n  stopPropagation() {\n    this._stopPropagation = true;\n  }\n\n  currentTime() {\n    return this.pipe(\"currentTime\", {})!;\n  }\n\n  clampTime(timePassed: number) {\n    return this.pipe(\"clampTime\", { timePassed })!;\n  }\n\n  shiftTime(timePassed: number) {\n    return this.pipe(\"shiftTime\", { timePassed })!;\n  }\n\n  cacheClear() {\n    this._transform = undefined;\n    this._transformInvert = undefined;\n  }\n\n  viewport() {\n    if (!this._engine) return new Transform();\n\n    if (!this._transform) {\n      this._transform = this.pipe(\"viewport\", {}, new Transform());\n      this._transformInvert = undefined;\n    }\n    return this._transform!;\n  }\n\n  transformPoint(x: number, y: number, scale = this._additionalModifier!.scaleCanvas) {\n    if (!this._transformInvert) {\n      this._transformInvert = this.viewport().clone().invert();\n    }\n    return this._transformInvert.transformPoint(x * scale, y * scale);\n  }\n\n  callInit(parameter: any, engine: Engine) {\n    this._engine = engine;\n    this.resize();\n    const images = this.value(\"images\");\n    if (images) {\n      this._imageManager.add(images);\n    }  \n    Promise.all(\n      this.map(\"init\", {\n        parameter,\n      })\n    ).then((res) => {\n      this._initDone = true\n    });\n    \n  }\n\n  get additionalModifier() {\n    return this._additionalModifier!;\n  }\n\n  updateAdditionalModifier() {\n    const output = this._output()!;\n    this._additionalModifier = this.pipe(\n      \"additionalModifier\",\n      {},\n      {\n        alpha: 1,\n        x: 0,\n        y: 0,\n        width: output.width,\n        height: output.height,\n        widthInPixel: output.width,\n        heightInPixel: output.height,\n        scaleCanvas: 1,\n        visibleScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n        fullScreen: {\n          x: 0,\n          y: 0,\n          width: output.width,\n          height: output.height,\n        },\n      }\n    );\n  }\n\n  resize() {\n    const output = this._output()!;\n    this.updateAdditionalModifier();\n    this.pipe(\"resize\", {});\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).resize(output, this._additionalModifier!);\n      }\n    });\n  }\n\n  async destroy() {\n    const parameter = await this.pipeAsync(\"destroy\", {});\n    this._initDone = false;\n    return parameter;\n  }\n\n  get timing() {\n    return this._middleware.t_timing[0] as TimingDefault|TimingAudio;\n  }\n\n  get camera() {\n    return this._middleware.t_camera[0] as Camera;\n  }\n\n  get control() {\n    return this._middleware.t_control[0] as CameraControl;\n  }\n\n  get totalTimePassed() {\n    return this._totalTimePassed;\n  }\n\n  _param<K extends Record<string, any>>(additionalParameter: K | undefined = undefined): ParameterListWithoutTime & K {\n    return Object.assign({\n      engine: this._engine!,\n      scene: this,\n      imageManager: this._imageManager,\n      layerManager: this._layerManager,\n      totalTimePassed: this._totalTimePassed,\n      output: this._output()!,\n    }, additionalParameter);\n  }\n\n  callLoading(args: {\n    timePassed: number\n    totalTimePassed: number\n  }) {\n    if (this._imageManager.isLoaded() && this._initDone) {\n      this._endTime = this.value(\"endTime\");\n      const progress = \"Click to play\";\n      this.value(\"loading\", {\n        ...args,\n        progress\n      });\n      return true;\n    }\n    const progress = this._imageManager.count\n      ? this._imageManager.loaded / this._imageManager.count\n      : \"Loading...\";\n\n    this.value(\"loading\", {\n      ...args,\n      progress\n    });\n    return false;\n  }\n\n  fixedUpdate(timePassed: number, lastCall: boolean) {\n    this.map(\"fixedUpdate\", {\n      timePassed,\n      lastCall,\n    });\n  }\n\n  isDrawFrame(timePassed: number) {\n    return this.pipeMax(\"isDrawFrame\", { timePassed }, timePassed !== 0)!;\n  }\n\n  move(timePassed:number) {\n    // calc total time\n    this._totalTimePassed += timePassed;\n\n    if (this._resetIntend) {\n      this.reset();\n      // Jump back?\n    } else if (timePassed < 0) {\n      // Back to the beginning\n      timePassed = this._totalTimePassed;\n      this.reset();\n      this.initSprites();\n      this._totalTimePassed = timePassed;\n    } else if (this._endTime && this._endTime <= this._totalTimePassed) {\n      // set timepassed to match endtime\n      timePassed -= this._totalTimePassed - this._endTime;\n      this._totalTimePassed = this._endTime;\n      // End Engine\n      this.map(\"end\", { timePassed });\n    }\n    if (this.value(\"isChunked\")) {\n      if (this.value(\"hasOneChunkedFrame\", { timePassed })) {\n        // how many frames should be skipped. Maximum is a skip of 2 frames\n        const frames = this.value(\"calcFrames\", { timePassed })! - 1;\n        for (let calcFrame = 0; calcFrame <= frames; calcFrame++) {\n          this.fixedUpdate(this.value(\"tickChunk\", {})!, calcFrame === frames);\n        }\n      }\n    } else {\n      this.fixedUpdate(timePassed, true);\n    }\n\n    this.map(\"update\", { timePassed });\n\n    this._layerManager.forEach(({ element, isFunction, layer, elementId }) => {\n      if (!isFunction) {\n        if ((element as ISprite).animate(timePassed)) {\n          layer.deleteById(elementId);\n        }\n      }\n    });\n  }\n\n  draw(canvasId:number) {\n    this.map(\"draw\", { canvasId });\n    const context = this._output()!.context[canvasId]!;\n    context.save();\n\n    context.setTransform(...this.viewport().m);\n\n    this._layerManager.forEach(\n      ({ layer, layerId, element, isFunction, elementId }) => {\n        if (isFunction) {\n          if (\n            (element as ISpriteFunction)(\n              this._param({\n                layerId,\n                elementId,\n                layer,\n                context,\n              })\n            )\n          ) {\n            layer.deleteById(elementId);\n          }\n        } else {\n          (element as ISprite).draw(context, this._additionalModifier!);\n        }\n      },\n      canvasId\n    );\n\n    context.restore();\n  }\n\n  initSprites(canvasId: number|undefined = undefined) {\n    const context = this._output()!.context[canvasId || 0]!;\n    this._layerManager.forEach(({ element, isFunction }) => {\n      if (!isFunction) {\n        (element as ISprite).callInit(context, this._additionalModifier!);\n      }\n    }, canvasId);\n    this.map(\"initSprites\", { canvasId });\n  }\n\n  resetIntend() {\n    this._resetIntend = true;\n  }\n\n  reset() {\n    this._totalTimePassed = 0;\n    this._resetIntend = false;\n    let result = this.pipe<\"reset\",LayerManager | ISpriteFunctionOrSprite[][], {}>(\n      \"reset\",\n      {},\n      new LayerManager()\n    );\n\n    if (Array.isArray(result)) {\n      const layers = result;\n      result = new LayerManager();\n      layers.forEach((v) => {\n        (result as LayerManager).addLayer().addElements(v);\n      });\n    }\n\n    if (result) {\n      this._layerManager = result;\n    }\n  }\n}\n\nexport default Scene;\n","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class Wait implements IAnimation{\n  _duration:number\n  constructor(duration:OrFunction<number>) {\n    this._duration = calc(duration) - 0;\n  }\n\n  run(sprite: ISprite, time: number) {\n    // return time left\n    return time - this._duration;\n  }\n}\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Wait from \"./Wait\";\n\nexport enum SequenceRunCommand {\n  FORCE_DISABLE = \"F\",\n  STOP = \"S\",\n  REMOVE = \"R\"\n}\n\nexport type TWaitTime = number;\nexport type TLabel = string;\nexport type TAnimationFunction = IAnimation['run'];\nexport type TAnimationSequence = (TWaitTime | TLabel | TAnimationFunction | IAnimation)[]\nexport type AnimationSequenceOptions = TAnimationSequence | TAnimationSequence[]\n\ninterface ISequence {\n  position: number\n  timelapsed: number\n  sequence: IAnimation[]\n  label: Record<string, number>\n  enabled: boolean\n}\n\nclass Sequence implements IAnimation {\n  sequences: ISequence[] = []\n  lastTimestamp: number = 0\n  enabled: boolean = true\n\n  constructor(...sequences: AnimationSequenceOptions) {\n    let timeWait = 0;\n    if (typeof sequences[0] === \"number\") {\n      timeWait = sequences.shift() as number;\n    }\n\n    // init position-array\n    this.sequences = sequences.map(sequence => {\n      if (!Array.isArray(sequence)) {\n        sequence = [sequence];\n      }\n      let thisTimeWait: number = timeWait;\n      if (typeof sequence[0] === \"number\") {\n        thisTimeWait = sequence.shift() as number;\n      }\n\n      return {\n        position: 0,\n        timelapsed: -thisTimeWait,\n        sequence: sequence\n          .map(command =>\n            typeof (command as IAnimation).run !== \"function\"\n              ? typeof command === \"number\"\n                ? new Wait(command)\n                : { run: command } as IAnimation\n              : command as IAnimation\n          )\n          .filter(command => typeof (command as IAnimation).run === \"function\"),\n        label: sequence.reduce((arr: Record<string, number>, command, index) => {\n          if (typeof command === \"string\") {\n            arr[command] = index - Object.keys(arr).length;\n          }\n          return arr;\n        }, {}),\n        enabled: true\n      };\n    });\n  }\n\n  reset(timelapsed: number = 0) {\n    this.sequences.forEach(sequencePosition => {\n      sequencePosition.enabled = true;\n      sequencePosition.position = 0;\n      sequencePosition.timelapsed = timelapsed;\n      sequencePosition.sequence[0]?.reset?.(timelapsed);\n    });\n    this.enabled = true;\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (label) {\n      const b = this.sequences.reduce((b, sequencePosition) => {\n        if (label in sequencePosition.label) {\n          b = true;\n          sequencePosition.position = sequencePosition.label[label];\n          sequencePosition.enabled = true;\n          sequencePosition.timelapsed = timelapsed;\n          sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        } else {\n          b = b || (sequencePosition.sequence.some(seq => seq.play?.(label, timelapsed)));\n        }\n        return b;\n      }, false);\n      if (b) {\n        this.enabled = true;\n      }\n      return b;\n    } else {\n      this.sequences.forEach(\n        sequencePosition => (sequencePosition.enabled = true)\n      );\n      this.enabled = true;\n      return true;\n    }\n  }\n\n  _runSequence(sprite: ISprite, sequencePosition: ISequence, timePassed: number) {\n    let timeLeft: number = timePassed;\n    while (\n      sequencePosition.sequence[sequencePosition.position] &&\n      timeLeft >= 0\n    ) {\n      sequencePosition.timelapsed += timeLeft;\n      if (sequencePosition.timelapsed < 0) {\n        return -1;\n      }\n\n      const res = sequencePosition.sequence[sequencePosition.position].run(\n        sprite,\n        sequencePosition.timelapsed\n      );\n\n      if (res === true) {\n        timeLeft = 0;\n      } else if (res === false) {\n        return -1;\n      } else if (res === SequenceRunCommand.FORCE_DISABLE) {\n        sequencePosition.enabled = false;\n        this.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.STOP) {\n        sequencePosition.enabled = false;\n        return timePassed;\n      } else if (res === SequenceRunCommand.REMOVE) {\n        return true;\n      }\n\n      timeLeft = res as number;\n      if (timeLeft >= 0) {\n        // next animation\n        sequencePosition.position =\n          (sequencePosition.position + 1) % sequencePosition.sequence.length;\n        sequencePosition.sequence[sequencePosition.position]?.reset?.();\n        sequencePosition.timelapsed = 0;\n\n        // loop animation?\n        if (sequencePosition.position === 0) {\n          sequencePosition.enabled = false;\n          return timeLeft;\n        }\n      }\n    }\n    return timeLeft;\n  }\n\n  // call other animations\n  run(sprite: ISprite, time:number, is_difference:boolean=false) {\n    // Calculate timedifference\n    let timePassed = time;\n    if (!is_difference) {\n      timePassed = time - this.lastTimestamp;\n      this.lastTimestamp = time;\n    }\n    if (!this.enabled) {\n      return timePassed;\n    }\n    const length = this.sequences.length;\n    let disableVote = 0;\n    let restTime = Infinity;\n    for (let i = 0; i < length; i++) {\n      if (this.sequences[i].enabled) {\n        const timeLeft = this._runSequence(\n          sprite,\n          this.sequences[i],\n          timePassed\n        );\n        if (timeLeft === true) {\n          return true;\n        }\n        restTime = Math.min(restTime, timeLeft);\n      } else {\n        disableVote++;\n      }\n    }\n    if (disableVote === length) {\n      this.enabled = false;\n      return timePassed;\n    }\n    return restTime;\n  }\n}\nexport default Sequence;\n","import type { OutputInfo } from \"../Engine\"\nimport type { AdditionalModifier, ParameterListWithoutTime } from \"../Scene\"\nimport type { OrFunction, OrPromise } from \"../helper\";\nimport type Layer from \"../Layer\";\nimport Sequence, { TAnimationSequence } from \"../Animations/Sequence\";\nimport { IAnimation } from \"../Animations/Animation\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\n\nexport type TTagParameter = string | string[] | ((value: string, index: number, array: string[]) => unknown)\nexport interface ISprite {\n    p: SpriteBaseOptionsInternal & Record<string, any>\n    changeToPathInit?: (from: number[][][] | string, to: number[][][] | string) => [number[][][], number[][][]]\n    changeToPath?: (progress: number, data: {\n        pathFrom: number[][][]\n        pathTo: number[][][]\n    }) => number[][][]\n    getElementsByTag: (tag: TTagParameter) => ISprite[]\n    play: (label: string, timelapsed?: number) => void\n    resize: (output: OutputInfo, additionalModifier: AdditionalModifier) => OrPromise<void>\n    callInit: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => OrPromise<void>\n    animate: (timepassed: number) => boolean\n    draw: (context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) => void\n    detect: (context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number) => ISprite | \"c\" | undefined\n    detectDraw: (context: CanvasRenderingContext2D, color: string) => void\n}\n\nexport type ISpriteFunction = (params: ParameterListWithoutTime & {\n    layerId: number\n    elementId: number\n    layer: Layer\n    context: CanvasRenderingContext2D,\n}) => number | boolean\n\nexport type ISpriteFunctionOrSprite = ISpriteFunction | ISprite\n\n\n\nexport interface SpriteBaseOptions {\n    animation?: OrFunction<TAnimationSequence>\n    enabled?: OrFunction<boolean>\n    isClickable?: OrFunction<boolean>\n    tag?: OrFunction<string[] | string>\n}\n\nexport interface SpriteBaseOptionsInternal {\n    animation: IAnimation | undefined\n    enabled: boolean\n    isClickable: boolean\n    tag: string[]\n}\nexport type TParameterList<T, R> = {\n    [P in keyof R & keyof T]?: R[P] | ((value: T[P], givenParameter: T) => R[P]);\n}\n\nexport class SpriteBase<O extends SpriteBaseOptions = SpriteBaseOptions, P extends SpriteBaseOptionsInternal = SpriteBaseOptionsInternal> implements ISprite {\n    _needInit = true\n    p: P\n    constructor(givenParameter: O) {\n        this.p = this._parseParameterList(this._getParameterList(), givenParameter);\n    }\n\n    _parseParameterList(parameterList: TParameterList<O, P>, givenParameter: O): P {\n        const parameterEntries = Object.entries(parameterList as ReturnType<this[\"_getParameterList\"]>)\n        const valueEntries = parameterEntries.map(\n            ([name, d]) => {\n                const givenValue = givenParameter[name as keyof O]\n                return [name,\n                    typeof d === \"function\"\n                        ? d(givenValue, givenParameter)\n                        : ifNull(calc(givenValue), d)\n                ];\n            }\n        );\n        return Object.fromEntries(valueEntries)\n    }\n\n    _getBaseParameterList() {\n        return {\n            // animation\n            animation: (value: SpriteBaseOptions['animation'], givenParameter: O) => {\n                const result = calc(value);\n                return Array.isArray(result) ? new Sequence(result) : result;\n            },\n            // if it's rendering or not\n            enabled: true,\n            // if you can click it or not\n            isClickable: false,\n            // tags to mark the sprites\n            tag: (value: SpriteBaseOptions['tag'], givenParameter: O) => {\n                const v: string | string[] | undefined = calc(value)\n                return Array.isArray(v) ? v : v ? [v] : [];\n            }\n        }\n    }\n\n    _getParameterList():TParameterList<O,P> {\n        return this._getBaseParameterList() as TParameterList<O, P>\n    }\n\n    getElementsByTag(tag: TTagParameter):ISprite[] {\n        if (typeof tag === \"function\") {\n            if (this.p.tag.filter(tag).length) {\n                return [this];\n            }\n        } else {\n            const aTag = Array.isArray(tag) ? tag : [tag];\n            if (aTag.filter(tag => this.p.tag.includes(tag)).length) {\n                return [this];\n            }\n        }\n        return [];\n    }\n\n\n    // Animation-Funktion\n    animate(timepassed: number) {\n        if (this.p.animation) {\n            // run animation\n            if (this.p.animation.run(this, timepassed, true) === true) {\n                // disable\n                this.p.enabled = false;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    play(label = \"\", timelapsed = 0) {\n        if (this.p.animation) {\n            this.p.animation.play?.(label, timelapsed);\n        }\n    }\n\n    init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n    callInit(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier):OrPromise<void> {\n        if (this._needInit) {\n            this.init(context, additionalModifier);\n            this._needInit = false;\n        }\n    }\n\n\n    resize(output: OutputInfo, additionalModifier: AdditionalModifier):OrPromise<void> { }\n\n    _detectHelperCallback(p: {\n        enabled: boolean\n        isClickable: boolean\n        x: number\n        y: number\n        scaleX: number\n        scaleY: number\n        rotation: number\n    }, context: CanvasRenderingContext2D, x: number, y: number, callback: () => boolean) {\n        let a = false;\n        if (p.enabled && p.isClickable) {\n            context.save();\n            context.translate(p.x, p.y);\n            context.scale(p.scaleX, p.scaleY);\n            context.rotate(p.rotation);\n            context.beginPath();\n            a = callback();\n            context.restore();\n        }\n        return a ? this as ISprite : undefined;\n    }\n\n    _detectHelper({\n        enabled,\n        isClickable,\n        x = 0,\n        y = 0,\n        width = 0,\n        height = 0,\n        scaleX = 1,\n        scaleY = 1,\n        rotation = 0\n    }: {\n        enabled: boolean\n        isClickable: boolean\n        x?: number\n        y?: number\n        width?: number\n        height?: number\n        scaleX?: number\n        scaleY?: number\n        rotation?: number\n    }, context: CanvasRenderingContext2D, coordinateX: number, coordinateY: number, moveToCenter: boolean, callback?: (hw: number, hh: number) => boolean) {\n        let a = false;\n        if (enabled && isClickable) {\n            const hw = width / 2;\n            const hh = height / 2;\n            context.save();\n            if (moveToCenter) {\n                context.translate(x + hw, y + hh);\n            } else {\n                context.translate(x, y);\n            }\n            context.scale(scaleX, scaleY);\n            context.rotate(rotation);\n            context.beginPath();\n            if (callback) {\n                a = callback(hw, hh);\n            } else {\n                context.rect(-hw, -hh, width, height);\n                context.closePath();\n                a = context.isPointInPath(coordinateX, coordinateY);\n            }\n            context.restore();\n        }\n        return a ? this as ISprite: undefined;\n    }\n\n    detectDraw(context: CanvasRenderingContext2D, color: string) { }\n\n    detect(context: CanvasRenderingContext2D, x: number, y: number):ISprite | \"c\" | undefined { return undefined }\n\n    draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) { }\n\n}","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TParameterList } from \"./Sprite\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\nconst degToRad = Math.PI / 180;\n\n\nexport interface SpriteCircleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\nexport interface SpriteCircleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string\n}\n\nexport const CircleParameterList = {\n  // position\n  x: 0 as number,\n  y: 0 as number,\n  // rotation\n  rotation: (value: SpriteCircleOptions['rotation'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(\n      calc(value),\n      ifNull(\n        calc(givenParameter.rotationInRadian),\n        ifNull(calc(givenParameter.rotationInDegree), 0) * degToRad\n      )\n    ) as number\n  },\n  // scalling\n  scaleX: (value: SpriteCircleOptions['scaleX'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  scaleY: (value: SpriteCircleOptions['scaleY'], givenParameter: SpriteCircleOptions) => {\n    return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n  },\n  // alpha\n  alpha: 1,\n  // blending\n  compositeOperation: \"source-over\",\n  // color\n  color: \"#fff\"\n}\n\n// Sprite\n// Draw a Circle\nexport default class Circle extends SpriteBase<SpriteCircleOptions, SpriteCircleOptionsInternal> implements ISprite {\n  constructor(givenParameter: SpriteCircleOptions) {\n    super(givenParameter)\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList) as TParameterList<SpriteCircleOptions, SpriteCircleOptionsInternal>\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelperCallback(this.p, context, x, y, () => {\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      return context.isPointInPath(x, y);\n    });\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.beginPath();\n      context.fillStyle = this.p.color;\n      context.arc(\n        0,\n        0,\n        1,\n        Math.PI / 2 + this.p.rotation,\n        Math.PI * 2.5 - this.p.rotation,\n        false\n      );\n      context.fill();\n      context.restore();\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine.js\"\nimport { OrFunction } from \"../helper.js\"\nimport { AdditionalModifier } from \"../Scene.js\"\nimport { CircleParameterList } from \"./Circle.js\"\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal, TTagParameter } from \"./Sprite.js\"\n\nexport interface SpriteGroupOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  rotation?: OrFunction<number>\n  rotationInRadian?: OrFunction<number>\n  rotationInDegree?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  sprite?: OrFunction<ISprite>\n}\n\nexport interface SpriteGroupOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number|undefined\n  y: number|undefined\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  sprite: ISprite[]\n}\n\n\nexport default class Group<O extends SpriteGroupOptions = SpriteGroupOptions, P extends SpriteGroupOptionsInternal = SpriteGroupOptionsInternal> extends SpriteBase<O, P> {\n  constructor(givenParameter:O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      sprite: []\n    });\n  }\n\n  getElementsByTag(tag: TTagParameter):ISprite[] {\n    let result:ISprite[] = super.getElementsByTag(tag);\n    for (const sprite of this.p.sprite) {\n      const ans = sprite.getElementsByTag(tag);\n      if (ans) {\n        result = result.concat(ans);\n      }\n    }\n    return result;\n  }\n\n  // overwrite change\n  animate(timepassed:number) {\n    // call super\n    let finished = super.animate(timepassed),\n      spriteFinished = false;\n    // animate all sprites\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        spriteFinished = spriteFinished || sprite.animate(timepassed) === true;\n      }\n    }\n\n    if (this.p.animation) {\n      return finished;\n    } else {\n      if (spriteFinished) {\n        this.p.enabled = false;\n      }\n      return spriteFinished;\n    }\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    if (this.p.animation) {\n      this.p.animation.play?.(label, timelapsed);\n    }\n    for (const sprite of this.p.sprite) {\n      sprite.play?.(label, timelapsed);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    for (const sprite of this.p.sprite) {\n      sprite.resize(output, additionalModifier);\n    }\n  }\n\n  callInit(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    super.callInit(context, additionalModifier);\n    for (let sprite of this.p.sprite) {\n      sprite.callInit(context, additionalModifier);\n    }\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        sprite.detectDraw(context, color);\n      }\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    if (this.p.enabled) {\n      for (const sprite of this.p.sprite) {\n        const a = sprite.detect(context, x, y);\n        if (a) return a;\n      }\n    }\n    return undefined;\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      if (this.p.alpha < 1) {\n        additionalModifier = Object.assign({}, additionalModifier);\n        additionalModifier.alpha *= this.p.alpha;\n      }\n\n      context.save();\n      context.translate(this.p.x!, this.p.y!);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      // draw all sprites\n      for (const sprite of this.p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport Group, { SpriteGroupOptions } from \"./Group.js\";\nimport { SpriteBaseOptions, ISprite } from \"./Sprite\";\n\nexport interface SpriteEmitterOptions<P extends SpriteBaseOptions = SpriteBaseOptions & Record<string, any>> {\n  count?: number\n  class: { new(options: P): ISprite }\n  self?: SpriteGroupOptions\n}\n\nexport default class Emitter<P> extends Group {\n  constructor(givenParameter: SpriteEmitterOptions<P>) {\n    super(givenParameter.self || {});\n\n    let count = ifNull(calc(givenParameter.count), 1);\n    this.p.sprite = [];\n    const classToEmit = givenParameter.class;\n\n    for (let i = 0; i < count; i++) {\n      const parameter: P = Object.entries(givenParameter).reduce<P>((p, [index, value]) => {\n        if ([\"self\", \"class\", \"count\"].includes(index)) {\n          return p;\n        }\n        // @ts-ignore\n        p[index] = calc(value, i)\n        return p\n      }, {} as P)\n      this.p.sprite[i] = new classToEmit(parameter);\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport type { OutputInfo } from \"../Engine\";\n\nexport interface SpriteFastBlurOptions extends SpriteBaseOptions {\n  x?: OrFunction<undefined | number>\n  y?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  scaleX?: OrFunction<undefined | number>\n  scaleY?: OrFunction<undefined | number>\n  scale?: OrFunction<undefined | number>\n  alpha?: OrFunction<undefined | number>\n  gridSize?: OrFunction<undefined | number>\n  darker?: OrFunction<undefined | number>\n  pixel?: OrFunction<undefined | boolean>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n  compositeOperation?: OrFunction<undefined | GlobalCompositeOperation>\n}\n\nexport interface SpriteFastBlurOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  scaleX?: number\n  scaleY?: number\n  gridSize: undefined | number\n  darker: number\n  pixel: boolean\n  clear: boolean\n  norm: boolean\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n}\n\nexport default class FastBlur<O extends SpriteFastBlurOptions = SpriteFastBlurOptions, P extends SpriteFastBlurOptionsInternal = SpriteFastBlurOptionsInternal> extends SpriteBase<O,P> {\n  _temp_canvas: HTMLCanvasElement | undefined;\n  _currentGridSize: number | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: O) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      gridSize: undefined,\n      darker: 0,\n      pixel: false,\n      clear: false,\n      norm: (value: SpriteFastBlurOptions['norm'], givenParameter: SpriteFastBlurOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // scalling\n      scaleX: (value: SpriteFastBlurOptions['scaleX'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteFastBlurOptions['scaleY'], givenParameter: SpriteFastBlurOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      // alpha\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    });\n  }\n\n  _generateTempCanvas(additionalModifier: AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p;\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.ceil(w / p.scaleX!);\n      this._temp_canvas.height = Math.ceil(h / p.scaleY!);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    this._tctx.globalCompositeOperation = \"source-over\";\n    this._tctx.globalAlpha = 1;\n  }\n\n  normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  resize(output: OutputInfo | undefined, additionalModifier: AdditionalModifier) {\n    if (this._temp_canvas && this._currentGridSize !== this.p.gridSize) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n    }\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this.normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this.resize(undefined, additionalModifier);\n      }\n\n      const a = p.alpha * additionalModifier.alpha,\n        w = p.width!,\n        h = p.height!,\n        targetW = this._temp_canvas!.width,\n        targetH = this._temp_canvas!.height;\n\n      if (a > 0 && targetW && targetH) {\n        this._tctx!.globalCompositeOperation = \"copy\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.drawImage(\n          context.canvas,\n          0,\n          0,\n          context.canvas.width,\n          context.canvas.height,\n          0,\n          0,\n          targetW,\n          targetH\n        );\n\n        if (p.darker > 0) {\n          this._tctx!.globalCompositeOperation = p.clear\n            ? \"source-atop\"\n            : \"source-over\"; // \"source-atop\"; source-atop works with transparent background but source-over is much faster\n          this._tctx!.fillStyle = \"rgba(0,0,0,\" + p.darker + \")\";\n          this._tctx!.fillRect(0, 0, targetW, targetH);\n        }\n\n        // @ts-ignore\n        this.additionalBlur?.(targetW, targetH, additionalModifier);\n\n        // optional: clear screen\n        if (p.clear) {\n          context.globalCompositeOperation = \"source-over\";\n          context.globalAlpha = 1;\n          context.clearRect(p.x!, p.y!, w, h);\n        }\n        context.globalCompositeOperation = p.compositeOperation;\n        context.globalAlpha = a;\n        const oldValue = context.imageSmoothingEnabled;\n        context.imageSmoothingEnabled = !p.pixel;\n        context.drawImage(\n          this._temp_canvas!,\n          0,\n          0,\n          targetW,\n          targetH,\n          p.x!,\n          p.y!,\n          w,\n          h\n        );\n        context.imageSmoothingEnabled = oldValue;\n      }\n    } else {\n      // optional: clear screen\n      if (p.clear) {\n        if (!p.x) {\n          p.x = additionalModifier.x;\n        }\n        if (!p.y) {\n          p.y = additionalModifier.y;\n        }\n        if (!p.width) {\n          p.width = additionalModifier.width;\n        }\n        if (!p.height) {\n          p.height = additionalModifier.height;\n        }\n        context.clearRect(p.x, p.y, p.width, p.height);\n      }\n    }\n  }\n}\n","export enum Position {\n    LEFT_TOP = 0,\n    CENTER = 1\n}","import calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nexport interface SpriteTextOptions extends SpriteCircleOptions {\n  text?: OrFunction<string|string[]>\n  font?: OrFunction<undefined|string>\n  position?: OrFunction<undefined|Position>\n  borderColor?: OrFunction<undefined|string>\n  lineWidth?:  OrFunction<undefined|number>\n}\n\nexport interface SpriteTextOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  text: string\n  font: string\n  position: Position\n  borderColor: undefined|string\n  color: undefined|string\n  lineWidth: number\n}\n\nexport default class Text extends SpriteBase<SpriteTextOptions, SpriteTextOptionsInternal> implements ISprite {\n  constructor(givenParameters:SpriteTextOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), CircleParameterList, {\n      text: (value:SpriteTextOptions['text']) => {\n        const text = calc(value)\n        return (Array.isArray(text) ? text.join('') : text) || ''\n      },\n      font: '2em monospace',\n      position: Position.CENTER,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1\n    })\n  }\n\n  detectDraw(context:CanvasRenderingContext2D, color:string) {\n    if (this.p.enabled && this.p.isClickable) {\n      context.save();\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.font = this.p.font;\n      context.fillStyle = color;\n      context.fillText(this.p.text, 0, 0);\n      context.restore();\n    }\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number):\"c\" {\n    return \"c\" \n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      context.globalCompositeOperation = this.p.compositeOperation;\n      context.globalAlpha = this.p.alpha * additionalModifier.alpha;\n      context.save();\n      if (!this.p.position) {\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n      }\n      context.translate(this.p.x, this.p.y);\n      context.scale(this.p.scaleX, this.p.scaleY);\n      context.rotate(this.p.rotation);\n      context.font = this.p.font;\n\n      if (this.p.color) {\n        context.fillStyle = this.p.color;\n        context.fillText(this.p.text, 0, 0);\n      }\n\n      if (this.p.borderColor) {\n        context.strokeStyle = this.p.borderColor;\n        context.lineWidth = this.p.lineWidth;\n        context.strokeText(this.p.text, 0, 0);\n      }\n\n      context.restore();\n    }\n  };\n}\n","import { TinyColor } from \"@ctrl/tinycolor\";\nimport { OutputInfo } from \"../Engine.js\";\nimport calc from \"../func/calc.js\";\nimport ifNull from \"../func/ifnull.js\";\nimport type { OrFunction } from \"../helper.js\";\nimport type { AdditionalModifier } from \"../Scene.js\";\nimport { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\n\nconst gradientSize = 64;\nconst gradientResolution = 4;\nconst gradientSizeHalf = gradientSize >> 1;\n\nexport interface SpriteParticleOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  scaleX?: OrFunction<number>\n  scaleY?: OrFunction<number>\n  scale?: OrFunction<number>\n  alpha?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  color?: OrFunction<string>\n}\n\ntype TinyColorRGB = ReturnType<TinyColor['toRgb']>\n\nexport interface SpriteParticleOptionsInternal extends SpriteBaseOptionsInternal {\n  x: number\n  y: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  color: string | TinyColorRGB\n}\n\nclass Particle extends SpriteBase<SpriteParticleOptions, SpriteParticleOptionsInternal> {\n  _currentScaleX: number | undefined;\n  _currentPixelSmoothing: boolean = false;\n  static _Gradient: HTMLCanvasElement[][][]\n\n  constructor(givenParameter: SpriteParticleOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      x: 0,\n      y: 0,\n      // scalling\n      scaleX: (value: SpriteParticleOptions['scaleX'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      scaleY: (value: SpriteParticleOptions['scaleY'], givenParameter: SpriteParticleOptions) => {\n        return ifNull(calc(value), ifNull(calc(givenParameter.scale), 1));\n      },\n      color: '#FFF',\n      alpha: 1,\n      compositeOperation: \"source-over\",\n    })\n  }\n\n  static getGradientImage(r: number, g: number, b: number) {\n    let rIndex,\n      gIndex,\n      cr = r >> gradientResolution,\n      cg = g >> gradientResolution,\n      cb = b >> gradientResolution;\n\n    if (!Particle._Gradient) {\n      const length = 256 >> gradientResolution;\n      Particle._Gradient = Array.from({ length }, (a) =>\n        Array.from({ length }, (a) => Array.from({ length }))\n      );\n    }\n    if (!Particle._Gradient[cr][cg][cb]) {\n      Particle._Gradient[cr][cg][cb] = Particle.generateGradientImage(\n        cr,\n        cg,\n        cb\n      );\n    }\n    return Particle._Gradient[cr][cg][cb];\n  }\n\n  static generateGradientImage(cr: number, cg: number, cb: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = gradientSize;\n\n    let txtc = canvas.getContext(\"2d\")!;\n    txtc.globalAlpha = 1;\n    txtc.globalCompositeOperation = \"source-over\";\n    txtc.clearRect(0, 0, gradientSize, gradientSize);\n\n    let grad = txtc.createRadialGradient(\n      gradientSizeHalf,\n      gradientSizeHalf,\n      0,\n      gradientSizeHalf,\n      gradientSizeHalf,\n      gradientSizeHalf\n    );\n    grad.addColorStop(\n      0,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",1)\"\n    );\n    grad.addColorStop(\n      0.3,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0.4)\"\n    );\n    grad.addColorStop(\n      1,\n      \"rgba(\" +\n      ((cr << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cg << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",\" +\n      ((cb << gradientResolution) + (1 << gradientResolution) - 1) +\n      \",0)\"\n    );\n\n    txtc.fillStyle = grad;\n    txtc.fillRect(0, 0, gradientSize, gradientSize);\n\n    return canvas;\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._currentScaleX = undefined;\n  }\n\n  // draw-methode\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      // faster than: if (!(this.color instanceof TinyColor && this.color.model === 'rgb')) {\n      if (!p.color || !(p.color as TinyColorRGB).r) {\n        p.color = new TinyColor(p.color).toRgb();\n      }\n      if (this._currentScaleX !== p.scaleX) {\n        this._currentScaleX = p.scaleX;\n        this._currentPixelSmoothing =\n          (p.scaleX * additionalModifier.widthInPixel) /\n          additionalModifier.width >\n          gradientSize;\n      }\n      const { r, g, b } = p.color as TinyColorRGB;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.imageSmoothingEnabled = this._currentPixelSmoothing;\n      context.drawImage(\n        Particle.getGradientImage(r, g, b),\n        0,\n        0,\n        gradientSize,\n        gradientSize,\n        p.x - p.scaleX / 2,\n        p.y - p.scaleY / 2,\n        p.scaleX,\n        p.scaleY\n      );\n      context.imageSmoothingEnabled = true;\n    }\n  }\n}\n\nexport default Particle;\n","import Callback from './Sprites/Callback'\nimport Canvas from './Sprites/Canvas'\nimport Circle from './Sprites/Circle'\nimport Emitter from './Sprites/Emitter'\nimport FastBlur from './Sprites/FastBlur'\nimport Group from './Sprites/Group'\nimport Image from './Sprites/Image'\nimport Text from './Sprites/Text'\nimport Particle from './Sprites/Particle'\nimport Path from './Sprites/Path'\nimport Rect from './Sprites/Rect'\nimport Scroller from './Sprites/Scroller'\nimport StackBlur from './Sprites/StackBlur'\nimport StarField from './Sprites/StarField'\n\nexport default {\n  Callback,\n  Canvas,\n  Circle,\n  Emitter,\n  FastBlur,\n  Group,\n  Image,\n  Text,\n  Particle,\n  Path,\n  Rect,\n  Scroller,\n  StackBlur,\n  StarField\n};\n","import { AdditionalModifier } from \"../Scene.js\";\nimport { ISprite, SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite.js\";\n\n\nexport type SpriteCallback = (context:CanvasRenderingContext2D, timePassed:number, additionalParameter:AdditionalModifier, sprite:ISprite) => void\n\nexport interface SpriteCallbackOptions extends SpriteBaseOptions {\n  callback?: SpriteCallback|undefined\n}\n\nexport interface SpriteCallbackOptionsInternal extends SpriteBaseOptionsInternal {\n  callback: SpriteCallback\n}\n\n\nexport default class Callback extends SpriteBase<SpriteCallbackOptions,SpriteCallbackOptionsInternal> {\n  _timePassed = 0;\n\n  constructor(givenParameter:SpriteCallbackOptions|SpriteCallbackOptions['callback']) {\n    if (typeof givenParameter === \"function\") {\n      givenParameter = { callback: givenParameter } as SpriteCallbackOptions;\n    }\n    super(givenParameter as SpriteCallbackOptions);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, this._getBaseParameterList(), {\n      callback: (v:SpriteCallbackOptions['callback']) => ((typeof v === undefined ? () => {} : v) as SpriteCallback)\n    });\n  }\n\n  animate(timePassed:number) {\n    if (this.p.enabled) {\n      this._timePassed += timePassed;\n    }\n    return super.animate(timePassed);\n  }\n\n  draw(context:CanvasRenderingContext2D, additionalParameter:AdditionalModifier) {\n    if (this.p.enabled) {\n      this.p.callback(context, this._timePassed, additionalParameter, this);\n    }\n  }\n}\n","import { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\nimport Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n\nexport interface SpriteCanvasOptions extends SpriteGroupOptions {\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  canvasWidth?: OrFunction<number>\n  canvasHeight?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  gridSize?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  isDrawFrame?: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport interface SpriteCanvasOptionsInternal extends SpriteGroupOptionsInternal {\n  width: number|undefined\n  height: number|undefined\n  canvasWidth: number|undefined\n  canvasHeight: number|undefined\n  compositeOperation: GlobalCompositeOperation\n  gridSize: number|undefined\n  norm: boolean\n  isDrawFrame: OrFunction<number,[undefined|CanvasRenderingContext2D, undefined|AdditionalModifier]>\n}\n\nexport default class Canvas extends Group<SpriteCanvasOptions, SpriteCanvasOptionsInternal>  {\n  _currentGridSize:number|undefined;\n  _drawFrame:number = 2;\n  _temp_canvas: undefined|HTMLCanvasElement\n  _tctx: undefined|CanvasRenderingContext2D\n  \n  constructor(givenParameter:SpriteCanvasOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // x,y,width,height without default to enable norm\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      canvasWidth: undefined,\n      canvasHeight: undefined,\n      gridSize: undefined,\n      compositeOperation: \"source-over\",\n      norm: (value: SpriteCanvasOptions[\"norm\"], givenParameter:SpriteCanvasOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      isDrawFrame: (value: SpriteCanvasOptions[\"isDrawFrame\"], givenParameter:SpriteCanvasOptions) => ifNull(value, 1)\n    });\n  }\n\n  _generateTempCanvas(additionalModifier:AdditionalModifier) {\n    const w = additionalModifier.widthInPixel;\n    const h = additionalModifier.heightInPixel;\n    const p = this.p\n    this._temp_canvas = document.createElement(\"canvas\");\n    if (p.canvasWidth && p.canvasHeight) {\n      this._temp_canvas.width = p.canvasWidth;\n      this._temp_canvas.height = p.canvasHeight;\n    } else if (p.gridSize) {\n      this._currentGridSize = p.gridSize;\n      this._temp_canvas.width = Math.round(this._currentGridSize);\n      this._temp_canvas.height = Math.round(this._currentGridSize);\n    } else {\n      this._temp_canvas.width = Math.round(w / p.scaleX);\n      this._temp_canvas.height = Math.round(h / p.scaleY);\n    }\n    this._tctx = this._temp_canvas.getContext(\"2d\")!;\n  }\n\n  _normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm || p.x === undefined) {\n      p.x = additionalModifier.visibleScreen.x;\n    }\n    if (p.norm || p.y === undefined) {\n      p.y = additionalModifier.visibleScreen.y;\n    }\n    if (p.norm || p.width === undefined) {\n      p.width = additionalModifier.visibleScreen.width;\n    }\n    if (p.norm || p.height === undefined) {\n      p.height = additionalModifier.visibleScreen.height;\n    }\n  }\n\n  _copyCanvas(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (\n      this._temp_canvas &&\n      this._currentGridSize !== p.gridSize &&\n      !p.canvasWidth\n    ) {\n      const oldTempCanvas = this._temp_canvas;\n      this._generateTempCanvas(additionalModifier);\n      this._tctx!.globalCompositeOperation = \"copy\";\n      this._tctx!.drawImage(\n        oldTempCanvas,\n        0,\n        0,\n        oldTempCanvas.width,\n        oldTempCanvas.height,\n        0,\n        0,\n        this._temp_canvas.width,\n        this._temp_canvas.height\n      );\n      this._tctx!.globalCompositeOperation = \"source-over\";\n      this._drawFrame = 2;\n    }\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._copyCanvas(additionalModifier);\n    super.resize(output!, additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._generateTempCanvas(additionalModifier);\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (p.gridSize && this._currentGridSize !== p.gridSize) {\n        this._copyCanvas(additionalModifier);\n      }\n      this._drawFrame = Math.max(\n        this._drawFrame - 1,\n        calc(p.isDrawFrame, context, additionalModifier)\n      );\n      const w = p.width!,\n        h = p.height!,\n        wh = w / 2,\n        hh = h / 2,\n        tw = this._temp_canvas!.width,\n        th = this._temp_canvas!.height;\n\n      if (this._drawFrame) {\n        this._tctx!.textBaseline = \"middle\";\n        this._tctx!.textAlign = \"center\";\n        this._tctx!.globalAlpha = 1;\n        this._tctx!.globalCompositeOperation = \"source-over\";\n        this._tctx!.save();\n        // draw all sprites\n        const cam = additionalModifier.cam;\n        if (p.norm && cam) {\n          const scale = Math.max(tw, th) / 2;\n          this._tctx!.translate(tw / 2, th / 2);\n          this._tctx!.scale(scale, scale);\n          this._tctx!.scale(cam.zoom, cam.zoom);\n          this._tctx!.translate(-cam.x, -cam.y);\n        }\n        for (const sprite of p.sprite) {\n          sprite.draw(\n            this._tctx!,\n            p.norm\n              ? Object.assign({}, additionalModifier, {\n                  alpha: 1,\n                  widthInPixel: tw,\n                  heightInPixel: th\n                })\n              : {\n                  alpha: 1,\n                  x: 0,\n                  y: 0,\n                  width: tw,\n                  height: th,\n                  widthInPixel: tw,\n                  heightInPixel: th,\n                  scaleCanvas: 1,\n                  visibleScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                  fullScreen: {\n                    x: 0,\n                    y: 0,\n                    width: tw,\n                    height: th\n                  },\n                }\n          );\n        }\n        this._tctx!.restore();\n      }\n\n      context.save();\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      context.translate(p.x! + wh, p.y! + hh);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(this._temp_canvas!, 0, 0, tw, th, -wh, -hh, w, h);\n      context.restore();\n    }\n  }\n}\n","import type { OutputInfo } from \"../Engine\";\nimport calc from \"../func/calc\";\nimport type { OrFunction } from \"../helper\";\nimport ImageManager from \"../ImageManager\";\nimport { Position } from \"../Position\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { CircleParameterList, SpriteCircleOptions, SpriteCircleOptionsInternal } from \"./Circle\";\nimport { SpriteBase } from \"./Sprite\";\n\nexport interface SpriteImageOptions extends SpriteCircleOptions {\n  image: OrFunction<HTMLImageElement | string>\n  position?: OrFunction<Position>\n  frameX?: OrFunction<number>\n  frameY?: OrFunction<number>\n  frameWidth?: OrFunction<number>\n  frameHeight?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  norm?: OrFunction<boolean>\n  normCover?: OrFunction<boolean>\n  normToScreen?: OrFunction<boolean>\n  clickExact?: OrFunction<boolean>\n  tint?: OrFunction<number>\n}\n\nexport interface SpriteImageOptionsInternal extends SpriteCircleOptionsInternal {\n  image: HTMLImageElement\n  position: Position\n  frameX: number\n  frameY: number\n  frameWidth: number\n  frameHeight: number\n  width: number\n  height: number\n  norm: boolean\n  normCover: boolean\n  normToScreen: boolean\n  clickExact: boolean\n  tint: number\n}\n\n// Sprite\n// Draw a Image\nclass Image extends SpriteBase<SpriteImageOptions, SpriteImageOptionsInternal> {\n  _currentTintKey: string | undefined\n  _normScale: number | undefined\n  _temp_canvas: HTMLCanvasElement | undefined\n  _tctx: CanvasRenderingContext2D | undefined\n\n  constructor(givenParameter: SpriteImageOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      // set image\n      image: (v: OrFunction<HTMLImageElement | string>) => ImageManager.getImage(calc(v)),\n      // relative position\n      position: Position.CENTER,\n      // cutting for sprite stripes\n      frameX: 0,\n      frameY: 0,\n      frameWidth: 0,\n      frameHeight: 0,\n      width: undefined,\n      height: undefined,\n      // autoscale to max\n      norm: false,\n      normCover: false,\n      normToScreen: false,\n      clickExact: false,\n      color: \"#FFF\",\n      tint: 0\n    });\n  }\n\n  resize(output: OutputInfo, additionalModifier: AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    const frameWidth = p.frameWidth || p.image.width;\n    const frameHeight = p.frameHeight || p.image.height;\n\n    this._normScale = p.normToScreen\n      ? p.normCover\n        ? Math.max(\n          additionalModifier.fullScreen.width / frameWidth,\n          additionalModifier.fullScreen.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.fullScreen.width / frameWidth,\n            additionalModifier.fullScreen.height / frameHeight\n          )\n          : 1\n      : p.normCover\n        ? Math.max(\n          additionalModifier.width / frameWidth,\n          additionalModifier.height / frameHeight\n        )\n        : p.norm\n          ? Math.min(\n            additionalModifier.width / frameWidth,\n            additionalModifier.height / frameHeight\n          )\n          : 1;\n  }\n\n  _tintCacheKey() {\n    const frameWidth = this.p.frameWidth || this.p.image.width;\n    const frameHeight = this.p.frameHeight || this.p.image.height;\n    return [\n      this.p.tint,\n      frameWidth,\n      frameHeight,\n      this.p.color,\n      this.p.frameX,\n      this.p.frameY\n    ].join(\";\");\n  }\n\n  _temp_context(frameWidth: number, frameHeight: number): CanvasRenderingContext2D {\n    if (!this._temp_canvas) {\n      this._temp_canvas = document.createElement(\"canvas\");\n      this._tctx = this._temp_canvas.getContext(\"2d\")!;\n    }\n    this._temp_canvas.width = frameWidth;\n    this._temp_canvas.height = frameHeight;\n    return this._tctx!;\n  }\n\n  detectDraw(context: CanvasRenderingContext2D, color: string) {\n    const p = this.p\n    if (p.enabled && p.isClickable && p.clickExact) {\n      const frameWidth = p.frameWidth || p.image.width;\n      const frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) * this._normScale! * p.scaleX;\n      const sY =\n        (p.height ? p.height : frameHeight) *\n        this._normScale! *\n        p.scaleY;\n      const isTopLeft = p.position === Position.LEFT_TOP;\n\n      const tctx = this._temp_context(frameWidth, frameHeight);\n      tctx.globalAlpha = 1;\n      tctx.globalCompositeOperation = \"source-over\";\n      tctx.fillStyle = color;\n      tctx.fillRect(0, 0, frameWidth, frameHeight);\n      tctx.globalCompositeOperation = \"destination-atop\";\n      tctx.drawImage(\n        p.image,\n        p.frameX,\n        p.frameY,\n        frameWidth,\n        frameHeight,\n        0,\n        0,\n        frameWidth,\n        frameHeight\n      );\n\n      context.save();\n      context.translate(p.x, p.y);\n      context.scale(p.scaleX, p.scaleY);\n      context.rotate(p.rotation);\n      context.drawImage(\n        this._temp_canvas!,\n        0,\n        0,\n        frameWidth,\n        frameHeight,\n        isTopLeft ? 0 : -sX / 2,\n        isTopLeft ? 0 : -sY / 2,\n        sX,\n        sY\n      );\n      context.restore();\n      this._currentTintKey = undefined;\n    }\n  }\n\n  detect(context: CanvasRenderingContext2D, x: number, y: number) {\n    if (this.p.enabled && this.p.isClickable && this.p.clickExact) return \"c\";\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.image && p.alpha > 0) {\n      const frameWidth = p.frameWidth || p.image.width,\n        frameHeight = p.frameHeight || p.image.height;\n      const sX =\n        (p.width ? p.width : frameWidth) *\n        this._normScale! *\n        p.scaleX,\n        sY =\n          (p.height ? p.height : frameHeight) *\n          this._normScale! *\n          p.scaleY;\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      const isCenter = p.position !== Position.LEFT_TOP;\n\n      let img: CanvasImageSource = p.image\n      let frameX = p.frameX\n      let frameY = p.frameY\n\n      if (p.tint) {\n        const key = this._tintCacheKey()\n        if (this._currentTintKey !== key) {\n          const tctx = this._temp_context(frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"source-over\";\n          tctx.clearRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = p.tint;\n          tctx.fillStyle = p.color;\n          tctx.fillRect(0, 0, frameWidth, frameHeight);\n          tctx.globalAlpha = 1;\n          tctx.globalCompositeOperation = \"destination-atop\";\n          tctx.drawImage(\n            p.image,\n            p.frameX,\n            p.frameY,\n            frameWidth,\n            frameHeight,\n            0,\n            0,\n            frameWidth,\n            frameHeight\n          );\n          this._currentTintKey = key;\n        }\n        img = this._temp_canvas!\n        frameX = 0\n        frameY = 0\n      }\n\n      let cx = 0\n      let cy = 0\n      if (isCenter) {\n        cx = - sX / 2\n        cy = - sY / 2\n      }\n\n      if (p.rotation == 0) {\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          p.x + cx,\n          p.y + cy,\n          sX,\n          sY\n        );\n      } else {\n        context.save();\n        context.translate(p.x, p.y);\n        context.rotate(p.rotation);\n        context.drawImage(\n          img,\n          frameX,\n          frameY,\n          frameWidth,\n          frameHeight,\n          cx,\n          cy,\n          sX,\n          sY\n        );\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Image;\n","import Group, { SpriteGroupOptions, SpriteGroupOptionsInternal } from \"./Group\";\n// @ts-ignore\nimport pasition from \"pasition\";\nimport { OrFunction } from \"../helper\";\nimport { AdditionalModifier } from \"../Scene\";\n\n\nexport interface SpritePathOptions extends SpriteGroupOptions {\n  path?: OrFunction<number[][][]|string|Path2D>\n  color?: OrFunction<string|undefined>\n  borderColor?: OrFunction<string|undefined>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  lineWidth?: OrFunction<number>\n  clip?: OrFunction<boolean>\n  fixed?: OrFunction<boolean>\n  polyfill?: OrFunction<boolean>\n}\n\nexport interface SpritePathOptionsInternal extends SpriteGroupOptionsInternal {\n  path:  number[][][]|string|Path2D\n  color: string|undefined\n  borderColor: string|undefined\n  compositeOperation: GlobalCompositeOperation\n  lineWidth: number\n  clip: boolean\n  fixed: boolean\n  polyfill: boolean\n}\n\nexport default class Path extends Group<SpritePathOptions,SpritePathOptionsInternal> {\n  _oldPath:number[][][]|string|Path2D|undefined;\n  _path2D:Path2D = new Path2D();\n  \n  constructor(givenParameters:SpritePathOptions) {\n    super(givenParameters);\n\n    if (this.p.polyfill) {\n      if (typeof Path2D !== \"function\") {\n        let head = document.getElementsByTagName(\"head\")[0];\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n          \"https://cdn.jsdelivr.net/npm/canvas-5-polyfill@0.1.5/canvas.min.js\";\n        head.appendChild(script);\n      } else {\n        // create a new context\n        let ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        // stroke a simple path\n        ctx.stroke(new Path2D(\"M0,0H1\"));\n        // check it did paint something\n        if (ctx.getImageData(0, 0, 1, 1).data[3]) {\n          this.p.polyfill = false;\n        }\n      }\n    }\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set path\n      path: undefined,\n      color: undefined,\n      borderColor: undefined,\n      lineWidth: 1,\n      clip: false,\n      fixed: false,\n      polyfill: true\n    });\n  }\n\n  // helper function for changeTo\n  changeToPathInit(from: number[][][] | string, to: number[][][] | string): [number[][][], number[][][]] {\n    return pasition._preprocessing(\n      typeof from === \"string\" ? pasition.path2shapes(from) : Array.isArray(from) ? from : [],\n      typeof to === \"string\" ? pasition.path2shapes(to) : Array.isArray(to) ? to : []\n    );\n  }\n  \n  changeToPath(progress: number, data: {\n    pathFrom: number[][][]\n    pathTo: number[][][]\n  }):number[][][] {\n    return pasition._lerp(data.pathFrom, data.pathTo, progress);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false, () => {\n      return context.isPointInPath(this._path2D, x, y);\n    });\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      const a = p.alpha * additionalModifier.alpha;\n      if (this._oldPath !== p.path) {\n        if (p.polyfill && typeof p.path === \"string\") {\n          p.path = pasition.path2shapes(p.path);\n        }\n        if (Array.isArray(p.path)) {\n          this._path2D = new Path2D();\n          p.path.forEach(curve => {\n            this._path2D.moveTo(curve[0][0], curve[0][1]);\n            curve.forEach(points => {\n              this._path2D.bezierCurveTo(\n                points[2],\n                points[3],\n                points[4],\n                points[5],\n                points[6],\n                points[7]\n              );\n            });\n            this._path2D.closePath();\n          });\n        } else if (p.path instanceof Path2D) {\n          this._path2D = p.path;\n        } else {\n          this._path2D = new Path2D(p.path);\n        }\n        this._oldPath = p.path;\n      }\n\n      let scaleX = p.scaleX,\n        scaleY = p.scaleY;\n\n      if (p.fixed) {\n        if (scaleX == 0) {\n          scaleX = Number.EPSILON;\n        }\n        if (scaleY == 0) {\n          scaleY = Number.EPSILON;\n        }\n      }\n\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = a;\n      context.save();\n      context.translate(p.x!, p.y!);\n      context.scale(scaleX, scaleY);\n      context.rotate(p.rotation);\n\n      if (p.color) {\n        context.fillStyle = p.color;\n        context.fill(this._path2D);\n      }\n\n      context.save();\n\n      if (p.clip) {\n        context.clip(this._path2D);\n        if (p.fixed) {\n          context.rotate(-p.rotation);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.translate(-p.x!, -p.y!);\n        }\n      }\n\n      // draw all sprites\n      for (const sprite of p.sprite) {\n        sprite.draw(context, additionalModifier);\n      }\n\n      context.restore();\n\n      if (p.borderColor) {\n        context.strokeStyle = p.borderColor;\n        context.lineWidth = p.lineWidth;\n        context.stroke(this._path2D);\n      }\n\n      context.restore();\n    }\n  }\n}\n","import ifNull from \"../func/ifnull\";\nimport calc from \"../func/calc\";\nimport { ISprite, SpriteBase, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { CircleParameterList, SpriteCircleOptions } from \"./Circle\";\nimport { OrFunction } from \"../helper\";\nimport { Position } from \"../Position\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\n\nexport interface SpriteRectOptions extends SpriteCircleOptions {\n  position?: OrFunction<undefined | Position>\n  borderColor?: OrFunction<undefined | string>\n  lineWidth?: OrFunction<undefined | number>\n  width?: OrFunction<undefined | number>\n  height?: OrFunction<undefined | number>\n  clear?: OrFunction<undefined | boolean>\n  norm?: OrFunction<undefined | boolean>\n}\n\nexport interface SpriteRectOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  rotation: number\n  scaleX: number\n  scaleY: number\n  alpha: number\n  compositeOperation: GlobalCompositeOperation\n  position: Position\n  borderColor: undefined | string\n  color: undefined | string\n  lineWidth: number\n  clear: boolean\n  norm: boolean\n}\n\n\n// Sprite\n// Draw a Circle\nclass Rect extends SpriteBase<SpriteRectOptions, SpriteRectOptionsInternal> implements ISprite {\n  constructor(givenParameters: SpriteRectOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), CircleParameterList, {\n      x: undefined,\n      y: undefined,\n      width: undefined,\n      height: undefined,\n      borderColor: undefined,\n      color: undefined,\n      lineWidth: 1,\n      clear: false,\n      norm: (value: SpriteRectOptions[\"norm\"], givenParameter: SpriteRectOptions) =>\n        ifNull(\n          calc(value),\n          calc(givenParameter.x) === undefined &&\n          calc(givenParameter.y) === undefined &&\n          calc(givenParameter.width) === undefined &&\n          calc(givenParameter.height) === undefined\n        ),\n      // relative position\n      position: Position.CENTER\n    })\n  }\n\n  _normalizeFullScreen(additionalModifier: AdditionalModifier) {\n    if (this.p.norm || this.p.width === undefined) {\n      this.p.width = additionalModifier.visibleScreen.width;\n    }\n    if (this.p.norm || this.p.height === undefined) {\n      this.p.height = additionalModifier.visibleScreen.height;\n    }\n    if (this.p.norm || this.p.x === undefined) {\n      this.p.x = additionalModifier.visibleScreen.x;\n      if (this.p.position === Position.CENTER) {\n        this.p.x += this.p.width / 2;\n      }\n    }\n    if (this.p.norm || this.p.y === undefined) {\n      this.p.y = additionalModifier.visibleScreen.y;\n      if (this.p.position === Position.CENTER) {\n        this.p.y += this.p.height / 2;\n      }\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  init(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    this._normalizeFullScreen(additionalModifier);\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, this.p.position === Position.LEFT_TOP);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled && p.alpha > 0) {\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n      if (p.rotation === 0 && p.position === Position.LEFT_TOP) {\n        if (p.clear) {\n          context.clearRect(p.x!, p.y!, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(p.x!, p.y!, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(p.x!, p.y!, p.width!, p.height!);\n          context.stroke();\n        }\n      } else {\n        let hw = p.width! / 2;\n        let hh = p.height! / 2;\n        context.save();\n        if (p.position === Position.LEFT_TOP) {\n          context.translate(p.x! + hw, p.y! + hh);\n        } else {\n          context.translate(p.x!, p.y!);\n        }\n        context.scale(p.scaleX, p.scaleY);\n        context.rotate(p.rotation);\n        if (p.clear) {\n          context.clearRect(-hw, -hh, p.width!, p.height!);\n        } else if (p.color) {\n          context.fillStyle = p.color;\n          context.fillRect(-hw, -hh, p.width!, p.height!);\n        }\n        if (p.borderColor) {\n          context.beginPath();\n          context.lineWidth = p.lineWidth;\n          context.strokeStyle = p.borderColor;\n          context.rect(-hw, -hh, p.width!, p.height!);\n          context.stroke();\n        }\n        context.restore();\n      }\n    }\n  }\n}\n\nexport default Rect;\n","import calc from \"../func/calc\";\nimport { OrFunction } from \"../helper\";\nimport Emitter from \"./Emitter\";\nimport Text, { SpriteTextOptions } from \"./Text\";\n\nexport interface SpriteScollerOptions extends SpriteTextOptions {\n  text: OrFunction<string|string[]>\n}\n\n\nexport default class Scroller extends Emitter<SpriteTextOptions> {\n  constructor(givenParameters:SpriteScollerOptions) {\n    let text = calc(givenParameters.text);\n    let characterList = Array.isArray(text) ? text : [...text];\n    super(\n      Object.assign({}, givenParameters, {\n        class: Text,\n        count: characterList.length,\n        text: (index:number) => characterList[index],\n        enabled: (index:number) =>\n          characterList[index] !== \" \" && calc(givenParameters.enabled)\n      })\n    );\n  }\n}\n","import FastBlur, { SpriteFastBlurOptions, SpriteFastBlurOptionsInternal } from \"./FastBlur\";\nimport { imageDataRGBA } from \"stackblur-canvas\";\nimport type { OrFunction } from \"../helper\";\nimport type { AdditionalModifier } from \"../Scene\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStackBlurOptions extends SpriteFastBlurOptions {\n  onCanvas?: OrFunction<boolean>\n  radius?: OrFunction<undefined|number>\n  radiusPart?: OrFunction<undefined|number>\n  radiusScale?: OrFunction<boolean>\n}\n\nexport interface SpriteStackBlurOptionsInternal extends SpriteFastBlurOptionsInternal {\n  onCanvas: boolean\n  radius: undefined|number\n  radiusPart: undefined|number\n  radiusScale: boolean\n}\n\nexport default class StackBlur extends FastBlur<SpriteStackBlurOptions,SpriteStackBlurOptionsInternal> {\n  _currentRadiusPart:number|undefined\n\n    constructor(givenParameter:SpriteStackBlurOptions) {\n    super(givenParameter);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // work directly on the main canvas\n      onCanvas: false,\n      radius: undefined,\n      radiusPart: undefined,\n      radiusScale: true\n    });\n  }\n\n  normalizeFullScreen(additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.norm && p.onCanvas) {\n      p.x = 0;\n      p.y = 0;\n      p.width = additionalModifier.widthInPixel;\n      p.height = additionalModifier.heightInPixel;\n    } else {\n      super.normalizeFullScreen(additionalModifier);\n    }\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    super.resize(output, additionalModifier);\n    if (this.p.radiusPart) {\n      this.p.radius = undefined;\n    }\n  }\n\n  additionalBlur(targetW:number, targetH:number, additionalModifier:AdditionalModifier) {\n    const imageData = this._tctx!.getImageData(0, 0, targetW, targetH);\n    imageDataRGBA(imageData, 0, 0, targetW, targetH, additionalModifier.radius || 1);\n    this._tctx!.putImageData(imageData, 0, 0);\n  }\n\n  // draw-methode\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    const p = this.p\n    if (p.enabled) {\n      if (\n        p.radius === undefined ||\n        this._currentRadiusPart !== p.radiusPart\n      ) {\n        p.radius = Math.round(\n          (additionalModifier.widthInPixel + additionalModifier.heightInPixel) /\n            2 /\n            p.radiusPart!\n        );\n        this._currentRadiusPart = p.radiusPart!;\n      }\n      const radius = Math.round(\n        p.radius! *\n          ((p.radiusScale &&\n            additionalModifier.cam) ? additionalModifier.cam.zoom : 1) /\n              additionalModifier.scaleCanvas)\n      ;\n      if (radius) {\n        if (p.onCanvas) {\n          if (p.width === undefined || p.height === undefined) {\n            this.normalizeFullScreen(additionalModifier);\n          }\n          const x = Math.round(p.x!);\n          const y = Math.round(p.y!);\n          const w = Math.round(p.width!);\n          const h = Math.round(p.height!);\n          const imageData = context.getImageData(x, y, w, h);\n          imageDataRGBA(imageData, 0, 0, w - x, h - y, radius);\n          context.putImageData(imageData, x, y, 0, 0, w, h);\n        } else {\n          additionalModifier.radius = radius;\n          super.draw(context, additionalModifier);\n        }\n      }\n    } else {\n      super.draw(context, additionalModifier);\n    }\n  }\n}\n","import { SpriteBase, SpriteBaseOptions, SpriteBaseOptionsInternal } from \"./Sprite\";\nimport { AdditionalModifier } from \"../Scene\";\nimport { OrFunction } from \"../helper\";\nimport { OutputInfo } from \"../Engine\";\n\nexport interface SpriteStarFieldOptions extends SpriteBaseOptions {\n  x?: OrFunction<number>\n  y?: OrFunction<number>\n  width?: OrFunction<number>\n  height?: OrFunction<number>\n  alpha?: OrFunction<number>\n  lineWidth?: OrFunction<number>\n  count?: OrFunction<number>\n  compositeOperation?: OrFunction<GlobalCompositeOperation>\n  moveX?: OrFunction<undefined|number>\n  moveY?: OrFunction<undefined|number>\n  moveZ?: OrFunction<undefined|number>\n  highScale?: OrFunction<undefined|boolean>\n  color?: OrFunction<undefined|string>\n}\n\nexport interface SpriteStarFieldOptionsInternal extends SpriteBaseOptionsInternal {\n  x: undefined | number\n  y: undefined | number\n  width: undefined | number\n  height: undefined | number\n  alpha: number\n  count: number\n  lineWidth: number\n  compositeOperation: GlobalCompositeOperation\n  moveX: number\n  moveY: number\n  moveZ: number\n  highScale: boolean\n  color: string\n}\n\n\n\n// Sprite\n// Draw a Circle\nexport default class StarField extends SpriteBase<SpriteStarFieldOptions, SpriteStarFieldOptionsInternal> {\n  _starsX: number[] = []\n  _starsY: number[] = []\n  _starsZ: number[] = []\n  _starsOldX: number[] = []\n  _starsOldY: number[] = []\n  _starsNewX: number[] = []\n  _starsNewY: number[] = []\n  _starsEnabled: boolean[] = []\n  _starsLineWidth: number[] = []\n  _centerX: number = 0\n  _centerY: number = 0\n  _scaleZ: number = 0\n\n  constructor(givenParameters: SpriteStarFieldOptions) {\n    super(givenParameters);\n  }\n\n  _getParameterList() {\n    return Object.assign({}, super._getParameterList(), {\n      // set image\n      count: 40,\n      // relative position\n      moveX: 0,\n      moveY: 0,\n      moveZ: 0,\n      lineWidth: undefined,\n      highScale: true,\n      color: \"#FFF\" // here default color is white\n    });\n  }\n\n  init(context: CanvasRenderingContext2D, additionalModifier: AdditionalModifier) {\n    const p = this.p\n    p.width = p.width || additionalModifier.width;\n    p.height = p.height || additionalModifier.height;\n    p.x = p.x === undefined ? additionalModifier.x : p.x;\n    p.y = p.y === undefined ? additionalModifier.y : p.y;\n    p.lineWidth =\n      p.lineWidth ||\n      Math.min(\n        additionalModifier.height / additionalModifier.heightInPixel,\n        additionalModifier.width / additionalModifier.widthInPixel\n      ) / 2;\n    this._centerX = p.width / 2 + p.x;\n    this._centerY = p.height / 2 + p.y;\n    this._scaleZ = Math.max(p.width, p.height) / 2;\n    function clampOrRandom(val: number | undefined, min: number, max = -min) {\n      return val === undefined || val < min || val >= max\n        ? Math.random() * (max - min) + min\n        : val;\n    }\n    for (let i = 0; i < p.count; i++) {\n      this._starsX[i] = clampOrRandom(this._starsX[i], -p.width / 2);\n      this._starsY[i] = clampOrRandom(this._starsY[i], -p.height / 2);\n      this._starsZ[i] = clampOrRandom(this._starsZ[i], 0, this._scaleZ);\n    }\n  }\n\n  _moveStar(i: number, scaled_timepassed: number, firstPass: boolean) {\n    const p = this.p\n    const hw = p.width! / 2;\n    const hh = p.height! / 2;\n    if (firstPass) {\n      this._starsEnabled[i] = true;\n    }\n    let\n      x = this._starsX[i] + p.moveX * scaled_timepassed,\n      y = this._starsY[i] + p.moveY * scaled_timepassed,\n      z = this._starsZ[i] + p.moveZ * scaled_timepassed;\n    while (x < -hw) {\n      x += p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (x > hw) {\n      x -= p.width!;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    while (y < -hh) {\n      y += p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n    while (y > hh) {\n      y -= p.height!;\n      x = Math.random() * p.width! - hw;\n      this._starsEnabled[i] = false;\n    }\n\n    while (z <= 0) {\n      z += this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n    while (z > this._scaleZ) {\n      z -= this._scaleZ;\n      x = Math.random() * p.width! - hw;\n      y = Math.random() * p.height! - hh;\n      this._starsEnabled[i] = false;\n    }\n\n    const projectX = this._centerX + (x / z) * hw;\n    const projectY = this._centerY + (y / z) * hh;\n    this._starsEnabled[i] =\n      this._starsEnabled[i] &&\n      projectX >= p.x! &&\n      projectY >= p.y! &&\n      projectX < p.x! + p.width! &&\n      projectY < p.y! + p.height!;\n    if (firstPass) {\n      this._starsX[i] = x;\n      this._starsY[i] = y;\n      this._starsZ[i] = z;\n      this._starsNewX[i] = projectX;\n      this._starsNewY[i] = projectY;\n    } else {\n      this._starsOldX[i] = projectX;\n      this._starsOldY[i] = projectY;\n      let lw = (1 - this._starsZ[i] / this._scaleZ) * 4;\n      if (!p.highScale) {\n        lw = Math.ceil(lw);\n      }\n      this._starsLineWidth[i] = lw;\n    }\n  }\n\n  animate(timepassed:number) {\n    let ret = super.animate(timepassed);\n    if (this.p.enabled && this._centerX !== undefined) {\n      let i = this.p.count;\n      while (i--) {\n        this._moveStar(i, timepassed / 16, true);\n        if (this._starsEnabled[i]) {\n          this._moveStar(i, -5, false);\n        }\n      }\n    }\n    return ret;\n  }\n\n  resize(output:OutputInfo, additionalModifier:AdditionalModifier) {\n    this._needInit = true;\n  }\n\n  detect(context:CanvasRenderingContext2D, x:number, y:number) {\n    return this._detectHelper(this.p, context, x, y, false);\n  }\n\n  // Draw-Funktion\n  draw(context:CanvasRenderingContext2D, additionalModifier:AdditionalModifier) {\n    if (this.p.enabled) {\n      const p = this.p\n      context.globalCompositeOperation = p.compositeOperation;\n      context.globalAlpha = p.alpha * additionalModifier.alpha;\n\n      if (p.moveY == 0 && p.moveZ == 0 && p.moveX < 0) {\n        context.fillStyle = p.color;\n        let i = p.count;\n        while (i--) {\n          if (this._starsEnabled[i]) {\n            context.fillRect(\n              this._starsNewX[i],\n              this._starsNewY[i] -\n              (this._starsLineWidth[i] * p.lineWidth) / 2,\n              this._starsOldX[i] - this._starsNewX[i],\n              this._starsLineWidth[i] * p.lineWidth\n            );\n          }\n        }\n      } else {\n        context.strokeStyle = p.color;\n        if (p.highScale) {\n          let i = p.count;\n          while (i--) {\n            if (this._starsEnabled[i]) {\n              context.beginPath();\n              context.lineWidth = this._starsLineWidth[i] * p.lineWidth;\n              context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n              context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              context.stroke();\n              context.closePath();\n            }\n          }\n        } else {\n          let lw = 5,\n            i;\n          while (--lw) {\n            context.beginPath();\n            context.lineWidth = lw * p.lineWidth;\n            i = p.count;\n            while (i--) {\n              if (this._starsEnabled[i] && this._starsLineWidth[i] === lw) {\n                context.moveTo(this._starsOldX[i], this._starsOldY[i]);\n                context.lineTo(this._starsNewX[i], this._starsNewY[i]);\n              }\n            }\n            context.stroke();\n            context.closePath();\n          }\n        }\n      }\n    }\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nimport type { IAnimation } from \"./Animation\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nconst degToRad = Math.PI / 180;\n\nfunction moveDefault(progress: number, data: IAlgorithmData) {\n  return data.from! as number + progress * data.delta!;\n}\n\nfunction moveStatic(progress: number, data: IAlgorithmData) {\n  return progress >= 0.5 ? data.to : data.from!;\n}\n\nfunction moveBezier(progress: number, data: IAlgorithmData) {\n  var copy = [...data.values!],\n    copyLength = copy.length,\n    i;\n\n  while (copyLength > 1) {\n    copyLength--;\n    for (i = 0; i < copyLength; i++) {\n      copy[i] = copy[i] + progress * (copy[i + 1] - copy[i]);\n    }\n  }\n  return copy[0];\n}\n\nfunction moveColor(progress: number, data: IAlgorithmData) {\n  return data.colorFrom!.mix(data.colorTo!, progress * 100).toString();\n}\n\nfunction movePath(progress: number, { pathFrom, pathTo }: IAlgorithmData, sprite?: ISprite) {\n  return sprite!.changeToPath!(progress, { pathFrom: pathFrom!, pathTo: pathTo! });\n}\n\nexport type TProperty = number | string\nexport type TBezier = number[]\nexport type TChangeFunction = ((from?: number | undefined) => number) | ((from?: string | undefined) => string)\nexport type TChangeValue = TProperty | TBezier | TChangeFunction\nexport interface IChangeValueMeta {\n  name: string\n  to: TProperty\n  bezier?: TBezier\n  isColor: boolean\n  isPath: boolean\n  isStatic: boolean\n  isFunction?: TChangeFunction,\n  moveAlgorithm: TAlgorithm\n}\nexport type TAlgorithm = (progress: number, data: IAlgorithmData, sprite?: ISprite) => TProperty | number[][][]\nexport interface IAlgorithmData extends IChangeValueMeta {\n  from?: TProperty\n  delta?: number\n  values?: TBezier\n  pathFrom?: number[][][]\n  pathTo?: number[][][]\n  colorFrom?: TinyColor\n  colorTo?: TinyColor\n}\n\n// to values of a object\nexport default class ChangeTo implements IAnimation {\n  _initialized = false\n  _changeValues: IChangeValueMeta[]\n  _duration: number\n  _ease: (t: number) => number\n  constructor(changeValues: Record<string, TChangeValue>, duration: number, ease?: (t: number) => number) {\n    this._changeValues = [];\n    for (let k in changeValues) {\n      const orgValue = changeValues[k];\n      const value = k === \"rotationInDegree\" ? (orgValue as number) * degToRad : orgValue;\n      const isColor = k === \"color\" || k === \"borderColor\";\n      const isPath = k === \"path\";\n      const isStatic = k === \"text\";\n      const isFunction = typeof value === \"function\";\n      const isBezier = !isColor && Array.isArray(value);\n      const names =\n        k === \"scale\"\n          ? [\"scaleX\", \"scaleY\"]\n          : k === \"rotationInRadian\" || k === \"rotationInDegree\"\n            ? [\"rotation\"]\n            : [k];\n      for (const name of names) {\n        this._changeValues.push({\n          name,\n          to: isBezier ? value[value.length - 1] : calc(value) as TProperty,\n          bezier: isBezier ? value : undefined,\n          isColor,\n          isPath,\n          isStatic,\n          isFunction: isFunction ? value : undefined,\n          moveAlgorithm: isColor\n            ? moveColor\n            : isPath\n              ? movePath\n              : isBezier\n                ? moveBezier\n                : isStatic\n                  ? moveStatic\n                  : moveDefault\n        });\n      }\n    }\n    this._duration = ifNull(calc(duration), 0);\n    this._ease = ifNull(ease, (t: number) => t);\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  _init(sprite: ISprite, time: number) {\n    let l = this._changeValues.length\n    while (l--) {\n      const data: IAlgorithmData = this._changeValues[l];\n      // @ts-ignore\n      const from = sprite.p[data.name] as unknown as TProperty\n      if (data.isFunction) {\n        data.from = from;\n        // @ts-ignore\n        data.to = data.isFunction(data.from);\n        if (data.isColor) {\n          data.colorFrom = new TinyColor(data.from);\n          data.colorTo = new TinyColor(data.to);\n          data.moveAlgorithm = moveColor;\n        } else if (data.isPath) {\n          [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n            data.from as string,\n            data.to as string\n          );\n          data.moveAlgorithm = movePath;\n        } else if (Array.isArray(data.to)) {\n          data.values = [from as number, ...data.to];\n          data.moveAlgorithm = moveBezier;\n        } else if (!data.isStatic) {\n          data.delta = data.to as number - (data.from as number);\n          data.moveAlgorithm = moveDefault;\n        }\n      } else if (data.isColor) {\n        //\n        data.colorFrom = new TinyColor(from as string);\n        data.colorTo = new TinyColor(data.to);\n      } else if (data.isPath) {\n        [data.pathFrom, data.pathTo] = sprite.changeToPathInit!(\n          from as string,\n          data.to as string\n        );\n      } else if (data.bezier) {\n        data.values = [from as number, ...data.bezier];\n      } else {\n        data.from = from as number;\n        data.delta = data.to as number - data.from;\n      }\n    }\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._init(sprite, time);\n    }\n\n    // return time left\n    if (this._duration <= time) {\n      let l = this._changeValues.length;\n      let data;\n\n      // prevent round errors by applying end-data\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.to;\n      }\n    } else {\n      let l = this._changeValues.length;\n      let data;\n      const progress = this._ease(time / this._duration);\n\n      while (l--) {\n        data = this._changeValues[l];\n        // @ts-ignore\n        sprite.p[data.name] = data.moveAlgorithm(progress, data, sprite);\n      }\n    }\n    return time - this._duration;\n  }\n}\n","import Callback from './Animations/Callback'\nimport ChangeTo from './Animations/ChangeTo'\nimport End from './Animations/End'\nimport EndDisabled from './Animations/EndDisabled'\nimport Forever from './Animations/Forever'\nimport If from './Animations/If'\nimport Image from './Animations/Image'\nimport ImageFrame from './Animations/ImageFrame'\nimport Loop from './Animations/Loop'\nimport Remove from './Animations/Remove'\nimport Sequence from './Animations/Sequence'\nimport Once from './Animations/Once'\nimport Shake from './Animations/Shake'\nimport ShowOnce from './Animations/ShowOnce'\nimport State from './Animations/State'\nimport Stop from './Animations/Stop'\nimport StopDisabled from './Animations/StopDisabled'\nimport Wait from './Animations/Wait'\nimport WaitDisabled from './Animations/WaitDisabled'\nexport default {\n  Callback,\n  ChangeTo,\n  End,\n  EndDisabled,\n  Forever,\n  If,\n  Image,\n  ImageFrame,\n  Loop,\n  Once,\n  Remove,\n  Sequence,\n  Shake,\n  ShowOnce,\n  State,\n  Stop,\n  StopDisabled,\n  Wait,\n  WaitDisabled\n};\n","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport type TAnimationCallbackCallback = (sprite:ISprite, time:number, firstRun:boolean) => ReturnType<IAnimation['run']>\n\nexport default class Callback implements IAnimation{\n    _callback: TAnimationCallbackCallback\n    _duration: number|undefined\n    _initialized: boolean = false\n\n    constructor(callback: TAnimationCallbackCallback, duration?:number) {\n      this._callback = callback;\n      this._duration = ifNull(calc(duration), undefined);\n    }\n\n    reset() {\n      this._initialized = false;\n    }\n\n    run(sprite:ISprite, time:number) {\n      let result;\n\n      if (this._duration !== undefined) {\n        this._callback(sprite, Math.min(time, this._duration), !this._initialized);\n        this._initialized = true;\n        return time - this._duration;\n      } else {\n        result = this._callback(sprite, time, !this._initialized);\n        this._initialized = true;\n        return result;\n      }\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation {\n\tconstructor() {\n\t}\n\n\trun(sprite: ISprite, time: number) {\n\t\treturn SequenceRunCommand.FORCE_DISABLE;\n\t};\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.FORCE_DISABLE;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence, { AnimationSequenceOptions } from \"./Sequence\";\n\nexport default class Forever implements IAnimation {\n  _Aniobject:Sequence\n\n  constructor(...Aniobject: AnimationSequenceOptions) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    return this._Aniobject.play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport type { TAnimationFunction } from \"./Sequence\";\n\nexport default class If implements IAnimation {\n  _ifCallback: OrFunction<boolean>\n  _Aniobject: IAnimation|TAnimationFunction\n  _AniobjectElse: IAnimation|TAnimationFunction\n\n  constructor(ifCallback:OrFunction<boolean>, Aniobject:IAnimation|TAnimationFunction, AniobjectElse:IAnimation|TAnimationFunction) {\n    this._ifCallback = ifCallback;\n    this._Aniobject = Aniobject;\n    this._AniobjectElse = ifNull(AniobjectElse, () => 0);\n  }\n\n  play(label = \"\", timelapsed = 0) {\n    return (this._Aniobject as IAnimation).play?.(label, timelapsed) || (this._AniobjectElse as IAnimation).play?.(label, timelapsed);\n  }\n\n  run(sprite:ISprite, time:number) {\n    const AniObject = calc(this._ifCallback)\n      ? this._Aniobject\n      : this._AniobjectElse;\n    return (AniObject as IAnimation).run\n      ?  (AniObject as IAnimation).run(sprite, time)\n      :  (AniObject as TAnimationFunction)(sprite, time);\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport { OrFunction } from '../helper';\nimport ImageManager from '../ImageManager';\nimport { ISprite } from '../Sprites/Sprite';\n\nexport default class Image {\n  _initialized: boolean = false\n  _image: (HTMLImageElement | string)[]\n  _count: number\n  _durationBetweenFrames: number\n  _duration: number\n  _current:number = -1\n\n  constructor(image: OrFunction<HTMLImageElement | string | (HTMLImageElement | string)[]>, durationBetweenFrames: OrFunction<number>) {\n    const imageCalced = calc(image);\n    this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n    if (Array.isArray(imageCalced)) {\n      this._image = imageCalced\n      this._count = imageCalced.length;\n    } else {\n      this._image = [imageCalced];\n      this._count = 1;\n    }\n    this._duration = this._count * this._durationBetweenFrames;\n  }\n\n  reset() {\n    this._initialized = false;\n  };\n\n  run(sprite: ISprite, time:number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._current = -1;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      sprite.p.image = ImageManager.getImage(this._image[this._image.length - 1]);\n    } else {\n      let currentFrame = Math.floor(time / this._durationBetweenFrames);\n      if (currentFrame !== this._current) {\n        this._current = currentFrame;\n        sprite.p.image = ImageManager.getImage(this._image[this._current]);\n      }\n    }\n    return time - this._duration;\n  }\n}","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { OrFunction } from '../helper';\nimport { ISprite } from '../Sprites/Sprite';\nimport { IAnimation } from './Animation';\n\nexport default class ImageFrame implements IAnimation{\n    _frameNumber: number[]\n    _durationBetweenFrames: number\n    _duration: number\n    _framesToRight: boolean\n\n    constructor(frameNumber: OrFunction<number | number[]>, framesToRight: OrFunction<boolean>, durationBetweenFrames: OrFunction<number>) {\n        const frameNumberCalc = calc(frameNumber);\n        this._framesToRight = ifNull(calc(framesToRight), true);\n        this._durationBetweenFrames = ifNull(calc(durationBetweenFrames), 0);\n        this._frameNumber = Array.isArray(frameNumberCalc) ? frameNumberCalc : [frameNumberCalc];\n\n        this._duration = this._frameNumber.length * this._durationBetweenFrames;\n    }\n\n    run(sprite: ISprite, time:number) {\n        let currentFrame = 0;\n        if (time >= this._duration) {\n            currentFrame = this._frameNumber[this._frameNumber.length - 1];\n        } else {\n            currentFrame = this._frameNumber[Math.floor(time / this._durationBetweenFrames)];\n        }\n        if (this._framesToRight) {\n            sprite.p.frameX = sprite.p.frameWidth! * currentFrame;\n        } else {\n            sprite.p.frameY = sprite.p.frameHeight! * currentFrame;\n        }\n\n        return time - this._duration;\n    }\n}","import calc from \"../func/calc\";\nimport ifNull from \"../func/ifnull\";\nimport { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport Sequence, { AnimationSequenceOptions } from \"./Sequence\";\n\nexport default class Loop implements IAnimation {\n  _Aniobject: Sequence\n  _times:number\n  _timesOrg:number\n\n  constructor(times:number, ...Aniobject:AnimationSequenceOptions) {\n    this._Aniobject =\n      Aniobject[0] instanceof Sequence\n        ? Aniobject[0]\n        : new Sequence(...Aniobject);\n    this._times = this._timesOrg = ifNull(calc(times), 1);\n  }\n\n  reset(timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    this._Aniobject.reset?.(timelapsed);\n  }\n\n  play(label:string = \"\", timelapsed:number = 0) {\n    this._times = this._timesOrg;\n    const b = this._Aniobject.play?.(label, timelapsed);\n    if (b) {\n      this._times = this._timesOrg;\n    }\n    return b\n  }\n\n  run(sprite: ISprite, time:number, isDifference?:boolean) {\n    let t:number|boolean = time;\n    while (t >= 0 && this._times > 0) {\n      t = this._Aniobject.run(sprite, t, isDifference);\n      isDifference = true;\n      if (t === true) {\n        return true;\n      }\n      if (t >= 0) {\n        this._times--;\n        this._Aniobject.reset?.();\n      }\n    }\n    return t;\n  }\n}\n","import calc from '../func/calc';\nimport ifNull from '../func/ifnull';\nimport type { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\n\nexport default class Once implements IAnimation {\n  _Aniobject: IAnimation\n  _times: number\n\n  constructor(Aniobject: IAnimation, times: number) {\n    this._Aniobject = Aniobject;\n    this._times = ifNull(calc(times), 1);\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (this._times <= 0) {\n      return time;\n    }\n    else {\n      let t = this._Aniobject.run(sprite, time);\n      if (t >= 0) {\n        this._times--;\n      }\n      return t;\n    }\n  };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class Remove implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.REMOVE;\n    };\n}","import calc from '../func/calc';\nimport type { OrFunction } from '../helper.js';\nimport type { ISprite } from '../Sprites/Sprite.js';\n\nexport default class Shake {\n  _initialized = false\n  _duration: number\n  _shakeDiff: number\n  _shakeDiffHalf: number\n  _x: number = 0\n  _y: number = 0\n\n  constructor(shakediff: OrFunction<number>, duration: OrFunction<number>) {\n    this._duration = calc(duration);\n    this._shakeDiff = calc(shakediff);\n    this._shakeDiffHalf = this._shakeDiff / 2;\n  }\n\n  reset() {\n    this._initialized = false;\n  }\n\n  run(sprite: ISprite, time: number) {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._x = sprite.p.x;\n      this._y = sprite.p.y;\n    }\n\n    // return time left\n    if (time >= this._duration) {\n      // prevent round errors\n      sprite.p.x = this._x;\n      sprite.p.y = this._y;\n    } else {\n      // shake sprite\n      sprite.p.x = this._x + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n      sprite.p.y = this._y + Math.random() * this._shakeDiff - this._shakeDiffHalf;\n    }\n    return time - this._duration;\n  }\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class ShowOnce implements IAnimation {\n    _showOnce:boolean = true\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = sprite.p.enabled && this._showOnce;\n        this._showOnce = false;\n        return 0;\n    }\n}","import { ISprite } from '../Sprites/Sprite';\nimport type { IAnimation } from './Animation';\nimport Sequence, { TAnimationSequence } from './Sequence';\n\nclass State implements IAnimation {\n  _states: Record<string, Sequence | State>\n  _transitions: Record<string, Sequence | State>\n  _currentStateName: string | undefined\n  _currentState: Sequence | State | undefined\n  _isTransitioningToStateName: string | undefined = undefined\n\n  constructor({\n    states = {},\n    transitions = {},\n    defaultState\n  }: {\n    states?: Record<string, TAnimationSequence>\n    transitions?: Record<string, TAnimationSequence>\n    defaultState: string\n  }) {\n    // save possible states\n    this._states = Object.fromEntries(Object.entries(states).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ))\n\n    // save transitions\n    this._transitions = Object.fromEntries(Object.entries(transitions).map(\n      ([key, value]) => ([key, Array.isArray(value) ? new Sequence(value) : value])\n    ));\n    // set start state\n    this._currentStateName = defaultState;\n    this._currentState = this._states[defaultState];\n  }\n\n  setState(name:string) {\n    if (name !== this._currentStateName) {\n      this._isTransitioningToStateName = name;\n      const UCFirstName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n      const possibleTransitionNames = [\n        `${this._currentStateName}To${UCFirstName}`,\n        `${this._currentStateName}To`,\n        `to${UCFirstName}`\n      ];\n      const transitionName = possibleTransitionNames.find(\n        name => name in this._transitions\n      );\n      if (transitionName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._transitions[transitionName];\n        (this._currentState as Sequence)?.reset?.();\n      } else {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n      }\n    }\n    // search through transitions\n    // delegateTo - search through list\n  }\n\n  play(label = \"\", timelapsed = 0):boolean|undefined {\n    return this._currentState?.play?.(label, timelapsed);\n  }\n\n  run(sprite: ISprite, time: number, is_difference?: boolean) {\n    let timeLeft:ReturnType<IAnimation['run']> = time;\n    let isDifference = is_difference;\n    if (this._currentState) {\n      timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n      if (timeLeft === true) {\n        return true\n      }\n      isDifference = true;\n    }\n    if (timeLeft >= 0 || !this._currentState) {\n      if (this._isTransitioningToStateName) {\n        this._currentStateName = this._isTransitioningToStateName;\n        this._currentState = this._states[this._currentStateName];\n        (this._currentState as Sequence)?.reset?.();\n        this._isTransitioningToStateName = undefined;\n        timeLeft = this._currentState.run(sprite, timeLeft, isDifference);\n        if (timeLeft === true) {\n          return true\n        }\n      } else {\n        this._currentState = undefined;\n      }\n    }\n    return -1;\n  }\n}\n\nexport default State;\n","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class End implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        return SequenceRunCommand.STOP;\n    };\n}","import type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\nimport { SequenceRunCommand } from './Sequence';\n\nexport default class EndDisabled implements IAnimation{\n    constructor() {\n    }\n\n    run(sprite: ISprite, time:number) {\n        sprite.p.enabled = false;\n        return SequenceRunCommand.STOP;\n    };\n}","import calc from '../func/calc';\nimport ifNull from \"../func/ifnull\";\nimport type { OrFunction } from \"../helper\";\nimport type { ISprite } from \"../Sprites/Sprite\";\nimport type { IAnimation } from \"./Animation\";\n\nexport default class WaitDisabled implements IAnimation {\n  duration:number\n\n  constructor(duration:OrFunction<number>) {\n    this.duration = ifNull(calc(duration), 0);\n  }\n\n  run(sprite:ISprite, time:number) {\n    // return time left\n    sprite.p.enabled = (time >= this.duration);\n    return time - this.duration;\n  }\n}","import Transform from \"../func/transform\";\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime, RectPosition } from \"../Scene\";\n\nexport interface CameraPosition {\n  zoom: number\n  x: number\n  y: number\n}\n\nexport default class Camera implements ConfigurationObject {\n  type = \"camera\"\n  cam: CameraPosition\n  constructor(config: Partial<CameraPosition> = {}) {\n    this.type = \"camera\";\n    this.cam = Object.assign({\n      zoom: 1,\n      x: 0,\n      y: 0,\n    }, config);\n  }\n\n  viewport({ }:ParameterListWithoutTime, matrix: Transform) {\n    return matrix\n      .scale(this.cam.zoom, this.cam.zoom)\n      .translate(-this.cam.x, -this.cam.y);\n  }\n\n  viewportByCam({ engine }: ParameterListWithoutTime, cam: CameraPosition) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return new Transform()\n      .translate(hw, hh)\n      .scale(scale, scale)\n      .scale(cam.zoom, cam.zoom)\n      .translate(-cam.x, -cam.y);\n  }\n\n  additionalModifier({ }, additionalModifier: AdditionalModifier) {\n    additionalModifier.cam = Object.assign({}, this.cam);\n    return additionalModifier;\n  }\n\n  clampView(params: ParameterListWithoutTime & { clampLimits?: RectPosition }, cam: CameraPosition) {\n    const { engine, scene, clampLimits } = params\n    const cl = clampLimits || {\n      x1: scene.additionalModifier.x,\n      y1: scene.additionalModifier.y,\n      x2: scene.additionalModifier.x + scene.additionalModifier.width,\n      y2: scene.additionalModifier.y + scene.additionalModifier.height,\n    };\n    const invert = this.viewportByCam(params, cam).invert();\n    const [x1, y1] = invert.transformPoint(0, 0);\n    const [x2, y2] = invert.transformPoint(\n      engine.getWidth(),\n      engine.getHeight()\n    );\n\n    // check for x\n    // is there a zoom in?\n    if (x2 - x1 <= cl.x2 - cl.x1) {\n      if (x1 < cl.x1) {\n        if (x2 <= cl.x2) {\n          cam.x += cl.x1 - x1;\n        }\n      } else {\n        if (x2 > cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    } else {\n      if (x1 > cl.x1) {\n        cam.x += cl.x1 - x1;\n      } else {\n        if (x2 < cl.x2) {\n          cam.x += cl.x2 - x2;\n        }\n      }\n    }\n\n    // check for y\n    // zoom in?\n    if (y2 - y1 <= cl.y2 - cl.y1) {\n      if (y1 < cl.y1) {\n        if (y2 <= cl.y2) {\n          cam.y += cl.y1 - y1;\n        }\n      } else {\n        if (y2 > cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    } else {\n      if (y1 > cl.y1) {\n        cam.y += cl.y1 - y1;\n      } else {\n        if (y2 < cl.y2) {\n          cam.y += cl.y2 - y2;\n        }\n      }\n    }\n    return cam;\n  }\n\n  set zoom(value) {\n    this.cam.zoom = value;\n  }\n\n  set camX(v) {\n    this.cam.x = v;\n  }\n\n  set camY(v) {\n    this.cam.y = v;\n  }\n\n  get zoom() {\n    return this.cam.zoom;\n  }\n\n  get camX() {\n    return this.cam.x;\n  }\n\n  get camY() {\n    return this.cam.y;\n  }\n\n  zoomToFullScreen({ scene }: ParameterListWithoutTime) {\n    return Math.min(\n      scene.additionalModifier.fullScreen.width /\n      scene.additionalModifier.width,\n      scene.additionalModifier.fullScreen.height /\n      scene.additionalModifier.height\n    );\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition & {cam? : CameraPosition}) {\n    const { scene, engine, cam, x1, y1, x2, y2 } = params\n    const scale = scene.additionalModifier.scaleCanvas;\n    const invert = this.viewportByCam(params, cam || this.cam).invert();\n    const [sx1, sy1] = invert.transformPoint(0, 0);\n    const [sx2, sy2] = invert.transformPoint(\n      engine.getWidth() * scale,\n      engine.getHeight() * scale\n    );\n    const sw = sx2 - sx1;\n    const sh = sy2 - sy1;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const mx = x1 + w / 2;\n    const my = y1 + h / 2;\n    const zoomX = sw / w;\n    const zoomY = sh / h;\n    const ret = {\n      x: mx,\n      y: my,\n      zoom: (cam || this.cam).zoom * Math.max(Math.min(zoomX, zoomY), Number.MIN_VALUE),\n    };\n    if (cam) {\n      cam.x = ret.x;\n      cam.y = ret.y;\n      cam.zoom = ret.zoom;\n    } else {\n      this.cam = ret;\n    }\n  }\n}\n","import type Scene from \"../Scene\";\nimport type { ConfigurationObject, ParameterList, ParameterListFixedUpdate, ParameterListInitDestroy, ParameterListPositionEvent, ParameterListWithoutTime, RectPosition } from \"../Scene\";\nimport type { CameraPosition } from \"./Camera\";\n\nexport interface MiddlewareCameraControlOptions {\n  zoomMax: number\n  zoomMin: number\n  zoomFactor: number\n  tween: number\n  callResize: boolean\n}\n\nconst clickTime = 300;\nexport default class CameraControl implements ConfigurationObject {\n  type = \"control\"\n  _mousePos: Record<number, {\n    x: number\n    y: number\n    _cx: number\n    _cy: number\n    _isDown: boolean\n    _numOfFingers: number\n    _distance: undefined | number\n    _timestamp: number\n    _czoom: undefined | number\n  }> = {}\n  toCam: CameraPosition = {\n    zoom: 1,\n    x: 0,\n    y: 0\n  }\n  _config: MiddlewareCameraControlOptions\n  _scene: Scene | undefined\n  _instant: boolean = false\n\n  constructor(config: Partial<MiddlewareCameraControlOptions> = {}) {\n    this._config = Object.assign(\n      {\n        zoomMax: 10,\n        zoomMin: 0.5,\n        zoomFactor: 1.2,\n        tween: 2,\n        callResize: true,\n      },\n      config\n    );\n  }\n\n  init({ scene }: ParameterListInitDestroy) {\n    this._scene = scene\n    this.toCam = Object.assign({}, scene.camera.cam);\n  }\n\n  mouseDown({ event: e, position: [mx, my], button: i }: ParameterListPositionEvent) {\n    this._mousePos[i] = Object.assign({}, this._mousePos[i], {\n      x: mx,\n      y: my,\n      _cx: this.toCam.x,\n      _cy: this.toCam.y,\n      _isDown: true,\n      _numOfFingers: (e as TouchEvent).touches?.length || 1,\n      _distance: undefined,\n      _timestamp: Date.now(),\n    });\n  }\n\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      !(\n        (\n          Date.now() - this._mousePos[i]._timestamp < clickTime &&\n          Math.abs(this._mousePos[i].x - mx) < 5 &&\n          Math.abs(this._mousePos[i].y - my) < 5 &&\n          i === 1\n        ) // i === 0\n      )\n    ) {\n      scene.stopPropagation();\n    }\n  }\n\n  mouseOut({ button: i }: ParameterListPositionEvent) {\n    if (this._mousePos[i]) this._mousePos[i]._isDown = false;\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n        (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      const viewMatrix = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert();\n      const [ox, oy] = viewMatrix.transformPoint(\n        this._mousePos[i].x * scale,\n        this._mousePos[i].y * scale\n      );\n      const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n      this.toCam.x = this._mousePos[i]._cx + ox - nx;\n      this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    }\n  }\n\n  mouseWheel({ event: e, position: [mx, my], scene }: ParameterListPositionEvent) {\n    const scale = scene.additionalModifier.scaleCanvas;\n    const [ox, oy] = scene.camera\n      .viewportByCam(arguments[0], this.toCam)\n      .invert()\n      .transformPoint(mx * scale, my * scale);\n    // @ts-ignore\n    const wheelData = (e as WheelEvent).wheelDelta || (e as WheelEvent).deltaY * -1;\n    if (wheelData / 120 > 0) {\n      this.zoomIn();\n      const [nx, ny] = scene.camera\n        .viewportByCam(arguments[0], this.toCam)\n        .invert()\n        .transformPoint(mx * scale, my * scale);\n      this.toCam.x -= nx - ox;\n      this.toCam.y -= ny - oy;\n      this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n    } else {\n      this.zoomOut(arguments[0]);\n    }\n  }\n\n  hasCamChanged() {\n    const t = this._config.tween || 1;\n    return (\n      Math.abs(this.toCam.x - this._scene!.camera.cam.x) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.y - this._scene!.camera.cam.y) >= Number.EPSILON * t ||\n      Math.abs(this.toCam.zoom - this._scene!.camera.cam.zoom) >=\n      Number.EPSILON * t\n    );\n  }\n\n  fixedUpdate({ scene, lastCall }: ParameterListFixedUpdate) {\n    if (this._config.tween && !this._instant && this.hasCamChanged()) {\n      scene.camera.cam.x +=\n        (this.toCam.x - scene.camera.cam.x) / this._config.tween;\n      scene.camera.cam.y +=\n        (this.toCam.y - scene.camera.cam.y) / this._config.tween;\n      scene.camera.cam.zoom +=\n        (this.toCam.zoom - scene.camera.cam.zoom) / this._config.tween;\n      if (lastCall) {\n        scene.additionalModifier.cam = scene.camera.cam;\n        if (this._config.callResize) {\n          scene.resize();\n        } else {\n          scene.cacheClear();\n        }\n      }\n    }\n  }\n\n  update({ scene }: ParameterList) {\n    if ((!this._config.tween || this._instant) && this.hasCamChanged()) {\n      this._instant = false;\n      scene.camera.cam = Object.assign({}, this.toCam);\n      if (this._config.callResize) {\n        scene.resize();\n      } else {\n        scene.cacheClear();\n      }\n    }\n  }\n\n  camInstant() {\n    this._instant = true;\n  }\n\n  resize(args: ParameterListWithoutTime& { clampLimits?: RectPosition }) {\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n  }\n\n  zoomToNorm() {\n    this.toCam.zoom = 1;\n    return this;\n  }\n  zoomIn() {\n    this.toCam.zoom = Math.min(\n      this._config.zoomMax,\n      this.toCam.zoom * this._config.zoomFactor\n    );\n    return this;\n  }\n  zoomOut(args: ParameterListWithoutTime & { clampLimits?: RectPosition }) {\n    this.toCam.zoom = Math.max(\n      this._config.zoomMin,\n      this.toCam.zoom / this._config.zoomFactor\n    );\n    this.toCam = args.scene.camera.clampView(args, this.toCam);\n    return this;\n  }\n\n  zoomTo(params: ParameterListWithoutTime & RectPosition) {\n    params.scene.camera.zoomTo(Object.assign(\n      params, {cam:this.toCam}\n    ));\n  }\n}\n","import Callback from \"./Middleware/Camera\";\nimport Camera from \"./Middleware/Camera\";\nimport CameraControl from \"./Middleware/CameraControl\";\nimport CameraControlSecondButton from \"./Middleware/CameraControlSecondButton\";\nimport Click from \"./Middleware/Click\";\nimport Element from \"./Middleware/Element\";\nimport Event from \"./Middleware/Event\";\nimport LoadingScreen from \"./Middleware/LoadingScreen\";\nimport Norm from \"./Middleware/Norm\";\nimport TimingAudio from \"./Middleware/TimingAudio\";\nimport TimingDefault from \"./Middleware/TimingDefault\";\n\nexport default {\n  Callback,\n  Camera,\n  CameraControl,\n  CameraControlSecondButton,\n  Click,\n  Element,\n  Event,\n  LoadingScreen,\n  Norm,\n  TimingAudio,\n  TimingDefault,\n};\n","import { ParameterListPositionEvent } from \"../Scene.js\";\nimport CameraControl from \"./CameraControl.js\";\nconst clickTime = 300;\n\nexport default class CameraControlSecondButton extends CameraControl {\n  mouseUp({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (!this._mousePos[i]) {\n      delete this._mousePos[i];\n    }\n    const down = this._mousePos[i]._isDown;\n    const numCurrentFingers =\n      (e as TouchEvent).changedTouches?.length || 1;\n    const numOfFingers = Math.max(\n      this._mousePos[i]._numOfFingers,\n      numCurrentFingers\n    );\n    this._mousePos[i]._isDown = false;\n    this._mousePos[i]._numOfFingers -= numCurrentFingers;\n\n    if (!down || numOfFingers > 1) {\n      scene.stopPropagation();\n      return;\n    }\n\n    if (\n      (Date.now() - this._mousePos[i]._timestamp > clickTime ||\n        Math.abs(this._mousePos[i].x - mx) >= 5 ||\n        Math.abs(this._mousePos[i].y - my) >= 5) &&\n        i === 1\n    ) {\n      scene.stopPropagation();\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"region\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n\n  mouseMove({ event: e, position: [mx, my], button: i, scene }: ParameterListPositionEvent) {\n    if (\n      !this._mousePos[i] ||\n      !this._mousePos[i]._isDown ||\n      ((e as TouchEvent).which === 0 && !(e as TouchEvent).touches)\n    ) {\n      return;\n    }\n    const scale = scene.additionalModifier.scaleCanvas;\n    if ((e as TouchEvent).touches?.length >= 2) {\n      const t = (e as TouchEvent).touches;\n      // get distance of two finger\n      const distance = Math.sqrt(\n        (t[0].pageX - t[1].pageX) * (t[0].pageX - t[1].pageX) +\n          (t[0].pageY - t[1].pageY) * (t[0].pageY - t[1].pageY)\n      );\n      if (this._mousePos[i]._distance === undefined) {\n        if (distance > 0) {\n          this._mousePos[i]._distance = distance;\n          this._mousePos[i]._czoom = this.toCam.zoom;\n        }\n      } else {\n        this.toCam.zoom = Math.max(\n          this._config.zoomMin,\n          Math.min(\n            this._config.zoomMax,\n            (this._mousePos[i]._czoom! * distance) / this._mousePos[i]._distance!\n          )\n        );\n\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n      return;\n    } else {\n      this._mousePos[i]._distance = undefined;\n      if (i === 2) {\n        const viewMatrix = scene.camera\n          .viewportByCam(arguments[0], this.toCam)\n          .invert();\n        const [ox, oy] = viewMatrix.transformPoint(\n          this._mousePos[i].x * scale,\n          this._mousePos[i].y * scale\n        );\n        const [nx, ny] = viewMatrix.transformPoint(mx * scale, my * scale);\n        this.toCam.x = this._mousePos[i]._cx + ox - nx;\n        this.toCam.y = this._mousePos[i]._cy + oy - ny;\n\n        this.toCam = scene.camera.clampView(arguments[0], this.toCam);\n      }\n    }\n\n    if (\n      i === 1 &&\n      scene.has(\"regionMove\") &&\n      !(\n        Date.now() - this._mousePos[i]._timestamp < clickTime &&\n        Math.abs(this._mousePos[i].x - mx) < 5 &&\n        Math.abs(this._mousePos[i].y - my) < 5\n      ) &&\n      (!(e as TouchEvent).touches || (e as TouchEvent).touches.length === 1)\n    ) {\n      const [x, y] = scene.transformPoint(mx, my);\n      const [ox, oy] = scene.transformPoint(\n        this._mousePos[i].x,\n        this._mousePos[i].y\n      );\n      scene.map(\"regionMove\", {\n        event: e,\n        x1: Math.min(ox, x),\n        y1: Math.min(oy, y),\n        x2: Math.max(ox, x),\n        y2: Math.max(oy, y),\n        fromX: ox,\n        fromY: oy,\n        toX: x,\n        toY: y,\n      });\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterListPositionEvent } from \"../Scene\";\nimport type { MiddlewareElementOptions } from \"./Element\";\n\nexport default class Click implements ConfigurationObject{\n  _doubleClickElementTimer: undefined|number;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  mouseUp(param:ParameterListPositionEvent) {\n    const { scene, button } = param;\n    if (button === 1) {\n      if (scene.has(\"doubleClick\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClick\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"click\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"click\", param);\n      }\n    }\n  }\n}\n","import Scene, { ConfigurationObject, ElementClickInfo, ParameterListCanvas, ParameterListClickElement, ParameterListClickNonElement, ParameterListPositionEvent } from \"../Scene\";\nimport type { ISprite } from \"../Sprites/Sprite\";\n\nexport interface MiddlewareElementOptions {\n  doubleClickDetectInterval?: number\n}\n\ninterface MousePosition {\n  mx: number\n  my: number\n}\n\nexport default class Element implements ConfigurationObject {\n  _clickIntend: MousePosition | undefined = undefined;\n  _hoverIntend: MousePosition | undefined = undefined;\n  _hasDetectImage: boolean = false;\n  _doubleClickElementTimer: number | undefined = undefined;\n  _doubleClickDetectInterval: number;\n\n  constructor({ doubleClickDetectInterval = 350 }: MiddlewareElementOptions = {}) {\n    this._doubleClickDetectInterval = doubleClickDetectInterval;\n  }\n\n  isDrawFrame() {\n    return this._hasDetectImage ? 1 : 0;\n  }\n\n  _dispatchEvent(scene: Scene, isClick: boolean, param: ParameterListClickElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickElement\")) {\n        if (this._doubleClickElementTimer) {\n          window.clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = 0;\n          scene.map(\"doubleClickElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = 0;\n            scene.map(\"clickElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickElement\", param);\n      }\n    } else {\n      scene.map(\"hoverElement\", param);\n    }\n  }\n\n  _dispatchNonEvent(scene: Scene, isClick: boolean, param: ParameterListClickNonElement) {\n    if (isClick) {\n      if (scene.has(\"doubleClickNonElement\")) {\n        if (this._doubleClickElementTimer) {\n          clearTimeout(this._doubleClickElementTimer);\n          this._doubleClickElementTimer = undefined;\n          scene.map(\"doubleClickNonElement\", param);\n        } else {\n          this._doubleClickElementTimer = window.setTimeout(() => {\n            this._doubleClickElementTimer = undefined;\n            scene.map(\"clickNonElement\", param);\n          }, this._doubleClickDetectInterval);\n        }\n      } else {\n        scene.map(\"clickNonElement\", param);\n      }\n    } else {\n      scene.map(\"hoverNonElement\", param);\n    }\n  }\n\n  initSprites(params: ParameterListCanvas) {\n    const { scene, output, layerManager, canvasId } = params\n    this._hasDetectImage = false;\n    if (this._clickIntend || this._hoverIntend) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[canvasId || 0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n\n      ctx.save();\n      ctx.setTransform(...scene.viewport().m);\n      let found: ElementClickInfo | undefined | \"c\" = undefined;\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const a = (element as ISprite).detect(ctx, cx, cy);\n          if (a === \"c\") {\n            found = \"c\";\n          } else if (a) {\n            found = { layerId, element: a, elementId };\n            return false;\n          }\n        }\n      });\n      ctx.restore();\n\n      if (found === \"c\") {\n        this._hasDetectImage = true;\n      } else {\n        this._clickIntend = undefined;\n        this._hoverIntend = undefined;\n        const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n          mx,\n          my,\n          x,\n          y,\n        }, params) as ParameterListClickNonElement;\n        if (found) {\n          Object.assign(param, found as ElementClickInfo);\n          this._dispatchEvent(scene, isClick, param);\n        } else {\n          this._dispatchNonEvent(scene, isClick, param);\n        }\n      }\n    }\n  }\n\n  draw(params: ParameterListCanvas) {\n    const { engine, scene, layerManager, output, canvasId } = params;\n    if (!canvasId && this._hasDetectImage) {\n      const isClick = !!this._clickIntend;\n      const { mx, my } = this._clickIntend || this._hoverIntend!;\n      const scale = scene.additionalModifier.scaleCanvas;\n      const ctx = output.context[0];\n      const cx = Math.round(mx / scale);\n      const cy = Math.round(my / scale);\n      const [x, y] = scene.transformPoint(mx, my);\n      const param: ParameterListClickNonElement | ParameterListClickElement = Object.assign({\n        mx,\n        my,\n        x,\n        y,\n      }, params) as ParameterListClickNonElement;\n\n      const oldISE = ctx.imageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = false;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.save();\n\n      ctx.setTransform(...scene.viewport().m);\n\n      layerManager.forEach(({ layerId, element, isFunction, elementId }) => {\n        if (!isFunction) {\n          const color = `rgb(${elementId & 0xff}, ${(elementId & 0xff00) >> 8\n            }, ${layerId & 0xff})`;\n          (element as ISprite).detectDraw(ctx, color);\n        }\n      }, 0);\n      ctx.restore();\n      ctx.imageSmoothingEnabled = oldISE;\n      engine.normContext(ctx);\n\n      this._clickIntend = undefined;\n      this._hoverIntend = undefined;\n\n      const p = ctx.getImageData(cx, cy, 1, 1).data;\n      if (p[3]) {\n        const layerId = p[2];\n        const elementId = p[0] + (p[1] << 8);\n        Object.assign(param, {\n          layerId,\n          elementId,\n          element: layerManager\n            .getById(layerId)\n            .getById(elementId)  \n        })\n        this._dispatchEvent(scene, isClick, param);\n      } else {\n        this._dispatchNonEvent(scene, isClick, param);\n      }\n    }\n  }\n\n  mouseUp({ scene, position: [mx, my], button }:ParameterListPositionEvent) {\n    this._clickIntend = button === 1 && scene.has(\"clickElement\") ? { mx, my } : undefined;\n  }\n\n  mouseMove({ scene, position: [mx, my] }:ParameterListPositionEvent) {\n    this._hoverIntend = scene.has(\"hoverElement\") ? { mx, my } : undefined;\n  }\n}\n","import ifNull from '../func/ifnull'\nimport type { ValueOf } from '../helper';\nimport LayerManager from '../LayerManager';\nimport type { ConfigurationObject, EventsReturn, ParameterList, ParameterListInitDestroy, ParameterListWithoutTime } from '../Scene';\nimport Scene from '../Scene';\nimport { ISpriteFunctionOrSprite } from '../Sprites/Sprite';\n\nexport default class Events implements ConfigurationObject {\n  type = \"events\"\n  _reseted: boolean = false\n\n  _events: {\n    n: HTMLElement,\n    e: keyof HTMLElementEventMap\n    f: (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any\n  }[] = []\n\n  _pushEvent(command: \"mouseDown\" | \"mouseUp\" | \"mouseOut\" | \"mouseMove\" | \"mouseWheel\", event: Event | TouchEvent | MouseEvent, scene: Scene) {\n    if (ifNull<boolean>(scene.value(\"preventDefault\"), true)) {\n      event.preventDefault();\n    }\n    if (!this._reseted) {\n      return\n    }\n    const [mx, my] = this.getMousePosition({ event });\n    const [x, y] = scene.transformPoint(mx, my);\n    scene.pipeBack(command, {\n      event,\n      position: [mx, my],\n      x,\n      y,\n      button: this.getMouseButton({ event }),\n    });\n  }\n\n  events({ scene }: ParameterListInitDestroy) {\n    return [\n      scene.has(\"mouseDown\") && [\n        [\"touchstart\", \"mousedown\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseDown\", event, scene),\n      ],\n      scene.has(\"mouseUp\") && [\n        [\"touchend\", \"mouseup\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseUp\", event, scene),\n      ],\n      scene.has(\"mouseOut\") && [\n        [\"touchendoutside\", \"mouseout\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseOut\", event, scene),\n      ],\n      scene.has(\"mouseMove\") && [\n        [\"touchmove\", \"mousemove\"],\n        (event: TouchEvent | MouseEvent) => this._pushEvent(\"mouseMove\", event, scene),\n      ],\n      scene.has(\"mouseWheel\") && [\n        [\"wheel\"],\n        (event: Event) => this._pushEvent(\"mouseWheel\", event, scene),\n      ],\n      (ifNull(scene.value<\"preventDefault\", boolean>(\"preventDefault\"), true)) && [\n        [\"contextmenu\"],\n        (e: Event) => e.preventDefault(),\n      ],\n    ].filter((v) => v) as EventsReturn\n  }\n\n  init({ output, scene }: ParameterListInitDestroy) {\n    const element = output.canvas[0];\n\n    const events: (keyof HTMLElementEventMap | [keyof HTMLElementEventMap, (this: HTMLElement, el: ValueOf<HTMLElementEventMap>) => any])[][] = scene.map(\"events\", {});\n\n    this._events = events\n      .filter(Array.isArray)\n      // flat(1)\n      .reduce((acc, cur) => {\n        acc.push.apply(acc, cur);\n        return acc;\n      }, [])\n      // convert strings to call to function with the same name\n      .map(cur =>\n        Array.isArray(cur) ? cur : [[cur], (event: ValueOf<HTMLElementEventMap>) => {\n          if (ifNull(scene.value(\"preventDefault\"), true)) event.preventDefault();\n          scene.pipeBack(cur, { event });\n        }]\n      )\n      .map(([events, func]) =>\n        events.map((e: keyof HTMLElementEventMap) => ({\n          n: element,\n          e: e,\n          f: func,\n        }))\n      )\n      // workaround for .flat(1) for edge\n      .reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          acc.push.apply(acc, cur);\n        } else {\n          acc.push(cur);\n        }\n        return acc;\n      }, []);\n\n    this._events.forEach((v) => {\n      v.n.addEventListener(v.e, v.f, true);\n    });\n  }\n\n  destroy() {\n    this._events.forEach((v) => {\n      v.n.removeEventListener(v.e, v.f, true);\n    });\n    this._events = [];\n  }\n\n  reset(params: ParameterListWithoutTime, layerManager: LayerManager | ISpriteFunctionOrSprite[][]) {\n    this._reseted = true;\n    return layerManager;\n  }\n\n  getMousePosition({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    let touches;\n    if ((e as TouchEvent).touches && (e as TouchEvent).touches.length > 0) {\n      touches = (e as TouchEvent).targetTouches;\n    } else if ((e as TouchEvent).changedTouches && (e as TouchEvent).changedTouches.length > 0) {\n      touches = (e as TouchEvent).changedTouches;\n    }\n    if (touches) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      const length = touches.length;\n      touches = Array.from(touches);\n      return [\n        touches.reduce((sum, v) => sum + v.pageX, 0) / length - rect.left,\n        touches.reduce((sum, v) => sum + v.pageY, 0) / length - rect.top,\n      ];\n    }\n    if ((e as MouseEvent).offsetX === undefined) {\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\n      return [(e as MouseEvent).clientX - rect.left, (e as MouseEvent).clientY - rect.top];\n    }\n    return [(e as MouseEvent).offsetX, (e as MouseEvent).offsetY];\n  }\n\n  getMouseButton({ event: e }: { event: Event | TouchEvent | MouseEvent }) {\n    return (\n      (e as TouchEvent).touches\n        ? ((e as TouchEvent).touches.length || (e as TouchEvent).changedTouches.length)\n        : ifNull((e as MouseEvent).buttons\n          ? (e as MouseEvent).buttons\n          : [0, 1, 4, 2][(e as MouseEvent).which], 1)\n    );\n  }\n}\n","import type { ConfigurationObject, ParameterListLoading } from \"../Scene\";\n\nexport default class LoadingScreen implements ConfigurationObject {\n  loading({ output, progress }: ParameterListLoading) {\n    const ctx = output.context[0];\n    const isNumber = typeof progress === \"number\"\n    const loadedHeight =\n      isNumber\n        ? Math.max(1, progress * output.height)\n        : output.height;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.globalAlpha = 1;\n    ctx.clearRect(0, 0, output.width, output.height);\n    ctx.fillStyle = \"_aaa\";\n    ctx.fillRect(\n      0,\n      output.height / 2 - loadedHeight / 2,\n      output.width,\n      loadedHeight\n    );\n    ctx.font = \"20px Georgia\";\n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n\n    ctx.fillText(\n      isNumber\n        ? \"Loading \" + Math.round(100 * progress) + \"%\"\n        : progress,\n      10 + Math.random() * 3,\n      output.height - 10 + Math.random() * 3\n    );\n  }\n}\n","import Transform from '../func/transform'\nimport type { AdditionalModifier, ConfigurationObject, ParameterListWithoutTime } from '../Scene';\n\nexport default class Norm implements ConfigurationObject {\n  viewport({ engine }: ParameterListWithoutTime, matrix: Transform) {\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    return matrix.translate(hw, hh).scale(scale, scale);\n  }\n\n  additionalModifier({ engine, output, scene }: ParameterListWithoutTime):AdditionalModifier {\n    scene.cacheClear();\n\n    const [x1, y1] = scene.transformPoint(0, 0, 1);\n    const [x2, y2] = scene.transformPoint(output.width, output.height, 1);\n\n    const hw = engine.getWidth() / 2;\n    const hh = engine.getHeight() / 2;\n    const scale = engine.getRatio() > 1 ? hw : hh;\n    const transformInvert = new Transform().translate(hw, hh).scale(scale, scale).invert();\n    const [sx1, sy1] = transformInvert.transformPoint(0, 0);\n    const [sx2, sy2] = transformInvert.transformPoint(\n      output.width,\n      output.height\n    );\n\n    return {\n      alpha: 1,\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2,\n      widthInPixel: output.width,\n      heightInPixel: output.height,\n      scaleCanvas: output.width / output.canvas[0].clientWidth,\n      visibleScreen: {\n        x: x1,\n        y: y1,\n        width: x2 - x1,\n        height: y2 - y1,\n      },\n      fullScreen: {\n        x: sx1,\n        y: sy1,\n        width: sx2 - sx1,\n        height: sy2 - sy1,\n      }\n    }\n  }\n}\n","import type { ConfigurationObject, ParameterList, ParameterListInitDestroy } from \"../Scene\";\nimport TimingDefault, { MiddlewareTimingDefaultOptions } from \"./TimingDefault\";\n\nexport interface MiddlewareTimingAudioOptions extends MiddlewareTimingDefaultOptions {\n  audioElement: HTMLMediaElement\n}\n\nexport default class TimingAudio extends TimingDefault implements ConfigurationObject {\n  _maxSkippedTickChunk: number = Number.POSITIVE_INFINITY\n  _audioStartTime: number | undefined = undefined\n  _audioPosition: number | undefined = undefined\n  _enableAndroidHack: boolean = false\n  _audioElement: undefined | HTMLMediaElement & {\n    controller?: Record<string, any>\n  }\n\n  constructor(configuration: MiddlewareTimingAudioOptions) {\n    super({\n      ...configuration,\n      maxSkippedTickChunk: Number.POSITIVE_INFINITY\n    });\n    this._audioElement = configuration.audioElement;\n  }\n\n  get audioElement() {\n    return this._audioElement;\n  }\n\n  init(_params: ParameterListInitDestroy) {\n    if (this._audioElement) {\n      // Android hack\n      // @ts-ignore\n      if (typeof MediaController === \"function\") {\n        // @ts-ignore\n        this._audioElement.controller = new MediaController();\n        this._enableAndroidHack = true;\n      }\n      this._audioElement.preload = \"auto\";\n      return new Promise((resolve, reject) => {\n        const canplaythrough = () => {\n          this._audioElement!.removeEventListener(\n            \"canplaythrough\",\n            canplaythrough\n          );\n          const playPromise = this._audioElement!.play();\n          if (playPromise) {\n            playPromise.catch((e) => { });\n          }\n          resolve(undefined);\n        };\n        this._audioElement!.addEventListener(\"canplaythrough\", canplaythrough);\n        this._audioElement!.onerror = () => {\n          this._audioElement = undefined\n          resolve(undefined);\n        }\n        this._audioElement!.load();\n      });\n    }\n  }\n\n  endTime() {\n    return this._audioElement ? this._audioElement.duration * 1000 : Number.POSITIVE_INFINITY;\n  }\n\n  currentTime() {\n    let currentTime = super.currentTime();\n    if (this._audioElement) {\n      if (this._audioElement.ended && this._audioElement.duration) {\n        return this._audioElement.duration * 1000;\n      }\n      const currentAudioTime = this._audioElement.currentTime * 1000;\n      // Android workaround\n      if (this._enableAndroidHack) {\n        if (this._audioStartTime === undefined) {\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return currentAudioTime;\n        } else {\n          if (this._audioElement.controller!.playbackState === \"playing\") {\n            if (currentAudioTime === this._audioPosition) {\n              return (\n                this._audioPosition +\n                Math.min(260, currentTime - this._audioStartTime)\n              );\n            } else if (\n              currentAudioTime - this._audioPosition! < 500 &&\n              currentAudioTime > this._audioPosition! &&\n              currentTime - this._audioStartTime < 350\n            ) {\n              this._audioStartTime =\n                this._audioStartTime + (currentAudioTime - this._audioPosition!);\n              this._audioPosition = currentAudioTime;\n              return this._audioPosition + currentTime - this._audioStartTime;\n            }\n          }\n          this._audioStartTime = currentTime;\n          this._audioPosition = currentAudioTime;\n          return this._audioPosition;\n        }\n      } else {\n        return currentAudioTime;\n      }\n    } else {\n      return currentTime;\n    }\n  }\n\n  clampTime({ timePassed }: ParameterList) {\n    return timePassed;\n  }\n\n  shiftTime() {\n    return 0;\n  }\n}\n"],"names":["calc","c","slice","call","arguments","toArray","value","Array","isArray","pact","state","s","_Pact","o","_settle","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","Engine","constructor","canvasOrOptions","_output","_events","_scene","_newScene","_sceneParameter","_isSceneInitialized","_recalculateCanvasIntend","_lastTimestamp","_referenceRequestAnimationFrame","_autoSize","_canvasCount","_drawFrame","_reduceFramerate","_realLastTimestamp","_isOddFrame","_initializedStartTime","_promiseSceneDestroying","_runParameter","_moveOnce","givenOptions","getContext","canvas","Error","options","Object","assign","context","width","height","ratio","undefined","autoSize","defaultAutoSizeSettings","enabled","scaleLimitMin","scaleLimitMax","scaleFactor","referenceWidth","clientWidth","referenceHeight","clientHeight","currentScale","waitTime","currentWaitedTime","currentOffsetTime","offsetTimeLimitUp","offsetTimeLimitDown","registerResizeEvents","registerVisibilityEvents","setCanvasStyle","map","n","window","f","recalculateCanvas","push","document","handleVisibilityChange","_recalculateCanvas","forEach","index","length","from","clickToPlayAudio","playAudioOfScene","reduceFramerate","addEventListener","switchScene","scene","sceneParameter","visibilityState","timing","audioElement","play","normContext","ctx","textBaseline","textAlign","globalAlpha","globalCompositeOperation","getWidth","getHeight","getRatio","getOutput","Math","round","style","resize","recalculateFPS","cancelAnimationFrame","Promise","resolve","requestAnimationFrame","timeBetweenFrames","_now","start","count","offsetTimeTarget","offsetTimeDelta","_mainLoop","i","test","update","body","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","reject","_temp","_temp2","performance","now","Date","timestamp","isRecalculatedCanvas","max","destroy","destroyParameterForNewScene","callInit","run","currentTime","moveFrame","nowAutoSize","timePassed","clampTime","shiftTime","initSprites","drawFrame","isDrawFrame","move","draw","callLoading","totalTimePassed","reset","deltaTimestamp","deltaFrame","delta","abs","targetTime","min","runParameter","_this2","stop","_temp4","_temp3","_this3","_temp5","_this3$_scene$destroy","_this4","removeEventListener","ImageManager$1","Images","loaded","_resolve","add","Callbacks","self","key","imageSrc","Image","onload","isLoaded","substr","DOMURL","URL","webkitURL","svg","Blob","type","src","createObjectURL","onerror","img","crossOrigin","getImage","nameOrImage","isLoadedPromise","canvasIds","_layer","_isFunction","_start","_nextFree","_canvasIds","addElement","element","addElementForId","addElements","arrayOfElements","addElementsForIds","len","id","nextFree","concat","k","getById","elementId","getIdByElement","indexOf","deleteByElement","deleteById","isCanvasId","canvasId","includes","layerId","l","isFunction","layer","getElementsByTag","tag","_ref","ans","label","timelapsed","_ref2","clear","LayerManager","_layers","addLayer","Layer","addLayers","numberOfLayer","newLayers","addLayerForId","addLayersForIds","Transform","m","__constuct","multiply","matrix","m12","dy","m21","m22","dx","invert","d","m4","m5","m1","m2","m3","rotate","rad","cos","sin","translate","x","y","scale","sx","sy","transformPoint","px","py","clone","alternative","TimingDefault","configuration","_configuration","_tickChunk","_maxSkippedTickChunk","_tickChunkTolerance","ifNull","tickChunk","maxSkippedTickChunk","tickChunkTolerance","init","_params","maxTime","isChunked","hasOneChunkedFrame","_ref3","calcFrames","_ref4","floor","Symbol","iterator","Scene","_layerManager","_imageManager","_totalTimePassed","_engine","_middleware","_all","fixedUpdate","additionalModifier","_stopPropagation","_transform","_transformInvert","_additionalModifier","_initDone","_endTime","_resetIntend","ImageManager","middlewares","middlewareByType","_this$_engine","configurationClassOrObject","reduce","middlewareCommandList","keys","command","objs","filter","has","some","do","params","defaultValue","func","_param","fullParams","pipe","res","pipeBack","pipeMax","p","newRes","pipeAsync","_interrupt","target","check","step","_iteratorSymbol","_cycle","next","done","return","_fixup","TypeError","values","array","_c$command","obj","stopPropagation","cacheClear","viewport","scaleCanvas","parameter","engine","images","all","updateAdditionalModifier","alpha","output","widthInPixel","heightInPixel","visibleScreen","fullScreen","t_timing","camera","t_camera","t_control","additionalParameter","imageManager","layerManager","args","progress","lastCall","frames","calcFrame","animate","save","setTransform","restore","resetIntend","layers","Wait","duration","_duration","sprite","time","SequenceRunCommand","Sequence","sequences","lastTimestamp","timeWait","shift","sequence","thisTimeWait","position","arr","sequencePosition","_sequencePosition$seq","b","_sequencePosition$seq2","seq","_runSequence","timeLeft","FORCE_DISABLE","STOP","REMOVE","_sequencePosition$seq3","is_difference","restTime","Infinity","disableVote","givenParameter","_needInit","_parseParameterList","_getParameterList","parameterList","entries","name","givenValue","fromEntries","valueEntries","_getBaseParameterList","animation","isClickable","timepassed","_this$p$animation$pla","_this$p$animation","_detectHelperCallback","scaleX","scaleY","rotation","beginPath","a","_detectHelper","coordinateX","coordinateY","moveToCenter","hw","hh","rect","closePath","isPointInPath","detectDraw","color","detect","PI","CircleParameterList","rotationInRadian","rotationInDegree","degToRad","compositeOperation","Group","super","finished","spriteFinished","Emitter","classToEmit","class","FastBlur","SpriteBase","_temp_canvas","_currentGridSize","_tctx","gridSize","darker","pixel","norm","_generateTempCanvas","w","h","createElement","ceil","normalizeFullScreen","oldTempCanvas","drawImage","targetW","targetH","_this$additionalBlur","fillStyle","fillRect","additionalBlur","clearRect","oldValue","imageSmoothingEnabled","Position","Text","givenParameters","text","join","font","CENTER","borderColor","lineWidth","fillText","strokeStyle","strokeText","_currentScaleX","_currentPixelSmoothing","static","r","g","rIndex","cr","cg","cb","Particle","_Gradient","generateGradientImage","txtc","createRadialGradient","gradientSize","grad","addColorStop","toRgb","getGradientImage","Sprites","Callback","_timePassed","Canvas","canvasWidth","canvasHeight","_normalizeFullScreen","_copyCanvas","wh","tw","th","cam","zoom","Circle","arc","fill","_currentTintKey","_normScale","image","frameX","frameY","frameWidth","frameHeight","normCover","normToScreen","clickExact","tint","_tintCacheKey","_temp_context","sX","isTopLeft","LEFT_TOP","tctx","sY","isCenter","cx","cy","Path","_oldPath","_path2D","polyfill","Path2D","getElementsByTagName","script","head","appendChild","stroke","getImageData","data","path","clip","fixed","changeToPathInit","to","pasition","_preprocessing","path2shapes","changeToPath","_lerp","pathFrom","pathTo","curve","moveTo","points","bezierCurveTo","Number","EPSILON","Rect","Scroller","characterList","StackBlur","_currentRadiusPart","onCanvas","radius","radiusPart","radiusScale","imageDataRGBA","imageData","putImageData","StarField","_starsX","_starsY","_starsZ","_starsOldX","_starsOldY","_starsNewX","_starsNewY","_starsEnabled","_starsLineWidth","_centerX","_centerY","_scaleZ","moveX","moveY","moveZ","highScale","clampOrRandom","val","random","_moveStar","scaled_timepassed","firstPass","z","projectX","projectY","lw","ret","lineTo","moveDefault","moveStatic","moveBezier","copyLength","copy","moveColor","colorFrom","mix","colorTo","toString","movePath","Animations","_callback","_initialized","ChangeTo","changeValues","ease","_changeValues","_ease","orgValue","isColor","isPath","isStatic","names","isBezier","bezier","moveAlgorithm","t","_init","TinyColor","End","EndDisabled","Forever","_Aniobject","Aniobject","_this$_Aniobject$rese","_this$_Aniobject","_this$_Aniobject$play","isDifference","_this$_Aniobject$rese2","_this$_Aniobject3","If","ifCallback","AniobjectElse","_ifCallback","_AniobjectElse","_this$_AniobjectElse$","AniObject","durationBetweenFrames","_image","_count","_durationBetweenFrames","_current","imageCalced","currentFrame","ImageFrame","frameNumber","framesToRight","_frameNumber","_framesToRight","frameNumberCalc","Loop","times","_times","_timesOrg","_this$_Aniobject2","Once","Remove","Shake","shakediff","_shakeDiff","_shakeDiffHalf","_x","_y","ShowOnce","_showOnce","State","states","transitions","defaultState","_states","_transitions","_currentStateName","_currentState","_isTransitioningToStateName","setState","UCFirstName","charAt","toUpperCase","transitionName","find","_this$_currentState","_this$_currentState3","_this$_currentState4","Stop","StopDisabled","WaitDisabled","Camera","config","viewportByCam","clampView","clampLimits","cl","x1","y1","x2","y2","camY","camX","zoomToFullScreen","zoomTo","sx1","sy1","sx2","sy2","MIN_VALUE","CameraControl","_mousePos","toCam","_config","_instant","zoomMax","zoomMin","zoomFactor","tween","callResize","mouseDown","event","mx","my","button","_cx","_cy","_isDown","_numOfFingers","touches","_e$touches","_distance","_timestamp","mouseUp","_e$changedTouches","down","numCurrentFingers","changedTouches","numOfFingers","mouseOut","mouseMove","_ref5","which","_e$touches2","distance","sqrt","pageX","pageY","_czoom","viewMatrix","ox","oy","nx","ny","mouseWheel","_ref6","wheelDelta","deltaY","zoomIn","zoomOut","hasCamChanged","_ref7","_ref8","camInstant","zoomToNorm","Middleware","CameraControlSecondButton","fromX","fromY","toX","toY","Click","doubleClickDetectInterval","_doubleClickElementTimer","_doubleClickDetectInterval","param","clearTimeout","setTimeout","Element","_clickIntend","_hoverIntend","_hasDetectImage","_dispatchEvent","isClick","_dispatchNonEvent","found","oldISE","Event","Events","_reseted","_pushEvent","preventDefault","getMousePosition","getMouseButton","events","acc","cur","apply","targetTouches","getBoundingClientRect","sum","left","top","offsetX","clientX","clientY","offsetY","buttons","LoadingScreen","loading","isNumber","loadedHeight","Norm","transformInvert","TimingAudio","POSITIVE_INFINITY","_audioStartTime","_audioPosition","_enableAndroidHack","_audioElement","MediaController","controller","preload","canplaythrough","playPromise","catch","load","endTime","ended","currentAudioTime","playbackState"],"mappings":"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"}